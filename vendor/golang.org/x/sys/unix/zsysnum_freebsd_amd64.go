// go run mksysnum.go https://svn.freebsd.org/base/stable/11/sys/kern/syscalls.master
// Code generated by the command above; see README.md. DO NOT EDIT.

// +build amd64,freebsd

package unix

const (
	// SYS_NOSYS = 0;  // ***REMOVED*** int nosys(void); ***REMOVED*** syscall nosys_args int
	SYS_EXIT                     = 1   // ***REMOVED*** void sys_exit(int rval); ***REMOVED*** exit sys_exit_args void
	SYS_FORK                     = 2   // ***REMOVED*** int fork(void); ***REMOVED***
	SYS_READ                     = 3   // ***REMOVED*** ssize_t read(int fd, void *buf, size_t nbyte); ***REMOVED***
	SYS_WRITE                    = 4   // ***REMOVED*** ssize_t write(int fd, const void *buf, size_t nbyte); ***REMOVED***
	SYS_OPEN                     = 5   // ***REMOVED*** int open(char *path, int flags, int mode); ***REMOVED***
	SYS_CLOSE                    = 6   // ***REMOVED*** int close(int fd); ***REMOVED***
	SYS_WAIT4                    = 7   // ***REMOVED*** int wait4(int pid, int *status, int options, struct rusage *rusage); ***REMOVED***
	SYS_LINK                     = 9   // ***REMOVED*** int link(char *path, char *link); ***REMOVED***
	SYS_UNLINK                   = 10  // ***REMOVED*** int unlink(char *path); ***REMOVED***
	SYS_CHDIR                    = 12  // ***REMOVED*** int chdir(char *path); ***REMOVED***
	SYS_FCHDIR                   = 13  // ***REMOVED*** int fchdir(int fd); ***REMOVED***
	SYS_MKNOD                    = 14  // ***REMOVED*** int mknod(char *path, int mode, int dev); ***REMOVED***
	SYS_CHMOD                    = 15  // ***REMOVED*** int chmod(char *path, int mode); ***REMOVED***
	SYS_CHOWN                    = 16  // ***REMOVED*** int chown(char *path, int uid, int gid); ***REMOVED***
	SYS_OBREAK                   = 17  // ***REMOVED*** int obreak(char *nsize); ***REMOVED*** break obreak_args int
	SYS_GETPID                   = 20  // ***REMOVED*** pid_t getpid(void); ***REMOVED***
	SYS_MOUNT                    = 21  // ***REMOVED*** int mount(char *type, char *path, int flags, caddr_t data); ***REMOVED***
	SYS_UNMOUNT                  = 22  // ***REMOVED*** int unmount(char *path, int flags); ***REMOVED***
	SYS_SETUID                   = 23  // ***REMOVED*** int setuid(uid_t uid); ***REMOVED***
	SYS_GETUID                   = 24  // ***REMOVED*** uid_t getuid(void); ***REMOVED***
	SYS_GETEUID                  = 25  // ***REMOVED*** uid_t geteuid(void); ***REMOVED***
	SYS_PTRACE                   = 26  // ***REMOVED*** int ptrace(int req, pid_t pid, caddr_t addr, int data); ***REMOVED***
	SYS_RECVMSG                  = 27  // ***REMOVED*** int recvmsg(int s, struct msghdr *msg, int flags); ***REMOVED***
	SYS_SENDMSG                  = 28  // ***REMOVED*** int sendmsg(int s, struct msghdr *msg, int flags); ***REMOVED***
	SYS_RECVFROM                 = 29  // ***REMOVED*** int recvfrom(int s, caddr_t buf, size_t len, int flags, struct sockaddr * __restrict from, __socklen_t * __restrict fromlenaddr); ***REMOVED***
	SYS_ACCEPT                   = 30  // ***REMOVED*** int accept(int s, struct sockaddr * __restrict name, __socklen_t * __restrict anamelen); ***REMOVED***
	SYS_GETPEERNAME              = 31  // ***REMOVED*** int getpeername(int fdes, struct sockaddr * __restrict asa, __socklen_t * __restrict alen); ***REMOVED***
	SYS_GETSOCKNAME              = 32  // ***REMOVED*** int getsockname(int fdes, struct sockaddr * __restrict asa, __socklen_t * __restrict alen); ***REMOVED***
	SYS_ACCESS                   = 33  // ***REMOVED*** int access(char *path, int amode); ***REMOVED***
	SYS_CHFLAGS                  = 34  // ***REMOVED*** int chflags(const char *path, u_long flags); ***REMOVED***
	SYS_FCHFLAGS                 = 35  // ***REMOVED*** int fchflags(int fd, u_long flags); ***REMOVED***
	SYS_SYNC                     = 36  // ***REMOVED*** int sync(void); ***REMOVED***
	SYS_KILL                     = 37  // ***REMOVED*** int kill(int pid, int signum); ***REMOVED***
	SYS_GETPPID                  = 39  // ***REMOVED*** pid_t getppid(void); ***REMOVED***
	SYS_DUP                      = 41  // ***REMOVED*** int dup(u_int fd); ***REMOVED***
	SYS_PIPE                     = 42  // ***REMOVED*** int pipe(void); ***REMOVED***
	SYS_GETEGID                  = 43  // ***REMOVED*** gid_t getegid(void); ***REMOVED***
	SYS_PROFIL                   = 44  // ***REMOVED*** int profil(caddr_t samples, size_t size, size_t offset, u_int scale); ***REMOVED***
	SYS_KTRACE                   = 45  // ***REMOVED*** int ktrace(const char *fname, int ops, int facs, int pid); ***REMOVED***
	SYS_GETGID                   = 47  // ***REMOVED*** gid_t getgid(void); ***REMOVED***
	SYS_GETLOGIN                 = 49  // ***REMOVED*** int getlogin(char *namebuf, u_int namelen); ***REMOVED***
	SYS_SETLOGIN                 = 50  // ***REMOVED*** int setlogin(char *namebuf); ***REMOVED***
	SYS_ACCT                     = 51  // ***REMOVED*** int acct(char *path); ***REMOVED***
	SYS_SIGALTSTACK              = 53  // ***REMOVED*** int sigaltstack(stack_t *ss, stack_t *oss); ***REMOVED***
	SYS_IOCTL                    = 54  // ***REMOVED*** int ioctl(int fd, u_long com, caddr_t data); ***REMOVED***
	SYS_REBOOT                   = 55  // ***REMOVED*** int reboot(int opt); ***REMOVED***
	SYS_REVOKE                   = 56  // ***REMOVED*** int revoke(char *path); ***REMOVED***
	SYS_SYMLINK                  = 57  // ***REMOVED*** int symlink(char *path, char *link); ***REMOVED***
	SYS_READLINK                 = 58  // ***REMOVED*** ssize_t readlink(char *path, char *buf, size_t count); ***REMOVED***
	SYS_EXECVE                   = 59  // ***REMOVED*** int execve(char *fname, char **argv, char **envv); ***REMOVED***
	SYS_UMASK                    = 60  // ***REMOVED*** int umask(int newmask); ***REMOVED*** umask umask_args int
	SYS_CHROOT                   = 61  // ***REMOVED*** int chroot(char *path); ***REMOVED***
	SYS_MSYNC                    = 65  // ***REMOVED*** int msync(void *addr, size_t len, int flags); ***REMOVED***
	SYS_VFORK                    = 66  // ***REMOVED*** int vfork(void); ***REMOVED***
	SYS_SBRK                     = 69  // ***REMOVED*** int sbrk(int incr); ***REMOVED***
	SYS_SSTK                     = 70  // ***REMOVED*** int sstk(int incr); ***REMOVED***
	SYS_OVADVISE                 = 72  // ***REMOVED*** int ovadvise(int anom); ***REMOVED*** vadvise ovadvise_args int
	SYS_MUNMAP                   = 73  // ***REMOVED*** int munmap(void *addr, size_t len); ***REMOVED***
	SYS_MPROTECT                 = 74  // ***REMOVED*** int mprotect(const void *addr, size_t len, int prot); ***REMOVED***
	SYS_MADVISE                  = 75  // ***REMOVED*** int madvise(void *addr, size_t len, int behav); ***REMOVED***
	SYS_MINCORE                  = 78  // ***REMOVED*** int mincore(const void *addr, size_t len, char *vec); ***REMOVED***
	SYS_GETGROUPS                = 79  // ***REMOVED*** int getgroups(u_int gidsetsize, gid_t *gidset); ***REMOVED***
	SYS_SETGROUPS                = 80  // ***REMOVED*** int setgroups(u_int gidsetsize, gid_t *gidset); ***REMOVED***
	SYS_GETPGRP                  = 81  // ***REMOVED*** int getpgrp(void); ***REMOVED***
	SYS_SETPGID                  = 82  // ***REMOVED*** int setpgid(int pid, int pgid); ***REMOVED***
	SYS_SETITIMER                = 83  // ***REMOVED*** int setitimer(u_int which, struct itimerval *itv, struct itimerval *oitv); ***REMOVED***
	SYS_SWAPON                   = 85  // ***REMOVED*** int swapon(char *name); ***REMOVED***
	SYS_GETITIMER                = 86  // ***REMOVED*** int getitimer(u_int which, struct itimerval *itv); ***REMOVED***
	SYS_GETDTABLESIZE            = 89  // ***REMOVED*** int getdtablesize(void); ***REMOVED***
	SYS_DUP2                     = 90  // ***REMOVED*** int dup2(u_int from, u_int to); ***REMOVED***
	SYS_FCNTL                    = 92  // ***REMOVED*** int fcntl(int fd, int cmd, long arg); ***REMOVED***
	SYS_SELECT                   = 93  // ***REMOVED*** int select(int nd, fd_set *in, fd_set *ou, fd_set *ex, struct timeval *tv); ***REMOVED***
	SYS_FSYNC                    = 95  // ***REMOVED*** int fsync(int fd); ***REMOVED***
	SYS_SETPRIORITY              = 96  // ***REMOVED*** int setpriority(int which, int who, int prio); ***REMOVED***
	SYS_SOCKET                   = 97  // ***REMOVED*** int socket(int domain, int type, int protocol); ***REMOVED***
	SYS_CONNECT                  = 98  // ***REMOVED*** int connect(int s, caddr_t name, int namelen); ***REMOVED***
	SYS_GETPRIORITY              = 100 // ***REMOVED*** int getpriority(int which, int who); ***REMOVED***
	SYS_BIND                     = 104 // ***REMOVED*** int bind(int s, caddr_t name, int namelen); ***REMOVED***
	SYS_SETSOCKOPT               = 105 // ***REMOVED*** int setsockopt(int s, int level, int name, caddr_t val, int valsize); ***REMOVED***
	SYS_LISTEN                   = 106 // ***REMOVED*** int listen(int s, int backlog); ***REMOVED***
	SYS_GETTIMEOFDAY             = 116 // ***REMOVED*** int gettimeofday(struct timeval *tp, struct timezone *tzp); ***REMOVED***
	SYS_GETRUSAGE                = 117 // ***REMOVED*** int getrusage(int who, struct rusage *rusage); ***REMOVED***
	SYS_GETSOCKOPT               = 118 // ***REMOVED*** int getsockopt(int s, int level, int name, caddr_t val, int *avalsize); ***REMOVED***
	SYS_READV                    = 120 // ***REMOVED*** int readv(int fd, struct iovec *iovp, u_int iovcnt); ***REMOVED***
	SYS_WRITEV                   = 121 // ***REMOVED*** int writev(int fd, struct iovec *iovp, u_int iovcnt); ***REMOVED***
	SYS_SETTIMEOFDAY             = 122 // ***REMOVED*** int settimeofday(struct timeval *tv, struct timezone *tzp); ***REMOVED***
	SYS_FCHOWN                   = 123 // ***REMOVED*** int fchown(int fd, int uid, int gid); ***REMOVED***
	SYS_FCHMOD                   = 124 // ***REMOVED*** int fchmod(int fd, int mode); ***REMOVED***
	SYS_SETREUID                 = 126 // ***REMOVED*** int setreuid(int ruid, int euid); ***REMOVED***
	SYS_SETREGID                 = 127 // ***REMOVED*** int setregid(int rgid, int egid); ***REMOVED***
	SYS_RENAME                   = 128 // ***REMOVED*** int rename(char *from, char *to); ***REMOVED***
	SYS_FLOCK                    = 131 // ***REMOVED*** int flock(int fd, int how); ***REMOVED***
	SYS_MKFIFO                   = 132 // ***REMOVED*** int mkfifo(char *path, int mode); ***REMOVED***
	SYS_SENDTO                   = 133 // ***REMOVED*** int sendto(int s, caddr_t buf, size_t len, int flags, caddr_t to, int tolen); ***REMOVED***
	SYS_SHUTDOWN                 = 134 // ***REMOVED*** int shutdown(int s, int how); ***REMOVED***
	SYS_SOCKETPAIR               = 135 // ***REMOVED*** int socketpair(int domain, int type, int protocol, int *rsv); ***REMOVED***
	SYS_MKDIR                    = 136 // ***REMOVED*** int mkdir(char *path, int mode); ***REMOVED***
	SYS_RMDIR                    = 137 // ***REMOVED*** int rmdir(char *path); ***REMOVED***
	SYS_UTIMES                   = 138 // ***REMOVED*** int utimes(char *path, struct timeval *tptr); ***REMOVED***
	SYS_ADJTIME                  = 140 // ***REMOVED*** int adjtime(struct timeval *delta, struct timeval *olddelta); ***REMOVED***
	SYS_SETSID                   = 147 // ***REMOVED*** int setsid(void); ***REMOVED***
	SYS_QUOTACTL                 = 148 // ***REMOVED*** int quotactl(char *path, int cmd, int uid, caddr_t arg); ***REMOVED***
	SYS_NLM_SYSCALL              = 154 // ***REMOVED*** int nlm_syscall(int debug_level, int grace_period, int addr_count, char **addrs); ***REMOVED***
	SYS_NFSSVC                   = 155 // ***REMOVED*** int nfssvc(int flag, caddr_t argp); ***REMOVED***
	SYS_LGETFH                   = 160 // ***REMOVED*** int lgetfh(char *fname, struct fhandle *fhp); ***REMOVED***
	SYS_GETFH                    = 161 // ***REMOVED*** int getfh(char *fname, struct fhandle *fhp); ***REMOVED***
	SYS_SYSARCH                  = 165 // ***REMOVED*** int sysarch(int op, char *parms); ***REMOVED***
	SYS_RTPRIO                   = 166 // ***REMOVED*** int rtprio(int function, pid_t pid, struct rtprio *rtp); ***REMOVED***
	SYS_SEMSYS                   = 169 // ***REMOVED*** int semsys(int which, int a2, int a3, int a4, int a5); ***REMOVED***
	SYS_MSGSYS                   = 170 // ***REMOVED*** int msgsys(int which, int a2, int a3, int a4, int a5, int a6); ***REMOVED***
	SYS_SHMSYS                   = 171 // ***REMOVED*** int shmsys(int which, int a2, int a3, int a4); ***REMOVED***
	SYS_SETFIB                   = 175 // ***REMOVED*** int setfib(int fibnum); ***REMOVED***
	SYS_NTP_ADJTIME              = 176 // ***REMOVED*** int ntp_adjtime(struct timex *tp); ***REMOVED***
	SYS_SETGID                   = 181 // ***REMOVED*** int setgid(gid_t gid); ***REMOVED***
	SYS_SETEGID                  = 182 // ***REMOVED*** int setegid(gid_t egid); ***REMOVED***
	SYS_SETEUID                  = 183 // ***REMOVED*** int seteuid(uid_t euid); ***REMOVED***
	SYS_STAT                     = 188 // ***REMOVED*** int stat(char *path, struct stat *ub); ***REMOVED***
	SYS_FSTAT                    = 189 // ***REMOVED*** int fstat(int fd, struct stat *sb); ***REMOVED***
	SYS_LSTAT                    = 190 // ***REMOVED*** int lstat(char *path, struct stat *ub); ***REMOVED***
	SYS_PATHCONF                 = 191 // ***REMOVED*** int pathconf(char *path, int name); ***REMOVED***
	SYS_FPATHCONF                = 192 // ***REMOVED*** int fpathconf(int fd, int name); ***REMOVED***
	SYS_GETRLIMIT                = 194 // ***REMOVED*** int getrlimit(u_int which, struct rlimit *rlp); ***REMOVED*** getrlimit __getrlimit_args int
	SYS_SETRLIMIT                = 195 // ***REMOVED*** int setrlimit(u_int which, struct rlimit *rlp); ***REMOVED*** setrlimit __setrlimit_args int
	SYS_GETDIRENTRIES            = 196 // ***REMOVED*** int getdirentries(int fd, char *buf, u_int count, long *basep); ***REMOVED***
	SYS___SYSCTL                 = 202 // ***REMOVED*** int __sysctl(int *name, u_int namelen, void *old, size_t *oldlenp, void *new, size_t newlen); ***REMOVED*** __sysctl sysctl_args int
	SYS_MLOCK                    = 203 // ***REMOVED*** int mlock(const void *addr, size_t len); ***REMOVED***
	SYS_MUNLOCK                  = 204 // ***REMOVED*** int munlock(const void *addr, size_t len); ***REMOVED***
	SYS_UNDELETE                 = 205 // ***REMOVED*** int undelete(char *path); ***REMOVED***
	SYS_FUTIMES                  = 206 // ***REMOVED*** int futimes(int fd, struct timeval *tptr); ***REMOVED***
	SYS_GETPGID                  = 207 // ***REMOVED*** int getpgid(pid_t pid); ***REMOVED***
	SYS_POLL                     = 209 // ***REMOVED*** int poll(struct pollfd *fds, u_int nfds, int timeout); ***REMOVED***
	SYS_SEMGET                   = 221 // ***REMOVED*** int semget(key_t key, int nsems, int semflg); ***REMOVED***
	SYS_SEMOP                    = 222 // ***REMOVED*** int semop(int semid, struct sembuf *sops, size_t nsops); ***REMOVED***
	SYS_MSGGET                   = 225 // ***REMOVED*** int msgget(key_t key, int msgflg); ***REMOVED***
	SYS_MSGSND                   = 226 // ***REMOVED*** int msgsnd(int msqid, const void *msgp, size_t msgsz, int msgflg); ***REMOVED***
	SYS_MSGRCV                   = 227 // ***REMOVED*** int msgrcv(int msqid, void *msgp, size_t msgsz, long msgtyp, int msgflg); ***REMOVED***
	SYS_SHMAT                    = 228 // ***REMOVED*** int shmat(int shmid, const void *shmaddr, int shmflg); ***REMOVED***
	SYS_SHMDT                    = 230 // ***REMOVED*** int shmdt(const void *shmaddr); ***REMOVED***
	SYS_SHMGET                   = 231 // ***REMOVED*** int shmget(key_t key, size_t size, int shmflg); ***REMOVED***
	SYS_CLOCK_GETTIME            = 232 // ***REMOVED*** int clock_gettime(clockid_t clock_id, struct timespec *tp); ***REMOVED***
	SYS_CLOCK_SETTIME            = 233 // ***REMOVED*** int clock_settime( clockid_t clock_id, const struct timespec *tp); ***REMOVED***
	SYS_CLOCK_GETRES             = 234 // ***REMOVED*** int clock_getres(clockid_t clock_id, struct timespec *tp); ***REMOVED***
	SYS_KTIMER_CREATE            = 235 // ***REMOVED*** int ktimer_create(clockid_t clock_id, struct sigevent *evp, int *timerid); ***REMOVED***
	SYS_KTIMER_DELETE            = 236 // ***REMOVED*** int ktimer_delete(int timerid); ***REMOVED***
	SYS_KTIMER_SETTIME           = 237 // ***REMOVED*** int ktimer_settime(int timerid, int flags, const struct itimerspec *value, struct itimerspec *ovalue); ***REMOVED***
	SYS_KTIMER_GETTIME           = 238 // ***REMOVED*** int ktimer_gettime(int timerid, struct itimerspec *value); ***REMOVED***
	SYS_KTIMER_GETOVERRUN        = 239 // ***REMOVED*** int ktimer_getoverrun(int timerid); ***REMOVED***
	SYS_NANOSLEEP                = 240 // ***REMOVED*** int nanosleep(const struct timespec *rqtp, struct timespec *rmtp); ***REMOVED***
	SYS_FFCLOCK_GETCOUNTER       = 241 // ***REMOVED*** int ffclock_getcounter(ffcounter *ffcount); ***REMOVED***
	SYS_FFCLOCK_SETESTIMATE      = 242 // ***REMOVED*** int ffclock_setestimate( struct ffclock_estimate *cest); ***REMOVED***
	SYS_FFCLOCK_GETESTIMATE      = 243 // ***REMOVED*** int ffclock_getestimate( struct ffclock_estimate *cest); ***REMOVED***
	SYS_CLOCK_NANOSLEEP          = 244 // ***REMOVED*** int clock_nanosleep(clockid_t clock_id, int flags, const struct timespec *rqtp, struct timespec *rmtp); ***REMOVED***
	SYS_CLOCK_GETCPUCLOCKID2     = 247 // ***REMOVED*** int clock_getcpuclockid2(id_t id,int which, clockid_t *clock_id); ***REMOVED***
	SYS_NTP_GETTIME              = 248 // ***REMOVED*** int ntp_gettime(struct ntptimeval *ntvp); ***REMOVED***
	SYS_MINHERIT                 = 250 // ***REMOVED*** int minherit(void *addr, size_t len, int inherit); ***REMOVED***
	SYS_RFORK                    = 251 // ***REMOVED*** int rfork(int flags); ***REMOVED***
	SYS_OPENBSD_POLL             = 252 // ***REMOVED*** int openbsd_poll(struct pollfd *fds, u_int nfds, int timeout); ***REMOVED***
	SYS_ISSETUGID                = 253 // ***REMOVED*** int issetugid(void); ***REMOVED***
	SYS_LCHOWN                   = 254 // ***REMOVED*** int lchown(char *path, int uid, int gid); ***REMOVED***
	SYS_AIO_READ                 = 255 // ***REMOVED*** int aio_read(struct aiocb *aiocbp); ***REMOVED***
	SYS_AIO_WRITE                = 256 // ***REMOVED*** int aio_write(struct aiocb *aiocbp); ***REMOVED***
	SYS_LIO_LISTIO               = 257 // ***REMOVED*** int lio_listio(int mode, struct aiocb * const *acb_list, int nent, struct sigevent *sig); ***REMOVED***
	SYS_GETDENTS                 = 272 // ***REMOVED*** int getdents(int fd, char *buf, size_t count); ***REMOVED***
	SYS_LCHMOD                   = 274 // ***REMOVED*** int lchmod(char *path, mode_t mode); ***REMOVED***
	SYS_LUTIMES                  = 276 // ***REMOVED*** int lutimes(char *path, struct timeval *tptr); ***REMOVED***
	SYS_NSTAT                    = 278 // ***REMOVED*** int nstat(char *path, struct nstat *ub); ***REMOVED***
	SYS_NFSTAT                   = 279 // ***REMOVED*** int nfstat(int fd, struct nstat *sb); ***REMOVED***
	SYS_NLSTAT                   = 280 // ***REMOVED*** int nlstat(char *path, struct nstat *ub); ***REMOVED***
	SYS_PREADV                   = 289 // ***REMOVED*** ssize_t preadv(int fd, struct iovec *iovp, u_int iovcnt, off_t offset); ***REMOVED***
	SYS_PWRITEV                  = 290 // ***REMOVED*** ssize_t pwritev(int fd, struct iovec *iovp, u_int iovcnt, off_t offset); ***REMOVED***
	SYS_FHOPEN                   = 298 // ***REMOVED*** int fhopen(const struct fhandle *u_fhp, int flags); ***REMOVED***
	SYS_FHSTAT                   = 299 // ***REMOVED*** int fhstat(const struct fhandle *u_fhp, struct stat *sb); ***REMOVED***
	SYS_MODNEXT                  = 300 // ***REMOVED*** int modnext(int modid); ***REMOVED***
	SYS_MODSTAT                  = 301 // ***REMOVED*** int modstat(int modid, struct module_stat *stat); ***REMOVED***
	SYS_MODFNEXT                 = 302 // ***REMOVED*** int modfnext(int modid); ***REMOVED***
	SYS_MODFIND                  = 303 // ***REMOVED*** int modfind(const char *name); ***REMOVED***
	SYS_KLDLOAD                  = 304 // ***REMOVED*** int kldload(const char *file); ***REMOVED***
	SYS_KLDUNLOAD                = 305 // ***REMOVED*** int kldunload(int fileid); ***REMOVED***
	SYS_KLDFIND                  = 306 // ***REMOVED*** int kldfind(const char *file); ***REMOVED***
	SYS_KLDNEXT                  = 307 // ***REMOVED*** int kldnext(int fileid); ***REMOVED***
	SYS_KLDSTAT                  = 308 // ***REMOVED*** int kldstat(int fileid, struct kld_file_stat* stat); ***REMOVED***
	SYS_KLDFIRSTMOD              = 309 // ***REMOVED*** int kldfirstmod(int fileid); ***REMOVED***
	SYS_GETSID                   = 310 // ***REMOVED*** int getsid(pid_t pid); ***REMOVED***
	SYS_SETRESUID                = 311 // ***REMOVED*** int setresuid(uid_t ruid, uid_t euid, uid_t suid); ***REMOVED***
	SYS_SETRESGID                = 312 // ***REMOVED*** int setresgid(gid_t rgid, gid_t egid, gid_t sgid); ***REMOVED***
	SYS_AIO_RETURN               = 314 // ***REMOVED*** ssize_t aio_return(struct aiocb *aiocbp); ***REMOVED***
	SYS_AIO_SUSPEND              = 315 // ***REMOVED*** int aio_suspend( struct aiocb * const * aiocbp, int nent, const struct timespec *timeout); ***REMOVED***
	SYS_AIO_CANCEL               = 316 // ***REMOVED*** int aio_cancel(int fd, struct aiocb *aiocbp); ***REMOVED***
	SYS_AIO_ERROR                = 317 // ***REMOVED*** int aio_error(struct aiocb *aiocbp); ***REMOVED***
	SYS_YIELD                    = 321 // ***REMOVED*** int yield(void); ***REMOVED***
	SYS_MLOCKALL                 = 324 // ***REMOVED*** int mlockall(int how); ***REMOVED***
	SYS_MUNLOCKALL               = 325 // ***REMOVED*** int munlockall(void); ***REMOVED***
	SYS___GETCWD                 = 326 // ***REMOVED*** int __getcwd(char *buf, u_int buflen); ***REMOVED***
	SYS_SCHED_SETPARAM           = 327 // ***REMOVED*** int sched_setparam (pid_t pid, const struct sched_param *param); ***REMOVED***
	SYS_SCHED_GETPARAM           = 328 // ***REMOVED*** int sched_getparam (pid_t pid, struct sched_param *param); ***REMOVED***
	SYS_SCHED_SETSCHEDULER       = 329 // ***REMOVED*** int sched_setscheduler (pid_t pid, int policy, const struct sched_param *param); ***REMOVED***
	SYS_SCHED_GETSCHEDULER       = 330 // ***REMOVED*** int sched_getscheduler (pid_t pid); ***REMOVED***
	SYS_SCHED_YIELD              = 331 // ***REMOVED*** int sched_yield (void); ***REMOVED***
	SYS_SCHED_GET_PRIORITY_MAX   = 332 // ***REMOVED*** int sched_get_priority_max (int policy); ***REMOVED***
	SYS_SCHED_GET_PRIORITY_MIN   = 333 // ***REMOVED*** int sched_get_priority_min (int policy); ***REMOVED***
	SYS_SCHED_RR_GET_INTERVAL    = 334 // ***REMOVED*** int sched_rr_get_interval (pid_t pid, struct timespec *interval); ***REMOVED***
	SYS_UTRACE                   = 335 // ***REMOVED*** int utrace(const void *addr, size_t len); ***REMOVED***
	SYS_KLDSYM                   = 337 // ***REMOVED*** int kldsym(int fileid, int cmd, void *data); ***REMOVED***
	SYS_JAIL                     = 338 // ***REMOVED*** int jail(struct jail *jail); ***REMOVED***
	SYS_SIGPROCMASK              = 340 // ***REMOVED*** int sigprocmask(int how, const sigset_t *set, sigset_t *oset); ***REMOVED***
	SYS_SIGSUSPEND               = 341 // ***REMOVED*** int sigsuspend(const sigset_t *sigmask); ***REMOVED***
	SYS_SIGPENDING               = 343 // ***REMOVED*** int sigpending(sigset_t *set); ***REMOVED***
	SYS_SIGTIMEDWAIT             = 345 // ***REMOVED*** int sigtimedwait(const sigset_t *set, siginfo_t *info, const struct timespec *timeout); ***REMOVED***
	SYS_SIGWAITINFO              = 346 // ***REMOVED*** int sigwaitinfo(const sigset_t *set, siginfo_t *info); ***REMOVED***
	SYS___ACL_GET_FILE           = 347 // ***REMOVED*** int __acl_get_file(const char *path, acl_type_t type, struct acl *aclp); ***REMOVED***
	SYS___ACL_SET_FILE           = 348 // ***REMOVED*** int __acl_set_file(const char *path, acl_type_t type, struct acl *aclp); ***REMOVED***
	SYS___ACL_GET_FD             = 349 // ***REMOVED*** int __acl_get_fd(int filedes, acl_type_t type, struct acl *aclp); ***REMOVED***
	SYS___ACL_SET_FD             = 350 // ***REMOVED*** int __acl_set_fd(int filedes, acl_type_t type, struct acl *aclp); ***REMOVED***
	SYS___ACL_DELETE_FILE        = 351 // ***REMOVED*** int __acl_delete_file(const char *path, acl_type_t type); ***REMOVED***
	SYS___ACL_DELETE_FD          = 352 // ***REMOVED*** int __acl_delete_fd(int filedes, acl_type_t type); ***REMOVED***
	SYS___ACL_ACLCHECK_FILE      = 353 // ***REMOVED*** int __acl_aclcheck_file(const char *path, acl_type_t type, struct acl *aclp); ***REMOVED***
	SYS___ACL_ACLCHECK_FD        = 354 // ***REMOVED*** int __acl_aclcheck_fd(int filedes, acl_type_t type, struct acl *aclp); ***REMOVED***
	SYS_EXTATTRCTL               = 355 // ***REMOVED*** int extattrctl(const char *path, int cmd, const char *filename, int attrnamespace, const char *attrname); ***REMOVED***
	SYS_EXTATTR_SET_FILE         = 356 // ***REMOVED*** ssize_t extattr_set_file( const char *path, int attrnamespace, const char *attrname, void *data, size_t nbytes); ***REMOVED***
	SYS_EXTATTR_GET_FILE         = 357 // ***REMOVED*** ssize_t extattr_get_file( const char *path, int attrnamespace, const char *attrname, void *data, size_t nbytes); ***REMOVED***
	SYS_EXTATTR_DELETE_FILE      = 358 // ***REMOVED*** int extattr_delete_file(const char *path, int attrnamespace, const char *attrname); ***REMOVED***
	SYS_AIO_WAITCOMPLETE         = 359 // ***REMOVED*** ssize_t aio_waitcomplete( struct aiocb **aiocbp, struct timespec *timeout); ***REMOVED***
	SYS_GETRESUID                = 360 // ***REMOVED*** int getresuid(uid_t *ruid, uid_t *euid, uid_t *suid); ***REMOVED***
	SYS_GETRESGID                = 361 // ***REMOVED*** int getresgid(gid_t *rgid, gid_t *egid, gid_t *sgid); ***REMOVED***
	SYS_KQUEUE                   = 362 // ***REMOVED*** int kqueue(void); ***REMOVED***
	SYS_KEVENT                   = 363 // ***REMOVED*** int kevent(int fd, struct kevent *changelist, int nchanges, struct kevent *eventlist, int nevents, const struct timespec *timeout); ***REMOVED***
	SYS_EXTATTR_SET_FD           = 371 // ***REMOVED*** ssize_t extattr_set_fd(int fd, int attrnamespace, const char *attrname, void *data, size_t nbytes); ***REMOVED***
	SYS_EXTATTR_GET_FD           = 372 // ***REMOVED*** ssize_t extattr_get_fd(int fd, int attrnamespace, const char *attrname, void *data, size_t nbytes); ***REMOVED***
	SYS_EXTATTR_DELETE_FD        = 373 // ***REMOVED*** int extattr_delete_fd(int fd, int attrnamespace, const char *attrname); ***REMOVED***
	SYS___SETUGID                = 374 // ***REMOVED*** int __setugid(int flag); ***REMOVED***
	SYS_EACCESS                  = 376 // ***REMOVED*** int eaccess(char *path, int amode); ***REMOVED***
	SYS_NMOUNT                   = 378 // ***REMOVED*** int nmount(struct iovec *iovp, unsigned int iovcnt, int flags); ***REMOVED***
	SYS___MAC_GET_PROC           = 384 // ***REMOVED*** int __mac_get_proc(struct mac *mac_p); ***REMOVED***
	SYS___MAC_SET_PROC           = 385 // ***REMOVED*** int __mac_set_proc(struct mac *mac_p); ***REMOVED***
	SYS___MAC_GET_FD             = 386 // ***REMOVED*** int __mac_get_fd(int fd, struct mac *mac_p); ***REMOVED***
	SYS___MAC_GET_FILE           = 387 // ***REMOVED*** int __mac_get_file(const char *path_p, struct mac *mac_p); ***REMOVED***
	SYS___MAC_SET_FD             = 388 // ***REMOVED*** int __mac_set_fd(int fd, struct mac *mac_p); ***REMOVED***
	SYS___MAC_SET_FILE           = 389 // ***REMOVED*** int __mac_set_file(const char *path_p, struct mac *mac_p); ***REMOVED***
	SYS_KENV                     = 390 // ***REMOVED*** int kenv(int what, const char *name, char *value, int len); ***REMOVED***
	SYS_LCHFLAGS                 = 391 // ***REMOVED*** int lchflags(const char *path, u_long flags); ***REMOVED***
	SYS_UUIDGEN                  = 392 // ***REMOVED*** int uuidgen(struct uuid *store, int count); ***REMOVED***
	SYS_SENDFILE                 = 393 // ***REMOVED*** int sendfile(int fd, int s, off_t offset, size_t nbytes, struct sf_hdtr *hdtr, off_t *sbytes, int flags); ***REMOVED***
	SYS_MAC_SYSCALL              = 394 // ***REMOVED*** int mac_syscall(const char *policy, int call, void *arg); ***REMOVED***
	SYS_GETFSSTAT                = 395 // ***REMOVED*** int getfsstat(struct statfs *buf, long bufsize, int mode); ***REMOVED***
	SYS_STATFS                   = 396 // ***REMOVED*** int statfs(char *path, struct statfs *buf); ***REMOVED***
	SYS_FSTATFS                  = 397 // ***REMOVED*** int fstatfs(int fd, struct statfs *buf); ***REMOVED***
	SYS_FHSTATFS                 = 398 // ***REMOVED*** int fhstatfs(const struct fhandle *u_fhp, struct statfs *buf); ***REMOVED***
	SYS_KSEM_CLOSE               = 400 // ***REMOVED*** int ksem_close(semid_t id); ***REMOVED***
	SYS_KSEM_POST                = 401 // ***REMOVED*** int ksem_post(semid_t id); ***REMOVED***
	SYS_KSEM_WAIT                = 402 // ***REMOVED*** int ksem_wait(semid_t id); ***REMOVED***
	SYS_KSEM_TRYWAIT             = 403 // ***REMOVED*** int ksem_trywait(semid_t id); ***REMOVED***
	SYS_KSEM_INIT                = 404 // ***REMOVED*** int ksem_init(semid_t *idp, unsigned int value); ***REMOVED***
	SYS_KSEM_OPEN                = 405 // ***REMOVED*** int ksem_open(semid_t *idp, const char *name, int oflag, mode_t mode, unsigned int value); ***REMOVED***
	SYS_KSEM_UNLINK              = 406 // ***REMOVED*** int ksem_unlink(const char *name); ***REMOVED***
	SYS_KSEM_GETVALUE            = 407 // ***REMOVED*** int ksem_getvalue(semid_t id, int *val); ***REMOVED***
	SYS_KSEM_DESTROY             = 408 // ***REMOVED*** int ksem_destroy(semid_t id); ***REMOVED***
	SYS___MAC_GET_PID            = 409 // ***REMOVED*** int __mac_get_pid(pid_t pid, struct mac *mac_p); ***REMOVED***
	SYS___MAC_GET_LINK           = 410 // ***REMOVED*** int __mac_get_link(const char *path_p, struct mac *mac_p); ***REMOVED***
	SYS___MAC_SET_LINK           = 411 // ***REMOVED*** int __mac_set_link(const char *path_p, struct mac *mac_p); ***REMOVED***
	SYS_EXTATTR_SET_LINK         = 412 // ***REMOVED*** ssize_t extattr_set_link( const char *path, int attrnamespace, const char *attrname, void *data, size_t nbytes); ***REMOVED***
	SYS_EXTATTR_GET_LINK         = 413 // ***REMOVED*** ssize_t extattr_get_link( const char *path, int attrnamespace, const char *attrname, void *data, size_t nbytes); ***REMOVED***
	SYS_EXTATTR_DELETE_LINK      = 414 // ***REMOVED*** int extattr_delete_link( const char *path, int attrnamespace, const char *attrname); ***REMOVED***
	SYS___MAC_EXECVE             = 415 // ***REMOVED*** int __mac_execve(char *fname, char **argv, char **envv, struct mac *mac_p); ***REMOVED***
	SYS_SIGACTION                = 416 // ***REMOVED*** int sigaction(int sig, const struct sigaction *act, struct sigaction *oact); ***REMOVED***
	SYS_SIGRETURN                = 417 // ***REMOVED*** int sigreturn( const struct __ucontext *sigcntxp); ***REMOVED***
	SYS_GETCONTEXT               = 421 // ***REMOVED*** int getcontext(struct __ucontext *ucp); ***REMOVED***
	SYS_SETCONTEXT               = 422 // ***REMOVED*** int setcontext( const struct __ucontext *ucp); ***REMOVED***
	SYS_SWAPCONTEXT              = 423 // ***REMOVED*** int swapcontext(struct __ucontext *oucp, const struct __ucontext *ucp); ***REMOVED***
	SYS_SWAPOFF                  = 424 // ***REMOVED*** int swapoff(const char *name); ***REMOVED***
	SYS___ACL_GET_LINK           = 425 // ***REMOVED*** int __acl_get_link(const char *path, acl_type_t type, struct acl *aclp); ***REMOVED***
	SYS___ACL_SET_LINK           = 426 // ***REMOVED*** int __acl_set_link(const char *path, acl_type_t type, struct acl *aclp); ***REMOVED***
	SYS___ACL_DELETE_LINK        = 427 // ***REMOVED*** int __acl_delete_link(const char *path, acl_type_t type); ***REMOVED***
	SYS___ACL_ACLCHECK_LINK      = 428 // ***REMOVED*** int __acl_aclcheck_link(const char *path, acl_type_t type, struct acl *aclp); ***REMOVED***
	SYS_SIGWAIT                  = 429 // ***REMOVED*** int sigwait(const sigset_t *set, int *sig); ***REMOVED***
	SYS_THR_CREATE               = 430 // ***REMOVED*** int thr_create(ucontext_t *ctx, long *id, int flags); ***REMOVED***
	SYS_THR_EXIT                 = 431 // ***REMOVED*** void thr_exit(long *state); ***REMOVED***
	SYS_THR_SELF                 = 432 // ***REMOVED*** int thr_self(long *id); ***REMOVED***
	SYS_THR_KILL                 = 433 // ***REMOVED*** int thr_kill(long id, int sig); ***REMOVED***
	SYS_JAIL_ATTACH              = 436 // ***REMOVED*** int jail_attach(int jid); ***REMOVED***
	SYS_EXTATTR_LIST_FD          = 437 // ***REMOVED*** ssize_t extattr_list_fd(int fd, int attrnamespace, void *data, size_t nbytes); ***REMOVED***
	SYS_EXTATTR_LIST_FILE        = 438 // ***REMOVED*** ssize_t extattr_list_file( const char *path, int attrnamespace, void *data, size_t nbytes); ***REMOVED***
	SYS_EXTATTR_LIST_LINK        = 439 // ***REMOVED*** ssize_t extattr_list_link( const char *path, int attrnamespace, void *data, size_t nbytes); ***REMOVED***
	SYS_KSEM_TIMEDWAIT           = 441 // ***REMOVED*** int ksem_timedwait(semid_t id, const struct timespec *abstime); ***REMOVED***
	SYS_THR_SUSPEND              = 442 // ***REMOVED*** int thr_suspend( const struct timespec *timeout); ***REMOVED***
	SYS_THR_WAKE                 = 443 // ***REMOVED*** int thr_wake(long id); ***REMOVED***
	SYS_KLDUNLOADF               = 444 // ***REMOVED*** int kldunloadf(int fileid, int flags); ***REMOVED***
	SYS_AUDIT                    = 445 // ***REMOVED*** int audit(const void *record, u_int length); ***REMOVED***
	SYS_AUDITON                  = 446 // ***REMOVED*** int auditon(int cmd, void *data, u_int length); ***REMOVED***
	SYS_GETAUID                  = 447 // ***REMOVED*** int getauid(uid_t *auid); ***REMOVED***
	SYS_SETAUID                  = 448 // ***REMOVED*** int setauid(uid_t *auid); ***REMOVED***
	SYS_GETAUDIT                 = 449 // ***REMOVED*** int getaudit(struct auditinfo *auditinfo); ***REMOVED***
	SYS_SETAUDIT                 = 450 // ***REMOVED*** int setaudit(struct auditinfo *auditinfo); ***REMOVED***
	SYS_GETAUDIT_ADDR            = 451 // ***REMOVED*** int getaudit_addr( struct auditinfo_addr *auditinfo_addr, u_int length); ***REMOVED***
	SYS_SETAUDIT_ADDR            = 452 // ***REMOVED*** int setaudit_addr( struct auditinfo_addr *auditinfo_addr, u_int length); ***REMOVED***
	SYS_AUDITCTL                 = 453 // ***REMOVED*** int auditctl(char *path); ***REMOVED***
	SYS__UMTX_OP                 = 454 // ***REMOVED*** int _umtx_op(void *obj, int op, u_long val, void *uaddr1, void *uaddr2); ***REMOVED***
	SYS_THR_NEW                  = 455 // ***REMOVED*** int thr_new(struct thr_param *param, int param_size); ***REMOVED***
	SYS_SIGQUEUE                 = 456 // ***REMOVED*** int sigqueue(pid_t pid, int signum, void *value); ***REMOVED***
	SYS_KMQ_OPEN                 = 457 // ***REMOVED*** int kmq_open(const char *path, int flags, mode_t mode, const struct mq_attr *attr); ***REMOVED***
	SYS_KMQ_SETATTR              = 458 // ***REMOVED*** int kmq_setattr(int mqd,		const struct mq_attr *attr,		struct mq_attr *oattr); ***REMOVED***
	SYS_KMQ_TIMEDRECEIVE         = 459 // ***REMOVED*** int kmq_timedreceive(int mqd,	char *msg_ptr, size_t msg_len,	unsigned *msg_prio,			const struct timespec *abs_timeout); ***REMOVED***
	SYS_KMQ_TIMEDSEND            = 460 // ***REMOVED*** int kmq_timedsend(int mqd,		const char *msg_ptr, size_t msg_len,unsigned msg_prio,			const struct timespec *abs_timeout);***REMOVED***
	SYS_KMQ_NOTIFY               = 461 // ***REMOVED*** int kmq_notify(int mqd,		const struct sigevent *sigev); ***REMOVED***
	SYS_KMQ_UNLINK               = 462 // ***REMOVED*** int kmq_unlink(const char *path); ***REMOVED***
	SYS_ABORT2                   = 463 // ***REMOVED*** int abort2(const char *why, int nargs, void **args); ***REMOVED***
	SYS_THR_SET_NAME             = 464 // ***REMOVED*** int thr_set_name(long id, const char *name); ***REMOVED***
	SYS_AIO_FSYNC                = 465 // ***REMOVED*** int aio_fsync(int op, struct aiocb *aiocbp); ***REMOVED***
	SYS_RTPRIO_THREAD            = 466 // ***REMOVED*** int rtprio_thread(int function, lwpid_t lwpid, struct rtprio *rtp); ***REMOVED***
	SYS_SCTP_PEELOFF             = 471 // ***REMOVED*** int sctp_peeloff(int sd, uint32_t name); ***REMOVED***
	SYS_SCTP_GENERIC_SENDMSG     = 472 // ***REMOVED*** int sctp_generic_sendmsg(int sd, caddr_t msg, int mlen, caddr_t to, __socklen_t tolen, struct sctp_sndrcvinfo *sinfo, int flags); ***REMOVED***
	SYS_SCTP_GENERIC_SENDMSG_IOV = 473 // ***REMOVED*** int sctp_generic_sendmsg_iov(int sd, struct iovec *iov, int iovlen, caddr_t to, __socklen_t tolen, struct sctp_sndrcvinfo *sinfo, int flags); ***REMOVED***
	SYS_SCTP_GENERIC_RECVMSG     = 474 // ***REMOVED*** int sctp_generic_recvmsg(int sd, struct iovec *iov, int iovlen, struct sockaddr * from, __socklen_t *fromlenaddr, struct sctp_sndrcvinfo *sinfo, int *msg_flags); ***REMOVED***
	SYS_PREAD                    = 475 // ***REMOVED*** ssize_t pread(int fd, void *buf, size_t nbyte, off_t offset); ***REMOVED***
	SYS_PWRITE                   = 476 // ***REMOVED*** ssize_t pwrite(int fd, const void *buf, size_t nbyte, off_t offset); ***REMOVED***
	SYS_MMAP                     = 477 // ***REMOVED*** caddr_t mmap(caddr_t addr, size_t len, int prot, int flags, int fd, off_t pos); ***REMOVED***
	SYS_LSEEK                    = 478 // ***REMOVED*** off_t lseek(int fd, off_t offset, int whence); ***REMOVED***
	SYS_TRUNCATE                 = 479 // ***REMOVED*** int truncate(char *path, off_t length); ***REMOVED***
	SYS_FTRUNCATE                = 480 // ***REMOVED*** int ftruncate(int fd, off_t length); ***REMOVED***
	SYS_THR_KILL2                = 481 // ***REMOVED*** int thr_kill2(pid_t pid, long id, int sig); ***REMOVED***
	SYS_SHM_OPEN                 = 482 // ***REMOVED*** int shm_open(const char *path, int flags, mode_t mode); ***REMOVED***
	SYS_SHM_UNLINK               = 483 // ***REMOVED*** int shm_unlink(const char *path); ***REMOVED***
	SYS_CPUSET                   = 484 // ***REMOVED*** int cpuset(cpusetid_t *setid); ***REMOVED***
	SYS_CPUSET_SETID             = 485 // ***REMOVED*** int cpuset_setid(cpuwhich_t which, id_t id, cpusetid_t setid); ***REMOVED***
	SYS_CPUSET_GETID             = 486 // ***REMOVED*** int cpuset_getid(cpulevel_t level, cpuwhich_t which, id_t id, cpusetid_t *setid); ***REMOVED***
	SYS_CPUSET_GETAFFINITY       = 487 // ***REMOVED*** int cpuset_getaffinity(cpulevel_t level, cpuwhich_t which, id_t id, size_t cpusetsize, cpuset_t *mask); ***REMOVED***
	SYS_CPUSET_SETAFFINITY       = 488 // ***REMOVED*** int cpuset_setaffinity(cpulevel_t level, cpuwhich_t which, id_t id, size_t cpusetsize, const cpuset_t *mask); ***REMOVED***
	SYS_FACCESSAT                = 489 // ***REMOVED*** int faccessat(int fd, char *path, int amode, int flag); ***REMOVED***
	SYS_FCHMODAT                 = 490 // ***REMOVED*** int fchmodat(int fd, char *path, mode_t mode, int flag); ***REMOVED***
	SYS_FCHOWNAT                 = 491 // ***REMOVED*** int fchownat(int fd, char *path, uid_t uid, gid_t gid, int flag); ***REMOVED***
	SYS_FEXECVE                  = 492 // ***REMOVED*** int fexecve(int fd, char **argv, char **envv); ***REMOVED***
	SYS_FSTATAT                  = 493 // ***REMOVED*** int fstatat(int fd, char *path, struct stat *buf, int flag); ***REMOVED***
	SYS_FUTIMESAT                = 494 // ***REMOVED*** int futimesat(int fd, char *path, struct timeval *times); ***REMOVED***
	SYS_LINKAT                   = 495 // ***REMOVED*** int linkat(int fd1, char *path1, int fd2, char *path2, int flag); ***REMOVED***
	SYS_MKDIRAT                  = 496 // ***REMOVED*** int mkdirat(int fd, char *path, mode_t mode); ***REMOVED***
	SYS_MKFIFOAT                 = 497 // ***REMOVED*** int mkfifoat(int fd, char *path, mode_t mode); ***REMOVED***
	SYS_MKNODAT                  = 498 // ***REMOVED*** int mknodat(int fd, char *path, mode_t mode, dev_t dev); ***REMOVED***
	SYS_OPENAT                   = 499 // ***REMOVED*** int openat(int fd, char *path, int flag, mode_t mode); ***REMOVED***
	SYS_READLINKAT               = 500 // ***REMOVED*** int readlinkat(int fd, char *path, char *buf, size_t bufsize); ***REMOVED***
	SYS_RENAMEAT                 = 501 // ***REMOVED*** int renameat(int oldfd, char *old, int newfd, char *new); ***REMOVED***
	SYS_SYMLINKAT                = 502 // ***REMOVED*** int symlinkat(char *path1, int fd, char *path2); ***REMOVED***
	SYS_UNLINKAT                 = 503 // ***REMOVED*** int unlinkat(int fd, char *path, int flag); ***REMOVED***
	SYS_POSIX_OPENPT             = 504 // ***REMOVED*** int posix_openpt(int flags); ***REMOVED***
	SYS_GSSD_SYSCALL             = 505 // ***REMOVED*** int gssd_syscall(char *path); ***REMOVED***
	SYS_JAIL_GET                 = 506 // ***REMOVED*** int jail_get(struct iovec *iovp, unsigned int iovcnt, int flags); ***REMOVED***
	SYS_JAIL_SET                 = 507 // ***REMOVED*** int jail_set(struct iovec *iovp, unsigned int iovcnt, int flags); ***REMOVED***
	SYS_JAIL_REMOVE              = 508 // ***REMOVED*** int jail_remove(int jid); ***REMOVED***
	SYS_CLOSEFROM                = 509 // ***REMOVED*** int closefrom(int lowfd); ***REMOVED***
	SYS___SEMCTL                 = 510 // ***REMOVED*** int __semctl(int semid, int semnum, int cmd, union semun *arg); ***REMOVED***
	SYS_MSGCTL                   = 511 // ***REMOVED*** int msgctl(int msqid, int cmd, struct msqid_ds *buf); ***REMOVED***
	SYS_SHMCTL                   = 512 // ***REMOVED*** int shmctl(int shmid, int cmd, struct shmid_ds *buf); ***REMOVED***
	SYS_LPATHCONF                = 513 // ***REMOVED*** int lpathconf(char *path, int name); ***REMOVED***
	SYS___CAP_RIGHTS_GET         = 515 // ***REMOVED*** int __cap_rights_get(int version, int fd, cap_rights_t *rightsp); ***REMOVED***
	SYS_CAP_ENTER                = 516 // ***REMOVED*** int cap_enter(void); ***REMOVED***
	SYS_CAP_GETMODE              = 517 // ***REMOVED*** int cap_getmode(u_int *modep); ***REMOVED***
	SYS_PDFORK                   = 518 // ***REMOVED*** int pdfork(int *fdp, int flags); ***REMOVED***
	SYS_PDKILL                   = 519 // ***REMOVED*** int pdkill(int fd, int signum); ***REMOVED***
	SYS_PDGETPID                 = 520 // ***REMOVED*** int pdgetpid(int fd, pid_t *pidp); ***REMOVED***
	SYS_PSELECT                  = 522 // ***REMOVED*** int pselect(int nd, fd_set *in, fd_set *ou, fd_set *ex, const struct timespec *ts, const sigset_t *sm); ***REMOVED***
	SYS_GETLOGINCLASS            = 523 // ***REMOVED*** int getloginclass(char *namebuf, size_t namelen); ***REMOVED***
	SYS_SETLOGINCLASS            = 524 // ***REMOVED*** int setloginclass(const char *namebuf); ***REMOVED***
	SYS_RCTL_GET_RACCT           = 525 // ***REMOVED*** int rctl_get_racct(const void *inbufp, size_t inbuflen, void *outbufp, size_t outbuflen); ***REMOVED***
	SYS_RCTL_GET_RULES           = 526 // ***REMOVED*** int rctl_get_rules(const void *inbufp, size_t inbuflen, void *outbufp, size_t outbuflen); ***REMOVED***
	SYS_RCTL_GET_LIMITS          = 527 // ***REMOVED*** int rctl_get_limits(const void *inbufp, size_t inbuflen, void *outbufp, size_t outbuflen); ***REMOVED***
	SYS_RCTL_ADD_RULE            = 528 // ***REMOVED*** int rctl_add_rule(const void *inbufp, size_t inbuflen, void *outbufp, size_t outbuflen); ***REMOVED***
	SYS_RCTL_REMOVE_RULE         = 529 // ***REMOVED*** int rctl_remove_rule(const void *inbufp, size_t inbuflen, void *outbufp, size_t outbuflen); ***REMOVED***
	SYS_POSIX_FALLOCATE          = 530 // ***REMOVED*** int posix_fallocate(int fd, off_t offset, off_t len); ***REMOVED***
	SYS_POSIX_FADVISE            = 531 // ***REMOVED*** int posix_fadvise(int fd, off_t offset, off_t len, int advice); ***REMOVED***
	SYS_WAIT6                    = 532 // ***REMOVED*** int wait6(idtype_t idtype, id_t id, int *status, int options, struct __wrusage *wrusage, siginfo_t *info); ***REMOVED***
	SYS_CAP_RIGHTS_LIMIT         = 533 // ***REMOVED*** int cap_rights_limit(int fd, cap_rights_t *rightsp); ***REMOVED***
	SYS_CAP_IOCTLS_LIMIT         = 534 // ***REMOVED*** int cap_ioctls_limit(int fd, const u_long *cmds, size_t ncmds); ***REMOVED***
	SYS_CAP_IOCTLS_GET           = 535 // ***REMOVED*** ssize_t cap_ioctls_get(int fd, u_long *cmds, size_t maxcmds); ***REMOVED***
	SYS_CAP_FCNTLS_LIMIT         = 536 // ***REMOVED*** int cap_fcntls_limit(int fd, uint32_t fcntlrights); ***REMOVED***
	SYS_CAP_FCNTLS_GET           = 537 // ***REMOVED*** int cap_fcntls_get(int fd, uint32_t *fcntlrightsp); ***REMOVED***
	SYS_BINDAT                   = 538 // ***REMOVED*** int bindat(int fd, int s, caddr_t name, int namelen); ***REMOVED***
	SYS_CONNECTAT                = 539 // ***REMOVED*** int connectat(int fd, int s, caddr_t name, int namelen); ***REMOVED***
	SYS_CHFLAGSAT                = 540 // ***REMOVED*** int chflagsat(int fd, const char *path, u_long flags, int atflag); ***REMOVED***
	SYS_ACCEPT4                  = 541 // ***REMOVED*** int accept4(int s, struct sockaddr * __restrict name, __socklen_t * __restrict anamelen, int flags); ***REMOVED***
	SYS_PIPE2                    = 542 // ***REMOVED*** int pipe2(int *fildes, int flags); ***REMOVED***
	SYS_AIO_MLOCK                = 543 // ***REMOVED*** int aio_mlock(struct aiocb *aiocbp); ***REMOVED***
	SYS_PROCCTL                  = 544 // ***REMOVED*** int procctl(idtype_t idtype, id_t id, int com, void *data); ***REMOVED***
	SYS_PPOLL                    = 545 // ***REMOVED*** int ppoll(struct pollfd *fds, u_int nfds, const struct timespec *ts, const sigset_t *set); ***REMOVED***
	SYS_FUTIMENS                 = 546 // ***REMOVED*** int futimens(int fd, struct timespec *times); ***REMOVED***
	SYS_UTIMENSAT                = 547 // ***REMOVED*** int utimensat(int fd, char *path, struct timespec *times, int flag); ***REMOVED***
	SYS_NUMA_GETAFFINITY         = 548 // ***REMOVED*** int numa_getaffinity(cpuwhich_t which, id_t id, struct vm_domain_policy_entry *policy); ***REMOVED***
	SYS_NUMA_SETAFFINITY         = 549 // ***REMOVED*** int numa_setaffinity(cpuwhich_t which, id_t id, const struct vm_domain_policy_entry *policy); ***REMOVED***
	SYS_FDATASYNC                = 550 // ***REMOVED*** int fdatasync(int fd); ***REMOVED***
)
