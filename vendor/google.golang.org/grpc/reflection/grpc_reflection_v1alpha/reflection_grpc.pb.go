// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.1.0
// - protoc             v3.14.0
// source: reflection/grpc_reflection_v1alpha/reflection.proto

package grpc_reflection_v1alpha

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ServerReflectionClient is the client API for ServerReflection service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ServerReflectionClient interface ***REMOVED***
	// The reflection service is structured as a bidirectional stream, ensuring
	// all related requests go to a single server.
	ServerReflectionInfo(ctx context.Context, opts ...grpc.CallOption) (ServerReflection_ServerReflectionInfoClient, error)
***REMOVED***

type serverReflectionClient struct ***REMOVED***
	cc grpc.ClientConnInterface
***REMOVED***

func NewServerReflectionClient(cc grpc.ClientConnInterface) ServerReflectionClient ***REMOVED***
	return &serverReflectionClient***REMOVED***cc***REMOVED***
***REMOVED***

func (c *serverReflectionClient) ServerReflectionInfo(ctx context.Context, opts ...grpc.CallOption) (ServerReflection_ServerReflectionInfoClient, error) ***REMOVED***
	stream, err := c.cc.NewStream(ctx, &ServerReflection_ServiceDesc.Streams[0], "/grpc.reflection.v1alpha.ServerReflection/ServerReflectionInfo", opts...)
	if err != nil ***REMOVED***
		return nil, err
	***REMOVED***
	x := &serverReflectionServerReflectionInfoClient***REMOVED***stream***REMOVED***
	return x, nil
***REMOVED***

type ServerReflection_ServerReflectionInfoClient interface ***REMOVED***
	Send(*ServerReflectionRequest) error
	Recv() (*ServerReflectionResponse, error)
	grpc.ClientStream
***REMOVED***

type serverReflectionServerReflectionInfoClient struct ***REMOVED***
	grpc.ClientStream
***REMOVED***

func (x *serverReflectionServerReflectionInfoClient) Send(m *ServerReflectionRequest) error ***REMOVED***
	return x.ClientStream.SendMsg(m)
***REMOVED***

func (x *serverReflectionServerReflectionInfoClient) Recv() (*ServerReflectionResponse, error) ***REMOVED***
	m := new(ServerReflectionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil ***REMOVED***
		return nil, err
	***REMOVED***
	return m, nil
***REMOVED***

// ServerReflectionServer is the server API for ServerReflection service.
// All implementations should embed UnimplementedServerReflectionServer
// for forward compatibility
type ServerReflectionServer interface ***REMOVED***
	// The reflection service is structured as a bidirectional stream, ensuring
	// all related requests go to a single server.
	ServerReflectionInfo(ServerReflection_ServerReflectionInfoServer) error
***REMOVED***

// UnimplementedServerReflectionServer should be embedded to have forward compatible implementations.
type UnimplementedServerReflectionServer struct ***REMOVED***
***REMOVED***

func (UnimplementedServerReflectionServer) ServerReflectionInfo(ServerReflection_ServerReflectionInfoServer) error ***REMOVED***
	return status.Errorf(codes.Unimplemented, "method ServerReflectionInfo not implemented")
***REMOVED***

// UnsafeServerReflectionServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ServerReflectionServer will
// result in compilation errors.
type UnsafeServerReflectionServer interface ***REMOVED***
	mustEmbedUnimplementedServerReflectionServer()
***REMOVED***

func RegisterServerReflectionServer(s grpc.ServiceRegistrar, srv ServerReflectionServer) ***REMOVED***
	s.RegisterService(&ServerReflection_ServiceDesc, srv)
***REMOVED***

func _ServerReflection_ServerReflectionInfo_Handler(srv interface***REMOVED******REMOVED***, stream grpc.ServerStream) error ***REMOVED***
	return srv.(ServerReflectionServer).ServerReflectionInfo(&serverReflectionServerReflectionInfoServer***REMOVED***stream***REMOVED***)
***REMOVED***

type ServerReflection_ServerReflectionInfoServer interface ***REMOVED***
	Send(*ServerReflectionResponse) error
	Recv() (*ServerReflectionRequest, error)
	grpc.ServerStream
***REMOVED***

type serverReflectionServerReflectionInfoServer struct ***REMOVED***
	grpc.ServerStream
***REMOVED***

func (x *serverReflectionServerReflectionInfoServer) Send(m *ServerReflectionResponse) error ***REMOVED***
	return x.ServerStream.SendMsg(m)
***REMOVED***

func (x *serverReflectionServerReflectionInfoServer) Recv() (*ServerReflectionRequest, error) ***REMOVED***
	m := new(ServerReflectionRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil ***REMOVED***
		return nil, err
	***REMOVED***
	return m, nil
***REMOVED***

// ServerReflection_ServiceDesc is the grpc.ServiceDesc for ServerReflection service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ServerReflection_ServiceDesc = grpc.ServiceDesc***REMOVED***
	ServiceName: "grpc.reflection.v1alpha.ServerReflection",
	HandlerType: (*ServerReflectionServer)(nil),
	Methods:     []grpc.MethodDesc***REMOVED******REMOVED***,
	Streams: []grpc.StreamDesc***REMOVED***
		***REMOVED***
			StreamName:    "ServerReflectionInfo",
			Handler:       _ServerReflection_ServerReflectionInfo_Handler,
			ServerStreams: true,
			ClientStreams: true,
		***REMOVED***,
	***REMOVED***,
	Metadata: "reflection/grpc_reflection_v1alpha/reflection.proto",
***REMOVED***
