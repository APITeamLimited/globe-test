// Code generated by goyacc -o proto.y.go -p proto proto.y. DO NOT EDIT.

//line proto.y:2
package protoparse

import __yyfmt__ "fmt"

//line proto.y:2

//lint:file-ignore SA4006 generated parser has unused values

import (
	"math"

	"github.com/jhump/protoreflect/desc/protoparse/ast"
)

//line proto.y:16
type protoSymType struct ***REMOVED***
	yys       int
	file      *ast.FileNode
	syn       *ast.SyntaxNode
	fileDecl  ast.FileElement
	fileDecls []ast.FileElement
	pkg       *ast.PackageNode
	imprt     *ast.ImportNode
	msg       *ast.MessageNode
	msgDecl   ast.MessageElement
	msgDecls  []ast.MessageElement
	fld       *ast.FieldNode
	mapFld    *ast.MapFieldNode
	mapType   *ast.MapTypeNode
	grp       *ast.GroupNode
	oo        *ast.OneOfNode
	ooDecl    ast.OneOfElement
	ooDecls   []ast.OneOfElement
	ext       *ast.ExtensionRangeNode
	resvd     *ast.ReservedNode
	en        *ast.EnumNode
	enDecl    ast.EnumElement
	enDecls   []ast.EnumElement
	env       *ast.EnumValueNode
	extend    *ast.ExtendNode
	extDecl   ast.ExtendElement
	extDecls  []ast.ExtendElement
	svc       *ast.ServiceNode
	svcDecl   ast.ServiceElement
	svcDecls  []ast.ServiceElement
	mtd       *ast.RPCNode
	rpcType   *ast.RPCTypeNode
	rpcDecl   ast.RPCElement
	rpcDecls  []ast.RPCElement
	opt       *ast.OptionNode
	opts      *compactOptionList
	ref       *ast.FieldReferenceNode
	optNms    *fieldRefList
	cmpctOpts *ast.CompactOptionsNode
	rng       *ast.RangeNode
	rngs      *rangeList
	names     *nameList
	cid       *identList
	tid       ast.IdentValueNode
	sl        *valueList
	msgField  *ast.MessageFieldNode
	msgEntry  *messageFieldEntry
	msgLit    *messageFieldList
	v         ast.ValueNode
	il        ast.IntValueNode
	str       *stringList
	s         *ast.StringLiteralNode
	i         *ast.UintLiteralNode
	f         *ast.FloatLiteralNode
	id        *ast.IdentNode
	b         *ast.RuneNode
	err       error
***REMOVED***

const _STRING_LIT = 57346
const _INT_LIT = 57347
const _FLOAT_LIT = 57348
const _NAME = 57349
const _SYNTAX = 57350
const _IMPORT = 57351
const _WEAK = 57352
const _PUBLIC = 57353
const _PACKAGE = 57354
const _OPTION = 57355
const _TRUE = 57356
const _FALSE = 57357
const _INF = 57358
const _NAN = 57359
const _REPEATED = 57360
const _OPTIONAL = 57361
const _REQUIRED = 57362
const _DOUBLE = 57363
const _FLOAT = 57364
const _INT32 = 57365
const _INT64 = 57366
const _UINT32 = 57367
const _UINT64 = 57368
const _SINT32 = 57369
const _SINT64 = 57370
const _FIXED32 = 57371
const _FIXED64 = 57372
const _SFIXED32 = 57373
const _SFIXED64 = 57374
const _BOOL = 57375
const _STRING = 57376
const _BYTES = 57377
const _GROUP = 57378
const _ONEOF = 57379
const _MAP = 57380
const _EXTENSIONS = 57381
const _TO = 57382
const _MAX = 57383
const _RESERVED = 57384
const _ENUM = 57385
const _MESSAGE = 57386
const _EXTEND = 57387
const _SERVICE = 57388
const _RPC = 57389
const _STREAM = 57390
const _RETURNS = 57391
const _ERROR = 57392

var protoToknames = [...]string***REMOVED***
	"$end",
	"error",
	"$unk",
	"_STRING_LIT",
	"_INT_LIT",
	"_FLOAT_LIT",
	"_NAME",
	"_SYNTAX",
	"_IMPORT",
	"_WEAK",
	"_PUBLIC",
	"_PACKAGE",
	"_OPTION",
	"_TRUE",
	"_FALSE",
	"_INF",
	"_NAN",
	"_REPEATED",
	"_OPTIONAL",
	"_REQUIRED",
	"_DOUBLE",
	"_FLOAT",
	"_INT32",
	"_INT64",
	"_UINT32",
	"_UINT64",
	"_SINT32",
	"_SINT64",
	"_FIXED32",
	"_FIXED64",
	"_SFIXED32",
	"_SFIXED64",
	"_BOOL",
	"_STRING",
	"_BYTES",
	"_GROUP",
	"_ONEOF",
	"_MAP",
	"_EXTENSIONS",
	"_TO",
	"_MAX",
	"_RESERVED",
	"_ENUM",
	"_MESSAGE",
	"_EXTEND",
	"_SERVICE",
	"_RPC",
	"_STREAM",
	"_RETURNS",
	"_ERROR",
	"'='",
	"';'",
	"':'",
	"'***REMOVED***'",
	"'***REMOVED***'",
	"'\\\\'",
	"'/'",
	"'?'",
	"'.'",
	"','",
	"'>'",
	"'<'",
	"'+'",
	"'-'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'*'",
	"'&'",
	"'^'",
	"'%'",
	"'$'",
	"'#'",
	"'@'",
	"'!'",
	"'~'",
	"'`'",
***REMOVED***

var protoStatenames = [...]string***REMOVED******REMOVED***

const protoEofCode = 1
const protoErrCode = 2
const protoInitialStackSize = 16

//line proto.y:1191

//line yacctab:1
var protoExca = [...]int***REMOVED***
	-1, 0,
	1, 4,
	-2, 0,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	1, 1,
	-2, 0,
	-1, 3,
	1, 2,
	-2, 0,
	-1, 22,
	1, 3,
	-2, 0,
	-1, 95,
	55, 178,
	-2, 0,
	-1, 96,
	55, 166,
	-2, 0,
	-1, 97,
	55, 195,
	-2, 0,
	-1, 99,
	55, 204,
	-2, 0,
	-1, 110,
	55, 53,
	-2, 0,
	-1, 289,
	55, 51,
	61, 51,
	-2, 0,
	-1, 352,
	61, 53,
	-2, 0,
	-1, 367,
	55, 116,
	-2, 0,
	-1, 401,
	61, 53,
	-2, 0,
	-1, 489,
	61, 53,
	-2, 0,
	-1, 533,
	55, 178,
	-2, 0,
	-1, 537,
	55, 178,
	-2, 0,
	-1, 541,
	55, 178,
	-2, 0,
	-1, 559,
	55, 216,
	-2, 0,
	-1, 566,
	55, 178,
	-2, 0,
	-1, 569,
	55, 178,
	-2, 0,
	-1, 572,
	55, 178,
	-2, 0,
	-1, 593,
	55, 178,
	-2, 0,
	-1, 605,
	55, 178,
	-2, 0,
***REMOVED***

const protoPrivate = 57344

const protoLast = 2321

var protoAct = [...]int***REMOVED***
	31, 118, 117, 125, 8, 396, 8, 8, 488, 81,
	486, 414, 363, 288, 579, 421, 328, 107, 77, 79,
	80, 82, 84, 326, 317, 311, 8, 106, 105, 124,
	281, 228, 139, 26, 177, 593, 416, 591, 30, 525,
	555, 553, 85, 551, 541, 87, 88, 89, 364, 539,
	537, 535, 364, 531, 75, 364, 364, 364, 364, 533,
	524, 519, 512, 364, 364, 500, 364, 473, 364, 362,
	502, 405, 364, 560, 404, 329, 364, 364, 523, 397,
	364, 329, 364, 349, 364, 29, 329, 116, 94, 350,
	110, 348, 563, 109, 77, 320, 562, 584, 352, 349,
	178, 104, 550, 282, 529, 98, 349, 348, 530, 492,
	349, 293, 347, 103, 348, 493, 583, 477, 348, 302,
	346, 526, 503, 472, 388, 371, 365, 230, 511, 185,
	115, 339, 321, 93, 330, 310, 91, 314, 315, 344,
	330, 304, 306, 308, 14, 330, 285, 582, 605, 572,
	4, 15, 569, 566, 16, 17, 318, 17, 17, 558,
	367, 559, 14, 319, 316, 285, 582, 99, 97, 15,
	96, 95, 16, 17, 603, 597, 17, 17, 577, 576,
	178, 575, 570, 567, 564, 19, 18, 20, 21, 557,
	549, 286, 543, 515, 13, 507, 284, 581, 413, 340,
	595, 387, 318, 19, 18, 20, 21, 370, 369, 185,
	286, 323, 13, 342, 333, 284, 581, 324, 303, 287,
	102, 101, 100, 90, 86, 25, 547, 546, 504, 480,
	479, 478, 411, 410, 409, 408, 407, 337, 406, 394,
	368, 361, 325, 334, 335, 336, 92, 24, 482, 418,
	389, 366, 122, 11, 574, 11, 11, 230, 573, 332,
	338, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 120, 10, 11, 10, 10, 121, 9,
	518, 9, 9, 517, 282, 419, 516, 343, 29, 5,
	293, 300, 298, 23, 27, 28, 10, 29, 313, 499,
	498, 9, 299, 345, 353, 355, 356, 357, 358, 359,
	360, 341, 23, 297, 295, 497, 496, 495, 494, 481,
	351, 470, 313, 412, 296, 390, 29, 3, 283, 280,
	22, 12, 227, 179, 176, 391, 392, 393, 123, 327,
	312, 180, 386, 385, 128, 420, 137, 127, 424, 126,
	229, 109, 119, 293, 423, 289, 290, 427, 236, 134,
	429, 395, 237, 140, 183, 77, 402, 431, 239, 143,
	372, 422, 108, 292, 76, 578, 415, 7, 400, 398,
	6, 2, 1, 0, 0, 0, 0, 0, 0, 318,
	0, 417, 0, 0, 0, 0, 471, 0, 0, 474,
	109, 0, 293, 0, 0, 0, 476, 484, 0, 0,
	0, 0, 475, 0, 0, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 422, 501, 0, 0, 508, 509,
	0, 0, 0, 0, 426, 0, 506, 0, 0, 432,
	433, 434, 435, 436, 437, 17, 438, 439, 440, 441,
	0, 0, 510, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 428, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 514, 513, 425, 0, 0, 505, 521, 0,
	293, 430, 0, 522, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 527, 77, 109, 0, 532, 534, 536,
	538, 540, 542, 545, 0, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 552,
	554, 556, 0, 548, 0, 0, 565, 561, 0, 0,
	568, 0, 0, 0, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 302, 0, 586,
	302, 0, 588, 302, 0, 590, 0, 0, 0, 0,
	0, 0, 580, 0, 109, 109, 592, 594, 302, 0,
	302, 0, 302, 596, 598, 599, 604, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 0, 607, 302,
	487, 0, 29, 114, 111, 32, 33, 34, 35, 36,
	37, 38, 39, 40, 41, 42, 43, 44, 45, 46,
	47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
	57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 71, 72, 73, 74, 0, 0,
	0, 0, 110, 0, 0, 0, 0, 0, 0, 0,
	489, 113, 112, 0, 0, 0, 485, 29, 114, 111,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 0, 0, 0, 0, 110, 0, 0,
	0, 0, 0, 0, 0, 401, 113, 112, 0, 0,
	399, 29, 114, 111, 32, 33, 34, 35, 36, 37,
	38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
	48, 49, 50, 51, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 72, 73, 74, 0, 0, 0,
	0, 110, 0, 0, 0, 0, 0, 0, 0, 489,
	113, 112, 29, 114, 111, 32, 33, 34, 35, 36,
	37, 38, 39, 40, 41, 42, 43, 44, 45, 46,
	47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
	57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 71, 72, 73, 74, 0, 0,
	0, 0, 110, 0, 0, 0, 0, 0, 528, 0,
	0, 113, 112, 32, 33, 34, 35, 36, 37, 38,
	39, 40, 41, 42, 43, 44, 45, 46, 47, 48,
	49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
	59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 71, 72, 73, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 491,
	0, 0, 0, 294, 32, 33, 34, 35, 36, 37,
	38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
	48, 49, 50, 51, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 72, 73, 74, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 294, 32, 33, 34, 35, 36,
	37, 38, 39, 40, 41, 42, 43, 44, 45, 46,
	47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
	57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 71, 72, 73, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 294, 32, 33, 34, 35,
	36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
	46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 72, 73, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 32, 33, 34,
	35, 36, 37, 38, 39, 40, 41, 42, 43, 44,
	45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
	55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 130, 0, 0, 0, 78, 144, 145, 146, 147,
	148, 149, 17, 150, 151, 152, 153, 133, 132, 131,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 136, 142, 135, 170,
	171, 138, 19, 18, 20, 172, 173, 174, 175, 0,
	0, 129, 0, 0, 608, 130, 0, 0, 141, 0,
	144, 145, 146, 147, 148, 149, 17, 150, 151, 152,
	153, 133, 132, 131, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	136, 142, 135, 170, 171, 138, 19, 18, 20, 172,
	173, 174, 175, 0, 0, 129, 0, 0, 606, 130,
	0, 0, 141, 0, 144, 145, 146, 147, 148, 149,
	17, 150, 151, 152, 153, 133, 132, 131, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 136, 142, 135, 170, 171, 138,
	19, 18, 20, 172, 173, 174, 175, 0, 0, 129,
	0, 0, 602, 130, 0, 0, 141, 0, 144, 145,
	146, 147, 148, 149, 17, 150, 151, 152, 153, 133,
	132, 131, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 136, 142,
	135, 170, 171, 138, 19, 18, 20, 172, 173, 174,
	175, 0, 0, 129, 0, 0, 601, 130, 0, 0,
	141, 0, 144, 145, 146, 147, 148, 149, 17, 150,
	151, 152, 153, 133, 132, 131, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 136, 142, 135, 170, 171, 138, 19, 18,
	20, 172, 173, 174, 175, 0, 0, 129, 0, 0,
	600, 130, 0, 0, 141, 0, 144, 145, 146, 147,
	148, 149, 17, 150, 151, 152, 153, 133, 132, 131,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 136, 142, 135, 170,
	171, 138, 19, 18, 20, 172, 173, 174, 175, 0,
	0, 129, 0, 0, 589, 130, 0, 0, 141, 0,
	144, 145, 146, 147, 148, 149, 17, 150, 151, 152,
	153, 133, 132, 131, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	136, 142, 135, 170, 171, 138, 19, 18, 20, 172,
	173, 174, 175, 0, 0, 129, 0, 0, 587, 130,
	0, 0, 141, 0, 144, 145, 146, 147, 148, 149,
	17, 150, 151, 152, 153, 133, 132, 131, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 136, 142, 135, 170, 171, 138,
	19, 18, 20, 172, 173, 174, 175, 0, 0, 129,
	0, 0, 585, 232, 0, 0, 141, 0, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 235,
	234, 233, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274, 275, 276, 277, 278,
	279, 0, 0, 231, 0, 0, 331, 130, 0, 0,
	238, 0, 144, 145, 146, 147, 148, 149, 17, 150,
	151, 152, 153, 133, 132, 131, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 136, 142, 135, 170, 171, 138, 19, 18,
	20, 172, 173, 174, 175, 0, 0, 129, 0, 0,
	301, 130, 0, 0, 141, 0, 144, 145, 146, 147,
	148, 149, 17, 150, 151, 152, 153, 133, 132, 131,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 136, 142, 135, 170,
	171, 138, 19, 18, 20, 172, 173, 174, 175, 0,
	0, 129, 0, 0, 232, 0, 0, 0, 141, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	235, 234, 233, 251, 252, 253, 254, 255, 256, 257,
	258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 272, 273, 274, 275, 276, 277,
	278, 279, 0, 0, 231, 0, 0, 354, 0, 0,
	0, 238, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
	50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
	60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
	70, 71, 72, 73, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 83, 32, 33, 34, 35, 36,
	37, 38, 39, 40, 41, 42, 43, 44, 45, 46,
	47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
	57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 71, 72, 73, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 83, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
	54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 68, 69, 70, 71, 72, 483,
	74, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	83, 32, 33, 34, 35, 36, 37, 38, 39, 40,
	41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
	51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
	309, 62, 63, 64, 65, 66, 67, 68, 69, 70,
	71, 72, 73, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 83, 32, 33, 34, 35, 36, 37,
	38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
	48, 49, 50, 51, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 307, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 72, 73, 74, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 83, 32, 33, 34,
	35, 36, 37, 38, 39, 40, 41, 42, 43, 44,
	45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
	55, 56, 57, 58, 59, 60, 305, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	0, 0, 0, 0, 0, 426, 0, 0, 0, 83,
	432, 433, 434, 435, 436, 437, 17, 438, 439, 440,
	441, 0, 0, 0, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 428,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 0, 425, 0, 0, 182, 0,
	0, 0, 430, 186, 187, 188, 189, 190, 191, 17,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 184, 220,
	221, 222, 223, 224, 225, 226, 0, 182, 181, 0,
	0, 322, 186, 187, 188, 189, 190, 191, 17, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 184, 220, 221,
	222, 223, 224, 225, 226, 0, 0, 181, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
	54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
	74,
***REMOVED***

var protoPact = [...]int***REMOVED***
	142, -1000, 160, 160, 196, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 173, 284, 2271, 1100, 2271, 2271,
	1858, 2271, 160, -1000, 322, -1000, 172, 322, 322, 322,
	171, 77, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 195, 74, -1000, 1858, 117,
	116, 114, -1000, 2271, 113, 170, -1000, 169, 168, -1000,
	-1000, 2271, 798, 1100, 21, 1699, 2225, 1752, -1000, 163,
	-1000, -1000, -1000, -1000, 167, -1000, -1000, -1000, -1000, -1000,
	1039, -1000, 308, 286, -1000, -1000, -1000, 1645, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	166, 2070, 2017, 1964, 2271, 317, 2271, 2271, 293, -1000,
	-1000, 2271, 33, 73, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2176, -1000, -1000, -1000,
	-1000, -1000, 165, 191, 81, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1591, -1000, -1000,
	-1000, -1000, 162, 2070, 2017, 1964, 2271, -1000, 2271, 72,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	144, -1000, -1000, -1000, -1000, 161, 2271, -1000, 84, 1039,
	60, 58, 36, -1000, 1805, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2271, 2271, 2271, 2271, 2271, 2271,
	190, 17, 66, 211, 106, 189, 156, 155, 65, -1000,
	238, 2271, -1000, -1000, -1000, 70, 149, 64, 210, -1000,
	320, -1000, -1000, -1000, 2271, 2271, 2271, 188, -1000, 2271,
	-1000, -1000, -1000, 14, -1000, -1000, -1000, -1000, -1000, -1000,
	673, -1000, 978, 6, 3, 187, 185, 184, 183, 182,
	181, 318, -1000, 146, 1100, 317, 244, 2123, 316, -1000,
	-1000, 322, 63, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 15, -1000, 70, 76,
	-1000, 180, 179, 178, 314, -1000, 199, 1911, -1000, 608,
	-1000, 917, 48, 54, -1000, -1000, 313, 312, 311, 310,
	295, 294, 13, -1000, 2, 62, 177, -1000, -1000, -1000,
	432, -1000, -1000, -1000, -1000, -1000, 143, 2271, 2271, -1000,
	2271, 69, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	10, -1000, 1858, -1000, 141, -1000, -1000, -1000, 281, 278,
	275, 9, 14, 1858, 12, -1000, -8, -29, 61, 856,
	43, 47, -1000, -1000, 1, 5, -1, -4, -3, -10,
	-1000, 140, -1000, 1100, 798, -1000, -1000, -1000, 176, 175,
	-1000, 2271, -1000, 138, 41, -1000, -9, -11, -12, -1000,
	137, 107, 7, -1000, -1000, -1000, 737, 35, 31, -1000,
	-1000, -1000, 132, 1699, 99, -1000, 131, 1699, 98, -1000,
	130, 1699, 95, -1000, -1000, -1000, 253, 249, -1000, -1000,
	-1000, -1000, 129, -1000, 127, -1000, 126, -1000, -1000, 164,
	-1000, -1000, 56, 37, -1000, 1537, 1699, -1000, 1483, 1699,
	-1000, 1429, 1699, -15, -19, -1000, -1000, -1000, 145, -1000,
	-1000, -1000, 123, 737, 737, -1000, 1375, -1000, 1321, -1000,
	1267, -1000, 122, 1699, 94, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1213, 1699, -1000, 1159, -1000,
***REMOVED***

var protoPgo = [...]int***REMOVED***
	0, 382, 381, 289, 327, 380, 377, 3, 376, 11,
	14, 375, 374, 373, 36, 12, 8, 28, 27, 372,
	16, 0, 370, 369, 368, 367, 364, 21, 363, 362,
	360, 9, 359, 358, 357, 10, 356, 355, 13, 354,
	352, 350, 349, 29, 348, 347, 346, 278, 1, 2,
	15, 345, 24, 344, 341, 32, 340, 339, 25, 23,
	338, 273, 34, 334, 333, 252, 31, 332, 17, 331,
	30, 329, 328, 5,
***REMOVED***

var protoR1 = [...]int***REMOVED***
	0, 1, 1, 1, 1, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 5, 5,
	5, 6, 27, 27, 28, 28, 29, 29, 30, 30,
	7, 14, 14, 12, 12, 16, 16, 17, 17, 17,
	19, 19, 19, 19, 19, 19, 19, 19, 68, 68,
	18, 38, 38, 38, 37, 37, 37, 37, 37, 37,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	13, 13, 13, 35, 35, 35, 35, 35, 35, 31,
	31, 32, 32, 33, 33, 34, 34, 40, 40, 40,
	40, 40, 40, 40, 40, 41, 41, 41, 41, 41,
	41, 41, 41, 15, 9, 9, 8, 43, 43, 43,
	43, 43, 43, 42, 51, 51, 51, 50, 50, 50,
	50, 50, 50, 39, 39, 44, 44, 45, 45, 46,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 60, 60, 58, 58, 56, 56, 56, 59,
	59, 57, 57, 57, 20, 20, 53, 53, 54, 54,
	55, 52, 52, 61, 63, 63, 63, 62, 62, 62,
	62, 62, 62, 64, 64, 47, 49, 49, 49, 48,
	48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 65, 67, 67, 67, 66, 66, 66, 66,
	66, 69, 71, 71, 71, 70, 70, 70, 70, 70,
	72, 72, 73, 73, 11, 11, 11, 10, 10, 10,
	10, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21,
***REMOVED***

var protoR2 = [...]int***REMOVED***
	0, 1, 1, 2, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 4, 3, 4,
	4, 3, 1, 3, 1, 3, 1, 3, 1, 3,
	5, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 1, 2, 2, 1, 2,
	3, 1, 2, 0, 1, 2, 2, 2, 2, 1,
	3, 4, 5, 5, 3, 2, 5, 4, 5, 4,
	1, 3, 3, 1, 3, 3, 5, 3, 5, 1,
	2, 1, 2, 1, 2, 1, 2, 6, 6, 6,
	7, 7, 7, 5, 6, 6, 6, 6, 7, 7,
	7, 5, 6, 3, 1, 3, 3, 8, 8, 8,
	9, 9, 9, 5, 2, 1, 0, 1, 1, 1,
	1, 2, 1, 5, 6, 7, 8, 5, 6, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 1, 3, 1, 3, 3, 1,
	3, 1, 3, 3, 1, 2, 3, 1, 3, 1,
	3, 1, 3, 5, 2, 1, 0, 1, 1, 1,
	1, 2, 1, 4, 5, 5, 2, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 5, 2, 1, 0, 1, 1, 1, 2,
	1, 5, 2, 1, 0, 1, 1, 1, 2, 1,
	6, 8, 4, 3, 2, 1, 0, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
***REMOVED***

var protoChk = [...]int***REMOVED***
	-1000, -1, -2, -4, 8, -3, -5, -6, -7, -47,
	-61, -65, -69, 52, 2, 9, 12, 13, 44, 43,
	45, 46, -4, -3, 51, 52, -68, 10, 11, 4,
	-27, -21, 7, 8, 9, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
	35, 36, 37, 38, 39, 40, 41, 42, 43, 44,
	45, 46, 47, 48, 49, -14, -12, -21, 65, -21,
	-21, -31, -27, 59, -21, -68, 52, -68, -68, -68,
	52, 59, 51, 59, -31, 54, 54, 54, -27, 54,
	52, 52, 52, -27, -16, -17, -18, -68, -19, -21,
	54, 6, 64, 63, 5, -14, 66, -49, -48, -40,
	-61, -47, -65, -60, -43, -7, -42, -45, -53, 52,
	2, 20, 19, 18, -32, 39, 37, -46, 42, -55,
	-28, 59, 38, -23, 7, 8, 9, 10, 11, 12,
	14, 15, 16, 17, 21, 22, 23, 24, 25, 26,
	27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
	40, 41, 46, 47, 48, 49, -63, -62, -7, -64,
	-54, 52, 2, -26, 42, -55, 7, 8, 9, 10,
	11, 12, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	43, 44, 45, 46, 47, 48, 49, -67, -66, -41,
	-43, 52, 2, 20, 19, 18, -33, -29, 59, -24,
	7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
	17, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
	-71, -70, -7, -72, 52, 2, 47, 52, -38, -37,
	-36, 2, -13, -21, 67, 6, 16, 5, 6, 16,
	5, 55, -48, 52, -31, 36, -31, 36, -31, 36,
	-21, -58, -56, 5, -21, -21, -58, -52, -68, -27,
	62, 59, 55, -62, 52, 51, -59, -57, -20, 5,
	64, 55, -66, 52, -31, -31, -31, -21, -27, 59,
	55, -70, 52, -21, 55, -38, 60, 52, 60, 52,
	53, -18, 62, -31, 2, -21, -21, -21, -21, -21,
	-21, 51, 52, -15, 67, 60, 40, 54, 51, 52,
	52, 60, -22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -27, -20, 52, 60, 40,
	5, -21, -21, -21, 51, -27, -73, 65, -17, 67,
	-18, 62, -38, 2, 68, 68, 51, 51, 51, 51,
	51, 51, 5, 52, -9, -8, -14, -58, 5, 41,
	-51, -50, -7, -39, -44, 52, 2, -34, 36, -30,
	59, -25, 7, 8, 9, 10, 11, 12, 14, 15,
	16, 17, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 37, 38, 39,
	40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
	5, -52, 60, 52, -15, -59, -20, 41, 51, 51,
	51, 5, 49, 48, -31, 68, -35, 2, -16, 62,
	-38, 2, 61, 61, 5, 5, 5, 5, 5, 5,
	52, -15, 68, 60, 51, 55, -50, 52, -21, -21,
	-27, 59, 52, -15, -31, 52, 5, 5, 5, 52,
	-15, -73, -31, 66, 68, 68, 60, -38, 2, 61,
	61, 52, -15, 54, -15, 52, -15, 54, -15, 52,
	-15, 54, -15, 52, -9, -16, 51, 51, -27, 52,
	61, 52, -15, 52, -15, 52, -15, 52, 52, 54,
	66, -35, 61, 61, 52, -49, 54, 52, -49, 54,
	52, -49, 54, 5, 5, 52, 52, 52, -11, -10,
	-7, 52, 2, 60, 60, 55, -49, 55, -49, 55,
	-49, 52, -15, 54, -15, 55, -10, 52, -35, -35,
	55, 55, 55, 52, -49, 54, 55, -49, 55,
***REMOVED***

var protoDef = [...]int***REMOVED***
	-2, -2, -2, -2, 0, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 16, 0, 0, 0, 0, 0,
	0, 0, -2, 5, 0, 15, 0, 0, 0, 48,
	0, 22, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 0, 31, 33, 0, 0,
	0, 0, 79, 0, 0, 0, 18, 0, 0, 49,
	21, 0, 0, 0, 0, -2, -2, -2, 80, -2,
	17, 19, 20, 23, 0, 35, 36, 37, 38, 39,
	-2, 40, 0, 0, 45, 32, 34, 0, 177, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	81, 0, 247, 24, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 243, 244, 245, 246,
	248, 249, 250, 251, 252, 253, 0, 165, 167, 168,
	169, 170, 172, 0, 0, 159, 294, 295, 296, 297,
	298, 299, 300, 301, 302, 303, 304, 305, 306, 307,
	308, 309, 310, 311, 312, 313, 314, 315, 316, 317,
	318, 319, 320, 321, 322, 323, 324, 325, 326, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 194, 196,
	197, 198, 200, 0, 0, 0, 0, 83, 0, 26,
	254, 255, 256, 257, 258, 259, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271, 272, 273,
	274, 275, 276, 277, 278, 279, 280, 281, 282, 283,
	284, 285, 286, 287, 288, 289, 290, 291, 292, 293,
	0, 203, 205, 206, 207, 209, 0, 30, 0, -2,
	54, 59, 0, 70, 0, 41, 44, 47, 42, 43,
	46, 175, 176, 190, 0, 403, 0, 403, 0, 403,
	0, 0, 144, 146, 0, 0, 0, 0, 161, 82,
	0, 0, 163, 164, 171, 0, 0, 149, 151, 154,
	0, 192, 193, 199, 0, 0, 0, 0, 84, 0,
	201, 202, 208, 0, 50, 52, 55, 56, 57, 58,
	0, 65, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 142, 0, 0, 0, 0, -2, 0, 156,
	160, 0, 0, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 25, 0, 158, 0, 0,
	155, 0, 0, 0, 0, 27, 0, 0, 60, 0,
	64, -2, 0, 59, 71, 72, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 104, 0, 145, 147, 148,
	0, 115, 117, 118, 119, 120, 122, 0, 360, 85,
	0, 28, 335, 336, 337, 338, 339, 340, 341, 342,
	343, 344, 345, 346, 347, 348, 349, 350, 351, 352,
	353, 354, 355, 356, 357, 358, 359, 361, 362, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	0, 162, 0, 173, 0, 150, 152, 153, 0, 0,
	0, 0, 0, 415, 0, 61, 0, 0, 73, -2,
	0, 59, 67, 69, 0, 0, 0, 0, 0, 0,
	93, 0, 103, 0, 0, 113, 114, 121, 0, 0,
	86, 0, 127, 0, 0, 174, 0, 0, 0, 101,
	0, 0, 0, 213, 62, 63, 0, 0, 59, 66,
	68, 87, 0, -2, 0, 88, 0, -2, 0, 89,
	0, -2, 0, 94, 105, 106, 0, 0, 29, 128,
	129, 95, 0, 96, 0, 97, 0, 102, 210, -2,
	212, 74, 75, 77, 90, 0, -2, 91, 0, -2,
	92, 0, -2, 0, 0, 98, 99, 100, 0, 215,
	217, 218, 220, 0, 0, 107, 0, 108, 0, 109,
	0, 123, 0, -2, 0, 211, 214, 219, 76, 78,
	110, 111, 112, 124, 0, -2, 125, 0, 126,
***REMOVED***

var protoTok1 = [...]int***REMOVED***
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 76, 3, 74, 73, 72, 70, 3,
	65, 66, 69, 63, 60, 64, 59, 57, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 53, 52,
	62, 51, 61, 58, 75, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 67, 56, 68, 71, 3, 78, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 54, 3, 55, 77,
***REMOVED***

var protoTok2 = [...]int***REMOVED***
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50,
***REMOVED***

var protoTok3 = [...]int***REMOVED***
	0,
***REMOVED***

var protoErrorMessages = [...]struct ***REMOVED***
	state int
	token int
	msg   string
***REMOVED******REMOVED******REMOVED***

//line yaccpar:1

/*	parser for yacc output	*/

var (
	protoDebug        = 0
	protoErrorVerbose = false
)

type protoLexer interface ***REMOVED***
	Lex(lval *protoSymType) int
	Error(s string)
***REMOVED***

type protoParser interface ***REMOVED***
	Parse(protoLexer) int
	Lookahead() int
***REMOVED***

type protoParserImpl struct ***REMOVED***
	lval  protoSymType
	stack [protoInitialStackSize]protoSymType
	char  int
***REMOVED***

func (p *protoParserImpl) Lookahead() int ***REMOVED***
	return p.char
***REMOVED***

func protoNewParser() protoParser ***REMOVED***
	return &protoParserImpl***REMOVED******REMOVED***
***REMOVED***

const protoFlag = -1000

func protoTokname(c int) string ***REMOVED***
	if c >= 1 && c-1 < len(protoToknames) ***REMOVED***
		if protoToknames[c-1] != "" ***REMOVED***
			return protoToknames[c-1]
		***REMOVED***
	***REMOVED***
	return __yyfmt__.Sprintf("tok-%v", c)
***REMOVED***

func protoStatname(s int) string ***REMOVED***
	if s >= 0 && s < len(protoStatenames) ***REMOVED***
		if protoStatenames[s] != "" ***REMOVED***
			return protoStatenames[s]
		***REMOVED***
	***REMOVED***
	return __yyfmt__.Sprintf("state-%v", s)
***REMOVED***

func protoErrorMessage(state, lookAhead int) string ***REMOVED***
	const TOKSTART = 4

	if !protoErrorVerbose ***REMOVED***
		return "syntax error"
	***REMOVED***

	for _, e := range protoErrorMessages ***REMOVED***
		if e.state == state && e.token == lookAhead ***REMOVED***
			return "syntax error: " + e.msg
		***REMOVED***
	***REMOVED***

	res := "syntax error: unexpected " + protoTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := protoPact[state]
	for tok := TOKSTART; tok-1 < len(protoToknames); tok++ ***REMOVED***
		if n := base + tok; n >= 0 && n < protoLast && protoChk[protoAct[n]] == tok ***REMOVED***
			if len(expected) == cap(expected) ***REMOVED***
				return res
			***REMOVED***
			expected = append(expected, tok)
		***REMOVED***
	***REMOVED***

	if protoDef[state] == -2 ***REMOVED***
		i := 0
		for protoExca[i] != -1 || protoExca[i+1] != state ***REMOVED***
			i += 2
		***REMOVED***

		// Look for tokens that we accept or reduce.
		for i += 2; protoExca[i] >= 0; i += 2 ***REMOVED***
			tok := protoExca[i]
			if tok < TOKSTART || protoExca[i+1] == 0 ***REMOVED***
				continue
			***REMOVED***
			if len(expected) == cap(expected) ***REMOVED***
				return res
			***REMOVED***
			expected = append(expected, tok)
		***REMOVED***

		// If the default action is to accept or reduce, give up.
		if protoExca[i+1] != 0 ***REMOVED***
			return res
		***REMOVED***
	***REMOVED***

	for i, tok := range expected ***REMOVED***
		if i == 0 ***REMOVED***
			res += ", expecting "
		***REMOVED*** else ***REMOVED***
			res += " or "
		***REMOVED***
		res += protoTokname(tok)
	***REMOVED***
	return res
***REMOVED***

func protolex1(lex protoLexer, lval *protoSymType) (char, token int) ***REMOVED***
	token = 0
	char = lex.Lex(lval)
	if char <= 0 ***REMOVED***
		token = protoTok1[0]
		goto out
	***REMOVED***
	if char < len(protoTok1) ***REMOVED***
		token = protoTok1[char]
		goto out
	***REMOVED***
	if char >= protoPrivate ***REMOVED***
		if char < protoPrivate+len(protoTok2) ***REMOVED***
			token = protoTok2[char-protoPrivate]
			goto out
		***REMOVED***
	***REMOVED***
	for i := 0; i < len(protoTok3); i += 2 ***REMOVED***
		token = protoTok3[i+0]
		if token == char ***REMOVED***
			token = protoTok3[i+1]
			goto out
		***REMOVED***
	***REMOVED***

out:
	if token == 0 ***REMOVED***
		token = protoTok2[1] /* unknown char */
	***REMOVED***
	if protoDebug >= 3 ***REMOVED***
		__yyfmt__.Printf("lex %s(%d)\n", protoTokname(token), uint(char))
	***REMOVED***
	return char, token
***REMOVED***

func protoParse(protolex protoLexer) int ***REMOVED***
	return protoNewParser().Parse(protolex)
***REMOVED***

func (protorcvr *protoParserImpl) Parse(protolex protoLexer) int ***REMOVED***
	var proton int
	var protoVAL protoSymType
	var protoDollar []protoSymType
	_ = protoDollar // silence set and not used
	protoS := protorcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	protostate := 0
	protorcvr.char = -1
	prototoken := -1 // protorcvr.char translated into internal numbering
	defer func() ***REMOVED***
		// Make sure we report no lookahead when not parsing.
		protostate = -1
		protorcvr.char = -1
		prototoken = -1
	***REMOVED***()
	protop := -1
	goto protostack

ret0:
	return 0

ret1:
	return 1

protostack:
	/* put a state and value onto the stack */
	if protoDebug >= 4 ***REMOVED***
		__yyfmt__.Printf("char %v in %v\n", protoTokname(prototoken), protoStatname(protostate))
	***REMOVED***

	protop++
	if protop >= len(protoS) ***REMOVED***
		nyys := make([]protoSymType, len(protoS)*2)
		copy(nyys, protoS)
		protoS = nyys
	***REMOVED***
	protoS[protop] = protoVAL
	protoS[protop].yys = protostate

protonewstate:
	proton = protoPact[protostate]
	if proton <= protoFlag ***REMOVED***
		goto protodefault /* simple state */
	***REMOVED***
	if protorcvr.char < 0 ***REMOVED***
		protorcvr.char, prototoken = protolex1(protolex, &protorcvr.lval)
	***REMOVED***
	proton += prototoken
	if proton < 0 || proton >= protoLast ***REMOVED***
		goto protodefault
	***REMOVED***
	proton = protoAct[proton]
	if protoChk[proton] == prototoken ***REMOVED*** /* valid shift */
		protorcvr.char = -1
		prototoken = -1
		protoVAL = protorcvr.lval
		protostate = proton
		if Errflag > 0 ***REMOVED***
			Errflag--
		***REMOVED***
		goto protostack
	***REMOVED***

protodefault:
	/* default state action */
	proton = protoDef[protostate]
	if proton == -2 ***REMOVED***
		if protorcvr.char < 0 ***REMOVED***
			protorcvr.char, prototoken = protolex1(protolex, &protorcvr.lval)
		***REMOVED***

		/* look through exception table */
		xi := 0
		for ***REMOVED***
			if protoExca[xi+0] == -1 && protoExca[xi+1] == protostate ***REMOVED***
				break
			***REMOVED***
			xi += 2
		***REMOVED***
		for xi += 2; ; xi += 2 ***REMOVED***
			proton = protoExca[xi+0]
			if proton < 0 || proton == prototoken ***REMOVED***
				break
			***REMOVED***
		***REMOVED***
		proton = protoExca[xi+1]
		if proton < 0 ***REMOVED***
			goto ret0
		***REMOVED***
	***REMOVED***
	if proton == 0 ***REMOVED***
		/* error ... attempt to resume parsing */
		switch Errflag ***REMOVED***
		case 0: /* brand new error */
			protolex.Error(protoErrorMessage(protostate, prototoken))
			Nerrs++
			if protoDebug >= 1 ***REMOVED***
				__yyfmt__.Printf("%s", protoStatname(protostate))
				__yyfmt__.Printf(" saw %s\n", protoTokname(prototoken))
			***REMOVED***
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for protop >= 0 ***REMOVED***
				proton = protoPact[protoS[protop].yys] + protoErrCode
				if proton >= 0 && proton < protoLast ***REMOVED***
					protostate = protoAct[proton] /* simulate a shift of "error" */
					if protoChk[protostate] == protoErrCode ***REMOVED***
						goto protostack
					***REMOVED***
				***REMOVED***

				/* the current p has no shift on "error", pop stack */
				if protoDebug >= 2 ***REMOVED***
					__yyfmt__.Printf("error recovery pops state %d\n", protoS[protop].yys)
				***REMOVED***
				protop--
			***REMOVED***
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if protoDebug >= 2 ***REMOVED***
				__yyfmt__.Printf("error recovery discards %s\n", protoTokname(prototoken))
			***REMOVED***
			if prototoken == protoEofCode ***REMOVED***
				goto ret1
			***REMOVED***
			protorcvr.char = -1
			prototoken = -1
			goto protonewstate /* try again in the same state */
		***REMOVED***
	***REMOVED***

	/* reduction by production proton */
	if protoDebug >= 2 ***REMOVED***
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", proton, protoStatname(protostate))
	***REMOVED***

	protont := proton
	protopt := protop
	_ = protopt // guard against "declared and not used"

	protop -= protoR2[proton]
	// protop is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if protop+1 >= len(protoS) ***REMOVED***
		nyys := make([]protoSymType, len(protoS)*2)
		copy(nyys, protoS)
		protoS = nyys
	***REMOVED***
	protoVAL = protoS[protop+1]

	/* consult goto table to find next state */
	proton = protoR1[proton]
	protog := protoPgo[proton]
	protoj := protog + protoS[protop].yys + 1

	if protoj >= protoLast ***REMOVED***
		protostate = protoAct[protog]
	***REMOVED*** else ***REMOVED***
		protostate = protoAct[protoj]
		if protoChk[protostate] != -proton ***REMOVED***
			protostate = protoAct[protog]
		***REMOVED***
	***REMOVED***
	// dummy call; replaced with literal code
	switch protont ***REMOVED***

	case 1:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:143
		***REMOVED***
			protoVAL.file = ast.NewFileNode(protoDollar[1].syn, nil)
			protolex.(*protoLex).res = protoVAL.file
		***REMOVED***
	case 2:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:147
		***REMOVED***
			protoVAL.file = ast.NewFileNode(nil, protoDollar[1].fileDecls)
			protolex.(*protoLex).res = protoVAL.file
		***REMOVED***
	case 3:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:151
		***REMOVED***
			protoVAL.file = ast.NewFileNode(protoDollar[1].syn, protoDollar[2].fileDecls)
			protolex.(*protoLex).res = protoVAL.file
		***REMOVED***
	case 4:
		protoDollar = protoS[protopt-0 : protopt+1]
//line proto.y:155
		***REMOVED***
		***REMOVED***
	case 5:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:158
		***REMOVED***
			if protoDollar[2].fileDecl != nil ***REMOVED***
				protoVAL.fileDecls = append(protoDollar[1].fileDecls, protoDollar[2].fileDecl)
			***REMOVED*** else ***REMOVED***
				protoVAL.fileDecls = protoDollar[1].fileDecls
			***REMOVED***
		***REMOVED***
	case 6:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:165
		***REMOVED***
			if protoDollar[1].fileDecl != nil ***REMOVED***
				protoVAL.fileDecls = []ast.FileElement***REMOVED***protoDollar[1].fileDecl***REMOVED***
			***REMOVED*** else ***REMOVED***
				protoVAL.fileDecls = nil
			***REMOVED***
		***REMOVED***
	case 7:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:173
		***REMOVED***
			protoVAL.fileDecl = protoDollar[1].imprt
		***REMOVED***
	case 8:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:176
		***REMOVED***
			protoVAL.fileDecl = protoDollar[1].pkg
		***REMOVED***
	case 9:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:179
		***REMOVED***
			protoVAL.fileDecl = protoDollar[1].opt
		***REMOVED***
	case 10:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:182
		***REMOVED***
			protoVAL.fileDecl = protoDollar[1].msg
		***REMOVED***
	case 11:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:185
		***REMOVED***
			protoVAL.fileDecl = protoDollar[1].en
		***REMOVED***
	case 12:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:188
		***REMOVED***
			protoVAL.fileDecl = protoDollar[1].extend
		***REMOVED***
	case 13:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:191
		***REMOVED***
			protoVAL.fileDecl = protoDollar[1].svc
		***REMOVED***
	case 14:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:194
		***REMOVED***
			protoVAL.fileDecl = ast.NewEmptyDeclNode(protoDollar[1].b)
		***REMOVED***
	case 15:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:197
		***REMOVED***
			protoVAL.fileDecl = nil
		***REMOVED***
	case 16:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:200
		***REMOVED***
			protoVAL.fileDecl = nil
		***REMOVED***
	case 17:
		protoDollar = protoS[protopt-4 : protopt+1]
//line proto.y:204
		***REMOVED***
			protoVAL.syn = ast.NewSyntaxNode(protoDollar[1].id.ToKeyword(), protoDollar[2].b, protoDollar[3].str.toStringValueNode(), protoDollar[4].b)
		***REMOVED***
	case 18:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:208
		***REMOVED***
			protoVAL.imprt = ast.NewImportNode(protoDollar[1].id.ToKeyword(), nil, nil, protoDollar[2].str.toStringValueNode(), protoDollar[3].b)
		***REMOVED***
	case 19:
		protoDollar = protoS[protopt-4 : protopt+1]
//line proto.y:211
		***REMOVED***
			protoVAL.imprt = ast.NewImportNode(protoDollar[1].id.ToKeyword(), nil, protoDollar[2].id.ToKeyword(), protoDollar[3].str.toStringValueNode(), protoDollar[4].b)
		***REMOVED***
	case 20:
		protoDollar = protoS[protopt-4 : protopt+1]
//line proto.y:214
		***REMOVED***
			protoVAL.imprt = ast.NewImportNode(protoDollar[1].id.ToKeyword(), protoDollar[2].id.ToKeyword(), nil, protoDollar[3].str.toStringValueNode(), protoDollar[4].b)
		***REMOVED***
	case 21:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:218
		***REMOVED***
			protoVAL.pkg = ast.NewPackageNode(protoDollar[1].id.ToKeyword(), protoDollar[2].cid.toIdentValueNode(nil), protoDollar[3].b)
		***REMOVED***
	case 22:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:222
		***REMOVED***
			protoVAL.cid = &identList***REMOVED***protoDollar[1].id, nil, nil***REMOVED***
		***REMOVED***
	case 23:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:225
		***REMOVED***
			protoVAL.cid = &identList***REMOVED***protoDollar[1].id, protoDollar[2].b, protoDollar[3].cid***REMOVED***
		***REMOVED***
	case 24:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:233
		***REMOVED***
			protoVAL.cid = &identList***REMOVED***protoDollar[1].id, nil, nil***REMOVED***
		***REMOVED***
	case 25:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:236
		***REMOVED***
			protoVAL.cid = &identList***REMOVED***protoDollar[1].id, protoDollar[2].b, protoDollar[3].cid***REMOVED***
		***REMOVED***
	case 26:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:240
		***REMOVED***
			protoVAL.cid = &identList***REMOVED***protoDollar[1].id, nil, nil***REMOVED***
		***REMOVED***
	case 27:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:243
		***REMOVED***
			protoVAL.cid = &identList***REMOVED***protoDollar[1].id, protoDollar[2].b, protoDollar[3].cid***REMOVED***
		***REMOVED***
	case 28:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:247
		***REMOVED***
			protoVAL.cid = &identList***REMOVED***protoDollar[1].id, nil, nil***REMOVED***
		***REMOVED***
	case 29:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:250
		***REMOVED***
			protoVAL.cid = &identList***REMOVED***protoDollar[1].id, protoDollar[2].b, protoDollar[3].cid***REMOVED***
		***REMOVED***
	case 30:
		protoDollar = protoS[protopt-5 : protopt+1]
//line proto.y:254
		***REMOVED***
			refs, dots := protoDollar[2].optNms.toNodes()
			optName := ast.NewOptionNameNode(refs, dots)
			protoVAL.opt = ast.NewOptionNode(protoDollar[1].id.ToKeyword(), optName, protoDollar[3].b, protoDollar[4].v, protoDollar[5].b)
		***REMOVED***
	case 31:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:260
		***REMOVED***
			protoVAL.optNms = &fieldRefList***REMOVED***protoDollar[1].ref, nil, nil***REMOVED***
		***REMOVED***
	case 32:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:263
		***REMOVED***
			protoVAL.optNms = &fieldRefList***REMOVED***protoDollar[1].ref, protoDollar[2].b, protoDollar[3].optNms***REMOVED***
		***REMOVED***
	case 33:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:267
		***REMOVED***
			protoVAL.ref = ast.NewFieldReferenceNode(protoDollar[1].id)
		***REMOVED***
	case 34:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:270
		***REMOVED***
			protoVAL.ref = ast.NewExtensionFieldReferenceNode(protoDollar[1].b, protoDollar[2].tid, protoDollar[3].b)
		***REMOVED***
	case 37:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:277
		***REMOVED***
			protoVAL.v = protoDollar[1].str.toStringValueNode()
		***REMOVED***
	case 39:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:281
		***REMOVED***
			if protoDollar[1].id.Val == "true" || protoDollar[1].id.Val == "false" ***REMOVED***
				protoVAL.v = ast.NewBoolLiteralNode(protoDollar[1].id.ToKeyword())
			***REMOVED*** else if protoDollar[1].id.Val == "inf" || protoDollar[1].id.Val == "nan" ***REMOVED***
				protoVAL.v = ast.NewSpecialFloatLiteralNode(protoDollar[1].id.ToKeyword())
			***REMOVED*** else ***REMOVED***
				protoVAL.v = protoDollar[1].id
			***REMOVED***
		***REMOVED***
	case 40:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:291
		***REMOVED***
			protoVAL.v = protoDollar[1].f
		***REMOVED***
	case 41:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:294
		***REMOVED***
			protoVAL.v = ast.NewSignedFloatLiteralNode(protoDollar[1].b, protoDollar[2].f)
		***REMOVED***
	case 42:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:297
		***REMOVED***
			protoVAL.v = ast.NewSignedFloatLiteralNode(protoDollar[1].b, protoDollar[2].f)
		***REMOVED***
	case 43:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:300
		***REMOVED***
			f := ast.NewSpecialFloatLiteralNode(protoDollar[2].id.ToKeyword())
			protoVAL.v = ast.NewSignedFloatLiteralNode(protoDollar[1].b, f)
		***REMOVED***
	case 44:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:304
		***REMOVED***
			f := ast.NewSpecialFloatLiteralNode(protoDollar[2].id.ToKeyword())
			protoVAL.v = ast.NewSignedFloatLiteralNode(protoDollar[1].b, f)
		***REMOVED***
	case 45:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:308
		***REMOVED***
			protoVAL.v = protoDollar[1].i
		***REMOVED***
	case 46:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:311
		***REMOVED***
			protoVAL.v = ast.NewPositiveUintLiteralNode(protoDollar[1].b, protoDollar[2].i)
		***REMOVED***
	case 47:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:314
		***REMOVED***
			if protoDollar[2].i.Val > math.MaxInt64+1 ***REMOVED***
				// can't represent as int so treat as float literal
				protoVAL.v = ast.NewSignedFloatLiteralNode(protoDollar[1].b, protoDollar[2].i)
			***REMOVED*** else ***REMOVED***
				protoVAL.v = ast.NewNegativeIntLiteralNode(protoDollar[1].b, protoDollar[2].i)
			***REMOVED***
		***REMOVED***
	case 48:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:323
		***REMOVED***
			protoVAL.str = &stringList***REMOVED***protoDollar[1].s, nil***REMOVED***
		***REMOVED***
	case 49:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:326
		***REMOVED***
			protoVAL.str = &stringList***REMOVED***protoDollar[1].s, protoDollar[2].str***REMOVED***
		***REMOVED***
	case 50:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:330
		***REMOVED***
			fields, delims := protoDollar[2].msgLit.toNodes()
			protoVAL.v = ast.NewMessageLiteralNode(protoDollar[1].b, fields, delims, protoDollar[3].b)
		***REMOVED***
	case 51:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:335
		***REMOVED***
			if protoDollar[1].msgEntry != nil ***REMOVED***
				protoVAL.msgLit = &messageFieldList***REMOVED***protoDollar[1].msgEntry, nil***REMOVED***
			***REMOVED*** else ***REMOVED***
				protoVAL.msgLit = nil
			***REMOVED***
		***REMOVED***
	case 52:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:342
		***REMOVED***
			if protoDollar[1].msgEntry != nil ***REMOVED***
				protoVAL.msgLit = &messageFieldList***REMOVED***protoDollar[1].msgEntry, protoDollar[2].msgLit***REMOVED***
			***REMOVED*** else ***REMOVED***
				protoVAL.msgLit = protoDollar[2].msgLit
			***REMOVED***
		***REMOVED***
	case 53:
		protoDollar = protoS[protopt-0 : protopt+1]
//line proto.y:349
		***REMOVED***
			protoVAL.msgLit = nil
		***REMOVED***
	case 54:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:353
		***REMOVED***
			if protoDollar[1].msgField != nil ***REMOVED***
				protoVAL.msgEntry = &messageFieldEntry***REMOVED***protoDollar[1].msgField, nil***REMOVED***
			***REMOVED*** else ***REMOVED***
				protoVAL.msgEntry = nil
			***REMOVED***
		***REMOVED***
	case 55:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:360
		***REMOVED***
			if protoDollar[1].msgField != nil ***REMOVED***
				protoVAL.msgEntry = &messageFieldEntry***REMOVED***protoDollar[1].msgField, protoDollar[2].b***REMOVED***
			***REMOVED*** else ***REMOVED***
				protoVAL.msgEntry = nil
			***REMOVED***
		***REMOVED***
	case 56:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:367
		***REMOVED***
			if protoDollar[1].msgField != nil ***REMOVED***
				protoVAL.msgEntry = &messageFieldEntry***REMOVED***protoDollar[1].msgField, protoDollar[2].b***REMOVED***
			***REMOVED*** else ***REMOVED***
				protoVAL.msgEntry = nil
			***REMOVED***
		***REMOVED***
	case 57:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:374
		***REMOVED***
			protoVAL.msgEntry = nil
		***REMOVED***
	case 58:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:377
		***REMOVED***
			protoVAL.msgEntry = nil
		***REMOVED***
	case 59:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:380
		***REMOVED***
			protoVAL.msgEntry = nil
		***REMOVED***
	case 60:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:384
		***REMOVED***
			if protoDollar[1].ref != nil ***REMOVED***
				protoVAL.msgField = ast.NewMessageFieldNode(protoDollar[1].ref, protoDollar[2].b, protoDollar[3].v)
			***REMOVED*** else ***REMOVED***
				protoVAL.msgField = nil
			***REMOVED***
		***REMOVED***
	case 61:
		protoDollar = protoS[protopt-4 : protopt+1]
//line proto.y:391
		***REMOVED***
			if protoDollar[1].ref != nil ***REMOVED***
				val := ast.NewArrayLiteralNode(protoDollar[3].b, nil, nil, protoDollar[4].b)
				protoVAL.msgField = ast.NewMessageFieldNode(protoDollar[1].ref, protoDollar[2].b, val)
			***REMOVED*** else ***REMOVED***
				protoVAL.msgField = nil
			***REMOVED***
		***REMOVED***
	case 62:
		protoDollar = protoS[protopt-5 : protopt+1]
//line proto.y:399
		***REMOVED***
			if protoDollar[1].ref != nil ***REMOVED***
				vals, commas := protoDollar[4].sl.toNodes()
				val := ast.NewArrayLiteralNode(protoDollar[3].b, vals, commas, protoDollar[5].b)
				protoVAL.msgField = ast.NewMessageFieldNode(protoDollar[1].ref, protoDollar[2].b, val)
			***REMOVED*** else ***REMOVED***
				protoVAL.msgField = nil
			***REMOVED***
		***REMOVED***
	case 63:
		protoDollar = protoS[protopt-5 : protopt+1]
//line proto.y:408
		***REMOVED***
			protoVAL.msgField = nil
		***REMOVED***
	case 64:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:411
		***REMOVED***
			if protoDollar[1].ref != nil ***REMOVED***
				protoVAL.msgField = ast.NewMessageFieldNode(protoDollar[1].ref, protoDollar[2].b, protoDollar[3].v)
			***REMOVED*** else ***REMOVED***
				protoVAL.msgField = nil
			***REMOVED***
		***REMOVED***
	case 65:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:418
		***REMOVED***
			if protoDollar[1].ref != nil ***REMOVED***
				protoVAL.msgField = ast.NewMessageFieldNode(protoDollar[1].ref, nil, protoDollar[2].v)
			***REMOVED*** else ***REMOVED***
				protoVAL.msgField = nil
			***REMOVED***
		***REMOVED***
	case 66:
		protoDollar = protoS[protopt-5 : protopt+1]
//line proto.y:425
		***REMOVED***
			if protoDollar[1].ref != nil ***REMOVED***
				fields, delims := protoDollar[4].msgLit.toNodes()
				msg := ast.NewMessageLiteralNode(protoDollar[3].b, fields, delims, protoDollar[5].b)
				protoVAL.msgField = ast.NewMessageFieldNode(protoDollar[1].ref, protoDollar[2].b, msg)
			***REMOVED*** else ***REMOVED***
				protoVAL.msgField = nil
			***REMOVED***
		***REMOVED***
	case 67:
		protoDollar = protoS[protopt-4 : protopt+1]
//line proto.y:434
		***REMOVED***
			if protoDollar[1].ref != nil ***REMOVED***
				fields, delims := protoDollar[3].msgLit.toNodes()
				msg := ast.NewMessageLiteralNode(protoDollar[2].b, fields, delims, protoDollar[4].b)
				protoVAL.msgField = ast.NewMessageFieldNode(protoDollar[1].ref, nil, msg)
			***REMOVED*** else ***REMOVED***
				protoVAL.msgField = nil
			***REMOVED***
		***REMOVED***
	case 68:
		protoDollar = protoS[protopt-5 : protopt+1]
//line proto.y:443
		***REMOVED***
			protoVAL.msgField = nil
		***REMOVED***
	case 69:
		protoDollar = protoS[protopt-4 : protopt+1]
//line proto.y:446
		***REMOVED***
			protoVAL.msgField = nil
		***REMOVED***
	case 70:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:450
		***REMOVED***
			protoVAL.ref = ast.NewFieldReferenceNode(protoDollar[1].id)
		***REMOVED***
	case 71:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:453
		***REMOVED***
			protoVAL.ref = ast.NewExtensionFieldReferenceNode(protoDollar[1].b, protoDollar[2].tid, protoDollar[3].b)
		***REMOVED***
	case 72:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:456
		***REMOVED***
			protoVAL.ref = nil
		***REMOVED***
	case 73:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:460
		***REMOVED***
			protoVAL.sl = &valueList***REMOVED***protoDollar[1].v, nil, nil***REMOVED***
		***REMOVED***
	case 74:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:463
		***REMOVED***
			protoVAL.sl = &valueList***REMOVED***protoDollar[1].v, protoDollar[2].b, protoDollar[3].sl***REMOVED***
		***REMOVED***
	case 75:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:466
		***REMOVED***
			fields, delims := protoDollar[2].msgLit.toNodes()
			msg := ast.NewMessageLiteralNode(protoDollar[1].b, fields, delims, protoDollar[3].b)
			protoVAL.sl = &valueList***REMOVED***msg, nil, nil***REMOVED***
		***REMOVED***
	case 76:
		protoDollar = protoS[protopt-5 : protopt+1]
//line proto.y:471
		***REMOVED***
			fields, delims := protoDollar[2].msgLit.toNodes()
			msg := ast.NewMessageLiteralNode(protoDollar[1].b, fields, delims, protoDollar[3].b)
			protoVAL.sl = &valueList***REMOVED***msg, protoDollar[4].b, protoDollar[5].sl***REMOVED***
		***REMOVED***
	case 77:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:476
		***REMOVED***
			protoVAL.sl = nil
		***REMOVED***
	case 78:
		protoDollar = protoS[protopt-5 : protopt+1]
//line proto.y:479
		***REMOVED***
			protoVAL.sl = protoDollar[5].sl
		***REMOVED***
	case 79:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:483
		***REMOVED***
			protoVAL.tid = protoDollar[1].cid.toIdentValueNode(nil)
		***REMOVED***
	case 80:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:486
		***REMOVED***
			protoVAL.tid = protoDollar[2].cid.toIdentValueNode(protoDollar[1].b)
		***REMOVED***
	case 81:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:490
		***REMOVED***
			protoVAL.tid = protoDollar[1].cid.toIdentValueNode(nil)
		***REMOVED***
	case 82:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:493
		***REMOVED***
			protoVAL.tid = protoDollar[2].cid.toIdentValueNode(protoDollar[1].b)
		***REMOVED***
	case 83:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:497
		***REMOVED***
			protoVAL.tid = protoDollar[1].cid.toIdentValueNode(nil)
		***REMOVED***
	case 84:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:500
		***REMOVED***
			protoVAL.tid = protoDollar[2].cid.toIdentValueNode(protoDollar[1].b)
		***REMOVED***
	case 85:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:504
		***REMOVED***
			protoVAL.tid = protoDollar[1].cid.toIdentValueNode(nil)
		***REMOVED***
	case 86:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:507
		***REMOVED***
			protoVAL.tid = protoDollar[2].cid.toIdentValueNode(protoDollar[1].b)
		***REMOVED***
	case 87:
		protoDollar = protoS[protopt-6 : protopt+1]
//line proto.y:511
		***REMOVED***
			protoVAL.fld = ast.NewFieldNode(protoDollar[1].id.ToKeyword(), protoDollar[2].tid, protoDollar[3].id, protoDollar[4].b, protoDollar[5].i, nil, protoDollar[6].b)
		***REMOVED***
	case 88:
		protoDollar = protoS[protopt-6 : protopt+1]
//line proto.y:514
		***REMOVED***
			protoVAL.fld = ast.NewFieldNode(protoDollar[1].id.ToKeyword(), protoDollar[2].tid, protoDollar[3].id, protoDollar[4].b, protoDollar[5].i, nil, protoDollar[6].b)
		***REMOVED***
	case 89:
		protoDollar = protoS[protopt-6 : protopt+1]
//line proto.y:517
		***REMOVED***
			protoVAL.fld = ast.NewFieldNode(protoDollar[1].id.ToKeyword(), protoDollar[2].tid, protoDollar[3].id, protoDollar[4].b, protoDollar[5].i, nil, protoDollar[6].b)
		***REMOVED***
	case 90:
		protoDollar = protoS[protopt-7 : protopt+1]
//line proto.y:520
		***REMOVED***
			protoVAL.fld = ast.NewFieldNode(protoDollar[1].id.ToKeyword(), protoDollar[2].tid, protoDollar[3].id, protoDollar[4].b, protoDollar[5].i, protoDollar[6].cmpctOpts, protoDollar[7].b)
		***REMOVED***
	case 91:
		protoDollar = protoS[protopt-7 : protopt+1]
//line proto.y:523
		***REMOVED***
			protoVAL.fld = ast.NewFieldNode(protoDollar[1].id.ToKeyword(), protoDollar[2].tid, protoDollar[3].id, protoDollar[4].b, protoDollar[5].i, protoDollar[6].cmpctOpts, protoDollar[7].b)
		***REMOVED***
	case 92:
		protoDollar = protoS[protopt-7 : protopt+1]
//line proto.y:526
		***REMOVED***
			protoVAL.fld = ast.NewFieldNode(protoDollar[1].id.ToKeyword(), protoDollar[2].tid, protoDollar[3].id, protoDollar[4].b, protoDollar[5].i, protoDollar[6].cmpctOpts, protoDollar[7].b)
		***REMOVED***
	case 93:
		protoDollar = protoS[protopt-5 : protopt+1]
//line proto.y:529
		***REMOVED***
			protoVAL.fld = ast.NewFieldNode(nil, protoDollar[1].tid, protoDollar[2].id, protoDollar[3].b, protoDollar[4].i, nil, protoDollar[5].b)
		***REMOVED***
	case 94:
		protoDollar = protoS[protopt-6 : protopt+1]
//line proto.y:532
		***REMOVED***
			protoVAL.fld = ast.NewFieldNode(nil, protoDollar[1].tid, protoDollar[2].id, protoDollar[3].b, protoDollar[4].i, protoDollar[5].cmpctOpts, protoDollar[6].b)
		***REMOVED***
	case 95:
		protoDollar = protoS[protopt-6 : protopt+1]
//line proto.y:536
		***REMOVED***
			protoVAL.fld = ast.NewFieldNode(protoDollar[1].id.ToKeyword(), protoDollar[2].tid, protoDollar[3].id, protoDollar[4].b, protoDollar[5].i, nil, protoDollar[6].b)
		***REMOVED***
	case 96:
		protoDollar = protoS[protopt-6 : protopt+1]
//line proto.y:539
		***REMOVED***
			protoVAL.fld = ast.NewFieldNode(protoDollar[1].id.ToKeyword(), protoDollar[2].tid, protoDollar[3].id, protoDollar[4].b, protoDollar[5].i, nil, protoDollar[6].b)
		***REMOVED***
	case 97:
		protoDollar = protoS[protopt-6 : protopt+1]
//line proto.y:542
		***REMOVED***
			protoVAL.fld = ast.NewFieldNode(protoDollar[1].id.ToKeyword(), protoDollar[2].tid, protoDollar[3].id, protoDollar[4].b, protoDollar[5].i, nil, protoDollar[6].b)
		***REMOVED***
	case 98:
		protoDollar = protoS[protopt-7 : protopt+1]
//line proto.y:545
		***REMOVED***
			protoVAL.fld = ast.NewFieldNode(protoDollar[1].id.ToKeyword(), protoDollar[2].tid, protoDollar[3].id, protoDollar[4].b, protoDollar[5].i, protoDollar[6].cmpctOpts, protoDollar[7].b)
		***REMOVED***
	case 99:
		protoDollar = protoS[protopt-7 : protopt+1]
//line proto.y:548
		***REMOVED***
			protoVAL.fld = ast.NewFieldNode(protoDollar[1].id.ToKeyword(), protoDollar[2].tid, protoDollar[3].id, protoDollar[4].b, protoDollar[5].i, protoDollar[6].cmpctOpts, protoDollar[7].b)
		***REMOVED***
	case 100:
		protoDollar = protoS[protopt-7 : protopt+1]
//line proto.y:551
		***REMOVED***
			protoVAL.fld = ast.NewFieldNode(protoDollar[1].id.ToKeyword(), protoDollar[2].tid, protoDollar[3].id, protoDollar[4].b, protoDollar[5].i, protoDollar[6].cmpctOpts, protoDollar[7].b)
		***REMOVED***
	case 101:
		protoDollar = protoS[protopt-5 : protopt+1]
//line proto.y:554
		***REMOVED***
			protoVAL.fld = ast.NewFieldNode(nil, protoDollar[1].tid, protoDollar[2].id, protoDollar[3].b, protoDollar[4].i, nil, protoDollar[5].b)
		***REMOVED***
	case 102:
		protoDollar = protoS[protopt-6 : protopt+1]
//line proto.y:557
		***REMOVED***
			protoVAL.fld = ast.NewFieldNode(nil, protoDollar[1].tid, protoDollar[2].id, protoDollar[3].b, protoDollar[4].i, protoDollar[5].cmpctOpts, protoDollar[6].b)
		***REMOVED***
	case 103:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:561
		***REMOVED***
			opts, commas := protoDollar[2].opts.toNodes()
			protoVAL.cmpctOpts = ast.NewCompactOptionsNode(protoDollar[1].b, opts, commas, protoDollar[3].b)
		***REMOVED***
	case 104:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:566
		***REMOVED***
			protoVAL.opts = &compactOptionList***REMOVED***protoDollar[1].opt, nil, nil***REMOVED***
		***REMOVED***
	case 105:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:569
		***REMOVED***
			protoVAL.opts = &compactOptionList***REMOVED***protoDollar[1].opt, protoDollar[2].b, protoDollar[3].opts***REMOVED***
		***REMOVED***
	case 106:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:573
		***REMOVED***
			refs, dots := protoDollar[1].optNms.toNodes()
			optName := ast.NewOptionNameNode(refs, dots)
			protoVAL.opt = ast.NewCompactOptionNode(optName, protoDollar[2].b, protoDollar[3].v)
		***REMOVED***
	case 107:
		protoDollar = protoS[protopt-8 : protopt+1]
//line proto.y:579
		***REMOVED***
			protoVAL.grp = ast.NewGroupNode(protoDollar[1].id.ToKeyword(), protoDollar[2].id.ToKeyword(), protoDollar[3].id, protoDollar[4].b, protoDollar[5].i, nil, protoDollar[6].b, protoDollar[7].msgDecls, protoDollar[8].b)
		***REMOVED***
	case 108:
		protoDollar = protoS[protopt-8 : protopt+1]
//line proto.y:582
		***REMOVED***
			protoVAL.grp = ast.NewGroupNode(protoDollar[1].id.ToKeyword(), protoDollar[2].id.ToKeyword(), protoDollar[3].id, protoDollar[4].b, protoDollar[5].i, nil, protoDollar[6].b, protoDollar[7].msgDecls, protoDollar[8].b)
		***REMOVED***
	case 109:
		protoDollar = protoS[protopt-8 : protopt+1]
//line proto.y:585
		***REMOVED***
			protoVAL.grp = ast.NewGroupNode(protoDollar[1].id.ToKeyword(), protoDollar[2].id.ToKeyword(), protoDollar[3].id, protoDollar[4].b, protoDollar[5].i, nil, protoDollar[6].b, protoDollar[7].msgDecls, protoDollar[8].b)
		***REMOVED***
	case 110:
		protoDollar = protoS[protopt-9 : protopt+1]
//line proto.y:588
		***REMOVED***
			protoVAL.grp = ast.NewGroupNode(protoDollar[1].id.ToKeyword(), protoDollar[2].id.ToKeyword(), protoDollar[3].id, protoDollar[4].b, protoDollar[5].i, protoDollar[6].cmpctOpts, protoDollar[7].b, protoDollar[8].msgDecls, protoDollar[9].b)
		***REMOVED***
	case 111:
		protoDollar = protoS[protopt-9 : protopt+1]
//line proto.y:591
		***REMOVED***
			protoVAL.grp = ast.NewGroupNode(protoDollar[1].id.ToKeyword(), protoDollar[2].id.ToKeyword(), protoDollar[3].id, protoDollar[4].b, protoDollar[5].i, protoDollar[6].cmpctOpts, protoDollar[7].b, protoDollar[8].msgDecls, protoDollar[9].b)
		***REMOVED***
	case 112:
		protoDollar = protoS[protopt-9 : protopt+1]
//line proto.y:594
		***REMOVED***
			protoVAL.grp = ast.NewGroupNode(protoDollar[1].id.ToKeyword(), protoDollar[2].id.ToKeyword(), protoDollar[3].id, protoDollar[4].b, protoDollar[5].i, protoDollar[6].cmpctOpts, protoDollar[7].b, protoDollar[8].msgDecls, protoDollar[9].b)
		***REMOVED***
	case 113:
		protoDollar = protoS[protopt-5 : protopt+1]
//line proto.y:598
		***REMOVED***
			protoVAL.oo = ast.NewOneOfNode(protoDollar[1].id.ToKeyword(), protoDollar[2].id, protoDollar[3].b, protoDollar[4].ooDecls, protoDollar[5].b)
		***REMOVED***
	case 114:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:602
		***REMOVED***
			if protoDollar[2].ooDecl != nil ***REMOVED***
				protoVAL.ooDecls = append(protoDollar[1].ooDecls, protoDollar[2].ooDecl)
			***REMOVED*** else ***REMOVED***
				protoVAL.ooDecls = protoDollar[1].ooDecls
			***REMOVED***
		***REMOVED***
	case 115:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:609
		***REMOVED***
			if protoDollar[1].ooDecl != nil ***REMOVED***
				protoVAL.ooDecls = []ast.OneOfElement***REMOVED***protoDollar[1].ooDecl***REMOVED***
			***REMOVED*** else ***REMOVED***
				protoVAL.ooDecls = nil
			***REMOVED***
		***REMOVED***
	case 116:
		protoDollar = protoS[protopt-0 : protopt+1]
//line proto.y:616
		***REMOVED***
			protoVAL.ooDecls = nil
		***REMOVED***
	case 117:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:620
		***REMOVED***
			protoVAL.ooDecl = protoDollar[1].opt
		***REMOVED***
	case 118:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:623
		***REMOVED***
			protoVAL.ooDecl = protoDollar[1].fld
		***REMOVED***
	case 119:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:626
		***REMOVED***
			protoVAL.ooDecl = protoDollar[1].grp
		***REMOVED***
	case 120:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:629
		***REMOVED***
			protoVAL.ooDecl = ast.NewEmptyDeclNode(protoDollar[1].b)
		***REMOVED***
	case 121:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:632
		***REMOVED***
			protoVAL.ooDecl = nil
		***REMOVED***
	case 122:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:635
		***REMOVED***
			protoVAL.ooDecl = nil
		***REMOVED***
	case 123:
		protoDollar = protoS[protopt-5 : protopt+1]
//line proto.y:639
		***REMOVED***
			protoVAL.fld = ast.NewFieldNode(nil, protoDollar[1].tid, protoDollar[2].id, protoDollar[3].b, protoDollar[4].i, nil, protoDollar[5].b)
		***REMOVED***
	case 124:
		protoDollar = protoS[protopt-6 : protopt+1]
//line proto.y:642
		***REMOVED***
			protoVAL.fld = ast.NewFieldNode(nil, protoDollar[1].tid, protoDollar[2].id, protoDollar[3].b, protoDollar[4].i, protoDollar[5].cmpctOpts, protoDollar[6].b)
		***REMOVED***
	case 125:
		protoDollar = protoS[protopt-7 : protopt+1]
//line proto.y:646
		***REMOVED***
			protoVAL.grp = ast.NewGroupNode(nil, protoDollar[1].id.ToKeyword(), protoDollar[2].id, protoDollar[3].b, protoDollar[4].i, nil, protoDollar[5].b, protoDollar[6].msgDecls, protoDollar[7].b)
		***REMOVED***
	case 126:
		protoDollar = protoS[protopt-8 : protopt+1]
//line proto.y:649
		***REMOVED***
			protoVAL.grp = ast.NewGroupNode(nil, protoDollar[1].id.ToKeyword(), protoDollar[2].id, protoDollar[3].b, protoDollar[4].i, protoDollar[5].cmpctOpts, protoDollar[6].b, protoDollar[7].msgDecls, protoDollar[8].b)
		***REMOVED***
	case 127:
		protoDollar = protoS[protopt-5 : protopt+1]
//line proto.y:653
		***REMOVED***
			protoVAL.mapFld = ast.NewMapFieldNode(protoDollar[1].mapType, protoDollar[2].id, protoDollar[3].b, protoDollar[4].i, nil, protoDollar[5].b)
		***REMOVED***
	case 128:
		protoDollar = protoS[protopt-6 : protopt+1]
//line proto.y:656
		***REMOVED***
			protoVAL.mapFld = ast.NewMapFieldNode(protoDollar[1].mapType, protoDollar[2].id, protoDollar[3].b, protoDollar[4].i, protoDollar[5].cmpctOpts, protoDollar[6].b)
		***REMOVED***
	case 129:
		protoDollar = protoS[protopt-6 : protopt+1]
//line proto.y:660
		***REMOVED***
			protoVAL.mapType = ast.NewMapTypeNode(protoDollar[1].id.ToKeyword(), protoDollar[2].b, protoDollar[3].id, protoDollar[4].b, protoDollar[5].tid, protoDollar[6].b)
		***REMOVED***
	case 142:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:677
		***REMOVED***
			ranges, commas := protoDollar[2].rngs.toNodes()
			protoVAL.ext = ast.NewExtensionRangeNode(protoDollar[1].id.ToKeyword(), ranges, commas, nil, protoDollar[3].b)
		***REMOVED***
	case 143:
		protoDollar = protoS[protopt-4 : protopt+1]
//line proto.y:681
		***REMOVED***
			ranges, commas := protoDollar[2].rngs.toNodes()
			protoVAL.ext = ast.NewExtensionRangeNode(protoDollar[1].id.ToKeyword(), ranges, commas, protoDollar[3].cmpctOpts, protoDollar[4].b)
		***REMOVED***
	case 144:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:686
		***REMOVED***
			protoVAL.rngs = &rangeList***REMOVED***protoDollar[1].rng, nil, nil***REMOVED***
		***REMOVED***
	case 145:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:689
		***REMOVED***
			protoVAL.rngs = &rangeList***REMOVED***protoDollar[1].rng, protoDollar[2].b, protoDollar[3].rngs***REMOVED***
		***REMOVED***
	case 146:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:693
		***REMOVED***
			protoVAL.rng = ast.NewRangeNode(protoDollar[1].i, nil, nil, nil)
		***REMOVED***
	case 147:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:696
		***REMOVED***
			protoVAL.rng = ast.NewRangeNode(protoDollar[1].i, protoDollar[2].id.ToKeyword(), protoDollar[3].i, nil)
		***REMOVED***
	case 148:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:699
		***REMOVED***
			protoVAL.rng = ast.NewRangeNode(protoDollar[1].i, protoDollar[2].id.ToKeyword(), nil, protoDollar[3].id.ToKeyword())
		***REMOVED***
	case 149:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:703
		***REMOVED***
			protoVAL.rngs = &rangeList***REMOVED***protoDollar[1].rng, nil, nil***REMOVED***
		***REMOVED***
	case 150:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:706
		***REMOVED***
			protoVAL.rngs = &rangeList***REMOVED***protoDollar[1].rng, protoDollar[2].b, protoDollar[3].rngs***REMOVED***
		***REMOVED***
	case 151:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:710
		***REMOVED***
			protoVAL.rng = ast.NewRangeNode(protoDollar[1].il, nil, nil, nil)
		***REMOVED***
	case 152:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:713
		***REMOVED***
			protoVAL.rng = ast.NewRangeNode(protoDollar[1].il, protoDollar[2].id.ToKeyword(), protoDollar[3].il, nil)
		***REMOVED***
	case 153:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:716
		***REMOVED***
			protoVAL.rng = ast.NewRangeNode(protoDollar[1].il, protoDollar[2].id.ToKeyword(), nil, protoDollar[3].id.ToKeyword())
		***REMOVED***
	case 154:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:720
		***REMOVED***
			protoVAL.il = protoDollar[1].i
		***REMOVED***
	case 155:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:723
		***REMOVED***
			protoVAL.il = ast.NewNegativeIntLiteralNode(protoDollar[1].b, protoDollar[2].i)
		***REMOVED***
	case 156:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:727
		***REMOVED***
			ranges, commas := protoDollar[2].rngs.toNodes()
			protoVAL.resvd = ast.NewReservedRangesNode(protoDollar[1].id.ToKeyword(), ranges, commas, protoDollar[3].b)
		***REMOVED***
	case 158:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:733
		***REMOVED***
			ranges, commas := protoDollar[2].rngs.toNodes()
			protoVAL.resvd = ast.NewReservedRangesNode(protoDollar[1].id.ToKeyword(), ranges, commas, protoDollar[3].b)
		***REMOVED***
	case 160:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:739
		***REMOVED***
			names, commas := protoDollar[2].names.toNodes()
			protoVAL.resvd = ast.NewReservedNamesNode(protoDollar[1].id.ToKeyword(), names, commas, protoDollar[3].b)
		***REMOVED***
	case 161:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:744
		***REMOVED***
			protoVAL.names = &nameList***REMOVED***protoDollar[1].str.toStringValueNode(), nil, nil***REMOVED***
		***REMOVED***
	case 162:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:747
		***REMOVED***
			protoVAL.names = &nameList***REMOVED***protoDollar[1].str.toStringValueNode(), protoDollar[2].b, protoDollar[3].names***REMOVED***
		***REMOVED***
	case 163:
		protoDollar = protoS[protopt-5 : protopt+1]
//line proto.y:751
		***REMOVED***
			protoVAL.en = ast.NewEnumNode(protoDollar[1].id.ToKeyword(), protoDollar[2].id, protoDollar[3].b, protoDollar[4].enDecls, protoDollar[5].b)
		***REMOVED***
	case 164:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:755
		***REMOVED***
			if protoDollar[2].enDecl != nil ***REMOVED***
				protoVAL.enDecls = append(protoDollar[1].enDecls, protoDollar[2].enDecl)
			***REMOVED*** else ***REMOVED***
				protoVAL.enDecls = protoDollar[1].enDecls
			***REMOVED***
		***REMOVED***
	case 165:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:762
		***REMOVED***
			if protoDollar[1].enDecl != nil ***REMOVED***
				protoVAL.enDecls = []ast.EnumElement***REMOVED***protoDollar[1].enDecl***REMOVED***
			***REMOVED*** else ***REMOVED***
				protoVAL.enDecls = nil
			***REMOVED***
		***REMOVED***
	case 166:
		protoDollar = protoS[protopt-0 : protopt+1]
//line proto.y:769
		***REMOVED***
			protoVAL.enDecls = nil
		***REMOVED***
	case 167:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:773
		***REMOVED***
			protoVAL.enDecl = protoDollar[1].opt
		***REMOVED***
	case 168:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:776
		***REMOVED***
			protoVAL.enDecl = protoDollar[1].env
		***REMOVED***
	case 169:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:779
		***REMOVED***
			protoVAL.enDecl = protoDollar[1].resvd
		***REMOVED***
	case 170:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:782
		***REMOVED***
			protoVAL.enDecl = ast.NewEmptyDeclNode(protoDollar[1].b)
		***REMOVED***
	case 171:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:785
		***REMOVED***
			protoVAL.enDecl = nil
		***REMOVED***
	case 172:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:788
		***REMOVED***
			protoVAL.enDecl = nil
		***REMOVED***
	case 173:
		protoDollar = protoS[protopt-4 : protopt+1]
//line proto.y:792
		***REMOVED***
			protoVAL.env = ast.NewEnumValueNode(protoDollar[1].id, protoDollar[2].b, protoDollar[3].il, nil, protoDollar[4].b)
		***REMOVED***
	case 174:
		protoDollar = protoS[protopt-5 : protopt+1]
//line proto.y:795
		***REMOVED***
			protoVAL.env = ast.NewEnumValueNode(protoDollar[1].id, protoDollar[2].b, protoDollar[3].il, protoDollar[4].cmpctOpts, protoDollar[5].b)
		***REMOVED***
	case 175:
		protoDollar = protoS[protopt-5 : protopt+1]
//line proto.y:799
		***REMOVED***
			protoVAL.msg = ast.NewMessageNode(protoDollar[1].id.ToKeyword(), protoDollar[2].id, protoDollar[3].b, protoDollar[4].msgDecls, protoDollar[5].b)
		***REMOVED***
	case 176:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:803
		***REMOVED***
			if protoDollar[2].msgDecl != nil ***REMOVED***
				protoVAL.msgDecls = append(protoDollar[1].msgDecls, protoDollar[2].msgDecl)
			***REMOVED*** else ***REMOVED***
				protoVAL.msgDecls = protoDollar[1].msgDecls
			***REMOVED***
		***REMOVED***
	case 177:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:810
		***REMOVED***
			if protoDollar[1].msgDecl != nil ***REMOVED***
				protoVAL.msgDecls = []ast.MessageElement***REMOVED***protoDollar[1].msgDecl***REMOVED***
			***REMOVED*** else ***REMOVED***
				protoVAL.msgDecls = nil
			***REMOVED***
		***REMOVED***
	case 178:
		protoDollar = protoS[protopt-0 : protopt+1]
//line proto.y:817
		***REMOVED***
			protoVAL.msgDecls = nil
		***REMOVED***
	case 179:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:821
		***REMOVED***
			protoVAL.msgDecl = protoDollar[1].fld
		***REMOVED***
	case 180:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:824
		***REMOVED***
			protoVAL.msgDecl = protoDollar[1].en
		***REMOVED***
	case 181:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:827
		***REMOVED***
			protoVAL.msgDecl = protoDollar[1].msg
		***REMOVED***
	case 182:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:830
		***REMOVED***
			protoVAL.msgDecl = protoDollar[1].extend
		***REMOVED***
	case 183:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:833
		***REMOVED***
			protoVAL.msgDecl = protoDollar[1].ext
		***REMOVED***
	case 184:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:836
		***REMOVED***
			protoVAL.msgDecl = protoDollar[1].grp
		***REMOVED***
	case 185:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:839
		***REMOVED***
			protoVAL.msgDecl = protoDollar[1].opt
		***REMOVED***
	case 186:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:842
		***REMOVED***
			protoVAL.msgDecl = protoDollar[1].oo
		***REMOVED***
	case 187:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:845
		***REMOVED***
			protoVAL.msgDecl = protoDollar[1].mapFld
		***REMOVED***
	case 188:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:848
		***REMOVED***
			protoVAL.msgDecl = protoDollar[1].resvd
		***REMOVED***
	case 189:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:851
		***REMOVED***
			protoVAL.msgDecl = ast.NewEmptyDeclNode(protoDollar[1].b)
		***REMOVED***
	case 190:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:854
		***REMOVED***
			protoVAL.msgDecl = nil
		***REMOVED***
	case 191:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:857
		***REMOVED***
			protoVAL.msgDecl = nil
		***REMOVED***
	case 192:
		protoDollar = protoS[protopt-5 : protopt+1]
//line proto.y:861
		***REMOVED***
			protoVAL.extend = ast.NewExtendNode(protoDollar[1].id.ToKeyword(), protoDollar[2].tid, protoDollar[3].b, protoDollar[4].extDecls, protoDollar[5].b)
		***REMOVED***
	case 193:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:865
		***REMOVED***
			if protoDollar[2].extDecl != nil ***REMOVED***
				protoVAL.extDecls = append(protoDollar[1].extDecls, protoDollar[2].extDecl)
			***REMOVED*** else ***REMOVED***
				protoVAL.extDecls = protoDollar[1].extDecls
			***REMOVED***
		***REMOVED***
	case 194:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:872
		***REMOVED***
			if protoDollar[1].extDecl != nil ***REMOVED***
				protoVAL.extDecls = []ast.ExtendElement***REMOVED***protoDollar[1].extDecl***REMOVED***
			***REMOVED*** else ***REMOVED***
				protoVAL.extDecls = nil
			***REMOVED***
		***REMOVED***
	case 195:
		protoDollar = protoS[protopt-0 : protopt+1]
//line proto.y:879
		***REMOVED***
			protoVAL.extDecls = nil
		***REMOVED***
	case 196:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:883
		***REMOVED***
			protoVAL.extDecl = protoDollar[1].fld
		***REMOVED***
	case 197:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:886
		***REMOVED***
			protoVAL.extDecl = protoDollar[1].grp
		***REMOVED***
	case 198:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:889
		***REMOVED***
			protoVAL.extDecl = ast.NewEmptyDeclNode(protoDollar[1].b)
		***REMOVED***
	case 199:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:892
		***REMOVED***
			protoVAL.extDecl = nil
		***REMOVED***
	case 200:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:895
		***REMOVED***
			protoVAL.extDecl = nil
		***REMOVED***
	case 201:
		protoDollar = protoS[protopt-5 : protopt+1]
//line proto.y:899
		***REMOVED***
			protoVAL.svc = ast.NewServiceNode(protoDollar[1].id.ToKeyword(), protoDollar[2].id, protoDollar[3].b, protoDollar[4].svcDecls, protoDollar[5].b)
		***REMOVED***
	case 202:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:903
		***REMOVED***
			if protoDollar[2].svcDecl != nil ***REMOVED***
				protoVAL.svcDecls = append(protoDollar[1].svcDecls, protoDollar[2].svcDecl)
			***REMOVED*** else ***REMOVED***
				protoVAL.svcDecls = protoDollar[1].svcDecls
			***REMOVED***
		***REMOVED***
	case 203:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:910
		***REMOVED***
			if protoDollar[1].svcDecl != nil ***REMOVED***
				protoVAL.svcDecls = []ast.ServiceElement***REMOVED***protoDollar[1].svcDecl***REMOVED***
			***REMOVED*** else ***REMOVED***
				protoVAL.svcDecls = nil
			***REMOVED***
		***REMOVED***
	case 204:
		protoDollar = protoS[protopt-0 : protopt+1]
//line proto.y:917
		***REMOVED***
			protoVAL.svcDecls = nil
		***REMOVED***
	case 205:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:924
		***REMOVED***
			protoVAL.svcDecl = protoDollar[1].opt
		***REMOVED***
	case 206:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:927
		***REMOVED***
			protoVAL.svcDecl = protoDollar[1].mtd
		***REMOVED***
	case 207:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:930
		***REMOVED***
			protoVAL.svcDecl = ast.NewEmptyDeclNode(protoDollar[1].b)
		***REMOVED***
	case 208:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:933
		***REMOVED***
			protoVAL.svcDecl = nil
		***REMOVED***
	case 209:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:936
		***REMOVED***
			protoVAL.svcDecl = nil
		***REMOVED***
	case 210:
		protoDollar = protoS[protopt-6 : protopt+1]
//line proto.y:940
		***REMOVED***
			protoVAL.mtd = ast.NewRPCNode(protoDollar[1].id.ToKeyword(), protoDollar[2].id, protoDollar[3].rpcType, protoDollar[4].id.ToKeyword(), protoDollar[5].rpcType, protoDollar[6].b)
		***REMOVED***
	case 211:
		protoDollar = protoS[protopt-8 : protopt+1]
//line proto.y:943
		***REMOVED***
			protoVAL.mtd = ast.NewRPCNodeWithBody(protoDollar[1].id.ToKeyword(), protoDollar[2].id, protoDollar[3].rpcType, protoDollar[4].id.ToKeyword(), protoDollar[5].rpcType, protoDollar[6].b, protoDollar[7].rpcDecls, protoDollar[8].b)
		***REMOVED***
	case 212:
		protoDollar = protoS[protopt-4 : protopt+1]
//line proto.y:947
		***REMOVED***
			protoVAL.rpcType = ast.NewRPCTypeNode(protoDollar[1].b, protoDollar[2].id.ToKeyword(), protoDollar[3].tid, protoDollar[4].b)
		***REMOVED***
	case 213:
		protoDollar = protoS[protopt-3 : protopt+1]
//line proto.y:950
		***REMOVED***
			protoVAL.rpcType = ast.NewRPCTypeNode(protoDollar[1].b, nil, protoDollar[2].tid, protoDollar[3].b)
		***REMOVED***
	case 214:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:954
		***REMOVED***
			if protoDollar[2].rpcDecl != nil ***REMOVED***
				protoVAL.rpcDecls = append(protoDollar[1].rpcDecls, protoDollar[2].rpcDecl)
			***REMOVED*** else ***REMOVED***
				protoVAL.rpcDecls = protoDollar[1].rpcDecls
			***REMOVED***
		***REMOVED***
	case 215:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:961
		***REMOVED***
			if protoDollar[1].rpcDecl != nil ***REMOVED***
				protoVAL.rpcDecls = []ast.RPCElement***REMOVED***protoDollar[1].rpcDecl***REMOVED***
			***REMOVED*** else ***REMOVED***
				protoVAL.rpcDecls = nil
			***REMOVED***
		***REMOVED***
	case 216:
		protoDollar = protoS[protopt-0 : protopt+1]
//line proto.y:968
		***REMOVED***
			protoVAL.rpcDecls = nil
		***REMOVED***
	case 217:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:972
		***REMOVED***
			protoVAL.rpcDecl = protoDollar[1].opt
		***REMOVED***
	case 218:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:975
		***REMOVED***
			protoVAL.rpcDecl = ast.NewEmptyDeclNode(protoDollar[1].b)
		***REMOVED***
	case 219:
		protoDollar = protoS[protopt-2 : protopt+1]
//line proto.y:978
		***REMOVED***
			protoVAL.rpcDecl = nil
		***REMOVED***
	case 220:
		protoDollar = protoS[protopt-1 : protopt+1]
//line proto.y:981
		***REMOVED***
			protoVAL.rpcDecl = nil
		***REMOVED***
	***REMOVED***
	goto protostack /* stack new state and value */
***REMOVED***
