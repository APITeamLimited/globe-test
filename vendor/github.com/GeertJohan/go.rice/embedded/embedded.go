// Package embedded defines embedded data types that are shared between the go.rice package and generated code.
package embedded

import (
	"fmt"
	"path/filepath"
	"strings"
	"time"
)

const (
	EmbedTypeGo   = 0
	EmbedTypeSyso = 1
)

// EmbeddedBox defines an embedded box
type EmbeddedBox struct ***REMOVED***
	Name      string                   // box name
	Time      time.Time                // embed time
	EmbedType int                      // kind of embedding
	Files     map[string]*EmbeddedFile // ALL embedded files by full path
	Dirs      map[string]*EmbeddedDir  // ALL embedded dirs by full path
***REMOVED***

// Link creates the ChildDirs and ChildFiles links in all EmbeddedDir's
func (e *EmbeddedBox) Link() ***REMOVED***
	for path, ed := range e.Dirs ***REMOVED***
		fmt.Println(path)
		ed.ChildDirs = make([]*EmbeddedDir, 0)
		ed.ChildFiles = make([]*EmbeddedFile, 0)
	***REMOVED***
	for path, ed := range e.Dirs ***REMOVED***
		parentDirpath, _ := filepath.Split(path)
		if strings.HasSuffix(parentDirpath, "/") ***REMOVED***
			parentDirpath = parentDirpath[:len(parentDirpath)-1]
		***REMOVED***
		parentDir := e.Dirs[parentDirpath]
		if parentDir == nil ***REMOVED***
			panic("parentDir `" + parentDirpath + "` is missing in embedded box")
		***REMOVED***
		parentDir.ChildDirs = append(parentDir.ChildDirs, ed)
	***REMOVED***
	for path, ef := range e.Files ***REMOVED***
		dirpath, _ := filepath.Split(path)
		if strings.HasSuffix(dirpath, "/") ***REMOVED***
			dirpath = dirpath[:len(dirpath)-1]
		***REMOVED***
		dir := e.Dirs[dirpath]
		if dir == nil ***REMOVED***
			panic("dir `" + dirpath + "` is missing in embedded box")
		***REMOVED***
		dir.ChildFiles = append(dir.ChildFiles, ef)
	***REMOVED***
***REMOVED***

// EmbeddedDir is instanced in the code generated by the rice tool and contains all necicary information about an embedded file
type EmbeddedDir struct ***REMOVED***
	Filename   string
	DirModTime time.Time
	ChildDirs  []*EmbeddedDir  // direct childs, as returned by virtualDir.Readdir()
	ChildFiles []*EmbeddedFile // direct childs, as returned by virtualDir.Readdir()
***REMOVED***

// EmbeddedFile is instanced in the code generated by the rice tool and contains all necicary information about an embedded file
type EmbeddedFile struct ***REMOVED***
	Filename    string // filename
	FileModTime time.Time
	Content     string
***REMOVED***

// EmbeddedBoxes is a public register of embedded boxes
var EmbeddedBoxes = make(map[string]*EmbeddedBox)

// RegisterEmbeddedBox registers an EmbeddedBox
func RegisterEmbeddedBox(name string, box *EmbeddedBox) ***REMOVED***
	if _, exists := EmbeddedBoxes[name]; exists ***REMOVED***
		panic(fmt.Sprintf("EmbeddedBox with name `%s` exists already", name))
	***REMOVED***
	EmbeddedBoxes[name] = box
***REMOVED***
