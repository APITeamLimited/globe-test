***REMOVED***
  "test/annexB/built-ins/Function/createdynfn-html-close-comment-body.js-strict:true": "test/annexB/built-ins/Function/createdynfn-html-close-comment-body.js: SyntaxError: SyntaxError: <eval>: Line 4:3 Unexpected token > (and 3 more errors) <at omitted>",
  "test/annexB/built-ins/Function/createdynfn-html-close-comment-params.js-strict:true": "test/annexB/built-ins/Function/createdynfn-html-close-comment-params.js: SyntaxError: SyntaxError: <eval>: Line 2:1 Unexpected token -- (and 5 more errors) <at omitted>",
  "test/annexB/built-ins/Function/createdynfn-html-open-comment-body.js-strict:true": "test/annexB/built-ins/Function/createdynfn-html-open-comment-body.js: SyntaxError: SyntaxError: <eval>: Line 3:1 Unexpected token < (and 2 more errors) <at omitted>",
  "test/annexB/built-ins/Function/createdynfn-html-open-comment-params.js-strict:true": "test/annexB/built-ins/Function/createdynfn-html-open-comment-params.js: SyntaxError: SyntaxError: <eval>: Line 1:21 Unexpected token < (and 5 more errors) <at omitted>",
  "test/annexB/built-ins/Function/createdynfn-no-line-terminator-html-close-comment-body.js-strict:true": "test/annexB/built-ins/Function/createdynfn-no-line-terminator-html-close-comment-body.js: SyntaxError: SyntaxError: <eval>: Line 3:3 Unexpected token > (and 3 more errors) <at omitted>",
  "test/annexB/built-ins/RegExp/RegExp-leading-escape-BMP.js-strict:true": "test/annexB/built-ins/RegExp/RegExp-leading-escape-BMP.js: Test262Error: Code unit: d800 Expected SameValue(«\\\\\\ud800», «\\�») to be true <at omitted>",
  "test/annexB/built-ins/RegExp/RegExp-trailing-escape-BMP.js-strict:true": "test/annexB/built-ins/RegExp/RegExp-trailing-escape-BMP.js: Test262Error: Code unit: d800 Expected SameValue(«a\\\\\\ud800», «a\\�») to be true <at omitted>",
  "test/annexB/built-ins/RegExp/prototype/compile/pattern-string-invalid-u.js-strict:true": "test/annexB/built-ins/RegExp/prototype/compile/pattern-string-invalid-u.js: Test262Error: invalid pattern: ***REMOVED*** Expected a SyntaxError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/Array/prototype/reverse/length-exceeding-integer-limit-with-proxy.js-strict:true": "test/built-ins/Array/prototype/reverse/length-exceeding-integer-limit-with-proxy.js: Test262Error: Expected [Get:length, Get:0, Get:9007199254740990, Set:0, GetOwnPropertyDescriptor:0, DefineProperty:0, Set:9007199254740990, GetOwnPropertyDescriptor:9007199254740990, DefineProperty:9007199254740990, Get:1, Get:9007199254740989, Set:1, GetOwnPropertyDescriptor:1, DefineProperty:1, Set:9007199254740989, GetOwnPropertyDescriptor:9007199254740989, DefineProperty:9007199254740989, Get:2, Get:9007199254740988, Set:2, GetOwnPropertyDescriptor:2, DefineProperty:2, Set:9007199254740988, GetOwnPropertyDescriptor:9007199254740988, DefineProperty:9007199254740988, Get:3, Get:9007199254740987, Set:3, GetOwnPropertyDescriptor:3, DefineProperty:3, Set:9007199254740987, GetOwnPropertyDescriptor:9007199254740987, DefineProperty:9007199254740987, Get:4] and [Get:length, Has:0, Get:0, Has:9007199254740990, Get:9007199254740990, Set:0, GetOwnPropertyDescriptor:0, DefineProperty:0, Set:9007199254740990, GetOwnPropertyDescriptor:9007199254740990, DefineProperty:9007199254740990, Has:1, Has:9007199254740989, Has:2, Get:2, Has:9007199254740988, Delete:2, Set:9007199254740988, GetOwnPropertyDescriptor:9007199254740988, DefineProperty:9007199254740988, Has:3, Has:9007199254740987, Get:9007199254740987, Set:3, GetOwnPropertyDescriptor:3, DefineProperty:3, Delete:9007199254740987, Has:4, Get:4] to have the same contents. The value of traps is expected to be [\n  // Initial get length operation.\n  \"Get:length\",\n\n  // Lower and upper index are both present.\n  \"Has:0\",\n  \"Get:0\",\n  \"Has:9007199254740990\",\n  \"Get:9007199254740990\",\n  \"Set:0\",\n  \"GetOwnPropertyDescriptor:0\",\n  \"DefineProperty:0\",\n  \"Set:9007199254740990\",\n  \"GetOwnPropertyDescriptor:9007199254740990\",\n  \"DefineProperty:9007199254740990\",\n\n  // Lower and upper index are both absent.\n  \"Has:1\",\n  \"Has:9007199254740989\",\n\n  // Lower index is present, upper index is absent.\n  \"Has:2\",\n  \"Get:2\",\n  \"Has:9007199254740988\",\n  \"Delete:2\",\n  \"Set:9007199254740988\",\n  \"GetOwnPropertyDescriptor:9007199254740988\",\n  \"DefineProperty:9007199254740988\",\n\n  // Lower index is absent, upper index is present.\n  \"Has:3\",\n  \"Has:9007199254740987\",\n  \"Get:9007199254740987\",\n  \"Set:3\",\n  \"GetOwnPropertyDescriptor:3\",\n  \"DefineProperty:3\",\n  \"Delete:9007199254740987\",\n\n  // Stop exception.\n  \"Has:4\",\n  \"Get:4\",\n] <at omitted>",
  "test/built-ins/ArrayBuffer/isView/arg-is-dataview-subclass-instance.js-strict:true": "test/built-ins/ArrayBuffer/isView/arg-is-dataview-subclass-instance.js: TypeError: Constructor DataView requires 'new' <at omitted>",
  "test/built-ins/ArrayBuffer/isView/arg-is-typedarray-subclass-instance.js-strict:true": "test/built-ins/ArrayBuffer/isView/arg-is-typedarray-subclass-instance.js: TypeError: Constructor TypedArray requires 'new' (Testing with Float64Array.) <at omitted>",
  "test/built-ins/Date/UTC/fp-evaluation-order.js-strict:true": "test/built-ins/Date/UTC/fp-evaluation-order.js: Test262Error: order of operations / precision in MakeTime Expected SameValue(«29256», «29312») to be true <at omitted>",
  "test/built-ins/Function/internals/Construct/base-ctor-revoked-proxy.js-strict:true": "test/built-ins/Function/internals/Construct/base-ctor-revoked-proxy.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/Function/internals/Construct/derived-return-val.js-strict:true": "test/built-ins/Function/internals/Construct/derived-return-val.js: SyntaxError: test/built-ins/Function/internals/Construct/derived-return-val.js: missing super() call in constructor\n  17 | \n  18 | class C extends Object ***REMOVED***\n> 19 |   constructor() ***REMOVED***\n     |   ^\n  20 |     return null;\n  21 |   ***REMOVED***\n  22 | ***REMOVED*** <at omitted>",
  "test/built-ins/Function/internals/Construct/derived-this-uninitialized.js-strict:true": "test/built-ins/Function/internals/Construct/derived-this-uninitialized.js: SyntaxError: test/built-ins/Function/internals/Construct/derived-this-uninitialized.js: missing super() call in constructor\n  19 | \n  20 | class C extends Object ***REMOVED***\n> 21 |   constructor() ***REMOVED******REMOVED***\n     |   ^\n  22 | ***REMOVED***\n  23 | \n  24 | assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/built-ins/Function/prototype/toString/class-declaration-complex-heritage.js-strict:true": "test/built-ins/Function/prototype/toString/class-declaration-complex-heritage.js: Test262Error: Conforms to NativeFunction Syntax: \"function A() ***REMOVED***_classCallCheck(this, A);return _possibleConstructorReturn(this, (A.__proto__ || Object.getPrototypeOf(A)).apply(this, arguments));***REMOVED***\" (class /* a */ A /* b */ extends /* c */ class /* d */ B /* e */ ***REMOVED*** /* f */ ***REMOVED*** /* g */ ***REMOVED*** /* h */ ***REMOVED***) <at omitted>",
  "test/built-ins/Function/prototype/toString/class-declaration-explicit-ctor.js-strict:true": "test/built-ins/Function/prototype/toString/class-declaration-explicit-ctor.js: SyntaxError: test/built-ins/Function/prototype/toString/class-declaration-explicit-ctor.js: missing super() call in constructor\n   9 | ---*/\n  10 | \n> 11 | /* before */class /* a */ A /* b */ extends /* c */ B /* d */ ***REMOVED*** /* e */ constructor /* f */ ( /* g */ ) /* h */ ***REMOVED*** /* i */ ; /* j */ ***REMOVED*** /* k */ m /* l */ ( /* m */ ) /* n */ ***REMOVED*** /* o */ ***REMOVED*** /* p */ ***REMOVED***/* after */\n     |                                                                         ^\n  12 | \n  13 | assertToStringOrNativeFunction(A, \"class /* a */ A /* b */ extends /* c */ B /* d */ ***REMOVED*** /* e */ constructor /* f */ ( /* g */ ) /* h */ ***REMOVED*** /* i */ ; /* j */ ***REMOVED*** /* k */ m /* l */ ( /* m */ ) /* n */ ***REMOVED*** /* o */ ***REMOVED*** /* p */ ***REMOVED***\");\n  14 |  <at omitted>",
  "test/built-ins/Function/prototype/toString/class-declaration-implicit-ctor.js-strict:true": "test/built-ins/Function/prototype/toString/class-declaration-implicit-ctor.js: Test262Error: Conforms to NativeFunction Syntax: \"function A() ***REMOVED***_classCallCheck(this, A);***REMOVED***\" (class /* a */ A /* b */ ***REMOVED*** /* c */ ***REMOVED***) <at omitted>",
  "test/built-ins/Function/prototype/toString/class-expression-explicit-ctor.js-strict:true": "test/built-ins/Function/prototype/toString/class-expression-explicit-ctor.js: SyntaxError: test/built-ins/Function/prototype/toString/class-expression-explicit-ctor.js: missing super() call in constructor\n   9 | ---*/\n  10 | \n> 11 | let A = /* before */class /* a */ A /* b */ extends /* c */ B /* d */ ***REMOVED*** /* e */ constructor /* f */ ( /* g */ ) /* h */ ***REMOVED*** /* i */ ; /* j */ ***REMOVED*** /* k */ m /* l */ ( /* m */ ) /* n */ ***REMOVED*** /* o */ ***REMOVED*** /* p */ ***REMOVED***/* after */;\n     |                                                                                 ^\n  12 | \n  13 | assertToStringOrNativeFunction(A, \"class /* a */ A /* b */ extends /* c */ B /* d */ ***REMOVED*** /* e */ constructor /* f */ ( /* g */ ) /* h */ ***REMOVED*** /* i */ ; /* j */ ***REMOVED*** /* k */ m /* l */ ( /* m */ ) /* n */ ***REMOVED*** /* o */ ***REMOVED*** /* p */ ***REMOVED***\");\n  14 |  <at omitted>",
  "test/built-ins/Function/prototype/toString/class-expression-implicit-ctor.js-strict:true": "test/built-ins/Function/prototype/toString/class-expression-implicit-ctor.js: Test262Error: Conforms to NativeFunction Syntax: \"function A() ***REMOVED***_classCallCheck(this, A);***REMOVED***\" (class /* a */ A /* b */ ***REMOVED*** /* c */ ***REMOVED***) <at omitted>",
  "test/built-ins/Function/prototype/toString/getter-class-expression-static.js-strict:true": "test/built-ins/Function/prototype/toString/getter-class-expression-static.js: Test262Error: Conforms to NativeFunction Syntax: \"function () /* before */ /* a */ /* b */ /* c */ /* d */***REMOVED******REMOVED***\" (get /* a */ f /* b */ ( /* c */ ) /* d */ ***REMOVED*** /* e */ ***REMOVED***) <at omitted>",
  "test/built-ins/Function/prototype/toString/getter-class-expression.js-strict:true": "test/built-ins/Function/prototype/toString/getter-class-expression.js: Test262Error: Conforms to NativeFunction Syntax: \"function () /* a */ /* b */ /* c */ /* d */***REMOVED******REMOVED***\" (get /* a */ f /* b */ ( /* c */ ) /* d */ ***REMOVED*** /* e */ ***REMOVED***) <at omitted>",
  "test/built-ins/Function/prototype/toString/getter-class-statement-static.js-strict:true": "test/built-ins/Function/prototype/toString/getter-class-statement-static.js: Test262Error: Conforms to NativeFunction Syntax: \"function () /* before */ /* a */ /* b */ /* c */ /* d */***REMOVED******REMOVED***\" (get /* a */ f /* b */ ( /* c */ ) /* d */ ***REMOVED*** /* e */ ***REMOVED***) <at omitted>",
  "test/built-ins/Function/prototype/toString/getter-class-statement.js-strict:true": "test/built-ins/Function/prototype/toString/getter-class-statement.js: Test262Error: Conforms to NativeFunction Syntax: \"function () /* a */ /* b */ /* c */ /* d */***REMOVED******REMOVED***\" (get /* a */ f /* b */ ( /* c */ ) /* d */ ***REMOVED*** /* e */ ***REMOVED***) <at omitted>",
  "test/built-ins/Function/prototype/toString/method-class-expression-static.js-strict:true": "test/built-ins/Function/prototype/toString/method-class-expression-static.js: Test262Error: Conforms to NativeFunction Syntax: \"function f() /* before */ /* a */ /* b */ /* c */***REMOVED******REMOVED***\" (f /* a */ ( /* b */ ) /* c */ ***REMOVED*** /* d */ ***REMOVED***) <at omitted>",
  "test/built-ins/Function/prototype/toString/method-class-expression.js-strict:true": "test/built-ins/Function/prototype/toString/method-class-expression.js: Test262Error: Conforms to NativeFunction Syntax: \"function f() /* a */ /* b */ /* c */***REMOVED******REMOVED***\" (f /* a */ ( /* b */ ) /* c */ ***REMOVED*** /* d */ ***REMOVED***) <at omitted>",
  "test/built-ins/Function/prototype/toString/method-class-statement-static.js-strict:true": "test/built-ins/Function/prototype/toString/method-class-statement-static.js: Test262Error: Conforms to NativeFunction Syntax: \"function f() /* before */ /* a */ /* b */ /* c */***REMOVED******REMOVED***\" (f /* a */ ( /* b */ ) /* c */ ***REMOVED*** /* d */ ***REMOVED***) <at omitted>",
  "test/built-ins/Function/prototype/toString/method-class-statement.js-strict:true": "test/built-ins/Function/prototype/toString/method-class-statement.js: Test262Error: Conforms to NativeFunction Syntax: \"function f() /* a */ /* b */ /* c */***REMOVED******REMOVED***\" (f /* a */ ( /* b */ ) /* c */ ***REMOVED*** /* d */ ***REMOVED***) <at omitted>",
  "test/built-ins/Function/prototype/toString/private-method-class-expression.js-strict:true": "test/built-ins/Function/prototype/toString/private-method-class-expression.js: SyntaxError: test/built-ins/Function/prototype/toString/private-method-class-expression.js: Unexpected character '#' (12:14)\n  10 | \n  11 | let c = new (class ***REMOVED***\n> 12 |   /* before */#f /* a */ ( /* b */ ) /* c */ ***REMOVED*** /* d */ ***REMOVED***/* after */\n     |               ^\n  13 |   assert(expected) ***REMOVED***\n  14 |     assertToStringOrNativeFunction(this.#f, expected);\n  15 |   ***REMOVED*** <at omitted>",
  "test/built-ins/Function/prototype/toString/private-method-class-statement.js-strict:true": "test/built-ins/Function/prototype/toString/private-method-class-statement.js: SyntaxError: test/built-ins/Function/prototype/toString/private-method-class-statement.js: Unexpected character '#' (12:14)\n  10 | \n  11 | class C ***REMOVED***\n> 12 |   /* before */#f /* a */ ( /* b */ ) /* c */ ***REMOVED*** /* d */ ***REMOVED***/* after */\n     |               ^\n  13 |   assert(expected) ***REMOVED***\n  14 |     assertToStringOrNativeFunction(this.#f, expected);\n  15 |   ***REMOVED*** <at omitted>",
  "test/built-ins/Function/prototype/toString/private-static-method-class-expression.js-strict:true": "test/built-ins/Function/prototype/toString/private-static-method-class-expression.js: SyntaxError: test/built-ins/Function/prototype/toString/private-static-method-class-expression.js: Unexpected character '#' (12:21)\n  10 | \n  11 | let C = class ***REMOVED***\n> 12 |   /* before */static #f /* a */ ( /* b */ ) /* c */ ***REMOVED*** /* d */ ***REMOVED***/* after */\n     |                      ^\n  13 |   static assert(expected) ***REMOVED***\n  14 |     assertToStringOrNativeFunction(this.#f, expected);\n  15 |   ***REMOVED*** <at omitted>",
  "test/built-ins/Function/prototype/toString/private-static-method-class-statement.js-strict:true": "test/built-ins/Function/prototype/toString/private-static-method-class-statement.js: SyntaxError: test/built-ins/Function/prototype/toString/private-static-method-class-statement.js: Unexpected character '#' (12:21)\n  10 | \n  11 | class C ***REMOVED***\n> 12 |   /* before */static #f /* a */ ( /* b */ ) /* c */ ***REMOVED*** /* d */ ***REMOVED***/* after */\n     |                      ^\n  13 |   static assert(expected) ***REMOVED***\n  14 |     assertToStringOrNativeFunction(this.#f, expected);\n  15 |   ***REMOVED*** <at omitted>",
  "test/built-ins/Function/prototype/toString/setter-class-expression-static.js-strict:true": "test/built-ins/Function/prototype/toString/setter-class-expression-static.js: Test262Error: Conforms to NativeFunction Syntax: \"function ( /* before */ /* a */ /* b */ /* c */a /* d */) /* e */***REMOVED******REMOVED***\" (set /* a */ f /* b */ ( /* c */ a /* d */ ) /* e */ ***REMOVED*** /* f */ ***REMOVED***) <at omitted>",
  "test/built-ins/Function/prototype/toString/setter-class-expression.js-strict:true": "test/built-ins/Function/prototype/toString/setter-class-expression.js: Test262Error: Conforms to NativeFunction Syntax: \"function ( /* a */ /* b */ /* c */a /* d */) /* e */***REMOVED******REMOVED***\" (set /* a */ f /* b */ ( /* c */ a /* d */ ) /* e */ ***REMOVED*** /* f */ ***REMOVED***) <at omitted>",
  "test/built-ins/Function/prototype/toString/setter-class-statement-static.js-strict:true": "test/built-ins/Function/prototype/toString/setter-class-statement-static.js: Test262Error: Conforms to NativeFunction Syntax: \"function ( /* before */ /* a */ /* b */ /* c */a /* d */) /* e */***REMOVED******REMOVED***\" (set /* a */ f /* b */ ( /* c */ a /* d */ ) /* e */ ***REMOVED*** /* f */ ***REMOVED***) <at omitted>",
  "test/built-ins/Function/prototype/toString/setter-class-statement.js-strict:true": "test/built-ins/Function/prototype/toString/setter-class-statement.js: Test262Error: Conforms to NativeFunction Syntax: \"function ( /* a */ /* b */ /* c */a /* d */) /* e */***REMOVED******REMOVED***\" (set /* a */ f /* b */ ( /* c */ a /* d */ ) /* e */ ***REMOVED*** /* f */ ***REMOVED***) <at omitted>",
  "test/built-ins/Object/seal/seal-asyncarrowfunction.js-strict:true": "test/built-ins/Object/seal/seal-asyncarrowfunction.js: test/built-ins/Object/seal/seal-asyncarrowfunction.js: Line 37:40 Malformed arrow function parameter list (and 5 more errors)",
  "test/built-ins/Object/seal/seal-asyncfunction.js-strict:true": "test/built-ins/Object/seal/seal-asyncfunction.js: test/built-ins/Object/seal/seal-asyncfunction.js: Line 37:46 Unexpected token function (and 4 more errors)",
  "test/built-ins/Object/seal/seal-bigint64array.js-strict:true": "test/built-ins/Object/seal/seal-bigint64array.js: ReferenceError: BigInt64Array is not defined <at omitted>",
  "test/built-ins/Object/seal/seal-biguint64array.js-strict:true": "test/built-ins/Object/seal/seal-biguint64array.js: ReferenceError: BigUint64Array is not defined <at omitted>",
  "test/built-ins/Object/subclass-object-arg.js-strict:true": "test/built-ins/Object/subclass-object-arg.js: Test262Error: Expected SameValue(«1», «undefined») to be true <at omitted>",
  "test/built-ins/Promise/all/ctx-ctor.js-strict:true": "test/built-ins/Promise/all/ctx-ctor.js: TypeError: Constructor Promise requires 'new' <at omitted>",
  "test/built-ins/Promise/all/invoke-resolve-on-promises-every-iteration-of-custom.js-strict:true": "test/built-ins/Promise/all/invoke-resolve-on-promises-every-iteration-of-custom.js: TypeError: Constructor Promise requires 'new' <at omitted>",
  "test/built-ins/Promise/allSettled/ctx-ctor.js-strict:true": "test/built-ins/Promise/allSettled/ctx-ctor.js: TypeError: Constructor Promise requires 'new' <at omitted>",
  "test/built-ins/Promise/allSettled/invoke-resolve-on-promises-every-iteration-of-custom.js-strict:true": "test/built-ins/Promise/allSettled/invoke-resolve-on-promises-every-iteration-of-custom.js: TypeError: Constructor Promise requires 'new' <at omitted>",
  "test/built-ins/Promise/any/ctx-ctor.js-strict:true": "test/built-ins/Promise/any/ctx-ctor.js: TypeError: Constructor Promise requires 'new' <at omitted>",
  "test/built-ins/Promise/any/invoke-resolve-on-promises-every-iteration-of-custom.js-strict:true": "test/built-ins/Promise/any/invoke-resolve-on-promises-every-iteration-of-custom.js: TypeError: Constructor Promise requires 'new' <at omitted>",
  "test/built-ins/Promise/any/invoke-resolve-on-values-every-iteration-of-custom.js-strict:true": "test/built-ins/Promise/any/invoke-resolve-on-values-every-iteration-of-custom.js: TypeError: Constructor Promise requires 'new' <at omitted>",
  "test/built-ins/Promise/prototype/finally/rejected-observable-then-calls-PromiseResolve.js-strict:true": "test/built-ins/Promise/prototype/finally/rejected-observable-then-calls-PromiseResolve.js: TypeError: Constructor Promise requires 'new' <at omitted>",
  "test/built-ins/Promise/prototype/finally/resolved-observable-then-calls-PromiseResolve.js-strict:true": "test/built-ins/Promise/prototype/finally/resolved-observable-then-calls-PromiseResolve.js: TypeError: Constructor Promise requires 'new' <at omitted>",
  "test/built-ins/Promise/prototype/finally/species-constructor.js-strict:true": "test/built-ins/Promise/prototype/finally/species-constructor.js: TypeError: Constructor Promise requires 'new' <at omitted>",
  "test/built-ins/Promise/prototype/finally/subclass-reject-count.js-strict:true": "test/built-ins/Promise/prototype/finally/subclass-reject-count.js: TypeError: Constructor Promise requires 'new' <at omitted>",
  "test/built-ins/Promise/prototype/finally/subclass-resolve-count.js-strict:true": "test/built-ins/Promise/prototype/finally/subclass-resolve-count.js: TypeError: Constructor Promise requires 'new' <at omitted>",
  "test/built-ins/Promise/prototype/then/capability-executor-called-twice.js-strict:true": "test/built-ins/Promise/prototype/then/capability-executor-called-twice.js: TypeError: Constructor Promise requires 'new' <at omitted>",
  "test/built-ins/Promise/prototype/then/capability-executor-not-callable.js-strict:true": "test/built-ins/Promise/prototype/then/capability-executor-not-callable.js: TypeError: Constructor Promise requires 'new' <at omitted>",
  "test/built-ins/Promise/prototype/then/ctor-custom.js-strict:true": "test/built-ins/Promise/prototype/then/ctor-custom.js: TypeError: Constructor Promise requires 'new' <at omitted>",
  "test/built-ins/Promise/prototype/then/deferred-is-resolved-value.js-strict:true": "test/built-ins/Promise/prototype/then/deferred-is-resolved-value.js: TypeError: Constructor Promise requires 'new' <at omitted>",
  "test/built-ins/Promise/race/ctx-ctor.js-strict:true": "test/built-ins/Promise/race/ctx-ctor.js: TypeError: Constructor Promise requires 'new' <at omitted>",
  "test/built-ins/Promise/race/invoke-resolve-on-promises-every-iteration-of-custom.js-strict:true": "test/built-ins/Promise/race/invoke-resolve-on-promises-every-iteration-of-custom.js: TypeError: Constructor Promise requires 'new' <at omitted>",
  "test/built-ins/Promise/reject/ctx-ctor.js-strict:true": "test/built-ins/Promise/reject/ctx-ctor.js: TypeError: Constructor Promise requires 'new' <at omitted>",
  "test/built-ins/Promise/resolve/ctx-ctor.js-strict:true": "test/built-ins/Promise/resolve/ctx-ctor.js: TypeError: Constructor Promise requires 'new' <at omitted>",
  "test/built-ins/Proxy/construct/trap-is-undefined-target-is-proxy.js-strict:true": "test/built-ins/Proxy/construct/trap-is-undefined-target-is-proxy.js: TypeError: Cannot call a class as a function <at omitted>",
  "test/built-ins/Proxy/preventExtensions/trap-is-undefined-target-is-proxy.js-strict:true": "test/built-ins/Proxy/preventExtensions/trap-is-undefined-target-is-proxy.js: ReferenceError: require is not defined <at omitted>",
  "test/built-ins/Reflect/Symbol.toStringTag.js-strict:true": "test/built-ins/Reflect/Symbol.toStringTag.js: Test262Error: obj should have an own property Symbol(Symbol.toStringTag) <at omitted>",
  "test/built-ins/RegExp/quantifier-integer-limit.js-strict:true": "test/built-ins/RegExp/quantifier-integer-limit.js: SyntaxError: Invalid regular expression (re2): b***REMOVED***9007199254740991***REMOVED*** (error parsing regexp: invalid repeat count: `***REMOVED***9007199254740991***REMOVED***`) <at omitted>",
  "test/built-ins/RegExp/unicode_restricted_brackets.js-strict:true": "test/built-ins/RegExp/unicode_restricted_brackets.js: Test262Error: RegExp(\"]\", \"u\"):  Expected a SyntaxError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/RegExp/unicode_restricted_character_class_escape.js-strict:true": "test/built-ins/RegExp/unicode_restricted_character_class_escape.js: Test262Error: RegExp(\"[\\d-a]\", \"u\"):  Expected a SyntaxError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/RegExp/unicode_restricted_identity_escape.js-strict:true": "test/built-ins/RegExp/unicode_restricted_identity_escape.js: Test262Error: Invalid IdentityEscape in AtomEscape: '\\\u0000' Expected a SyntaxError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/RegExp/unicode_restricted_identity_escape_alpha.js-strict:true": "test/built-ins/RegExp/unicode_restricted_identity_escape_alpha.js: Test262Error: IdentityEscape in AtomEscape: 'A' Expected a SyntaxError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/RegExp/unicode_restricted_identity_escape_c.js-strict:true": "test/built-ins/RegExp/unicode_restricted_identity_escape_c.js: Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/RegExp/unicode_restricted_identity_escape_u.js-strict:true": "test/built-ins/RegExp/unicode_restricted_identity_escape_u.js: Test262Error: RegExp(\"\\u\", \"u\"):  Expected a SyntaxError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/RegExp/unicode_restricted_identity_escape_x.js-strict:true": "test/built-ins/RegExp/unicode_restricted_identity_escape_x.js: Test262Error: RegExp(\"\\x\", \"u\"):  Expected a SyntaxError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/RegExp/unicode_restricted_incomplete_quantifier.js-strict:true": "test/built-ins/RegExp/unicode_restricted_incomplete_quantifier.js: Test262Error: RegExp(\"a***REMOVED***\", \"u\"):  Expected a SyntaxError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/RegExp/unicode_restricted_octal_escape.js-strict:true": "test/built-ins/RegExp/unicode_restricted_octal_escape.js: Test262Error: RegExp(\"\\1\", \"u\"):  Expected a SyntaxError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/RegExp/unicode_restricted_quantifiable_assertion.js-strict:true": "test/built-ins/RegExp/unicode_restricted_quantifiable_assertion.js: Test262Error: RegExp(\"(?=.)*\", \"u\"):  Expected a SyntaxError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/TypedArrayConstructors/BigUint64Array/is-a-constructor.js-strict:true": "test/built-ins/TypedArrayConstructors/BigUint64Array/is-a-constructor.js: ReferenceError: BigUint64Array is not defined <at omitted>",
  "test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-multiple.js-strict:true": "test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-multiple.js: SyntaxError: test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-multiple.js: Unexpected character '#' (37:2)\n  35 | var callCount = 0;\n  36 | class C ***REMOVED***\n> 37 |   #method() ***REMOVED***\n     |   ^\n  38 |     assert.sameValue(arguments.length, 2);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     assert.sameValue(arguments[1], 'TC39'); <at omitted>",
  "test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-null.js-strict:true": "test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-null.js: SyntaxError: test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-null.js: Unexpected character '#' (37:2)\n  35 | var callCount = 0;\n  36 | class C ***REMOVED***\n> 37 |   #method() ***REMOVED***\n     |   ^\n  38 |     assert.sameValue(arguments.length, 2);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     assert.sameValue(arguments[1], null); <at omitted>",
  "test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-single-args.js-strict:true": "test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-single-args.js: SyntaxError: test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-single-args.js: Unexpected character '#' (37:2)\n  35 | var callCount = 0;\n  36 | class C ***REMOVED***\n> 37 |   #method() ***REMOVED***\n     |   ^\n  38 |     assert.sameValue(arguments.length, 1);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     callCount = callCount + 1; <at omitted>",
  "test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-spread-operator.js-strict:true": "test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-spread-operator.js: SyntaxError: test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-spread-operator.js: Unexpected character '#' (39:2)\n  37 | var callCount = 0;\n  38 | class C ***REMOVED***\n> 39 |   #method() ***REMOVED***\n     |   ^\n  40 |     assert.sameValue(arguments.length, 4);\n  41 |     assert.sameValue(arguments[0], 42);\n  42 |     assert.sameValue(arguments[1], 1); <at omitted>",
  "test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-undefined.js-strict:true": "test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-undefined.js: SyntaxError: test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-undefined.js: Unexpected character '#' (37:2)\n  35 | var callCount = 0;\n  36 | class C ***REMOVED***\n> 37 |   #method() ***REMOVED***\n     |   ^\n  38 |     assert.sameValue(arguments.length, 2);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     assert.sameValue(arguments[1], undefined); <at omitted>",
  "test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-multiple.js-strict:true": "test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-multiple.js: SyntaxError: test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-multiple.js: Unexpected character '#' (37:9)\n  35 | var callCount = 0;\n  36 | class C ***REMOVED***\n> 37 |   static #method() ***REMOVED***\n     |          ^\n  38 |     assert.sameValue(arguments.length, 2);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     assert.sameValue(arguments[1], 'TC39'); <at omitted>",
  "test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-null.js-strict:true": "test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-null.js: SyntaxError: test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-null.js: Unexpected character '#' (37:9)\n  35 | var callCount = 0;\n  36 | class C ***REMOVED***\n> 37 |   static #method() ***REMOVED***\n     |          ^\n  38 |     assert.sameValue(arguments.length, 2);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     assert.sameValue(arguments[1], null); <at omitted>",
  "test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-single-args.js-strict:true": "test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-single-args.js: SyntaxError: test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-single-args.js: Unexpected character '#' (37:9)\n  35 | var callCount = 0;\n  36 | class C ***REMOVED***\n> 37 |   static #method() ***REMOVED***\n     |          ^\n  38 |     assert.sameValue(arguments.length, 1);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     callCount = callCount + 1; <at omitted>",
  "test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-spread-operator.js-strict:true": "test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-spread-operator.js: SyntaxError: test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-spread-operator.js: Unexpected character '#' (39:9)\n  37 | var callCount = 0;\n  38 | class C ***REMOVED***\n> 39 |   static #method() ***REMOVED***\n     |          ^\n  40 |     assert.sameValue(arguments.length, 4);\n  41 |     assert.sameValue(arguments[0], 42);\n  42 |     assert.sameValue(arguments[1], 1); <at omitted>",
  "test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-undefined.js-strict:true": "test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-undefined.js: SyntaxError: test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-undefined.js: Unexpected character '#' (37:9)\n  35 | var callCount = 0;\n  36 | class C ***REMOVED***\n> 37 |   static #method() ***REMOVED***\n     |          ^\n  38 |     assert.sameValue(arguments.length, 2);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     assert.sameValue(arguments[1], undefined); <at omitted>",
  "test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-multiple.js-strict:true": "test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-multiple.js: SyntaxError: test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-multiple.js: Unexpected character '#' (37:2)\n  35 | var callCount = 0;\n  36 | var C = class ***REMOVED***\n> 37 |   #method() ***REMOVED***\n     |   ^\n  38 |     assert.sameValue(arguments.length, 2);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     assert.sameValue(arguments[1], 'TC39'); <at omitted>",
  "test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-null.js-strict:true": "test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-null.js: SyntaxError: test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-null.js: Unexpected character '#' (37:2)\n  35 | var callCount = 0;\n  36 | var C = class ***REMOVED***\n> 37 |   #method() ***REMOVED***\n     |   ^\n  38 |     assert.sameValue(arguments.length, 2);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     assert.sameValue(arguments[1], null); <at omitted>",
  "test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-single-args.js-strict:true": "test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-single-args.js: SyntaxError: test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-single-args.js: Unexpected character '#' (37:2)\n  35 | var callCount = 0;\n  36 | var C = class ***REMOVED***\n> 37 |   #method() ***REMOVED***\n     |   ^\n  38 |     assert.sameValue(arguments.length, 1);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     callCount = callCount + 1; <at omitted>",
  "test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-spread-operator.js-strict:true": "test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-spread-operator.js: SyntaxError: test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-spread-operator.js: Unexpected character '#' (39:2)\n  37 | var callCount = 0;\n  38 | var C = class ***REMOVED***\n> 39 |   #method() ***REMOVED***\n     |   ^\n  40 |     assert.sameValue(arguments.length, 4);\n  41 |     assert.sameValue(arguments[0], 42);\n  42 |     assert.sameValue(arguments[1], 1); <at omitted>",
  "test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-undefined.js-strict:true": "test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-undefined.js: SyntaxError: test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-undefined.js: Unexpected character '#' (37:2)\n  35 | var callCount = 0;\n  36 | var C = class ***REMOVED***\n> 37 |   #method() ***REMOVED***\n     |   ^\n  38 |     assert.sameValue(arguments.length, 2);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     assert.sameValue(arguments[1], undefined); <at omitted>",
  "test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-multiple.js-strict:true": "test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-multiple.js: SyntaxError: test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-multiple.js: Unexpected character '#' (37:9)\n  35 | var callCount = 0;\n  36 | var C = class ***REMOVED***\n> 37 |   static #method() ***REMOVED***\n     |          ^\n  38 |     assert.sameValue(arguments.length, 2);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     assert.sameValue(arguments[1], 'TC39'); <at omitted>",
  "test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-null.js-strict:true": "test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-null.js: SyntaxError: test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-null.js: Unexpected character '#' (37:9)\n  35 | var callCount = 0;\n  36 | var C = class ***REMOVED***\n> 37 |   static #method() ***REMOVED***\n     |          ^\n  38 |     assert.sameValue(arguments.length, 2);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     assert.sameValue(arguments[1], null); <at omitted>",
  "test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-single-args.js-strict:true": "test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-single-args.js: SyntaxError: test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-single-args.js: Unexpected character '#' (37:9)\n  35 | var callCount = 0;\n  36 | var C = class ***REMOVED***\n> 37 |   static #method() ***REMOVED***\n     |          ^\n  38 |     assert.sameValue(arguments.length, 1);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     callCount = callCount + 1; <at omitted>",
  "test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-spread-operator.js-strict:true": "test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-spread-operator.js: SyntaxError: test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-spread-operator.js: Unexpected character '#' (39:9)\n  37 | var callCount = 0;\n  38 | var C = class ***REMOVED***\n> 39 |   static #method() ***REMOVED***\n     |          ^\n  40 |     assert.sameValue(arguments.length, 4);\n  41 |     assert.sameValue(arguments[0], 42);\n  42 |     assert.sameValue(arguments[1], 1); <at omitted>",
  "test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-undefined.js-strict:true": "test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-undefined.js: SyntaxError: test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-undefined.js: Unexpected character '#' (37:9)\n  35 | var callCount = 0;\n  36 | var C = class ***REMOVED***\n> 37 |   static #method() ***REMOVED***\n     |          ^\n  38 |     assert.sameValue(arguments.length, 2);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     assert.sameValue(arguments[1], undefined); <at omitted>",
  "test/language/comments/hashbang/eval-indirect.js-strict:true": "test/language/comments/hashbang/eval-indirect.js: SyntaxError: SyntaxError: <eval>: Line 1:1 Unexpected token ILLEGAL (and 1 more errors) <at omitted>",
  "test/language/comments/hashbang/eval.js-strict:true": "test/language/comments/hashbang/eval.js: SyntaxError: SyntaxError: <eval>: Line 1:1 Unexpected token ILLEGAL (and 1 more errors) <at omitted>",
  "test/language/comments/hashbang/function-constructor.js-strict:true": "test/language/comments/hashbang/function-constructor.js: SyntaxError: test/language/comments/hashbang/function-constructor.js: Unexpected token (17:47)\n  15 | const AsyncFunction = (async function ()***REMOVED******REMOVED***).constructor;\n  16 | const GeneratorFunction = (function *()***REMOVED******REMOVED***).constructor;\n> 17 | const AsyncGeneratorFunction = (async function *()***REMOVED******REMOVED***).constructor;\n     |                                                ^\n  18 | for (const ctor of [\n  19 |   Function,\n  20 |   AsyncFunction, <at omitted>",
  "test/language/comments/hashbang/line-terminator-carriage-return.js-strict:false": "test/language/comments/hashbang/line-terminator-carriage-return.js: test/language/comments/hashbang/line-terminator-carriage-return.js: Line 1:1 Unexpected token ILLEGAL (and 5 more errors)",
  "test/language/comments/hashbang/line-terminator-line-separator.js-strict:false": "test/language/comments/hashbang/line-terminator-line-separator.js: test/language/comments/hashbang/line-terminator-line-separator.js: Line 1:1 Unexpected token ILLEGAL (and 3 more errors)",
  "test/language/comments/hashbang/line-terminator-paragraph-separator.js-strict:false": "test/language/comments/hashbang/line-terminator-paragraph-separator.js: test/language/comments/hashbang/line-terminator-paragraph-separator.js: Line 1:1 Unexpected token ILLEGAL (and 3 more errors)",
  "test/language/comments/hashbang/module.js-strict:false": "test/language/comments/hashbang/module.js: test/language/comments/hashbang/module.js: Line 1:1 Unexpected token ILLEGAL (and 1 more errors)",
  "test/language/comments/hashbang/no-line-separator.js-strict:true": "test/language/comments/hashbang/no-line-separator.js: SyntaxError: SyntaxError: <eval>: Line 1:1 Unexpected token ILLEGAL (and 1 more errors) <at omitted>",
  "test/language/comments/hashbang/not-empty.js-strict:false": "test/language/comments/hashbang/not-empty.js: test/language/comments/hashbang/not-empty.js: Line 1:1 Unexpected token ILLEGAL (and 1 more errors)",
  "test/language/comments/hashbang/use-strict.js-strict:false": "test/language/comments/hashbang/use-strict.js: SyntaxError: test/language/comments/hashbang/use-strict.js: 'with' in strict mode (17:0)\n  15 | ---*/\n  16 | \n> 17 | with (***REMOVED******REMOVED***) ***REMOVED******REMOVED***\n     | ^\n  18 |  <at omitted>",
  "test/language/computed-property-names/class/accessor/getter-duplicates.js-strict:true": "test/language/computed-property-names/class/accessor/getter-duplicates.js: TypeError: test/language/computed-property-names/class/accessor/getter-duplicates.js: Cannot read property '_inherits' of undefined <at omitted>",
  "test/language/computed-property-names/class/accessor/setter-duplicates.js-strict:true": "test/language/computed-property-names/class/accessor/setter-duplicates.js: TypeError: test/language/computed-property-names/class/accessor/setter-duplicates.js: Cannot read property '_inherits' of undefined <at omitted>",
  "test/language/computed-property-names/class/static/method-number-order.js-strict:true": "test/language/computed-property-names/class/static/method-number-order.js: Test262Error: Expected [prototype, 1, 2, length, name, a, c] and [1, 2, length, name, prototype, a, c] to have the same contents.  <at omitted>",
  "test/language/computed-property-names/class/static/method-string-order.js-strict:true": "test/language/computed-property-names/class/static/method-string-order.js: Test262Error: Expected [prototype, length, name, a, b, c, d] and [length, name, prototype, a, b, c, d] to have the same contents.  <at omitted>",
  "test/language/computed-property-names/class/static/method-symbol-order.js-strict:true": "test/language/computed-property-names/class/static/method-symbol-order.js: Test262Error: Expected [prototype, length, name, a, c] and [length, name, prototype, a, c] to have the same contents.  <at omitted>",
  "test/language/destructuring/binding/syntax/destructuring-array-parameters-function-arguments-length.js-strict:true": "test/language/destructuring/binding/syntax/destructuring-array-parameters-function-arguments-length.js: SyntaxError: test/language/destructuring/binding/syntax/destructuring-array-parameters-function-arguments-length.js: Unexpected token (35:33)\n  33 | assert.sameValue((async ([a,b]) => ***REMOVED******REMOVED***).length, 1);\n  34 | assert.sameValue((async function([a,b]) ***REMOVED******REMOVED***).length, 1);\n> 35 | assert.sameValue((async function * ([a,b]) ***REMOVED******REMOVED***).length, 1);\n     |                                  ^\n  36 | \n  37 |  <at omitted>",
  "test/language/destructuring/binding/syntax/destructuring-object-parameters-function-arguments-length.js-strict:true": "test/language/destructuring/binding/syntax/destructuring-object-parameters-function-arguments-length.js: SyntaxError: test/language/destructuring/binding/syntax/destructuring-object-parameters-function-arguments-length.js: Unexpected token (35:33)\n  33 | assert.sameValue((async (***REMOVED***a,b***REMOVED***) => ***REMOVED******REMOVED***).length, 1);\n  34 | assert.sameValue((async function(***REMOVED***a,b***REMOVED***) ***REMOVED******REMOVED***).length, 1);\n> 35 | assert.sameValue((async function * (***REMOVED***a,b***REMOVED***) ***REMOVED******REMOVED***).length, 1);\n     |                                  ^\n  36 | \n  37 |  <at omitted>",
  "test/language/eval-code/direct/gen-func-decl-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-decl-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-decl-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:50)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n> 14 | function * f(p = eval(\"var arguments = 'param'\"), arguments) ***REMOVED***\n     |                                                   ^\n  15 |   \n  16 | ***REMOVED***\n  17 | assert.throws(SyntaxError, f); <at omitted>",
  "test/language/eval-code/direct/gen-func-decl-a-following-parameter-is-named-arguments-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-decl-a-following-parameter-is-named-arguments-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-decl-a-following-parameter-is-named-arguments-declare-arguments.js: arguments is a reserved word in strict mode (14:40)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n> 14 | function * f(p = eval(\"var arguments\"), arguments) ***REMOVED***\n     |                                         ^\n  15 |   \n  16 | ***REMOVED***\n  17 | assert.throws(SyntaxError, f); <at omitted>",
  "test/language/eval-code/direct/gen-func-decl-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-decl-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-decl-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:13)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n> 14 | function * f(arguments, p = eval(\"var arguments = 'param'\")) ***REMOVED***\n     |              ^\n  15 |   \n  16 | ***REMOVED***\n  17 | assert.throws(SyntaxError, f); <at omitted>",
  "test/language/eval-code/direct/gen-func-decl-a-preceding-parameter-is-named-arguments-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-decl-a-preceding-parameter-is-named-arguments-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-decl-a-preceding-parameter-is-named-arguments-declare-arguments.js: arguments is a reserved word in strict mode (14:13)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n> 14 | function * f(arguments, p = eval(\"var arguments\")) ***REMOVED***\n     |              ^\n  15 |   \n  16 | ***REMOVED***\n  17 | assert.throws(SyntaxError, f); <at omitted>",
  "test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:11)\n  12 | \n  13 | function * f(p = eval(\"var arguments = 'param'\")) ***REMOVED***\n> 14 |   function arguments() ***REMOVED******REMOVED***\n     |            ^\n  15 | ***REMOVED***\n  16 | assert.throws(SyntaxError, f);\n  17 |  <at omitted>",
  "test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-func-decl-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-func-decl-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-func-decl-declare-arguments.js: arguments is a reserved word in strict mode (14:11)\n  12 | \n  13 | function * f(p = eval(\"var arguments\")) ***REMOVED***\n> 14 |   function arguments() ***REMOVED******REMOVED***\n     |            ^\n  15 | ***REMOVED***\n  16 | assert.throws(SyntaxError, f);\n  17 |  <at omitted>",
  "test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (15:6)\n  13 | \n  14 | function * f(p = eval(\"var arguments = 'param'\")) ***REMOVED***\n> 15 |   let arguments;\n     |       ^\n  16 | ***REMOVED***\n  17 | assert.throws(SyntaxError, f);\n  18 |  <at omitted>",
  "test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-lex-bind-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-lex-bind-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-lex-bind-declare-arguments.js: arguments is a reserved word in strict mode (15:6)\n  13 | \n  14 | function * f(p = eval(\"var arguments\")) ***REMOVED***\n> 15 |   let arguments;\n     |       ^\n  16 | ***REMOVED***\n  17 | assert.throws(SyntaxError, f);\n  18 |  <at omitted>",
  "test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:6)\n  12 | \n  13 | function * f(p = eval(\"var arguments = 'param'\")) ***REMOVED***\n> 14 |   var arguments;\n     |       ^\n  15 | ***REMOVED***\n  16 | assert.throws(SyntaxError, f);\n  17 |  <at omitted>",
  "test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-var-bind-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-var-bind-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-var-bind-declare-arguments.js: arguments is a reserved word in strict mode (14:6)\n  12 | \n  13 | function * f(p = eval(\"var arguments\")) ***REMOVED***\n> 14 |   var arguments;\n     |       ^\n  15 | ***REMOVED***\n  16 | assert.throws(SyntaxError, f);\n  17 |  <at omitted>",
  "test/language/eval-code/direct/gen-func-decl-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-decl-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js: test/language/eval-code/direct/gen-func-decl-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js: Line 13:9 Unexpected token * (and 6 more errors)",
  "test/language/eval-code/direct/gen-func-decl-no-pre-existing-arguments-bindings-are-present-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-decl-no-pre-existing-arguments-bindings-are-present-declare-arguments.js: test/language/eval-code/direct/gen-func-decl-no-pre-existing-arguments-bindings-are-present-declare-arguments.js: Line 13:9 Unexpected token * (and 6 more errors)",
  "test/language/eval-code/direct/gen-func-expr-named-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-expr-named-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-named-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:58)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n> 14 | let f = function * f(p = eval(\"var arguments = 'param'\"), arguments) ***REMOVED***\n     |                                                           ^\n  15 |   \n  16 | ***REMOVED***\n  17 | assert.throws(SyntaxError, f); <at omitted>",
  "test/language/eval-code/direct/gen-func-expr-named-a-following-parameter-is-named-arguments-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-expr-named-a-following-parameter-is-named-arguments-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-named-a-following-parameter-is-named-arguments-declare-arguments.js: arguments is a reserved word in strict mode (14:48)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n> 14 | let f = function * f(p = eval(\"var arguments\"), arguments) ***REMOVED***\n     |                                                 ^\n  15 |   \n  16 | ***REMOVED***\n  17 | assert.throws(SyntaxError, f); <at omitted>",
  "test/language/eval-code/direct/gen-func-expr-named-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-expr-named-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-named-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:21)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n> 14 | let f = function * f(arguments, p = eval(\"var arguments = 'param'\")) ***REMOVED***\n     |                      ^\n  15 |   \n  16 | ***REMOVED***\n  17 | assert.throws(SyntaxError, f); <at omitted>",
  "test/language/eval-code/direct/gen-func-expr-named-a-preceding-parameter-is-named-arguments-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-expr-named-a-preceding-parameter-is-named-arguments-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-named-a-preceding-parameter-is-named-arguments-declare-arguments.js: arguments is a reserved word in strict mode (14:21)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n> 14 | let f = function * f(arguments, p = eval(\"var arguments\")) ***REMOVED***\n     |                      ^\n  15 |   \n  16 | ***REMOVED***\n  17 | assert.throws(SyntaxError, f); <at omitted>",
  "test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:11)\n  12 | \n  13 | let f = function * f(p = eval(\"var arguments = 'param'\")) ***REMOVED***\n> 14 |   function arguments() ***REMOVED******REMOVED***\n     |            ^\n  15 | ***REMOVED***\n  16 | assert.throws(SyntaxError, f);\n  17 |  <at omitted>",
  "test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-func-decl-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-func-decl-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-func-decl-declare-arguments.js: arguments is a reserved word in strict mode (14:11)\n  12 | \n  13 | let f = function * f(p = eval(\"var arguments\")) ***REMOVED***\n> 14 |   function arguments() ***REMOVED******REMOVED***\n     |            ^\n  15 | ***REMOVED***\n  16 | assert.throws(SyntaxError, f);\n  17 |  <at omitted>",
  "test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (15:6)\n  13 | \n  14 | let f = function * f(p = eval(\"var arguments = 'param'\")) ***REMOVED***\n> 15 |   let arguments;\n     |       ^\n  16 | ***REMOVED***\n  17 | assert.throws(SyntaxError, f);\n  18 |  <at omitted>",
  "test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-lex-bind-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-lex-bind-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-lex-bind-declare-arguments.js: arguments is a reserved word in strict mode (15:6)\n  13 | \n  14 | let f = function * f(p = eval(\"var arguments\")) ***REMOVED***\n> 15 |   let arguments;\n     |       ^\n  16 | ***REMOVED***\n  17 | assert.throws(SyntaxError, f);\n  18 |  <at omitted>",
  "test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:6)\n  12 | \n  13 | let f = function * f(p = eval(\"var arguments = 'param'\")) ***REMOVED***\n> 14 |   var arguments;\n     |       ^\n  15 | ***REMOVED***\n  16 | assert.throws(SyntaxError, f);\n  17 |  <at omitted>",
  "test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-var-bind-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-var-bind-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-var-bind-declare-arguments.js: arguments is a reserved word in strict mode (14:6)\n  12 | \n  13 | let f = function * f(p = eval(\"var arguments\")) ***REMOVED***\n> 14 |   var arguments;\n     |       ^\n  15 | ***REMOVED***\n  16 | assert.throws(SyntaxError, f);\n  17 |  <at omitted>",
  "test/language/eval-code/direct/gen-func-expr-named-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-expr-named-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js: test/language/eval-code/direct/gen-func-expr-named-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js: Line 13:17 Unexpected token * (and 1 more errors)",
  "test/language/eval-code/direct/gen-func-expr-named-no-pre-existing-arguments-bindings-are-present-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-expr-named-no-pre-existing-arguments-bindings-are-present-declare-arguments.js: test/language/eval-code/direct/gen-func-expr-named-no-pre-existing-arguments-bindings-are-present-declare-arguments.js: Line 13:17 Unexpected token * (and 1 more errors)",
  "test/language/eval-code/direct/gen-func-expr-nameless-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-expr-nameless-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-nameless-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:57)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n> 14 | let f = function * (p = eval(\"var arguments = 'param'\"), arguments) ***REMOVED***\n     |                                                          ^\n  15 |   \n  16 | ***REMOVED***\n  17 | assert.throws(SyntaxError, f); <at omitted>",
  "test/language/eval-code/direct/gen-func-expr-nameless-a-following-parameter-is-named-arguments-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-expr-nameless-a-following-parameter-is-named-arguments-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-nameless-a-following-parameter-is-named-arguments-declare-arguments.js: arguments is a reserved word in strict mode (14:47)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n> 14 | let f = function * (p = eval(\"var arguments\"), arguments) ***REMOVED***\n     |                                                ^\n  15 |   \n  16 | ***REMOVED***\n  17 | assert.throws(SyntaxError, f); <at omitted>",
  "test/language/eval-code/direct/gen-func-expr-nameless-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-expr-nameless-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-nameless-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:20)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n> 14 | let f = function * (arguments, p = eval(\"var arguments = 'param'\")) ***REMOVED***\n     |                     ^\n  15 |   \n  16 | ***REMOVED***\n  17 | assert.throws(SyntaxError, f); <at omitted>",
  "test/language/eval-code/direct/gen-func-expr-nameless-a-preceding-parameter-is-named-arguments-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-expr-nameless-a-preceding-parameter-is-named-arguments-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-nameless-a-preceding-parameter-is-named-arguments-declare-arguments.js: arguments is a reserved word in strict mode (14:20)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n> 14 | let f = function * (arguments, p = eval(\"var arguments\")) ***REMOVED***\n     |                     ^\n  15 |   \n  16 | ***REMOVED***\n  17 | assert.throws(SyntaxError, f); <at omitted>",
  "test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:11)\n  12 | \n  13 | let f = function * (p = eval(\"var arguments = 'param'\")) ***REMOVED***\n> 14 |   function arguments() ***REMOVED******REMOVED***\n     |            ^\n  15 | ***REMOVED***\n  16 | assert.throws(SyntaxError, f);\n  17 |  <at omitted>",
  "test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-func-decl-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-func-decl-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-func-decl-declare-arguments.js: arguments is a reserved word in strict mode (14:11)\n  12 | \n  13 | let f = function * (p = eval(\"var arguments\")) ***REMOVED***\n> 14 |   function arguments() ***REMOVED******REMOVED***\n     |            ^\n  15 | ***REMOVED***\n  16 | assert.throws(SyntaxError, f);\n  17 |  <at omitted>",
  "test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (15:6)\n  13 | \n  14 | let f = function * (p = eval(\"var arguments = 'param'\")) ***REMOVED***\n> 15 |   let arguments;\n     |       ^\n  16 | ***REMOVED***\n  17 | assert.throws(SyntaxError, f);\n  18 |  <at omitted>",
  "test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-lex-bind-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-lex-bind-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-lex-bind-declare-arguments.js: arguments is a reserved word in strict mode (15:6)\n  13 | \n  14 | let f = function * (p = eval(\"var arguments\")) ***REMOVED***\n> 15 |   let arguments;\n     |       ^\n  16 | ***REMOVED***\n  17 | assert.throws(SyntaxError, f);\n  18 |  <at omitted>",
  "test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:6)\n  12 | \n  13 | let f = function * (p = eval(\"var arguments = 'param'\")) ***REMOVED***\n> 14 |   var arguments;\n     |       ^\n  15 | ***REMOVED***\n  16 | assert.throws(SyntaxError, f);\n  17 |  <at omitted>",
  "test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-var-bind-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-var-bind-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-var-bind-declare-arguments.js: arguments is a reserved word in strict mode (14:6)\n  12 | \n  13 | let f = function * (p = eval(\"var arguments\")) ***REMOVED***\n> 14 |   var arguments;\n     |       ^\n  15 | ***REMOVED***\n  16 | assert.throws(SyntaxError, f);\n  17 |  <at omitted>",
  "test/language/eval-code/direct/gen-func-expr-nameless-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-expr-nameless-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js: test/language/eval-code/direct/gen-func-expr-nameless-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js: Line 13:17 Unexpected token * (and 6 more errors)",
  "test/language/eval-code/direct/gen-func-expr-nameless-no-pre-existing-arguments-bindings-are-present-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-expr-nameless-no-pre-existing-arguments-bindings-are-present-declare-arguments.js: test/language/eval-code/direct/gen-func-expr-nameless-no-pre-existing-arguments-bindings-are-present-declare-arguments.js: Line 13:17 Unexpected token * (and 6 more errors)",
  "test/language/eval-code/direct/gen-meth-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-meth-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-meth-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:51)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n> 14 | let o = ***REMOVED*** * f(p = eval(\"var arguments = 'param'\"), arguments) ***REMOVED***\n     |                                                    ^\n  15 |   \n  16 | ***REMOVED******REMOVED***;\n  17 | assert.throws(SyntaxError, o.f); <at omitted>",
  "test/language/eval-code/direct/gen-meth-a-following-parameter-is-named-arguments-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-meth-a-following-parameter-is-named-arguments-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-meth-a-following-parameter-is-named-arguments-declare-arguments.js: arguments is a reserved word in strict mode (14:41)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n> 14 | let o = ***REMOVED*** * f(p = eval(\"var arguments\"), arguments) ***REMOVED***\n     |                                          ^\n  15 |   \n  16 | ***REMOVED******REMOVED***;\n  17 | assert.throws(SyntaxError, o.f); <at omitted>",
  "test/language/eval-code/direct/gen-meth-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-meth-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-meth-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:14)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n> 14 | let o = ***REMOVED*** * f(arguments, p = eval(\"var arguments = 'param'\")) ***REMOVED***\n     |               ^\n  15 |   \n  16 | ***REMOVED******REMOVED***;\n  17 | assert.throws(SyntaxError, o.f); <at omitted>",
  "test/language/eval-code/direct/gen-meth-a-preceding-parameter-is-named-arguments-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-meth-a-preceding-parameter-is-named-arguments-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-meth-a-preceding-parameter-is-named-arguments-declare-arguments.js: arguments is a reserved word in strict mode (14:14)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n> 14 | let o = ***REMOVED*** * f(arguments, p = eval(\"var arguments\")) ***REMOVED***\n     |               ^\n  15 |   \n  16 | ***REMOVED******REMOVED***;\n  17 | assert.throws(SyntaxError, o.f); <at omitted>",
  "test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:11)\n  12 | \n  13 | let o = ***REMOVED*** * f(p = eval(\"var arguments = 'param'\")) ***REMOVED***\n> 14 |   function arguments() ***REMOVED******REMOVED***\n     |            ^\n  15 | ***REMOVED******REMOVED***;\n  16 | assert.throws(SyntaxError, o.f);\n  17 |  <at omitted>",
  "test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-func-decl-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-func-decl-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-func-decl-declare-arguments.js: arguments is a reserved word in strict mode (14:11)\n  12 | \n  13 | let o = ***REMOVED*** * f(p = eval(\"var arguments\")) ***REMOVED***\n> 14 |   function arguments() ***REMOVED******REMOVED***\n     |            ^\n  15 | ***REMOVED******REMOVED***;\n  16 | assert.throws(SyntaxError, o.f);\n  17 |  <at omitted>",
  "test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (15:6)\n  13 | \n  14 | let o = ***REMOVED*** * f(p = eval(\"var arguments = 'param'\")) ***REMOVED***\n> 15 |   let arguments;\n     |       ^\n  16 | ***REMOVED******REMOVED***;\n  17 | assert.throws(SyntaxError, o.f);\n  18 |  <at omitted>",
  "test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-lex-bind-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-lex-bind-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-lex-bind-declare-arguments.js: arguments is a reserved word in strict mode (15:6)\n  13 | \n  14 | let o = ***REMOVED*** * f(p = eval(\"var arguments\")) ***REMOVED***\n> 15 |   let arguments;\n     |       ^\n  16 | ***REMOVED******REMOVED***;\n  17 | assert.throws(SyntaxError, o.f);\n  18 |  <at omitted>",
  "test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:6)\n  12 | \n  13 | let o = ***REMOVED*** * f(p = eval(\"var arguments = 'param'\")) ***REMOVED***\n> 14 |   var arguments;\n     |       ^\n  15 | ***REMOVED******REMOVED***;\n  16 | assert.throws(SyntaxError, o.f);\n  17 |  <at omitted>",
  "test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-var-bind-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-var-bind-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-var-bind-declare-arguments.js: arguments is a reserved word in strict mode (14:6)\n  12 | \n  13 | let o = ***REMOVED*** * f(p = eval(\"var arguments\")) ***REMOVED***\n> 14 |   var arguments;\n     |       ^\n  15 | ***REMOVED******REMOVED***;\n  16 | assert.throws(SyntaxError, o.f);\n  17 |  <at omitted>",
  "test/language/eval-code/direct/gen-meth-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-meth-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js: test/language/eval-code/direct/gen-meth-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js: Line 13:12 Unexpected token * (and 11 more errors)",
  "test/language/eval-code/direct/gen-meth-no-pre-existing-arguments-bindings-are-present-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-meth-no-pre-existing-arguments-bindings-are-present-declare-arguments.js: test/language/eval-code/direct/gen-meth-no-pre-existing-arguments-bindings-are-present-declare-arguments.js: Line 13:12 Unexpected token * (and 11 more errors)",
  "test/language/eval-code/direct/lex-env-distinct-cls.js-strict:true": "test/language/eval-code/direct/lex-env-distinct-cls.js: SyntaxError: SyntaxError: <eval>: Line 1:1 Unexpected reserved word <at omitted>",
  "test/language/eval-code/direct/lex-env-no-init-cls.js-strict:true": "test/language/eval-code/direct/lex-env-no-init-cls.js: Test262Error: Expected a ReferenceError but got a SyntaxError <at omitted>",
  "test/language/eval-code/direct/new.target-fn.js-strict:true": "test/language/eval-code/direct/new.target-fn.js: SyntaxError: SyntaxError: <eval>: Line 1:1 new.target expression is not allowed here <at omitted>",
  "test/language/eval-code/direct/super-prop-method.js-strict:true": "test/language/eval-code/direct/super-prop-method.js: SyntaxError: SyntaxError: <eval>: Line 1:1 Unexpected reserved word <at omitted>",
  "test/language/eval-code/indirect/lex-env-distinct-cls.js-strict:true": "test/language/eval-code/indirect/lex-env-distinct-cls.js: SyntaxError: SyntaxError: <eval>: Line 1:1 Unexpected reserved word <at omitted>",
  "test/language/eval-code/indirect/lex-env-no-init-cls.js-strict:true": "test/language/eval-code/indirect/lex-env-no-init-cls.js: Test262Error: Expected a ReferenceError but got a SyntaxError <at omitted>",
  "test/language/expressions/arrow-function/dstr/ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/arrow-function/dstr/ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/expressions/arrow-function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/arrow-function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/expressions/arrow-function/dstr/dflt-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/arrow-function/dstr/dflt-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/expressions/arrow-function/dstr/obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/arrow-function/dstr/obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/expressions/arrow-function/lexical-super-call-from-within-constructor.js-strict:true": "test/language/expressions/arrow-function/lexical-super-call-from-within-constructor.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all <at omitted>",
  "test/language/expressions/arrow-function/lexical-supercall-from-immediately-invoked-arrow.js-strict:true": "test/language/expressions/arrow-function/lexical-supercall-from-immediately-invoked-arrow.js: ReferenceError: _this is not defined <at omitted>",
  "test/language/expressions/assignment/S11.13.1_A7_T3.js-strict:true": "test/language/expressions/assignment/S11.13.1_A7_T3.js: Test262Error: Expected a DummyError but got a Test262Error <at omitted>",
  "test/language/expressions/assignment/dstr/array-elem-init-fn-name-class.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-init-fn-name-class.js: Test262Error: descriptor value should be cls <at omitted>",
  "test/language/expressions/assignment/dstr/array-rest-before-elision.js-strict:true": "test/language/expressions/assignment/dstr/array-rest-before-elision.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/assignment/dstr/array-rest-elision-invalid.js-strict:true": "test/language/expressions/assignment/dstr/array-rest-elision-invalid.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/assignment/dstr/obj-id-init-fn-name-class.js-strict:true": "test/language/expressions/assignment/dstr/obj-id-init-fn-name-class.js: Test262Error: descriptor value should be cls <at omitted>",
  "test/language/expressions/assignment/dstr/obj-prop-elem-init-fn-name-class.js-strict:true": "test/language/expressions/assignment/dstr/obj-prop-elem-init-fn-name-class.js: Test262Error: descriptor value should be cls <at omitted>",
  "test/language/expressions/assignment/fn-name-lhs-cover.js-strict:true": "test/language/expressions/assignment/fn-name-lhs-cover.js: Test262Error: descriptor value should be  <at omitted>",
  "test/language/expressions/assignment/target-assignment-inside-function.js-strict:true": "test/language/expressions/assignment/target-assignment-inside-function.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/assignment/target-assignment.js-strict:true": "test/language/expressions/assignment/target-assignment.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/assignmenttargettype/direct-lefthandsideexpression-assignment-assignmentexpression-0.js-strict:true": "test/language/expressions/assignmenttargettype/direct-lefthandsideexpression-assignment-assignmentexpression-0.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/assignmenttargettype/parenthesized-lefthandsideexpression-assignment-assignmentexpression-0.js-strict:true": "test/language/expressions/assignmenttargettype/parenthesized-lefthandsideexpression-assignment-assignmentexpression-0.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/class/class-name-ident-await-escaped.js-strict:true": "test/language/expressions/class/class-name-ident-await-escaped.js: SyntaxError: test/language/expressions/class/class-name-ident-await-escaped.js: await is a reserved word (18:14)\n  16 | ---*/\n  17 | \n> 18 | var C = class aw\\u0061it ***REMOVED******REMOVED***;\n     |               ^\n  19 |  <at omitted>",
  "test/language/expressions/class/class-name-ident-await.js-strict:true": "test/language/expressions/class/class-name-ident-await.js: SyntaxError: test/language/expressions/class/class-name-ident-await.js: await is a reserved word (17:14)\n  15 | ---*/\n  16 | \n> 17 | var C = class await ***REMOVED******REMOVED***;\n     |               ^\n  18 |  <at omitted>",
  "test/language/expressions/class/constructor-this-tdz-during-initializers.js-strict:true": "test/language/expressions/class/constructor-this-tdz-during-initializers.js: SyntaxError: test/language/expressions/class/constructor-this-tdz-during-initializers.js: Unexpected token (31:8)\n  29 | \n  30 | var C = class extends Base ***REMOVED***\n> 31 |   field = (thisDuringField = this, thisFromProbe = probeCtorThis());\n     |         ^\n  32 |   constructor() ***REMOVED***\n  33 |     probeCtorThis = () => this;\n  34 |     assert.throws(ReferenceError, probeCtorThis); <at omitted>",
  "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-async-arrow-function-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-async-arrow-function-expression.js: test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-async-arrow-function-expression.js: Line 44:5 Malformed arrow function parameter list (and 15 more errors)",
  "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-await-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-await-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-await-expression.js: await is a reserved word (41:7)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   get [await 9]() ***REMOVED***\n     |        ^\n  42 |     return 9;\n  43 |   ***REMOVED***\n  44 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-expression-coalesce.js-strict:true": "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-expression-coalesce.js: SyntaxError: test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-expression-coalesce.js: Unexpected token (41:10)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   get [x ?? 1]() ***REMOVED***\n     |           ^\n  42 |     return 2;\n  43 |   ***REMOVED***\n  44 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-integer-separators.js-strict:true": "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-integer-separators.js: SyntaxError: test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-integer-separators.js: Identifier directly after number (40:8)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   get [1_2_3_4_5_6_7_8]() ***REMOVED***\n     |         ^\n  41 |     return 1_2_3_4_5_6_7_8;\n  42 |   ***REMOVED***\n  43 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-computed-property-name-from-async-arrow-function-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-computed-property-name-from-async-arrow-function-expression.js: test/language/expressions/class/cpn-class-expr-computed-property-name-from-async-arrow-function-expression.js: Line 40:5 Malformed arrow function parameter list (and 13 more errors)",
  "test/language/expressions/class/cpn-class-expr-computed-property-name-from-await-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-computed-property-name-from-await-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-computed-property-name-from-await-expression.js: await is a reserved word (41:3)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [await 9]() ***REMOVED***\n     |    ^\n  42 |     return 9;\n  43 |   ***REMOVED***\n  44 |   static [await 9]() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/cpn-class-expr-computed-property-name-from-expression-coalesce.js-strict:true": "test/language/expressions/class/cpn-class-expr-computed-property-name-from-expression-coalesce.js: SyntaxError: test/language/expressions/class/cpn-class-expr-computed-property-name-from-expression-coalesce.js: Unexpected token (41:6)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [x ?? 1]() ***REMOVED***\n     |       ^\n  42 |     return 2;\n  43 |   ***REMOVED***\n  44 |   static [x ?? 1]() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/cpn-class-expr-computed-property-name-from-integer-separators.js-strict:true": "test/language/expressions/class/cpn-class-expr-computed-property-name-from-integer-separators.js: SyntaxError: test/language/expressions/class/cpn-class-expr-computed-property-name-from-integer-separators.js: Identifier directly after number (40:4)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1_2_3_4_5_6_7_8]() ***REMOVED***\n     |     ^\n  41 |     return 1_2_3_4_5_6_7_8;\n  42 |   ***REMOVED***\n  43 |   static [1_2_3_4_5_6_7_8]() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-additive-expression-add.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-additive-expression-add.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-additive-expression-add.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1 + 1] = 2;\n     |           ^\n  41 | \n  42 |   static [1 + 1] = 2;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-additive-expression-subtract.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-additive-expression-subtract.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-additive-expression-subtract.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1 - 1] = 0;\n     |           ^\n  41 | \n  42 |   static [1 - 1] = 0;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-arrow-function-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-arrow-function-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-arrow-function-expression.js: Unexpected token (40:14)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [() => ***REMOVED*** ***REMOVED***] = 1;\n     |               ^\n  41 | \n  42 |   static [() => ***REMOVED*** ***REMOVED***] = 1;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-assignment-expression-assignment.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-assignment-expression-assignment.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-assignment-expression-assignment.js: Unexpected token (41:10)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [x = 1] = 2;\n     |           ^\n  42 | \n  43 |   static [x = 1] = 2;\n  44 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-assignment-expression-bitwise-or.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-assignment-expression-bitwise-or.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-assignment-expression-bitwise-or.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [x |= 1] = 2;\n     |            ^\n  42 | \n  43 |   static [x |= 1] = 2;\n  44 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-async-arrow-function-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-async-arrow-function-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-async-arrow-function-expression.js: Unexpected token (40:19)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [async () => ***REMOVED******REMOVED***] = 1;\n     |                    ^\n  41 | \n  42 |   static [async () => ***REMOVED******REMOVED***] = 1;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-await-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-await-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-await-expression.js: await is a reserved word (41:3)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [await 9] = 9;\n     |    ^\n  42 | \n  43 |   static [await 9] = 9;\n  44 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-condition-expression-false.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-condition-expression-false.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-condition-expression-false.js: Unexpected token (40:18)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [false ? 1 : 2] = 1;\n     |                   ^\n  41 | \n  42 |   static [false ? 1 : 2] = 1;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-condition-expression-true.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-condition-expression-true.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-condition-expression-true.js: Unexpected token (40:17)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [true ? 1 : 2] = 2;\n     |                  ^\n  41 | \n  42 |   static [true ? 1 : 2] = 2;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-decimal-e-notational-literal.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-decimal-e-notational-literal.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-decimal-e-notational-literal.js: Unexpected token (40:9)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1.e1] = 2;\n     |          ^\n  41 | \n  42 |   static [1.e1] = 2;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-decimal-literal.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-decimal-literal.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-decimal-literal.js: Unexpected token (40:8)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1.1] = 2;\n     |         ^\n  41 | \n  42 |   static [1.1] = 2;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-exponetiation-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-exponetiation-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-exponetiation-expression.js: Unexpected token (40:11)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [2 ** 2] = 4;\n     |            ^\n  41 | \n  42 |   static [2 ** 2] = 4;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-expression-coalesce.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-expression-coalesce.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-expression-coalesce.js: Unexpected token (41:6)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [x ?? 1] = 2;\n     |       ^\n  42 | \n  43 |   static [x ?? 1] = 2;\n  44 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-expression-logical-and.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-expression-logical-and.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-expression-logical-and.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [x && 1] = 2;\n     |            ^\n  42 | \n  43 |   static [x && 1] = 2;\n  44 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-expression-logical-or.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-expression-logical-or.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-expression-logical-or.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [x || 1] = 2;\n     |            ^\n  42 | \n  43 |   static [x || 1] = 2;\n  44 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-function-declaration.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-function-declaration.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-function-declaration.js: Unexpected token (41:8)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [f()] = 1;\n     |         ^\n  42 | \n  43 |   static [f()] = 1;\n  44 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-function-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-function-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-function-expression.js: Unexpected token (40:19)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [function () ***REMOVED******REMOVED***] = 1;\n     |                    ^\n  41 | \n  42 |   static [function () ***REMOVED******REMOVED***] = 1;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-identifier.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-identifier.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-identifier.js: Unexpected token (42:6)\n  40 | \n  41 | let C = class ***REMOVED***\n> 42 |   [x] = '2';\n     |       ^\n  43 | \n  44 |   static [x] = '2';\n  45 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-integer-e-notational-literal.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-integer-e-notational-literal.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-integer-e-notational-literal.js: Unexpected token (40:6)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1] = 2;\n     |       ^\n  41 | \n  42 |   static [1] = 2;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-integer-separators.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-integer-separators.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-integer-separators.js: Identifier directly after number (40:4)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1_2_3_4_5_6_7_8] = 1_2_3_4_5_6_7_8;\n     |     ^\n  41 | \n  42 |   static [1_2_3_4_5_6_7_8] = 1_2_3_4_5_6_7_8;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-math.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-math.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-math.js: Unexpected token (40:27)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1 + 2 - 3 * 4 / 5 ** 6] = 2.999232;\n     |                            ^\n  41 | \n  42 |   static [1 + 2 - 3 * 4 / 5 ** 6] = 2.999232;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-multiplicative-expression-div.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-multiplicative-expression-div.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-multiplicative-expression-div.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1 / 1] = 1;\n     |           ^\n  41 | \n  42 |   static [1 / 1] = 1;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-multiplicative-expression-mult.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-multiplicative-expression-mult.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-multiplicative-expression-mult.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1 * 1] = 1;\n     |           ^\n  41 | \n  42 |   static [1 * 1] = 1;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-null.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-null.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-null.js: Unexpected token (40:9)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [null] = null;\n     |          ^\n  41 | \n  42 |   static [null] = null;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-numeric-literal.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-numeric-literal.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-numeric-literal.js: Unexpected token (40:6)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1] = 2;\n     |       ^\n  41 | \n  42 |   static [1] = 2;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-string-literal.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-string-literal.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-string-literal.js: Unexpected token (40:8)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   ['1'] = '2';\n     |         ^\n  41 | \n  42 |   static ['1'] = '2';\n  43 | ***REMOVED***; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-additive-expression-add.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-additive-expression-add.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-additive-expression-add.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1 + 1] = () => ***REMOVED***\n     |           ^\n  41 |     return 2;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-additive-expression-subtract.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-additive-expression-subtract.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-additive-expression-subtract.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1 - 1] = () => ***REMOVED***\n     |           ^\n  41 |     return 0;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-arrow-function-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-arrow-function-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-arrow-function-expression.js: Unexpected token (40:14)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [() => ***REMOVED*** ***REMOVED***] = () => ***REMOVED***\n     |               ^\n  41 |     return 1;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-assignment-expression-assignment.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-assignment-expression-assignment.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-assignment-expression-assignment.js: Unexpected token (41:10)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [x = 1] = () => ***REMOVED***\n     |           ^\n  42 |     return 2;\n  43 |   ***REMOVED***;\n  44 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-assignment-expression-bitwise-or.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-assignment-expression-bitwise-or.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-assignment-expression-bitwise-or.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [x |= 1] = () => ***REMOVED***\n     |            ^\n  42 |     return 2;\n  43 |   ***REMOVED***;\n  44 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-async-arrow-function-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-async-arrow-function-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-async-arrow-function-expression.js: Unexpected token (40:19)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [async () => ***REMOVED******REMOVED***] = () => ***REMOVED***\n     |                    ^\n  41 |     return 1;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-await-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-await-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-await-expression.js: await is a reserved word (41:3)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [await 9] = () => ***REMOVED***\n     |    ^\n  42 |     return 9;\n  43 |   ***REMOVED***;\n  44 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-condition-expression-false.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-condition-expression-false.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-condition-expression-false.js: Unexpected token (40:18)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [false ? 1 : 2] = () => ***REMOVED***\n     |                   ^\n  41 |     return 1;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-condition-expression-true.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-condition-expression-true.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-condition-expression-true.js: Unexpected token (40:17)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [true ? 1 : 2] = () => ***REMOVED***\n     |                  ^\n  41 |     return 2;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-decimal-e-notational-literal.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-decimal-e-notational-literal.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-decimal-e-notational-literal.js: Unexpected token (40:9)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1.e1] = () => ***REMOVED***\n     |          ^\n  41 |     return 2;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-decimal-literal.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-decimal-literal.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-decimal-literal.js: Unexpected token (40:8)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1.1] = () => ***REMOVED***\n     |         ^\n  41 |     return 2;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-exponetiation-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-exponetiation-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-exponetiation-expression.js: Unexpected token (40:11)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [2 ** 2] = () => ***REMOVED***\n     |            ^\n  41 |     return 4;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-expression-coalesce.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-expression-coalesce.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-expression-coalesce.js: Unexpected token (41:6)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [x ?? 1] = () => ***REMOVED***\n     |       ^\n  42 |     return 2;\n  43 |   ***REMOVED***;\n  44 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-expression-logical-and.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-expression-logical-and.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-expression-logical-and.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [x && 1] = () => ***REMOVED***\n     |            ^\n  42 |     return 2;\n  43 |   ***REMOVED***;\n  44 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-expression-logical-or.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-expression-logical-or.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-expression-logical-or.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [x || 1] = () => ***REMOVED***\n     |            ^\n  42 |     return 2;\n  43 |   ***REMOVED***;\n  44 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-function-declaration.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-function-declaration.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-function-declaration.js: Unexpected token (41:8)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [f()] = () => ***REMOVED***\n     |         ^\n  42 |     return 1;\n  43 |   ***REMOVED***;\n  44 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-function-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-function-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-function-expression.js: Unexpected token (40:19)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [function () ***REMOVED******REMOVED***] = () => ***REMOVED***\n     |                    ^\n  41 |     return 1;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-identifier.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-identifier.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-identifier.js: Unexpected token (42:6)\n  40 | \n  41 | let C = class ***REMOVED***\n> 42 |   [x] = () => ***REMOVED***\n     |       ^\n  43 |     return '2';\n  44 |   ***REMOVED***;\n  45 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-integer-e-notational-literal.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-integer-e-notational-literal.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-integer-e-notational-literal.js: Unexpected token (40:6)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1] = () => ***REMOVED***\n     |       ^\n  41 |     return 2;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-integer-separators.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-integer-separators.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-integer-separators.js: Identifier directly after number (40:4)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1_2_3_4_5_6_7_8] = () => ***REMOVED***\n     |     ^\n  41 |     return 1_2_3_4_5_6_7_8;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-math.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-math.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-math.js: Unexpected token (40:27)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1 + 2 - 3 * 4 / 5 ** 6] = () => ***REMOVED***\n     |                            ^\n  41 |     return 2.999232;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-multiplicative-expression-div.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-multiplicative-expression-div.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-multiplicative-expression-div.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1 / 1] = () => ***REMOVED***\n     |           ^\n  41 |     return 1;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-multiplicative-expression-mult.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-multiplicative-expression-mult.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-multiplicative-expression-mult.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1 * 1] = () => ***REMOVED***\n     |           ^\n  41 |     return 1;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-null.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-null.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-null.js: Unexpected token (40:9)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [null] = () => ***REMOVED***\n     |          ^\n  41 |     return null;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-numeric-literal.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-numeric-literal.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-numeric-literal.js: Unexpected token (40:6)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1] = () => ***REMOVED***\n     |       ^\n  41 |     return 2;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-string-literal.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-string-literal.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-string-literal.js: Unexpected token (40:8)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   ['1'] = () => ***REMOVED***\n     |         ^\n  41 |     return '2';\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/expressions/class/dstr/meth-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/meth-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/expressions/class/dstr/meth-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/expressions/class/dstr/meth-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/expressions/class/dstr/meth-ary-ptrn-rest-ary-elem.js: Unexpected token (97:13)\n   95 | var callCount = 0;\n   96 | var C = class ***REMOVED***\n>  97 |   method([...[x, y, z]]) ***REMOVED***\n      |              ^\n   98 |     assert.sameValue(x, 3);\n   99 |     assert.sameValue(y, 4);\n  100 |     assert.sameValue(z, 5); <at omitted>",
  "test/language/expressions/class/dstr/meth-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/expressions/class/dstr/meth-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/expressions/class/dstr/meth-ary-ptrn-rest-ary-rest.js: Unexpected token (78:13)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   method([...[...x]]) ***REMOVED***\n     |              ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.sameValue(x.length, 3);\n  81 |     assert.sameValue(x[0], 1); <at omitted>",
  "test/language/expressions/class/dstr/meth-ary-ptrn-rest-obj-id.js-strict:true": "test/language/expressions/class/dstr/meth-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/expressions/class/dstr/meth-ary-ptrn-rest-obj-id.js: Unexpected token (77:13)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   method([...***REMOVED*** length ***REMOVED***]) ***REMOVED***\n     |              ^\n  78 |     assert.sameValue(length, 3);\n  79 |     callCount = callCount + 1;\n  80 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/meth-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/expressions/class/dstr/meth-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/expressions/class/dstr/meth-ary-ptrn-rest-obj-prop-id.js: Unexpected token (78:13)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   method([...***REMOVED*** 0: v, 1: w, 2: x, 3: y, length: z ***REMOVED***]) ***REMOVED***\n     |              ^\n  79 |     assert.sameValue(v, 7);\n  80 |     assert.sameValue(w, 8);\n  81 |     assert.sameValue(x, 9); <at omitted>",
  "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-ary-elem.js: Unexpected token (97:13)\n   95 | var callCount = 0;\n   96 | var C = class ***REMOVED***\n>  97 |   method([...[x, y, z]] = [3, 4, 5]) ***REMOVED***\n      |              ^\n   98 |     assert.sameValue(x, 3);\n   99 |     assert.sameValue(y, 4);\n  100 |     assert.sameValue(z, 5); <at omitted>",
  "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-ary-rest.js: Unexpected token (78:13)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   method([...[...x]] = values) ***REMOVED***\n     |              ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.sameValue(x.length, 3);\n  81 |     assert.sameValue(x[0], 1); <at omitted>",
  "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-obj-id.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-obj-id.js: Unexpected token (77:13)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   method([...***REMOVED*** length ***REMOVED***] = [1, 2, 3]) ***REMOVED***\n     |              ^\n  78 |     assert.sameValue(length, 3);\n  79 |     callCount = callCount + 1;\n  80 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-obj-prop-id.js: Unexpected token (78:13)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   method([...***REMOVED*** 0: v, 1: w, 2: x, 3: y, length: z ***REMOVED***] = [7, 8, 9]) ***REMOVED***\n     |              ^\n  79 |     assert.sameValue(v, 7);\n  80 |     assert.sameValue(w, 8);\n  81 |     assert.sameValue(x, 9); <at omitted>",
  "test/language/expressions/class/dstr/meth-dflt-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/expressions/class/dstr/meth-dflt-obj-ptrn-rest-getter.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-obj-ptrn-rest-getter.js: SyntaxError: test/language/expressions/class/dstr/meth-dflt-obj-ptrn-rest-getter.js: Unexpected token (66:10)\n  64 | var callCount = 0;\n  65 | var C = class ***REMOVED***\n> 66 |   method(***REMOVED***...x***REMOVED*** = ***REMOVED*** get v() ***REMOVED*** count++; return 2; ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |           ^\n  67 |     assert.sameValue(count, 1);\n  68 | \n  69 |     verifyProperty(x, \"v\", ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/meth-dflt-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/class/dstr/meth-dflt-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (67:10)\n  65 | var callCount = 0;\n  66 | var C = class ***REMOVED***\n> 67 |   method(***REMOVED***...rest***REMOVED*** = o) ***REMOVED***\n     |           ^\n  68 |     assert.sameValue(rest.x, undefined);\n  69 | \n  70 |     verifyProperty(rest, \"a\", ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/meth-dflt-obj-ptrn-rest-val-obj.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/expressions/class/dstr/meth-dflt-obj-ptrn-rest-val-obj.js: Unexpected token (65:16)\n  63 | var callCount = 0;\n  64 | var C = class ***REMOVED***\n> 65 |   method(***REMOVED***a, b, ...rest***REMOVED*** = ***REMOVED***x: 1, y: 2, a: 5, b: 3***REMOVED***) ***REMOVED***\n     |                 ^\n  66 |     assert.sameValue(rest.a, undefined);\n  67 |     assert.sameValue(rest.b, undefined);\n  68 |  <at omitted>",
  "test/language/expressions/class/dstr/meth-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/meth-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/expressions/class/dstr/meth-obj-ptrn-rest-getter.js-strict:true": "test/language/expressions/class/dstr/meth-obj-ptrn-rest-getter.js: SyntaxError: test/language/expressions/class/dstr/meth-obj-ptrn-rest-getter.js: Unexpected token (66:10)\n  64 | var callCount = 0;\n  65 | var C = class ***REMOVED***\n> 66 |   method(***REMOVED***...x***REMOVED***) ***REMOVED***\n     |           ^\n  67 |     assert.sameValue(count, 1);\n  68 | \n  69 |     verifyProperty(x, \"v\", ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/meth-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/class/dstr/meth-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/class/dstr/meth-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (67:10)\n  65 | var callCount = 0;\n  66 | var C = class ***REMOVED***\n> 67 |   method(***REMOVED***...rest***REMOVED***) ***REMOVED***\n     |           ^\n  68 |     assert.sameValue(rest.x, undefined);\n  69 | \n  70 |     verifyProperty(rest, \"a\", ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/meth-obj-ptrn-rest-val-obj.js-strict:true": "test/language/expressions/class/dstr/meth-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/expressions/class/dstr/meth-obj-ptrn-rest-val-obj.js: Unexpected token (65:16)\n  63 | var callCount = 0;\n  64 | var C = class ***REMOVED***\n> 65 |   method(***REMOVED***a, b, ...rest***REMOVED***) ***REMOVED***\n     |                 ^\n  66 |     assert.sameValue(rest.a, undefined);\n  67 |     assert.sameValue(rest.b, undefined);\n  68 |  <at omitted>",
  "test/language/expressions/class/dstr/meth-static-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/meth-static-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-ary-elem.js: Unexpected token (97:20)\n   95 | var callCount = 0;\n   96 | var C = class ***REMOVED***\n>  97 |   static method([...[x, y, z]]) ***REMOVED***\n      |                     ^\n   98 |     assert.sameValue(x, 3);\n   99 |     assert.sameValue(y, 4);\n  100 |     assert.sameValue(z, 5); <at omitted>",
  "test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-ary-rest.js: Unexpected token (78:20)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   static method([...[...x]]) ***REMOVED***\n     |                     ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.sameValue(x.length, 3);\n  81 |     assert.sameValue(x[0], 1); <at omitted>",
  "test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-obj-id.js-strict:true": "test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-obj-id.js: Unexpected token (77:20)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   static method([...***REMOVED*** length ***REMOVED***]) ***REMOVED***\n     |                     ^\n  78 |     assert.sameValue(length, 3);\n  79 |     callCount = callCount + 1;\n  80 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-obj-prop-id.js: Unexpected token (78:20)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   static method([...***REMOVED*** 0: v, 1: w, 2: x, 3: y, length: z ***REMOVED***]) ***REMOVED***\n     |                     ^\n  79 |     assert.sameValue(v, 7);\n  80 |     assert.sameValue(w, 8);\n  81 |     assert.sameValue(x, 9); <at omitted>",
  "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-elem.js: Unexpected token (97:20)\n   95 | var callCount = 0;\n   96 | var C = class ***REMOVED***\n>  97 |   static method([...[x, y, z]] = [3, 4, 5]) ***REMOVED***\n      |                     ^\n   98 |     assert.sameValue(x, 3);\n   99 |     assert.sameValue(y, 4);\n  100 |     assert.sameValue(z, 5); <at omitted>",
  "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-rest.js: Unexpected token (78:20)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   static method([...[...x]] = values) ***REMOVED***\n     |                     ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.sameValue(x.length, 3);\n  81 |     assert.sameValue(x[0], 1); <at omitted>",
  "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-obj-id.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-obj-id.js: Unexpected token (77:20)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   static method([...***REMOVED*** length ***REMOVED***] = [1, 2, 3]) ***REMOVED***\n     |                     ^\n  78 |     assert.sameValue(length, 3);\n  79 |     callCount = callCount + 1;\n  80 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-obj-prop-id.js: Unexpected token (78:20)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   static method([...***REMOVED*** 0: v, 1: w, 2: x, 3: y, length: z ***REMOVED***] = [7, 8, 9]) ***REMOVED***\n     |                     ^\n  79 |     assert.sameValue(v, 7);\n  80 |     assert.sameValue(w, 8);\n  81 |     assert.sameValue(x, 9); <at omitted>",
  "test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-rest-getter.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-rest-getter.js: SyntaxError: test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-rest-getter.js: Unexpected token (66:17)\n  64 | var callCount = 0;\n  65 | var C = class ***REMOVED***\n> 66 |   static method(***REMOVED***...x***REMOVED*** = ***REMOVED*** get v() ***REMOVED*** count++; return 2; ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |                  ^\n  67 |     assert.sameValue(count, 1);\n  68 | \n  69 |     verifyProperty(x, \"v\", ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (67:17)\n  65 | var callCount = 0;\n  66 | var C = class ***REMOVED***\n> 67 |   static method(***REMOVED***...rest***REMOVED*** = o) ***REMOVED***\n     |                  ^\n  68 |     assert.sameValue(rest.x, undefined);\n  69 | \n  70 |     verifyProperty(rest, \"a\", ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-rest-val-obj.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-rest-val-obj.js: Unexpected token (65:23)\n  63 | var callCount = 0;\n  64 | var C = class ***REMOVED***\n> 65 |   static method(***REMOVED***a, b, ...rest***REMOVED*** = ***REMOVED***x: 1, y: 2, a: 5, b: 3***REMOVED***) ***REMOVED***\n     |                        ^\n  66 |     assert.sameValue(rest.a, undefined);\n  67 |     assert.sameValue(rest.b, undefined);\n  68 |  <at omitted>",
  "test/language/expressions/class/dstr/meth-static-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/meth-static-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/expressions/class/dstr/meth-static-obj-ptrn-rest-getter.js-strict:true": "test/language/expressions/class/dstr/meth-static-obj-ptrn-rest-getter.js: SyntaxError: test/language/expressions/class/dstr/meth-static-obj-ptrn-rest-getter.js: Unexpected token (66:17)\n  64 | var callCount = 0;\n  65 | var C = class ***REMOVED***\n> 66 |   static method(***REMOVED***...x***REMOVED***) ***REMOVED***\n     |                  ^\n  67 |     assert.sameValue(count, 1);\n  68 | \n  69 |     verifyProperty(x, \"v\", ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/meth-static-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/class/dstr/meth-static-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/class/dstr/meth-static-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (67:17)\n  65 | var callCount = 0;\n  66 | var C = class ***REMOVED***\n> 67 |   static method(***REMOVED***...rest***REMOVED***) ***REMOVED***\n     |                  ^\n  68 |     assert.sameValue(rest.x, undefined);\n  69 | \n  70 |     verifyProperty(rest, \"a\", ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/meth-static-obj-ptrn-rest-val-obj.js-strict:true": "test/language/expressions/class/dstr/meth-static-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/expressions/class/dstr/meth-static-obj-ptrn-rest-val-obj.js: Unexpected token (65:23)\n  63 | var callCount = 0;\n  64 | var C = class ***REMOVED***\n> 65 |   static method(***REMOVED***a, b, ...rest***REMOVED***) ***REMOVED***\n     |                        ^\n  66 |     assert.sameValue(rest.a, undefined);\n  67 |     assert.sameValue(rest.b, undefined);\n  68 |  <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-init-iter-close.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-init-iter-close.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-init-iter-close.js: Unexpected character '#' (87:2)\n  85 | var callCount = 0;\n  86 | var C = class ***REMOVED***\n> 87 |   #method([x]) ***REMOVED***\n     |   ^\n  88 |     assert.sameValue(doneCallCount, 1);\n  89 |     callCount = callCount + 1;\n  90 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-init-iter-no-close.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-init-iter-no-close.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-init-iter-no-close.js: Unexpected character '#' (87:2)\n  85 | var callCount = 0;\n  86 | var C = class ***REMOVED***\n> 87 |   #method([x]) ***REMOVED***\n     |   ^\n  88 |     assert.sameValue(doneCallCount, 0);\n  89 |     callCount = callCount + 1;\n  90 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-name-iter-val.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-name-iter-val.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-name-iter-val.js: Unexpected character '#' (84:2)\n  82 | var callCount = 0;\n  83 | var C = class ***REMOVED***\n> 84 |   #method([x, y, z]) ***REMOVED***\n     |   ^\n  85 |     assert.sameValue(x, 1);\n  86 |     assert.sameValue(y, 2);\n  87 |     assert.sameValue(z, 3); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-elem-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-elem-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-elem-init.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   #method([[x, y, z] = [4, 5, 6]]) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(x, 4);\n  78 |     assert.sameValue(y, 5);\n  79 |     assert.sameValue(z, 6); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-elem-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-elem-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-elem-iter.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   #method([[x, y, z] = [4, 5, 6]]) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(x, 7);\n  79 |     assert.sameValue(y, 8);\n  80 |     assert.sameValue(z, 9); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-empty-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-empty-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-empty-iter.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   #method([[] = function() ***REMOVED*** initCount += 1; ***REMOVED***()]) ***REMOVED***\n     |   ^\n  79 |     assert.sameValue(initCount, 0);\n  80 |     callCount = callCount + 1;\n  81 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-rest-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-rest-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-rest-init.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   #method([[...x] = values]) ***REMOVED***\n     |   ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.sameValue(x[0], 2);\n  80 |     assert.sameValue(x[1], 1); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-rest-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-rest-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-rest-iter.js: Unexpected character '#' (79:2)\n  77 | var callCount = 0;\n  78 | var C = class ***REMOVED***\n> 79 |   #method([[...x] = function() ***REMOVED*** initCount += 1; ***REMOVED***()]) ***REMOVED***\n     |   ^\n  80 |     assert(Array.isArray(x));\n  81 |     assert.sameValue(x[0], 2);\n  82 |     assert.sameValue(x[1], 1); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-exhausted.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-exhausted.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-exhausted.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   #method([x = 23]) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(x, 23);\n  79 |     callCount = callCount + 1;\n  80 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-arrow.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-arrow.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   #method([arrow = () => ***REMOVED******REMOVED***]) ***REMOVED***\n     |   ^\n  79 |     assert.sameValue(arrow.name, 'arrow');\n  80 |     callCount = callCount + 1;\n  81 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-class.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-class.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   #method([cls = class ***REMOVED******REMOVED***, xCls = class X ***REMOVED******REMOVED***, xCls2 = class ***REMOVED*** static name() ***REMOVED******REMOVED*** ***REMOVED***]) ***REMOVED***\n     |   ^\n  79 |     assert.sameValue(cls.name, 'cls');\n  80 |     assert.notSameValue(xCls.name, 'xCls');\n  81 |     assert.notSameValue(xCls2.name, 'xCls2'); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-cover.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-cover.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   #method([cover = (function () ***REMOVED******REMOVED***), xCover = (0, function() ***REMOVED******REMOVED***)]) ***REMOVED***\n     |   ^\n  79 |     assert.sameValue(cover.name, 'cover');\n  80 |     assert.notSameValue(xCover.name, 'xCover');\n  81 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-fn.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-fn.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   #method([fn = function () ***REMOVED******REMOVED***, xFn = function x() ***REMOVED******REMOVED***]) ***REMOVED***\n     |   ^\n  79 |     assert.sameValue(fn.name, 'fn');\n  80 |     assert.notSameValue(xFn.name, 'xFn');\n  81 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-hole.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-hole.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-hole.js: Unexpected character '#' (72:2)\n  70 | var callCount = 0;\n  71 | var C = class ***REMOVED***\n> 72 |   #method([x = 23]) ***REMOVED***\n     |   ^\n  73 |     assert.sameValue(x, 23);\n  74 |     // another statement\n  75 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-skipped.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-skipped.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-skipped.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   #method([w = counter(), x = counter(), y = counter(), z = counter()]) ***REMOVED***\n     |   ^\n  79 |     assert.sameValue(w, null);\n  80 |     assert.sameValue(x, 0);\n  81 |     assert.sameValue(y, false); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-undef.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-undef.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-undef.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   #method([x = 23]) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(x, 23);\n  78 |     callCount = callCount + 1;\n  79 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-iter-complete.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-iter-complete.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-iter-complete.js: Unexpected character '#' (80:2)\n  78 | var callCount = 0;\n  79 | var C = class ***REMOVED***\n> 80 |   #method([x]) ***REMOVED***\n     |   ^\n  81 |     assert.sameValue(x, undefined);\n  82 |     callCount = callCount + 1;\n  83 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-iter-done.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-iter-done.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-iter-done.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | var C = class ***REMOVED***\n> 75 |   #method([_, x]) ***REMOVED***\n     |   ^\n  76 |     assert.sameValue(x, undefined);\n  77 |     callCount = callCount + 1;\n  78 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-iter-val.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-iter-val.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-iter-val.js: Unexpected character '#' (84:2)\n  82 | var callCount = 0;\n  83 | var C = class ***REMOVED***\n> 84 |   #method([x, y, z]) ***REMOVED***\n     |   ^\n  85 |     assert.sameValue(x, 1);\n  86 |     assert.sameValue(y, 2);\n  87 |     assert.sameValue(z, 3); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-obj-id-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-obj-id-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-obj-id-init.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   #method([***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 44, y: 55, z: 66 ***REMOVED***]) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(x, 44);\n  78 |     assert.sameValue(y, 55);\n  79 |     assert.sameValue(z, 66); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-obj-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-obj-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-obj-id.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   #method([***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 44, y: 55, z: 66 ***REMOVED***]) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(x, 11);\n  78 |     assert.sameValue(y, 22);\n  79 |     assert.sameValue(z, 33); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-obj-prop-id-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-obj-prop-id-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-obj-prop-id-init.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   #method([***REMOVED*** u: v, w: x, y: z ***REMOVED*** = ***REMOVED*** u: 444, w: 555, y: 666 ***REMOVED***]) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(v, 444);\n  78 |     assert.sameValue(x, 555);\n  79 |     assert.sameValue(z, 666); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-obj-prop-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-obj-prop-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-obj-prop-id.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   #method([***REMOVED*** u: v, w: x, y: z ***REMOVED*** = ***REMOVED*** u: 444, w: 555, y: 666 ***REMOVED***]) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(v, 777);\n  78 |     assert.sameValue(x, 888);\n  79 |     assert.sameValue(z, 999); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-ary-elem.js: Unexpected character '#' (97:2)\n   95 | var callCount = 0;\n   96 | var C = class ***REMOVED***\n>  97 |   #method([...[x, y, z]]) ***REMOVED***\n      |   ^\n   98 |     assert.sameValue(x, 3);\n   99 |     assert.sameValue(y, 4);\n  100 |     assert.sameValue(z, 5); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-ary-rest.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   #method([...[...x]]) ***REMOVED***\n     |   ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.sameValue(x.length, 3);\n  81 |     assert.sameValue(x[0], 1); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-id-direct.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-id-direct.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-id-direct.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   #method([...x]) ***REMOVED***\n     |   ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.compareArray(x, [1]);\n  81 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-id-elision.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-id-elision.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-id-elision.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | var C = class ***REMOVED***\n> 75 |   #method([ , , ...x]) ***REMOVED***\n     |   ^\n  76 |     assert(Array.isArray(x));\n  77 |     assert.sameValue(x.length, 3);\n  78 |     assert.sameValue(x[0], 3); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-id-exhausted.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-id-exhausted.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-id-exhausted.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | var C = class ***REMOVED***\n> 75 |   #method([, , ...x]) ***REMOVED***\n     |   ^\n  76 |     assert(Array.isArray(x));\n  77 |     assert.sameValue(x.length, 0);\n  78 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-id.js: Unexpected character '#' (72:2)\n  70 | var callCount = 0;\n  71 | var C = class ***REMOVED***\n> 72 |   #method([...x]) ***REMOVED***\n     |   ^\n  73 |     assert(Array.isArray(x));\n  74 |     assert.sameValue(x.length, 3);\n  75 |     assert.sameValue(x[0], 1); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-obj-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-obj-id.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   #method([...***REMOVED*** length ***REMOVED***]) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(length, 3);\n  79 |     callCount = callCount + 1;\n  80 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-obj-prop-id.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   #method([...***REMOVED*** 0: v, 1: w, 2: x, 3: y, length: z ***REMOVED***]) ***REMOVED***\n     |   ^\n  79 |     assert.sameValue(v, 7);\n  80 |     assert.sameValue(w, 8);\n  81 |     assert.sameValue(x, 9); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-init-iter-close.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-init-iter-close.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-init-iter-close.js: Unexpected character '#' (87:2)\n  85 | var callCount = 0;\n  86 | var C = class ***REMOVED***\n> 87 |   #method([x] = iter) ***REMOVED***\n     |   ^\n  88 |     assert.sameValue(doneCallCount, 1);\n  89 |     callCount = callCount + 1;\n  90 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-init-iter-no-close.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-init-iter-no-close.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-init-iter-no-close.js: Unexpected character '#' (87:2)\n  85 | var callCount = 0;\n  86 | var C = class ***REMOVED***\n> 87 |   #method([x] = iter) ***REMOVED***\n     |   ^\n  88 |     assert.sameValue(doneCallCount, 0);\n  89 |     callCount = callCount + 1;\n  90 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-name-iter-val.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-name-iter-val.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-name-iter-val.js: Unexpected character '#' (84:2)\n  82 | var callCount = 0;\n  83 | var C = class ***REMOVED***\n> 84 |   #method([x, y, z] = [1, 2, 3]) ***REMOVED***\n     |   ^\n  85 |     assert.sameValue(x, 1);\n  86 |     assert.sameValue(y, 2);\n  87 |     assert.sameValue(z, 3); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elem-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elem-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elem-init.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   #method([[x, y, z] = [4, 5, 6]] = []) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(x, 4);\n  78 |     assert.sameValue(y, 5);\n  79 |     assert.sameValue(z, 6); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elem-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elem-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elem-iter.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   #method([[x, y, z] = [4, 5, 6]] = [[7, 8, 9]]) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(x, 7);\n  79 |     assert.sameValue(y, 8);\n  80 |     assert.sameValue(z, 9); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-empty-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-empty-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-empty-iter.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   #method([[] = function() ***REMOVED*** initCount += 1; ***REMOVED***()] = [[23]]) ***REMOVED***\n     |   ^\n  79 |     assert.sameValue(initCount, 0);\n  80 |     callCount = callCount + 1;\n  81 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-rest-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-rest-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-rest-init.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   #method([[...x] = values] = []) ***REMOVED***\n     |   ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.sameValue(x[0], 2);\n  80 |     assert.sameValue(x[1], 1); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-rest-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-rest-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-rest-iter.js: Unexpected character '#' (79:2)\n  77 | var callCount = 0;\n  78 | var C = class ***REMOVED***\n> 79 |   #method([[...x] = function() ***REMOVED*** initCount += 1; ***REMOVED***()] = [values]) ***REMOVED***\n     |   ^\n  80 |     assert(Array.isArray(x));\n  81 |     assert.sameValue(x[0], 2);\n  82 |     assert.sameValue(x[1], 1); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-exhausted.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-exhausted.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-exhausted.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   #method([x = 23] = []) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(x, 23);\n  79 |     callCount = callCount + 1;\n  80 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   #method([arrow = () => ***REMOVED******REMOVED***] = []) ***REMOVED***\n     |   ^\n  79 |     assert.sameValue(arrow.name, 'arrow');\n  80 |     callCount = callCount + 1;\n  81 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   #method([cls = class ***REMOVED******REMOVED***, xCls = class X ***REMOVED******REMOVED***, xCls2 = class ***REMOVED*** static name() ***REMOVED******REMOVED*** ***REMOVED***] = []) ***REMOVED***\n     |   ^\n  79 |     assert.sameValue(cls.name, 'cls');\n  80 |     assert.notSameValue(xCls.name, 'xCls');\n  81 |     assert.notSameValue(xCls2.name, 'xCls2'); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-cover.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-cover.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   #method([cover = (function () ***REMOVED******REMOVED***), xCover = (0, function() ***REMOVED******REMOVED***)] = []) ***REMOVED***\n     |   ^\n  79 |     assert.sameValue(cover.name, 'cover');\n  80 |     assert.notSameValue(xCover.name, 'xCover');\n  81 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-fn.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-fn.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   #method([fn = function () ***REMOVED******REMOVED***, xFn = function x() ***REMOVED******REMOVED***] = []) ***REMOVED***\n     |   ^\n  79 |     assert.sameValue(fn.name, 'fn');\n  80 |     assert.notSameValue(xFn.name, 'xFn');\n  81 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-hole.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-hole.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-hole.js: Unexpected character '#' (72:2)\n  70 | var callCount = 0;\n  71 | var C = class ***REMOVED***\n> 72 |   #method([x = 23] = [,]) ***REMOVED***\n     |   ^\n  73 |     assert.sameValue(x, 23);\n  74 |     // another statement\n  75 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-skipped.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-skipped.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-skipped.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   #method([w = counter(), x = counter(), y = counter(), z = counter()] = [null, 0, false, '']) ***REMOVED***\n     |   ^\n  79 |     assert.sameValue(w, null);\n  80 |     assert.sameValue(x, 0);\n  81 |     assert.sameValue(y, false); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-undef.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-undef.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-undef.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   #method([x = 23] = [undefined]) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(x, 23);\n  78 |     callCount = callCount + 1;\n  79 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-complete.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-complete.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-complete.js: Unexpected character '#' (80:2)\n  78 | var callCount = 0;\n  79 | var C = class ***REMOVED***\n> 80 |   #method([x] = []) ***REMOVED***\n     |   ^\n  81 |     assert.sameValue(x, undefined);\n  82 |     callCount = callCount + 1;\n  83 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-done.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-done.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-done.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | var C = class ***REMOVED***\n> 75 |   #method([_, x] = []) ***REMOVED***\n     |   ^\n  76 |     assert.sameValue(x, undefined);\n  77 |     callCount = callCount + 1;\n  78 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-val.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-val.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-val.js: Unexpected character '#' (84:2)\n  82 | var callCount = 0;\n  83 | var C = class ***REMOVED***\n> 84 |   #method([x, y, z] = [1, 2, 3]) ***REMOVED***\n     |   ^\n  85 |     assert.sameValue(x, 1);\n  86 |     assert.sameValue(y, 2);\n  87 |     assert.sameValue(z, 3); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-id-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-id-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-id-init.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   #method([***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 44, y: 55, z: 66 ***REMOVED***] = []) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(x, 44);\n  78 |     assert.sameValue(y, 55);\n  79 |     assert.sameValue(z, 66); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-id.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   #method([***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 44, y: 55, z: 66 ***REMOVED***] = [***REMOVED*** x: 11, y: 22, z: 33 ***REMOVED***]) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(x, 11);\n  78 |     assert.sameValue(y, 22);\n  79 |     assert.sameValue(z, 33); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-prop-id-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-prop-id-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-prop-id-init.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   #method([***REMOVED*** u: v, w: x, y: z ***REMOVED*** = ***REMOVED*** u: 444, w: 555, y: 666 ***REMOVED***] = []) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(v, 444);\n  78 |     assert.sameValue(x, 555);\n  79 |     assert.sameValue(z, 666); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-prop-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-prop-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-prop-id.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   #method([***REMOVED*** u: v, w: x, y: z ***REMOVED*** = ***REMOVED*** u: 444, w: 555, y: 666 ***REMOVED***] = [***REMOVED*** u: 777, w: 888, y: 999 ***REMOVED***]) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(v, 777);\n  78 |     assert.sameValue(x, 888);\n  79 |     assert.sameValue(z, 999); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-elem.js: Unexpected character '#' (97:2)\n   95 | var callCount = 0;\n   96 | var C = class ***REMOVED***\n>  97 |   #method([...[x, y, z]] = [3, 4, 5]) ***REMOVED***\n      |   ^\n   98 |     assert.sameValue(x, 3);\n   99 |     assert.sameValue(y, 4);\n  100 |     assert.sameValue(z, 5); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-rest.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   #method([...[...x]] = values) ***REMOVED***\n     |   ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.sameValue(x.length, 3);\n  81 |     assert.sameValue(x[0], 1); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-id-direct.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-id-direct.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-id-direct.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   #method([...x] = [1]) ***REMOVED***\n     |   ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.compareArray(x, [1]);\n  81 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-id-elision.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-id-elision.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-id-elision.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | var C = class ***REMOVED***\n> 75 |   #method([ , , ...x] = values) ***REMOVED***\n     |   ^\n  76 |     assert(Array.isArray(x));\n  77 |     assert.sameValue(x.length, 3);\n  78 |     assert.sameValue(x[0], 3); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-id-exhausted.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-id-exhausted.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-id-exhausted.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | var C = class ***REMOVED***\n> 75 |   #method([, , ...x] = [1, 2]) ***REMOVED***\n     |   ^\n  76 |     assert(Array.isArray(x));\n  77 |     assert.sameValue(x.length, 0);\n  78 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-id.js: Unexpected character '#' (72:2)\n  70 | var callCount = 0;\n  71 | var C = class ***REMOVED***\n> 72 |   #method([...x] = values) ***REMOVED***\n     |   ^\n  73 |     assert(Array.isArray(x));\n  74 |     assert.sameValue(x.length, 3);\n  75 |     assert.sameValue(x[0], 1); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-obj-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-obj-id.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   #method([...***REMOVED*** length ***REMOVED***] = [1, 2, 3]) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(length, 3);\n  79 |     callCount = callCount + 1;\n  80 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-obj-prop-id.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   #method([...***REMOVED*** 0: v, 1: w, 2: x, 3: y, length: z ***REMOVED***] = [7, 8, 9]) ***REMOVED***\n     |   ^\n  79 |     assert.sameValue(v, 7);\n  80 |     assert.sameValue(w, 8);\n  81 |     assert.sameValue(x, 9); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-empty.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-empty.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-empty.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   #method(***REMOVED******REMOVED*** = obj) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(accessCount, 0);\n  78 |     callCount = callCount + 1;\n  79 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-arrow.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-arrow.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   #method(***REMOVED*** arrow = () => ***REMOVED******REMOVED*** ***REMOVED*** = ***REMOVED******REMOVED***) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(arrow.name, 'arrow');\n  79 |     callCount = callCount + 1;\n  80 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-class.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-class.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   #method(***REMOVED*** cls = class ***REMOVED******REMOVED***, xCls = class X ***REMOVED******REMOVED***, xCls2 = class ***REMOVED*** static name() ***REMOVED******REMOVED*** ***REMOVED*** ***REMOVED*** = ***REMOVED******REMOVED***) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(cls.name, 'cls');\n  79 |     assert.notSameValue(xCls.name, 'xCls');\n  80 |     assert.notSameValue(xCls2.name, 'xCls2'); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-cover.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-cover.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   #method(***REMOVED*** cover = (function () ***REMOVED******REMOVED***), xCover = (0, function() ***REMOVED******REMOVED***)  ***REMOVED*** = ***REMOVED******REMOVED***) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(cover.name, 'cover');\n  79 |     assert.notSameValue(xCover.name, 'xCover');\n  80 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-fn.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-fn.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   #method(***REMOVED*** fn = function () ***REMOVED******REMOVED***, xFn = function x() ***REMOVED******REMOVED*** ***REMOVED*** = ***REMOVED******REMOVED***) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(fn.name, 'fn');\n  79 |     assert.notSameValue(xFn.name, 'xFn');\n  80 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-skipped.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-skipped.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-skipped.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   #method(***REMOVED*** w = counter(), x = counter(), y = counter(), z = counter() ***REMOVED*** = ***REMOVED*** w: null, x: 0, y: false, z: '' ***REMOVED***) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(w, null);\n  79 |     assert.sameValue(x, 0);\n  80 |     assert.sameValue(y, false); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-trailing-comma.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-trailing-comma.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-trailing-comma.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | var C = class ***REMOVED***\n> 71 |   #method(***REMOVED*** x, ***REMOVED*** = ***REMOVED*** x: 23 ***REMOVED***) ***REMOVED***\n     |   ^\n  72 |     assert.sameValue(x, 23);\n  73 |     callCount = callCount + 1;\n  74 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-ary-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-ary-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-ary-init.js: Unexpected character '#' (74:2)\n  72 | var callCount = 0;\n  73 | var C = class ***REMOVED***\n> 74 |   #method(***REMOVED*** w: [x, y, z] = [4, 5, 6] ***REMOVED*** = ***REMOVED******REMOVED***) ***REMOVED***\n     |   ^\n  75 |     assert.sameValue(x, 4);\n  76 |     assert.sameValue(y, 5);\n  77 |     assert.sameValue(z, 6); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-ary-trailing-comma.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-ary-trailing-comma.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-ary-trailing-comma.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | var C = class ***REMOVED***\n> 71 |   #method(***REMOVED*** x: [y], ***REMOVED*** = ***REMOVED*** x: [45] ***REMOVED***) ***REMOVED***\n     |   ^\n  72 |     assert.sameValue(y,45);\n  73 |     callCount = callCount + 1;\n  74 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-ary.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-ary.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-ary.js: Unexpected character '#' (72:2)\n  70 | var callCount = 0;\n  71 | var C = class ***REMOVED***\n> 72 |   #method(***REMOVED*** w: [x, y, z] = [4, 5, 6] ***REMOVED*** = ***REMOVED*** w: [7, undefined, ] ***REMOVED***) ***REMOVED***\n     |   ^\n  73 |     assert.sameValue(x, 7);\n  74 |     assert.sameValue(y, undefined);\n  75 |     assert.sameValue(z, undefined); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-id-init-skipped.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-id-init-skipped.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-id-init-skipped.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   #method(***REMOVED*** s: t = counter(), u: v = counter(), w: x = counter(), y: z = counter() ***REMOVED*** = ***REMOVED*** s: null, u: 0, w: false, y: '' ***REMOVED***) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(t, null);\n  78 |     assert.sameValue(v, 0);\n  79 |     assert.sameValue(x, false); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-id-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-id-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-id-init.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | var C = class ***REMOVED***\n> 71 |   #method(***REMOVED*** x: y = 33 ***REMOVED*** = ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |   ^\n  72 |     assert.sameValue(y, 33);\n  73 |     assert.throws(ReferenceError, function() ***REMOVED***\n  74 |       x; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-id-trailing-comma.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-id-trailing-comma.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-id-trailing-comma.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | var C = class ***REMOVED***\n> 71 |   #method(***REMOVED*** x: y, ***REMOVED*** = ***REMOVED*** x: 23 ***REMOVED***) ***REMOVED***\n     |   ^\n  72 |     assert.sameValue(y, 23);\n  73 | \n  74 |     assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-id.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | var C = class ***REMOVED***\n> 71 |   #method(***REMOVED*** x: y ***REMOVED*** = ***REMOVED*** x: 23 ***REMOVED***) ***REMOVED***\n     |   ^\n  72 |     assert.sameValue(y, 23);\n  73 |     assert.throws(ReferenceError, function() ***REMOVED***\n  74 |       x; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-obj-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-obj-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-obj-init.js: Unexpected character '#' (74:2)\n  72 | var callCount = 0;\n  73 | var C = class ***REMOVED***\n> 74 |   #method(***REMOVED*** w: ***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 4, y: 5, z: 6 ***REMOVED*** ***REMOVED*** = ***REMOVED*** w: undefined ***REMOVED***) ***REMOVED***\n     |   ^\n  75 |     assert.sameValue(x, 4);\n  76 |     assert.sameValue(y, 5);\n  77 |     assert.sameValue(z, 6); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-obj.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-obj.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-obj.js: Unexpected character '#' (72:2)\n  70 | var callCount = 0;\n  71 | var C = class ***REMOVED***\n> 72 |   #method(***REMOVED*** w: ***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 4, y: 5, z: 6 ***REMOVED*** ***REMOVED*** = ***REMOVED*** w: ***REMOVED*** x: undefined, z: 7 ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |   ^\n  73 |     assert.sameValue(x, undefined);\n  74 |     assert.sameValue(y, undefined);\n  75 |     assert.sameValue(z, 7); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-rest-getter.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-rest-getter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-rest-getter.js: Unexpected character '#' (66:2)\n  64 | var callCount = 0;\n  65 | var C = class ***REMOVED***\n> 66 |   #method(***REMOVED***...x***REMOVED*** = ***REMOVED*** get v() ***REMOVED*** count++; return 2; ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |   ^\n  67 |     assert.sameValue(count, 1);\n  68 | \n  69 |     verifyProperty(x, \"v\", ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-rest-skip-non-enumerable.js: Unexpected character '#' (67:2)\n  65 | var callCount = 0;\n  66 | var C = class ***REMOVED***\n> 67 |   #method(***REMOVED***...rest***REMOVED*** = o) ***REMOVED***\n     |   ^\n  68 |     assert.sameValue(rest.x, undefined);\n  69 | \n  70 |     verifyProperty(rest, \"a\", ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-rest-val-obj.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-rest-val-obj.js: Unexpected character '#' (65:2)\n  63 | var callCount = 0;\n  64 | var C = class ***REMOVED***\n> 65 |   #method(***REMOVED***a, b, ...rest***REMOVED*** = ***REMOVED***x: 1, y: 2, a: 5, b: 3***REMOVED***) ***REMOVED***\n     |   ^\n  66 |     assert.sameValue(rest.a, undefined);\n  67 |     assert.sameValue(rest.b, undefined);\n  68 |  <at omitted>",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-empty.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-empty.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-empty.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   #method(***REMOVED******REMOVED***) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(accessCount, 0);\n  78 |     callCount = callCount + 1;\n  79 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-arrow.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-arrow.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   #method(***REMOVED*** arrow = () => ***REMOVED******REMOVED*** ***REMOVED***) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(arrow.name, 'arrow');\n  79 |     callCount = callCount + 1;\n  80 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-class.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-class.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   #method(***REMOVED*** cls = class ***REMOVED******REMOVED***, xCls = class X ***REMOVED******REMOVED***, xCls2 = class ***REMOVED*** static name() ***REMOVED******REMOVED*** ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(cls.name, 'cls');\n  79 |     assert.notSameValue(xCls.name, 'xCls');\n  80 |     assert.notSameValue(xCls2.name, 'xCls2'); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-cover.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-cover.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   #method(***REMOVED*** cover = (function () ***REMOVED******REMOVED***), xCover = (0, function() ***REMOVED******REMOVED***)  ***REMOVED***) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(cover.name, 'cover');\n  79 |     assert.notSameValue(xCover.name, 'xCover');\n  80 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-fn.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-fn.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   #method(***REMOVED*** fn = function () ***REMOVED******REMOVED***, xFn = function x() ***REMOVED******REMOVED*** ***REMOVED***) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(fn.name, 'fn');\n  79 |     assert.notSameValue(xFn.name, 'xFn');\n  80 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-skipped.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-skipped.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-skipped.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   #method(***REMOVED*** w = counter(), x = counter(), y = counter(), z = counter() ***REMOVED***) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(w, null);\n  79 |     assert.sameValue(x, 0);\n  80 |     assert.sameValue(y, false); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-trailing-comma.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-trailing-comma.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-id-trailing-comma.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | var C = class ***REMOVED***\n> 71 |   #method(***REMOVED*** x, ***REMOVED***) ***REMOVED***\n     |   ^\n  72 |     assert.sameValue(x, 23);\n  73 |     callCount = callCount + 1;\n  74 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-ary-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-ary-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-ary-init.js: Unexpected character '#' (74:2)\n  72 | var callCount = 0;\n  73 | var C = class ***REMOVED***\n> 74 |   #method(***REMOVED*** w: [x, y, z] = [4, 5, 6] ***REMOVED***) ***REMOVED***\n     |   ^\n  75 |     assert.sameValue(x, 4);\n  76 |     assert.sameValue(y, 5);\n  77 |     assert.sameValue(z, 6); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-ary-trailing-comma.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-ary-trailing-comma.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-ary-trailing-comma.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | var C = class ***REMOVED***\n> 71 |   #method(***REMOVED*** x: [y], ***REMOVED***) ***REMOVED***\n     |   ^\n  72 |     assert.sameValue(y,45);\n  73 |     callCount = callCount + 1;\n  74 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-ary.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-ary.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-ary.js: Unexpected character '#' (72:2)\n  70 | var callCount = 0;\n  71 | var C = class ***REMOVED***\n> 72 |   #method(***REMOVED*** w: [x, y, z] = [4, 5, 6] ***REMOVED***) ***REMOVED***\n     |   ^\n  73 |     assert.sameValue(x, 7);\n  74 |     assert.sameValue(y, undefined);\n  75 |     assert.sameValue(z, undefined); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-id-init-skipped.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-id-init-skipped.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-id-init-skipped.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   #method(***REMOVED*** s: t = counter(), u: v = counter(), w: x = counter(), y: z = counter() ***REMOVED***) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(t, null);\n  78 |     assert.sameValue(v, 0);\n  79 |     assert.sameValue(x, false); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-id-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-id-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-id-init.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | var C = class ***REMOVED***\n> 71 |   #method(***REMOVED*** x: y = 33 ***REMOVED***) ***REMOVED***\n     |   ^\n  72 |     assert.sameValue(y, 33);\n  73 |     assert.throws(ReferenceError, function() ***REMOVED***\n  74 |       x; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-id-trailing-comma.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-id-trailing-comma.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-id-trailing-comma.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | var C = class ***REMOVED***\n> 71 |   #method(***REMOVED*** x: y, ***REMOVED***) ***REMOVED***\n     |   ^\n  72 |     assert.sameValue(y, 23);\n  73 | \n  74 |     assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-id.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | var C = class ***REMOVED***\n> 71 |   #method(***REMOVED*** x: y ***REMOVED***) ***REMOVED***\n     |   ^\n  72 |     assert.sameValue(y, 23);\n  73 |     assert.throws(ReferenceError, function() ***REMOVED***\n  74 |       x; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-obj-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-obj-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-obj-init.js: Unexpected character '#' (74:2)\n  72 | var callCount = 0;\n  73 | var C = class ***REMOVED***\n> 74 |   #method(***REMOVED*** w: ***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 4, y: 5, z: 6 ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |   ^\n  75 |     assert.sameValue(x, 4);\n  76 |     assert.sameValue(y, 5);\n  77 |     assert.sameValue(z, 6); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-obj.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-obj.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-obj.js: Unexpected character '#' (72:2)\n  70 | var callCount = 0;\n  71 | var C = class ***REMOVED***\n> 72 |   #method(***REMOVED*** w: ***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 4, y: 5, z: 6 ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |   ^\n  73 |     assert.sameValue(x, undefined);\n  74 |     assert.sameValue(y, undefined);\n  75 |     assert.sameValue(z, 7); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-rest-getter.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-rest-getter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-rest-getter.js: Unexpected character '#' (66:2)\n  64 | var callCount = 0;\n  65 | var C = class ***REMOVED***\n> 66 |   #method(***REMOVED***...x***REMOVED***) ***REMOVED***\n     |   ^\n  67 |     assert.sameValue(count, 1);\n  68 | \n  69 |     verifyProperty(x, \"v\", ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-rest-skip-non-enumerable.js: Unexpected character '#' (67:2)\n  65 | var callCount = 0;\n  66 | var C = class ***REMOVED***\n> 67 |   #method(***REMOVED***...rest***REMOVED***) ***REMOVED***\n     |   ^\n  68 |     assert.sameValue(rest.x, undefined);\n  69 | \n  70 |     verifyProperty(rest, \"a\", ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-rest-val-obj.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-rest-val-obj.js: Unexpected character '#' (65:2)\n  63 | var callCount = 0;\n  64 | var C = class ***REMOVED***\n> 65 |   #method(***REMOVED***a, b, ...rest***REMOVED***) ***REMOVED***\n     |   ^\n  66 |     assert.sameValue(rest.a, undefined);\n  67 |     assert.sameValue(rest.b, undefined);\n  68 |  <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-init-iter-close.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-init-iter-close.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-init-iter-close.js: Unexpected character '#' (87:9)\n  85 | var callCount = 0;\n  86 | var C = class ***REMOVED***\n> 87 |   static #method([x]) ***REMOVED***\n     |          ^\n  88 |     assert.sameValue(doneCallCount, 1);\n  89 |     callCount = callCount + 1;\n  90 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-init-iter-no-close.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-init-iter-no-close.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-init-iter-no-close.js: Unexpected character '#' (87:9)\n  85 | var callCount = 0;\n  86 | var C = class ***REMOVED***\n> 87 |   static #method([x]) ***REMOVED***\n     |          ^\n  88 |     assert.sameValue(doneCallCount, 0);\n  89 |     callCount = callCount + 1;\n  90 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-name-iter-val.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-name-iter-val.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-name-iter-val.js: Unexpected character '#' (84:9)\n  82 | var callCount = 0;\n  83 | var C = class ***REMOVED***\n> 84 |   static #method([x, y, z]) ***REMOVED***\n     |          ^\n  85 |     assert.sameValue(x, 1);\n  86 |     assert.sameValue(y, 2);\n  87 |     assert.sameValue(z, 3); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-elem-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-elem-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-elem-init.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   static #method([[x, y, z] = [4, 5, 6]]) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(x, 4);\n  78 |     assert.sameValue(y, 5);\n  79 |     assert.sameValue(z, 6); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-elem-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-elem-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-elem-iter.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   static #method([[x, y, z] = [4, 5, 6]]) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(x, 7);\n  79 |     assert.sameValue(y, 8);\n  80 |     assert.sameValue(z, 9); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-empty-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-empty-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-empty-iter.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   static #method([[] = function() ***REMOVED*** initCount += 1; ***REMOVED***()]) ***REMOVED***\n     |          ^\n  79 |     assert.sameValue(initCount, 0);\n  80 |     callCount = callCount + 1;\n  81 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-rest-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-rest-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-rest-init.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   static #method([[...x] = values]) ***REMOVED***\n     |          ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.sameValue(x[0], 2);\n  80 |     assert.sameValue(x[1], 1); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-rest-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-rest-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-rest-iter.js: Unexpected character '#' (79:9)\n  77 | var callCount = 0;\n  78 | var C = class ***REMOVED***\n> 79 |   static #method([[...x] = function() ***REMOVED*** initCount += 1; ***REMOVED***()]) ***REMOVED***\n     |          ^\n  80 |     assert(Array.isArray(x));\n  81 |     assert.sameValue(x[0], 2);\n  82 |     assert.sameValue(x[1], 1); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-exhausted.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-exhausted.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-exhausted.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   static #method([x = 23]) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(x, 23);\n  79 |     callCount = callCount + 1;\n  80 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-arrow.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-arrow.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   static #method([arrow = () => ***REMOVED******REMOVED***]) ***REMOVED***\n     |          ^\n  79 |     assert.sameValue(arrow.name, 'arrow');\n  80 |     callCount = callCount + 1;\n  81 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-class.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-class.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   static #method([cls = class ***REMOVED******REMOVED***, xCls = class X ***REMOVED******REMOVED***, xCls2 = class ***REMOVED*** static name() ***REMOVED******REMOVED*** ***REMOVED***]) ***REMOVED***\n     |          ^\n  79 |     assert.sameValue(cls.name, 'cls');\n  80 |     assert.notSameValue(xCls.name, 'xCls');\n  81 |     assert.notSameValue(xCls2.name, 'xCls2'); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-cover.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-cover.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   static #method([cover = (function () ***REMOVED******REMOVED***), xCover = (0, function() ***REMOVED******REMOVED***)]) ***REMOVED***\n     |          ^\n  79 |     assert.sameValue(cover.name, 'cover');\n  80 |     assert.notSameValue(xCover.name, 'xCover');\n  81 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-fn.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-fn.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   static #method([fn = function () ***REMOVED******REMOVED***, xFn = function x() ***REMOVED******REMOVED***]) ***REMOVED***\n     |          ^\n  79 |     assert.sameValue(fn.name, 'fn');\n  80 |     assert.notSameValue(xFn.name, 'xFn');\n  81 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-hole.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-hole.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-hole.js: Unexpected character '#' (72:9)\n  70 | var callCount = 0;\n  71 | var C = class ***REMOVED***\n> 72 |   static #method([x = 23]) ***REMOVED***\n     |          ^\n  73 |     assert.sameValue(x, 23);\n  74 |     // another statement\n  75 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-skipped.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-skipped.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-skipped.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   static #method([w = counter(), x = counter(), y = counter(), z = counter()]) ***REMOVED***\n     |          ^\n  79 |     assert.sameValue(w, null);\n  80 |     assert.sameValue(x, 0);\n  81 |     assert.sameValue(y, false); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-undef.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-undef.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-undef.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   static #method([x = 23]) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(x, 23);\n  78 |     callCount = callCount + 1;\n  79 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-complete.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-complete.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-complete.js: Unexpected character '#' (80:9)\n  78 | var callCount = 0;\n  79 | var C = class ***REMOVED***\n> 80 |   static #method([x]) ***REMOVED***\n     |          ^\n  81 |     assert.sameValue(x, undefined);\n  82 |     callCount = callCount + 1;\n  83 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-done.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-done.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-done.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | var C = class ***REMOVED***\n> 75 |   static #method([_, x]) ***REMOVED***\n     |          ^\n  76 |     assert.sameValue(x, undefined);\n  77 |     callCount = callCount + 1;\n  78 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-val.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-val.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-val.js: Unexpected character '#' (84:9)\n  82 | var callCount = 0;\n  83 | var C = class ***REMOVED***\n> 84 |   static #method([x, y, z]) ***REMOVED***\n     |          ^\n  85 |     assert.sameValue(x, 1);\n  86 |     assert.sameValue(y, 2);\n  87 |     assert.sameValue(z, 3); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-obj-id-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-obj-id-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-obj-id-init.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   static #method([***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 44, y: 55, z: 66 ***REMOVED***]) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(x, 44);\n  78 |     assert.sameValue(y, 55);\n  79 |     assert.sameValue(z, 66); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-obj-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-obj-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-obj-id.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   static #method([***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 44, y: 55, z: 66 ***REMOVED***]) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(x, 11);\n  78 |     assert.sameValue(y, 22);\n  79 |     assert.sameValue(z, 33); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-obj-prop-id-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-obj-prop-id-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-obj-prop-id-init.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   static #method([***REMOVED*** u: v, w: x, y: z ***REMOVED*** = ***REMOVED*** u: 444, w: 555, y: 666 ***REMOVED***]) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(v, 444);\n  78 |     assert.sameValue(x, 555);\n  79 |     assert.sameValue(z, 666); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-obj-prop-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-obj-prop-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-obj-prop-id.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   static #method([***REMOVED*** u: v, w: x, y: z ***REMOVED*** = ***REMOVED*** u: 444, w: 555, y: 666 ***REMOVED***]) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(v, 777);\n  78 |     assert.sameValue(x, 888);\n  79 |     assert.sameValue(z, 999); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-ary-elem.js: Unexpected character '#' (97:9)\n   95 | var callCount = 0;\n   96 | var C = class ***REMOVED***\n>  97 |   static #method([...[x, y, z]]) ***REMOVED***\n      |          ^\n   98 |     assert.sameValue(x, 3);\n   99 |     assert.sameValue(y, 4);\n  100 |     assert.sameValue(z, 5); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-ary-rest.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   static #method([...[...x]]) ***REMOVED***\n     |          ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.sameValue(x.length, 3);\n  81 |     assert.sameValue(x[0], 1); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-id-direct.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-id-direct.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-id-direct.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   static #method([...x]) ***REMOVED***\n     |          ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.compareArray(x, [1]);\n  81 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-id-elision.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-id-elision.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-id-elision.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | var C = class ***REMOVED***\n> 75 |   static #method([ , , ...x]) ***REMOVED***\n     |          ^\n  76 |     assert(Array.isArray(x));\n  77 |     assert.sameValue(x.length, 3);\n  78 |     assert.sameValue(x[0], 3); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-id-exhausted.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-id-exhausted.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-id-exhausted.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | var C = class ***REMOVED***\n> 75 |   static #method([, , ...x]) ***REMOVED***\n     |          ^\n  76 |     assert(Array.isArray(x));\n  77 |     assert.sameValue(x.length, 0);\n  78 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-id.js: Unexpected character '#' (72:9)\n  70 | var callCount = 0;\n  71 | var C = class ***REMOVED***\n> 72 |   static #method([...x]) ***REMOVED***\n     |          ^\n  73 |     assert(Array.isArray(x));\n  74 |     assert.sameValue(x.length, 3);\n  75 |     assert.sameValue(x[0], 1); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-obj-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-obj-id.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   static #method([...***REMOVED*** length ***REMOVED***]) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(length, 3);\n  79 |     callCount = callCount + 1;\n  80 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-obj-prop-id.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   static #method([...***REMOVED*** 0: v, 1: w, 2: x, 3: y, length: z ***REMOVED***]) ***REMOVED***\n     |          ^\n  79 |     assert.sameValue(v, 7);\n  80 |     assert.sameValue(w, 8);\n  81 |     assert.sameValue(x, 9); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-init-iter-close.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-init-iter-close.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-init-iter-close.js: Unexpected character '#' (87:9)\n  85 | var callCount = 0;\n  86 | var C = class ***REMOVED***\n> 87 |   static #method([x] = iter) ***REMOVED***\n     |          ^\n  88 |     assert.sameValue(doneCallCount, 1);\n  89 |     callCount = callCount + 1;\n  90 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-init-iter-no-close.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-init-iter-no-close.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-init-iter-no-close.js: Unexpected character '#' (87:9)\n  85 | var callCount = 0;\n  86 | var C = class ***REMOVED***\n> 87 |   static #method([x] = iter) ***REMOVED***\n     |          ^\n  88 |     assert.sameValue(doneCallCount, 0);\n  89 |     callCount = callCount + 1;\n  90 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-name-iter-val.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-name-iter-val.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-name-iter-val.js: Unexpected character '#' (84:9)\n  82 | var callCount = 0;\n  83 | var C = class ***REMOVED***\n> 84 |   static #method([x, y, z] = [1, 2, 3]) ***REMOVED***\n     |          ^\n  85 |     assert.sameValue(x, 1);\n  86 |     assert.sameValue(y, 2);\n  87 |     assert.sameValue(z, 3); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elem-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elem-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elem-init.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   static #method([[x, y, z] = [4, 5, 6]] = []) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(x, 4);\n  78 |     assert.sameValue(y, 5);\n  79 |     assert.sameValue(z, 6); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elem-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elem-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elem-iter.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   static #method([[x, y, z] = [4, 5, 6]] = [[7, 8, 9]]) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(x, 7);\n  79 |     assert.sameValue(y, 8);\n  80 |     assert.sameValue(z, 9); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-empty-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-empty-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-empty-iter.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   static #method([[] = function() ***REMOVED*** initCount += 1; ***REMOVED***()] = [[23]]) ***REMOVED***\n     |          ^\n  79 |     assert.sameValue(initCount, 0);\n  80 |     callCount = callCount + 1;\n  81 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-rest-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-rest-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-rest-init.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   static #method([[...x] = values] = []) ***REMOVED***\n     |          ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.sameValue(x[0], 2);\n  80 |     assert.sameValue(x[1], 1); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-rest-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-rest-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-rest-iter.js: Unexpected character '#' (79:9)\n  77 | var callCount = 0;\n  78 | var C = class ***REMOVED***\n> 79 |   static #method([[...x] = function() ***REMOVED*** initCount += 1; ***REMOVED***()] = [values]) ***REMOVED***\n     |          ^\n  80 |     assert(Array.isArray(x));\n  81 |     assert.sameValue(x[0], 2);\n  82 |     assert.sameValue(x[1], 1); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-exhausted.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-exhausted.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-exhausted.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   static #method([x = 23] = []) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(x, 23);\n  79 |     callCount = callCount + 1;\n  80 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   static #method([arrow = () => ***REMOVED******REMOVED***] = []) ***REMOVED***\n     |          ^\n  79 |     assert.sameValue(arrow.name, 'arrow');\n  80 |     callCount = callCount + 1;\n  81 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-class.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-class.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   static #method([cls = class ***REMOVED******REMOVED***, xCls = class X ***REMOVED******REMOVED***, xCls2 = class ***REMOVED*** static name() ***REMOVED******REMOVED*** ***REMOVED***] = []) ***REMOVED***\n     |          ^\n  79 |     assert.sameValue(cls.name, 'cls');\n  80 |     assert.notSameValue(xCls.name, 'xCls');\n  81 |     assert.notSameValue(xCls2.name, 'xCls2'); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-cover.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-cover.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   static #method([cover = (function () ***REMOVED******REMOVED***), xCover = (0, function() ***REMOVED******REMOVED***)] = []) ***REMOVED***\n     |          ^\n  79 |     assert.sameValue(cover.name, 'cover');\n  80 |     assert.notSameValue(xCover.name, 'xCover');\n  81 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-fn.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-fn.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   static #method([fn = function () ***REMOVED******REMOVED***, xFn = function x() ***REMOVED******REMOVED***] = []) ***REMOVED***\n     |          ^\n  79 |     assert.sameValue(fn.name, 'fn');\n  80 |     assert.notSameValue(xFn.name, 'xFn');\n  81 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-hole.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-hole.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-hole.js: Unexpected character '#' (72:9)\n  70 | var callCount = 0;\n  71 | var C = class ***REMOVED***\n> 72 |   static #method([x = 23] = [,]) ***REMOVED***\n     |          ^\n  73 |     assert.sameValue(x, 23);\n  74 |     // another statement\n  75 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-skipped.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-skipped.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-skipped.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   static #method([w = counter(), x = counter(), y = counter(), z = counter()] = [null, 0, false, '']) ***REMOVED***\n     |          ^\n  79 |     assert.sameValue(w, null);\n  80 |     assert.sameValue(x, 0);\n  81 |     assert.sameValue(y, false); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-undef.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-undef.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-undef.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   static #method([x = 23] = [undefined]) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(x, 23);\n  78 |     callCount = callCount + 1;\n  79 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-complete.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-complete.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-complete.js: Unexpected character '#' (80:9)\n  78 | var callCount = 0;\n  79 | var C = class ***REMOVED***\n> 80 |   static #method([x] = []) ***REMOVED***\n     |          ^\n  81 |     assert.sameValue(x, undefined);\n  82 |     callCount = callCount + 1;\n  83 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-done.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-done.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-done.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | var C = class ***REMOVED***\n> 75 |   static #method([_, x] = []) ***REMOVED***\n     |          ^\n  76 |     assert.sameValue(x, undefined);\n  77 |     callCount = callCount + 1;\n  78 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-val.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-val.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-val.js: Unexpected character '#' (84:9)\n  82 | var callCount = 0;\n  83 | var C = class ***REMOVED***\n> 84 |   static #method([x, y, z] = [1, 2, 3]) ***REMOVED***\n     |          ^\n  85 |     assert.sameValue(x, 1);\n  86 |     assert.sameValue(y, 2);\n  87 |     assert.sameValue(z, 3); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-id-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-id-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-id-init.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   static #method([***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 44, y: 55, z: 66 ***REMOVED***] = []) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(x, 44);\n  78 |     assert.sameValue(y, 55);\n  79 |     assert.sameValue(z, 66); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-id.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   static #method([***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 44, y: 55, z: 66 ***REMOVED***] = [***REMOVED*** x: 11, y: 22, z: 33 ***REMOVED***]) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(x, 11);\n  78 |     assert.sameValue(y, 22);\n  79 |     assert.sameValue(z, 33); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-prop-id-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-prop-id-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-prop-id-init.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   static #method([***REMOVED*** u: v, w: x, y: z ***REMOVED*** = ***REMOVED*** u: 444, w: 555, y: 666 ***REMOVED***] = []) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(v, 444);\n  78 |     assert.sameValue(x, 555);\n  79 |     assert.sameValue(z, 666); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-prop-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-prop-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-prop-id.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   static #method([***REMOVED*** u: v, w: x, y: z ***REMOVED*** = ***REMOVED*** u: 444, w: 555, y: 666 ***REMOVED***] = [***REMOVED*** u: 777, w: 888, y: 999 ***REMOVED***]) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(v, 777);\n  78 |     assert.sameValue(x, 888);\n  79 |     assert.sameValue(z, 999); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-elem.js: Unexpected character '#' (97:9)\n   95 | var callCount = 0;\n   96 | var C = class ***REMOVED***\n>  97 |   static #method([...[x, y, z]] = [3, 4, 5]) ***REMOVED***\n      |          ^\n   98 |     assert.sameValue(x, 3);\n   99 |     assert.sameValue(y, 4);\n  100 |     assert.sameValue(z, 5); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-rest.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   static #method([...[...x]] = values) ***REMOVED***\n     |          ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.sameValue(x.length, 3);\n  81 |     assert.sameValue(x[0], 1); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-direct.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-direct.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-direct.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   static #method([...x] = [1]) ***REMOVED***\n     |          ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.compareArray(x, [1]);\n  81 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-elision.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-elision.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-elision.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | var C = class ***REMOVED***\n> 75 |   static #method([ , , ...x] = values) ***REMOVED***\n     |          ^\n  76 |     assert(Array.isArray(x));\n  77 |     assert.sameValue(x.length, 3);\n  78 |     assert.sameValue(x[0], 3); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-exhausted.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-exhausted.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-exhausted.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | var C = class ***REMOVED***\n> 75 |   static #method([, , ...x] = [1, 2]) ***REMOVED***\n     |          ^\n  76 |     assert(Array.isArray(x));\n  77 |     assert.sameValue(x.length, 0);\n  78 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id.js: Unexpected character '#' (72:9)\n  70 | var callCount = 0;\n  71 | var C = class ***REMOVED***\n> 72 |   static #method([...x] = values) ***REMOVED***\n     |          ^\n  73 |     assert(Array.isArray(x));\n  74 |     assert.sameValue(x.length, 3);\n  75 |     assert.sameValue(x[0], 1); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-obj-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-obj-id.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   static #method([...***REMOVED*** length ***REMOVED***] = [1, 2, 3]) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(length, 3);\n  79 |     callCount = callCount + 1;\n  80 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-obj-prop-id.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class ***REMOVED***\n> 78 |   static #method([...***REMOVED*** 0: v, 1: w, 2: x, 3: y, length: z ***REMOVED***] = [7, 8, 9]) ***REMOVED***\n     |          ^\n  79 |     assert.sameValue(v, 7);\n  80 |     assert.sameValue(w, 8);\n  81 |     assert.sameValue(x, 9); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-empty.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-empty.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-empty.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   static #method(***REMOVED******REMOVED*** = obj) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(accessCount, 0);\n  78 |     callCount = callCount + 1;\n  79 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-arrow.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-arrow.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   static #method(***REMOVED*** arrow = () => ***REMOVED******REMOVED*** ***REMOVED*** = ***REMOVED******REMOVED***) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(arrow.name, 'arrow');\n  79 |     callCount = callCount + 1;\n  80 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-class.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-class.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   static #method(***REMOVED*** cls = class ***REMOVED******REMOVED***, xCls = class X ***REMOVED******REMOVED***, xCls2 = class ***REMOVED*** static name() ***REMOVED******REMOVED*** ***REMOVED*** ***REMOVED*** = ***REMOVED******REMOVED***) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(cls.name, 'cls');\n  79 |     assert.notSameValue(xCls.name, 'xCls');\n  80 |     assert.notSameValue(xCls2.name, 'xCls2'); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-cover.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-cover.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   static #method(***REMOVED*** cover = (function () ***REMOVED******REMOVED***), xCover = (0, function() ***REMOVED******REMOVED***)  ***REMOVED*** = ***REMOVED******REMOVED***) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(cover.name, 'cover');\n  79 |     assert.notSameValue(xCover.name, 'xCover');\n  80 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-fn.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-fn.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   static #method(***REMOVED*** fn = function () ***REMOVED******REMOVED***, xFn = function x() ***REMOVED******REMOVED*** ***REMOVED*** = ***REMOVED******REMOVED***) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(fn.name, 'fn');\n  79 |     assert.notSameValue(xFn.name, 'xFn');\n  80 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-skipped.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-skipped.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-skipped.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   static #method(***REMOVED*** w = counter(), x = counter(), y = counter(), z = counter() ***REMOVED*** = ***REMOVED*** w: null, x: 0, y: false, z: '' ***REMOVED***) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(w, null);\n  79 |     assert.sameValue(x, 0);\n  80 |     assert.sameValue(y, false); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-trailing-comma.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-trailing-comma.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-trailing-comma.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | var C = class ***REMOVED***\n> 71 |   static #method(***REMOVED*** x, ***REMOVED*** = ***REMOVED*** x: 23 ***REMOVED***) ***REMOVED***\n     |          ^\n  72 |     assert.sameValue(x, 23);\n  73 |     callCount = callCount + 1;\n  74 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary-init.js: Unexpected character '#' (74:9)\n  72 | var callCount = 0;\n  73 | var C = class ***REMOVED***\n> 74 |   static #method(***REMOVED*** w: [x, y, z] = [4, 5, 6] ***REMOVED*** = ***REMOVED******REMOVED***) ***REMOVED***\n     |          ^\n  75 |     assert.sameValue(x, 4);\n  76 |     assert.sameValue(y, 5);\n  77 |     assert.sameValue(z, 6); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary-trailing-comma.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary-trailing-comma.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary-trailing-comma.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | var C = class ***REMOVED***\n> 71 |   static #method(***REMOVED*** x: [y], ***REMOVED*** = ***REMOVED*** x: [45] ***REMOVED***) ***REMOVED***\n     |          ^\n  72 |     assert.sameValue(y,45);\n  73 |     callCount = callCount + 1;\n  74 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary.js: Unexpected character '#' (72:9)\n  70 | var callCount = 0;\n  71 | var C = class ***REMOVED***\n> 72 |   static #method(***REMOVED*** w: [x, y, z] = [4, 5, 6] ***REMOVED*** = ***REMOVED*** w: [7, undefined, ] ***REMOVED***) ***REMOVED***\n     |          ^\n  73 |     assert.sameValue(x, 7);\n  74 |     assert.sameValue(y, undefined);\n  75 |     assert.sameValue(z, undefined); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-init-skipped.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-init-skipped.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-init-skipped.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   static #method(***REMOVED*** s: t = counter(), u: v = counter(), w: x = counter(), y: z = counter() ***REMOVED*** = ***REMOVED*** s: null, u: 0, w: false, y: '' ***REMOVED***) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(t, null);\n  78 |     assert.sameValue(v, 0);\n  79 |     assert.sameValue(x, false); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-init.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | var C = class ***REMOVED***\n> 71 |   static #method(***REMOVED*** x: y = 33 ***REMOVED*** = ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |          ^\n  72 |     assert.sameValue(y, 33);\n  73 |     assert.throws(ReferenceError, function() ***REMOVED***\n  74 |       x; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-trailing-comma.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-trailing-comma.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-trailing-comma.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | var C = class ***REMOVED***\n> 71 |   static #method(***REMOVED*** x: y, ***REMOVED*** = ***REMOVED*** x: 23 ***REMOVED***) ***REMOVED***\n     |          ^\n  72 |     assert.sameValue(y, 23);\n  73 | \n  74 |     assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | var C = class ***REMOVED***\n> 71 |   static #method(***REMOVED*** x: y ***REMOVED*** = ***REMOVED*** x: 23 ***REMOVED***) ***REMOVED***\n     |          ^\n  72 |     assert.sameValue(y, 23);\n  73 |     assert.throws(ReferenceError, function() ***REMOVED***\n  74 |       x; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-obj-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-obj-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-obj-init.js: Unexpected character '#' (74:9)\n  72 | var callCount = 0;\n  73 | var C = class ***REMOVED***\n> 74 |   static #method(***REMOVED*** w: ***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 4, y: 5, z: 6 ***REMOVED*** ***REMOVED*** = ***REMOVED*** w: undefined ***REMOVED***) ***REMOVED***\n     |          ^\n  75 |     assert.sameValue(x, 4);\n  76 |     assert.sameValue(y, 5);\n  77 |     assert.sameValue(z, 6); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-obj.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-obj.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-obj.js: Unexpected character '#' (72:9)\n  70 | var callCount = 0;\n  71 | var C = class ***REMOVED***\n> 72 |   static #method(***REMOVED*** w: ***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 4, y: 5, z: 6 ***REMOVED*** ***REMOVED*** = ***REMOVED*** w: ***REMOVED*** x: undefined, z: 7 ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |          ^\n  73 |     assert.sameValue(x, undefined);\n  74 |     assert.sameValue(y, undefined);\n  75 |     assert.sameValue(z, 7); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-rest-getter.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-rest-getter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-rest-getter.js: Unexpected character '#' (66:9)\n  64 | var callCount = 0;\n  65 | var C = class ***REMOVED***\n> 66 |   static #method(***REMOVED***...x***REMOVED*** = ***REMOVED*** get v() ***REMOVED*** count++; return 2; ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |          ^\n  67 |     assert.sameValue(count, 1);\n  68 | \n  69 |     verifyProperty(x, \"v\", ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js: Unexpected character '#' (67:9)\n  65 | var callCount = 0;\n  66 | var C = class ***REMOVED***\n> 67 |   static #method(***REMOVED***...rest***REMOVED*** = o) ***REMOVED***\n     |          ^\n  68 |     assert.sameValue(rest.x, undefined);\n  69 | \n  70 |     verifyProperty(rest, \"a\", ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-rest-val-obj.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-rest-val-obj.js: Unexpected character '#' (65:9)\n  63 | var callCount = 0;\n  64 | var C = class ***REMOVED***\n> 65 |   static #method(***REMOVED***a, b, ...rest***REMOVED*** = ***REMOVED***x: 1, y: 2, a: 5, b: 3***REMOVED***) ***REMOVED***\n     |          ^\n  66 |     assert.sameValue(rest.a, undefined);\n  67 |     assert.sameValue(rest.b, undefined);\n  68 |  <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-empty.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-empty.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-empty.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   static #method(***REMOVED******REMOVED***) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(accessCount, 0);\n  78 |     callCount = callCount + 1;\n  79 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-arrow.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-arrow.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   static #method(***REMOVED*** arrow = () => ***REMOVED******REMOVED*** ***REMOVED***) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(arrow.name, 'arrow');\n  79 |     callCount = callCount + 1;\n  80 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-class.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-class.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   static #method(***REMOVED*** cls = class ***REMOVED******REMOVED***, xCls = class X ***REMOVED******REMOVED***, xCls2 = class ***REMOVED*** static name() ***REMOVED******REMOVED*** ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(cls.name, 'cls');\n  79 |     assert.notSameValue(xCls.name, 'xCls');\n  80 |     assert.notSameValue(xCls2.name, 'xCls2'); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-cover.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-cover.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   static #method(***REMOVED*** cover = (function () ***REMOVED******REMOVED***), xCover = (0, function() ***REMOVED******REMOVED***)  ***REMOVED***) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(cover.name, 'cover');\n  79 |     assert.notSameValue(xCover.name, 'xCover');\n  80 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-fn.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-fn.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   static #method(***REMOVED*** fn = function () ***REMOVED******REMOVED***, xFn = function x() ***REMOVED******REMOVED*** ***REMOVED***) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(fn.name, 'fn');\n  79 |     assert.notSameValue(xFn.name, 'xFn');\n  80 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-skipped.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-skipped.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-skipped.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class ***REMOVED***\n> 77 |   static #method(***REMOVED*** w = counter(), x = counter(), y = counter(), z = counter() ***REMOVED***) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(w, null);\n  79 |     assert.sameValue(x, 0);\n  80 |     assert.sameValue(y, false); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-trailing-comma.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-trailing-comma.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-trailing-comma.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | var C = class ***REMOVED***\n> 71 |   static #method(***REMOVED*** x, ***REMOVED***) ***REMOVED***\n     |          ^\n  72 |     assert.sameValue(x, 23);\n  73 |     callCount = callCount + 1;\n  74 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-ary-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-ary-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-ary-init.js: Unexpected character '#' (74:9)\n  72 | var callCount = 0;\n  73 | var C = class ***REMOVED***\n> 74 |   static #method(***REMOVED*** w: [x, y, z] = [4, 5, 6] ***REMOVED***) ***REMOVED***\n     |          ^\n  75 |     assert.sameValue(x, 4);\n  76 |     assert.sameValue(y, 5);\n  77 |     assert.sameValue(z, 6); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-ary-trailing-comma.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-ary-trailing-comma.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-ary-trailing-comma.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | var C = class ***REMOVED***\n> 71 |   static #method(***REMOVED*** x: [y], ***REMOVED***) ***REMOVED***\n     |          ^\n  72 |     assert.sameValue(y,45);\n  73 |     callCount = callCount + 1;\n  74 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-ary.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-ary.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-ary.js: Unexpected character '#' (72:9)\n  70 | var callCount = 0;\n  71 | var C = class ***REMOVED***\n> 72 |   static #method(***REMOVED*** w: [x, y, z] = [4, 5, 6] ***REMOVED***) ***REMOVED***\n     |          ^\n  73 |     assert.sameValue(x, 7);\n  74 |     assert.sameValue(y, undefined);\n  75 |     assert.sameValue(z, undefined); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-id-init-skipped.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-id-init-skipped.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-id-init-skipped.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class ***REMOVED***\n> 76 |   static #method(***REMOVED*** s: t = counter(), u: v = counter(), w: x = counter(), y: z = counter() ***REMOVED***) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(t, null);\n  78 |     assert.sameValue(v, 0);\n  79 |     assert.sameValue(x, false); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-id-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-id-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-id-init.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | var C = class ***REMOVED***\n> 71 |   static #method(***REMOVED*** x: y = 33 ***REMOVED***) ***REMOVED***\n     |          ^\n  72 |     assert.sameValue(y, 33);\n  73 |     assert.throws(ReferenceError, function() ***REMOVED***\n  74 |       x; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-id-trailing-comma.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-id-trailing-comma.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-id-trailing-comma.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | var C = class ***REMOVED***\n> 71 |   static #method(***REMOVED*** x: y, ***REMOVED***) ***REMOVED***\n     |          ^\n  72 |     assert.sameValue(y, 23);\n  73 | \n  74 |     assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-id.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | var C = class ***REMOVED***\n> 71 |   static #method(***REMOVED*** x: y ***REMOVED***) ***REMOVED***\n     |          ^\n  72 |     assert.sameValue(y, 23);\n  73 |     assert.throws(ReferenceError, function() ***REMOVED***\n  74 |       x; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-obj-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-obj-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-obj-init.js: Unexpected character '#' (74:9)\n  72 | var callCount = 0;\n  73 | var C = class ***REMOVED***\n> 74 |   static #method(***REMOVED*** w: ***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 4, y: 5, z: 6 ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |          ^\n  75 |     assert.sameValue(x, 4);\n  76 |     assert.sameValue(y, 5);\n  77 |     assert.sameValue(z, 6); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-obj.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-obj.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-obj.js: Unexpected character '#' (72:9)\n  70 | var callCount = 0;\n  71 | var C = class ***REMOVED***\n> 72 |   static #method(***REMOVED*** w: ***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 4, y: 5, z: 6 ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |          ^\n  73 |     assert.sameValue(x, undefined);\n  74 |     assert.sameValue(y, undefined);\n  75 |     assert.sameValue(z, 7); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-rest-getter.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-rest-getter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-rest-getter.js: Unexpected character '#' (66:9)\n  64 | var callCount = 0;\n  65 | var C = class ***REMOVED***\n> 66 |   static #method(***REMOVED***...x***REMOVED***) ***REMOVED***\n     |          ^\n  67 |     assert.sameValue(count, 1);\n  68 | \n  69 |     verifyProperty(x, \"v\", ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-rest-skip-non-enumerable.js: Unexpected character '#' (67:9)\n  65 | var callCount = 0;\n  66 | var C = class ***REMOVED***\n> 67 |   static #method(***REMOVED***...rest***REMOVED***) ***REMOVED***\n     |          ^\n  68 |     assert.sameValue(rest.x, undefined);\n  69 | \n  70 |     verifyProperty(rest, \"a\", ***REMOVED*** <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-rest-val-obj.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-rest-val-obj.js: Unexpected character '#' (65:9)\n  63 | var callCount = 0;\n  64 | var C = class ***REMOVED***\n> 65 |   static #method(***REMOVED***a, b, ...rest***REMOVED***) ***REMOVED***\n     |          ^\n  66 |     assert.sameValue(rest.a, undefined);\n  67 |     assert.sameValue(rest.b, undefined);\n  68 |  <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-computed-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-computed-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-computed-names.js: Unexpected token (28:25)\n  26 | \n  27 | var C = class ***REMOVED***\n> 28 |   m() ***REMOVED*** return 42; ***REMOVED*** [x] = 42; [10] = \"meep\"; [\"not initialized\"];\n     |                          ^\n  29 |   \n  30 | ***REMOVED***\n  31 |  <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-computed-symbol-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-computed-symbol-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-computed-symbol-names.js: Unexpected token (29:30)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   m() ***REMOVED*** return 42; ***REMOVED*** [x]; [y] = 42;\n     |                               ^\n  30 |   \n  31 | ***REMOVED***\n  32 |  <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-literal-names-asi.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-literal-names-asi.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-literal-names-asi.js: Unexpected token (27:4)\n  25 | var C = class ***REMOVED***\n  26 |   m() ***REMOVED*** return 42; ***REMOVED*** a\n> 27 |   b = 42;;\n     |     ^\n  28 |   \n  29 | ***REMOVED***\n  30 |  <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-literal-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-literal-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-literal-names.js: Unexpected token (28:26)\n  26 | \n  27 | var C = class ***REMOVED***\n> 28 |   m() ***REMOVED*** return 42; ***REMOVED*** a; b = 42;\n     |                           ^\n  29 |   c = fn;\n  30 |   \n  31 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-private-method-getter-usage.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-private-method-getter-usage.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-private-method-getter-usage.js: Unexpected character '#' (27:25)\n  25 | \n  26 | var C = class ***REMOVED***\n> 27 |   m() ***REMOVED*** return 42; ***REMOVED*** get #m() ***REMOVED*** return 'test262'; ***REMOVED***;\n     |                          ^\n  28 |   method() ***REMOVED***\n  29 |     return this.#m;\n  30 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-private-method-usage.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-private-method-usage.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-private-method-usage.js: Unexpected character '#' (27:21)\n  25 | \n  26 | var C = class ***REMOVED***\n> 27 |   m() ***REMOVED*** return 42; ***REMOVED*** #m() ***REMOVED*** return 'test262'; ***REMOVED***;\n     |                      ^\n  28 |   method() ***REMOVED***\n  29 |     return this.#m();\n  30 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-rs-field-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-field-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-field-identifier-initializer.js: Unexpected token (62:23)\n  60 | \n  61 | var C = class ***REMOVED***\n> 62 |   m() ***REMOVED*** return 42; ***REMOVED*** $ = 1; _ = 1; \\u***REMOVED***6F***REMOVED*** = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;\n     |                        ^\n  63 |   \n  64 | ***REMOVED***\n  65 |  <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-rs-field-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-field-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-field-identifier.js: Missing class properties transform.\n  60 | \n  61 | var C = class ***REMOVED***\n> 62 |   m() ***REMOVED*** return 42; ***REMOVED*** $; _; \\u***REMOVED***6F***REMOVED***; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J;\n     |                      ^\n  63 |   \n  64 | ***REMOVED***\n  65 |  <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:34)\n  62 | \n  63 | var C = class ***REMOVED***\n> 64 |   m() ***REMOVED*** return 42; ***REMOVED*** static async #$(value) ***REMOVED***\n     |                                   ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:34)\n  62 | \n  63 | var C = class ***REMOVED***\n> 64 |   m() ***REMOVED*** return 42; ***REMOVED*** static async #$(value) ***REMOVED***\n     |                                   ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:28)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   m() ***REMOVED*** return 42; ***REMOVED*** static #$(value) ***REMOVED***\n     |                             ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:28)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   m() ***REMOVED*** return 42; ***REMOVED*** static #$(value) ***REMOVED***\n     |                             ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:28)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   m() ***REMOVED*** return 42; ***REMOVED*** static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                             ^\n  62 |   static $(value) ***REMOVED***\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:28)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   m() ***REMOVED*** return 42; ***REMOVED*** static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                             ^\n  62 |   static $(value) ***REMOVED***\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:28)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   m() ***REMOVED*** return 42; ***REMOVED*** static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                             ^\n  62 |   static $(value) ***REMOVED***\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:28)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   m() ***REMOVED*** return 42; ***REMOVED*** static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                             ^\n  62 |   static $() ***REMOVED***\n  63 |     return C.#$;\n  64 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:28)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   m() ***REMOVED*** return 42; ***REMOVED*** static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                             ^\n  62 |   static $() ***REMOVED***\n  63 |     return this.#$;\n  64 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:28)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   m() ***REMOVED*** return 42; ***REMOVED*** static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;\n     |                             ^\n  62 |   static $() ***REMOVED***\n  63 |     return this.#$;\n  64 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier.js: Unexpected character '#' (61:28)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   m() ***REMOVED*** return 42; ***REMOVED*** static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                             ^\n  62 |   static $(value) ***REMOVED***\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-static-private-fields.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-static-private-fields.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-static-private-fields.js: Unexpected character '#' (29:28)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   m() ***REMOVED*** return 42; ***REMOVED*** static #x; static #y;\n     |                             ^\n  30 |   static x() ***REMOVED***\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-static-private-methods-with-fields.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-static-private-methods-with-fields.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-static-private-methods-with-fields.js: Unexpected character '#' (29:28)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   m() ***REMOVED*** return 42; ***REMOVED*** static #xVal; static #yVal;\n     |                             ^\n  30 |   static #x(value) ***REMOVED***\n  31 |     this.#xVal = value;\n  32 |     return this.#xVal; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-static-private-methods.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-static-private-methods.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-static-private-methods.js: Unexpected character '#' (30:9)\n  28 | var C = class ***REMOVED***\n  29 |   m() ***REMOVED*** return 42; ***REMOVED*** ;\n> 30 |   static #x(value) ***REMOVED***\n     |          ^\n  31 |     return value / 2;\n  32 |   ***REMOVED***\n  33 |   static #y(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-string-literal-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-string-literal-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-string-literal-names.js: Unexpected token (26:35)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   m() ***REMOVED*** return 42; ***REMOVED*** 'a'; \"b\"; 'c' = 39;\n     |                                    ^\n  27 |   \"d\" = 42;\n  28 |   \n  29 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-computed-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-computed-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-computed-names.js: Unexpected token (28:32)\n  26 | \n  27 | var C = class ***REMOVED***\n> 28 |   static m() ***REMOVED*** return 42; ***REMOVED*** [x] = 42; [10] = \"meep\"; [\"not initialized\"];\n     |                                 ^\n  29 |   \n  30 | ***REMOVED***\n  31 |  <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-computed-symbol-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-computed-symbol-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-computed-symbol-names.js: Unexpected token (29:37)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   static m() ***REMOVED*** return 42; ***REMOVED*** [x]; [y] = 42;\n     |                                      ^\n  30 |   \n  31 | ***REMOVED***\n  32 |  <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-literal-names-asi.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-literal-names-asi.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-literal-names-asi.js: Unexpected token (27:4)\n  25 | var C = class ***REMOVED***\n  26 |   static m() ***REMOVED*** return 42; ***REMOVED*** a\n> 27 |   b = 42;;\n     |     ^\n  28 |   \n  29 | ***REMOVED***\n  30 |  <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-literal-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-literal-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-literal-names.js: Unexpected token (28:33)\n  26 | \n  27 | var C = class ***REMOVED***\n> 28 |   static m() ***REMOVED*** return 42; ***REMOVED*** a; b = 42;\n     |                                  ^\n  29 |   c = fn;\n  30 |   \n  31 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-private-method-getter-usage.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-private-method-getter-usage.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-private-method-getter-usage.js: Unexpected character '#' (27:32)\n  25 | \n  26 | var C = class ***REMOVED***\n> 27 |   static m() ***REMOVED*** return 42; ***REMOVED*** get #m() ***REMOVED*** return 'test262'; ***REMOVED***;\n     |                                 ^\n  28 |   method() ***REMOVED***\n  29 |     return this.#m;\n  30 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-private-method-usage.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-private-method-usage.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-private-method-usage.js: Unexpected character '#' (27:28)\n  25 | \n  26 | var C = class ***REMOVED***\n> 27 |   static m() ***REMOVED*** return 42; ***REMOVED*** #m() ***REMOVED*** return 'test262'; ***REMOVED***;\n     |                             ^\n  28 |   method() ***REMOVED***\n  29 |     return this.#m();\n  30 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-field-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-field-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-field-identifier-initializer.js: Unexpected token (62:30)\n  60 | \n  61 | var C = class ***REMOVED***\n> 62 |   static m() ***REMOVED*** return 42; ***REMOVED*** $ = 1; _ = 1; \\u***REMOVED***6F***REMOVED*** = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;\n     |                               ^\n  63 |   \n  64 | ***REMOVED***\n  65 |  <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-field-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-field-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-field-identifier.js: Missing class properties transform.\n  60 | \n  61 | var C = class ***REMOVED***\n> 62 |   static m() ***REMOVED*** return 42; ***REMOVED*** $; _; \\u***REMOVED***6F***REMOVED***; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J;\n     |                             ^\n  63 |   \n  64 | ***REMOVED***\n  65 |  <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:41)\n  62 | \n  63 | var C = class ***REMOVED***\n> 64 |   static m() ***REMOVED*** return 42; ***REMOVED*** static async #$(value) ***REMOVED***\n     |                                          ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:41)\n  62 | \n  63 | var C = class ***REMOVED***\n> 64 |   static m() ***REMOVED*** return 42; ***REMOVED*** static async #$(value) ***REMOVED***\n     |                                          ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:35)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static m() ***REMOVED*** return 42; ***REMOVED*** static #$(value) ***REMOVED***\n     |                                    ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:35)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static m() ***REMOVED*** return 42; ***REMOVED*** static #$(value) ***REMOVED***\n     |                                    ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:35)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static m() ***REMOVED*** return 42; ***REMOVED*** static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                                    ^\n  62 |   static $(value) ***REMOVED***\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:35)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static m() ***REMOVED*** return 42; ***REMOVED*** static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                                    ^\n  62 |   static $(value) ***REMOVED***\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:35)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static m() ***REMOVED*** return 42; ***REMOVED*** static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                                    ^\n  62 |   static $(value) ***REMOVED***\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:35)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static m() ***REMOVED*** return 42; ***REMOVED*** static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                                    ^\n  62 |   static $() ***REMOVED***\n  63 |     return C.#$;\n  64 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:35)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static m() ***REMOVED*** return 42; ***REMOVED*** static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                                    ^\n  62 |   static $() ***REMOVED***\n  63 |     return this.#$;\n  64 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:35)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static m() ***REMOVED*** return 42; ***REMOVED*** static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;\n     |                                    ^\n  62 |   static $() ***REMOVED***\n  63 |     return this.#$;\n  64 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier.js: Unexpected character '#' (61:35)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static m() ***REMOVED*** return 42; ***REMOVED*** static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                                    ^\n  62 |   static $(value) ***REMOVED***\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-static-private-fields.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-static-private-fields.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-static-private-fields.js: Unexpected character '#' (29:35)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   static m() ***REMOVED*** return 42; ***REMOVED*** static #x; static #y;\n     |                                    ^\n  30 |   static x() ***REMOVED***\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-static-private-methods-with-fields.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-static-private-methods-with-fields.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-static-private-methods-with-fields.js: Unexpected character '#' (29:35)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   static m() ***REMOVED*** return 42; ***REMOVED*** static #xVal; static #yVal;\n     |                                    ^\n  30 |   static #x(value) ***REMOVED***\n  31 |     this.#xVal = value;\n  32 |     return this.#xVal; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-static-private-methods.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-static-private-methods.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-static-private-methods.js: Unexpected character '#' (30:9)\n  28 | var C = class ***REMOVED***\n  29 |   static m() ***REMOVED*** return 42; ***REMOVED*** ;\n> 30 |   static #x(value) ***REMOVED***\n     |          ^\n  31 |     return value / 2;\n  32 |   ***REMOVED***\n  33 |   static #y(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-string-literal-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-string-literal-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-string-literal-names.js: Unexpected token (26:42)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   static m() ***REMOVED*** return 42; ***REMOVED*** 'a'; \"b\"; 'c' = 39;\n     |                                           ^\n  27 |   \"d\" = 42;\n  28 |   \n  29 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-contains-superproperty-1.js-strict:true": "test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-contains-superproperty-1.js: SyntaxError: test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-contains-superproperty-1.js: Unexpected token (30:4)\n  28 | var A = class ***REMOVED******REMOVED***\n  29 | var C = class extends A ***REMOVED***\n> 30 |   x = eval('executed = true; () => super.x;');\n     |     ^\n  31 | ***REMOVED***;\n  32 | \n  33 | new C().x(); <at omitted>",
  "test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-contains-superproperty-2.js-strict:true": "test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-contains-superproperty-2.js: SyntaxError: test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-contains-superproperty-2.js: Unexpected token (27:4)\n  25 | var A = class ***REMOVED******REMOVED***\n  26 | var C = class extends A ***REMOVED***\n> 27 |   x = eval('executed = true; () => super[\"x\"];');\n     |     ^\n  28 | ***REMOVED***;\n  29 | \n  30 | new C().x(); <at omitted>",
  "test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall-1.js-strict:true": "test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall-1.js: SyntaxError: test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall-1.js: Unexpected token (30:4)\n  28 | var A = class ***REMOVED******REMOVED***\n  29 | var C = class extends A ***REMOVED***\n> 30 |   x = eval('executed = true; () => super()[\"x\"];');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall-2.js-strict:true": "test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall-2.js: SyntaxError: test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall-2.js: Unexpected token (23:4)\n  21 | var A = class ***REMOVED******REMOVED***\n  22 | var C = class extends A ***REMOVED***\n> 23 |   x = eval('executed = true; () => super().x;');\n     |     ^\n  24 | ***REMOVED***\n  25 | \n  26 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall.js-strict:true": "test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall.js: SyntaxError: test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall.js: Unexpected token (30:4)\n  28 | var A = class ***REMOVED******REMOVED***\n  29 | var C = class extends A ***REMOVED***\n> 30 |   x = eval('executed = true; () => super();');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-contains-superproperty-1.js-strict:true": "test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-contains-superproperty-1.js: SyntaxError: test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-contains-superproperty-1.js: Unexpected token (29:4)\n  27 | var A = class ***REMOVED******REMOVED***\n  28 | var C = class extends A ***REMOVED***\n> 29 |   x = (0, eval)('() => super.x;');\n     |     ^\n  30 | ***REMOVED***;\n  31 | \n  32 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-contains-superproperty-2.js-strict:true": "test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-contains-superproperty-2.js: SyntaxError: test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-contains-superproperty-2.js: Unexpected token (26:4)\n  24 | var A = class ***REMOVED******REMOVED***\n  25 | var C = class extends A ***REMOVED***\n> 26 |   x = (0, eval)('() => super[\"x\"];');\n     |     ^\n  27 | ***REMOVED***;\n  28 | \n  29 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall-1.js-strict:true": "test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall-1.js: SyntaxError: test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall-1.js: Unexpected token (29:4)\n  27 | var A = class ***REMOVED******REMOVED***\n  28 | var C = class extends A ***REMOVED***\n> 29 |   x = (0, eval)('() => super()[\"x\"];');\n     |     ^\n  30 | ***REMOVED***\n  31 | \n  32 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall-2.js-strict:true": "test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall-2.js: SyntaxError: test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall-2.js: Unexpected token (22:4)\n  20 | var A = class ***REMOVED******REMOVED***\n  21 | var C = class extends A ***REMOVED***\n> 22 |   x = (0, eval)('() => super().x;');\n     |     ^\n  23 | ***REMOVED***\n  24 | \n  25 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall.js-strict:true": "test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall.js: SyntaxError: test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall.js: Unexpected token (29:4)\n  27 | var A = class ***REMOVED******REMOVED***\n  28 | var C = class extends A ***REMOVED***\n> 29 |   x = (0, eval)('() => super();');\n     |     ^\n  30 | ***REMOVED***\n  31 | \n  32 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/arrow-body-direct-eval-err-contains-arguments.js-strict:true": "test/language/expressions/class/elements/arrow-body-direct-eval-err-contains-arguments.js: SyntaxError: test/language/expressions/class/elements/arrow-body-direct-eval-err-contains-arguments.js: Unexpected token (30:4)\n  28 | let executed = false;\n  29 | let C = class ***REMOVED***\n> 30 |   x = eval('executed = true; () => arguments;');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/arrow-body-direct-eval-err-contains-newtarget.js-strict:true": "test/language/expressions/class/elements/arrow-body-direct-eval-err-contains-newtarget.js: SyntaxError: test/language/expressions/class/elements/arrow-body-direct-eval-err-contains-newtarget.js: Unexpected token (29:4)\n  27 | var executed = false;\n  28 | var C = class ***REMOVED***\n> 29 |   x = eval('executed = true; () => new.target;');\n     |     ^\n  30 | ***REMOVED***\n  31 | \n  32 | var c = new C(); <at omitted>",
  "test/language/expressions/class/elements/arrow-body-indirect-eval-err-contains-newtarget.js-strict:true": "test/language/expressions/class/elements/arrow-body-indirect-eval-err-contains-newtarget.js: SyntaxError: test/language/expressions/class/elements/arrow-body-indirect-eval-err-contains-newtarget.js: Unexpected token (28:4)\n  26 | \n  27 | var C = class ***REMOVED***\n> 28 |   x = (0, eval)('() => new.target;');\n     |     ^\n  29 | ***REMOVED***\n  30 | \n  31 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/class-name-static-initializer-anonymous.js-strict:true": "test/language/expressions/class/elements/class-name-static-initializer-anonymous.js: SyntaxError: test/language/expressions/class/elements/class-name-static-initializer-anonymous.js: Unexpected token (24:13)\n  22 | \n  23 | var C = class ***REMOVED***\n> 24 |     static f = (className = this.name);\n     |              ^\n  25 | ***REMOVED***\n  26 | \n  27 | assert.sameValue(className, \"C\"); <at omitted>",
  "test/language/expressions/class/elements/class-name-static-initializer-decl.js-strict:true": "test/language/expressions/class/elements/class-name-static-initializer-decl.js: SyntaxError: test/language/expressions/class/elements/class-name-static-initializer-decl.js: Unexpected token (24:13)\n  22 | \n  23 | class C ***REMOVED***\n> 24 |     static f = (className = this.name);\n     |              ^\n  25 | ***REMOVED***\n  26 | \n  27 | assert.sameValue(className, \"C\"); <at omitted>",
  "test/language/expressions/class/elements/class-name-static-initializer-default-export.js-strict:true": "test/language/expressions/class/elements/class-name-static-initializer-default-export.js: SyntaxError: test/language/expressions/class/elements/class-name-static-initializer-default-export.js: Unexpected token (25:13)\n  23 | \n  24 | export default class ***REMOVED***\n> 25 |     static f = (className = this.name);\n     |              ^\n  26 | ***REMOVED***\n  27 | \n  28 | assert.sameValue(className, \"default\"); <at omitted>",
  "test/language/expressions/class/elements/class-name-static-initializer-expr.js-strict:true": "test/language/expressions/class/elements/class-name-static-initializer-expr.js: SyntaxError: test/language/expressions/class/elements/class-name-static-initializer-expr.js: Unexpected token (24:13)\n  22 | \n  23 | var expr = class C ***REMOVED***\n> 24 |     static f = (className = this.name);\n     |              ^\n  25 | ***REMOVED***\n  26 | \n  27 | assert.sameValue(className, \"C\"); <at omitted>",
  "test/language/expressions/class/elements/computed-name-toprimitive-symbol.js-strict:true": "test/language/expressions/class/elements/computed-name-toprimitive-symbol.js: SyntaxError: test/language/expressions/class/elements/computed-name-toprimitive-symbol.js: Unexpected token (69:9)\n  67 | \n  68 | var C = class ***REMOVED***\n> 69 |   [obj1] = 42;\n     |          ^\n  70 |   [obj2] = 43;\n  71 |   [obj3] = 44;\n  72 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/computed-name-toprimitive.js-strict:true": "test/language/expressions/class/elements/computed-name-toprimitive.js: SyntaxError: test/language/expressions/class/elements/computed-name-toprimitive.js: Unexpected token (66:9)\n  64 | \n  65 | var C = class ***REMOVED***\n> 66 |   [obj1] = 42;\n     |          ^\n  67 |   [obj2] = 43;\n  68 |   [obj3] = 44;\n  69 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/ctor-called-after-fields-init.js-strict:true": "test/language/expressions/class/elements/ctor-called-after-fields-init.js: SyntaxError: test/language/expressions/class/elements/ctor-called-after-fields-init.js: Unexpected token (29:6)\n  27 |     ctor = this.foo;\n  28 |   ***REMOVED***\n> 29 |   foo = 42;\n     |       ^\n  30 | ***REMOVED***\n  31 | \n  32 | var c = new C(); <at omitted>",
  "test/language/expressions/class/elements/derived-cls-direct-eval-contains-superproperty-1.js-strict:true": "test/language/expressions/class/elements/derived-cls-direct-eval-contains-superproperty-1.js: SyntaxError: test/language/expressions/class/elements/derived-cls-direct-eval-contains-superproperty-1.js: Unexpected token (30:4)\n  28 | var A = class ***REMOVED******REMOVED***\n  29 | var C = class extends A ***REMOVED***\n> 30 |   x = eval('executed = true; super.x;');\n     |     ^\n  31 | ***REMOVED***;\n  32 | \n  33 | new C(); <at omitted>",
  "test/language/expressions/class/elements/derived-cls-direct-eval-contains-superproperty-2.js-strict:true": "test/language/expressions/class/elements/derived-cls-direct-eval-contains-superproperty-2.js: SyntaxError: test/language/expressions/class/elements/derived-cls-direct-eval-contains-superproperty-2.js: Unexpected token (27:4)\n  25 | var A = class ***REMOVED******REMOVED***\n  26 | var C = class extends A ***REMOVED***\n> 27 |   x = eval('executed = true; super[\"x\"];');\n     |     ^\n  28 | ***REMOVED***;\n  29 | \n  30 | new C(); <at omitted>",
  "test/language/expressions/class/elements/derived-cls-direct-eval-err-contains-supercall-1.js-strict:true": "test/language/expressions/class/elements/derived-cls-direct-eval-err-contains-supercall-1.js: SyntaxError: test/language/expressions/class/elements/derived-cls-direct-eval-err-contains-supercall-1.js: Unexpected token (30:4)\n  28 | var A = class ***REMOVED******REMOVED***\n  29 | var C = class extends A ***REMOVED***\n> 30 |   x = eval('executed = true; super()[\"x\"];');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/derived-cls-direct-eval-err-contains-supercall-2.js-strict:true": "test/language/expressions/class/elements/derived-cls-direct-eval-err-contains-supercall-2.js: SyntaxError: test/language/expressions/class/elements/derived-cls-direct-eval-err-contains-supercall-2.js: Unexpected token (23:4)\n  21 | var A = class ***REMOVED******REMOVED***\n  22 | var C = class extends A ***REMOVED***\n> 23 |   x = eval('executed = true; super().x;');\n     |     ^\n  24 | ***REMOVED***\n  25 | \n  26 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/derived-cls-direct-eval-err-contains-supercall.js-strict:true": "test/language/expressions/class/elements/derived-cls-direct-eval-err-contains-supercall.js: SyntaxError: test/language/expressions/class/elements/derived-cls-direct-eval-err-contains-supercall.js: Unexpected token (30:4)\n  28 | var A = class ***REMOVED******REMOVED***\n  29 | var C = class extends A ***REMOVED***\n> 30 |   x = eval('executed = true; super();');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/derived-cls-indirect-eval-contains-superproperty-1.js-strict:true": "test/language/expressions/class/elements/derived-cls-indirect-eval-contains-superproperty-1.js: SyntaxError: test/language/expressions/class/elements/derived-cls-indirect-eval-contains-superproperty-1.js: Unexpected token (30:4)\n  28 | var A = class ***REMOVED******REMOVED***\n  29 | var C = class extends A ***REMOVED***\n> 30 |   x = (0, eval)('executed = true; super.x;');\n     |     ^\n  31 | ***REMOVED***;\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/derived-cls-indirect-eval-contains-superproperty-2.js-strict:true": "test/language/expressions/class/elements/derived-cls-indirect-eval-contains-superproperty-2.js: SyntaxError: test/language/expressions/class/elements/derived-cls-indirect-eval-contains-superproperty-2.js: Unexpected token (27:4)\n  25 | var A = class ***REMOVED******REMOVED***\n  26 | var C = class extends A ***REMOVED***\n> 27 |   x = (0, eval)('executed = true; super[\"x\"];');\n     |     ^\n  28 | ***REMOVED***;\n  29 | \n  30 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/derived-cls-indirect-eval-err-contains-supercall-1.js-strict:true": "test/language/expressions/class/elements/derived-cls-indirect-eval-err-contains-supercall-1.js: SyntaxError: test/language/expressions/class/elements/derived-cls-indirect-eval-err-contains-supercall-1.js: Unexpected token (30:4)\n  28 | var A = class ***REMOVED******REMOVED***\n  29 | var C = class extends A ***REMOVED***\n> 30 |   x = (0, eval)('executed = true; super()[\"x\"];');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/derived-cls-indirect-eval-err-contains-supercall-2.js-strict:true": "test/language/expressions/class/elements/derived-cls-indirect-eval-err-contains-supercall-2.js: SyntaxError: test/language/expressions/class/elements/derived-cls-indirect-eval-err-contains-supercall-2.js: Unexpected token (23:4)\n  21 | var A = class ***REMOVED******REMOVED***\n  22 | var C = class extends A ***REMOVED***\n> 23 |   x = (0, eval)('executed = true; super().x;');\n     |     ^\n  24 | ***REMOVED***\n  25 | \n  26 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/derived-cls-indirect-eval-err-contains-supercall.js-strict:true": "test/language/expressions/class/elements/derived-cls-indirect-eval-err-contains-supercall.js: SyntaxError: test/language/expressions/class/elements/derived-cls-indirect-eval-err-contains-supercall.js: Unexpected token (30:4)\n  28 | var A = class ***REMOVED******REMOVED***\n  29 | var C = class extends A ***REMOVED***\n> 30 |   x = (0, eval)('executed = true; super();');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/direct-eval-err-contains-arguments.js-strict:true": "test/language/expressions/class/elements/direct-eval-err-contains-arguments.js: SyntaxError: test/language/expressions/class/elements/direct-eval-err-contains-arguments.js: Unexpected token (30:4)\n  28 | var executed = false;\n  29 | var C = class ***REMOVED***\n> 30 |   x = eval('executed = true; arguments;');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/direct-eval-err-contains-newtarget.js-strict:true": "test/language/expressions/class/elements/direct-eval-err-contains-newtarget.js: SyntaxError: test/language/expressions/class/elements/direct-eval-err-contains-newtarget.js: Unexpected token (29:4)\n  27 | var executed = false;\n  28 | var C = class ***REMOVED***\n> 29 |   x = eval('executed = true; new.target;');\n     |     ^\n  30 | ***REMOVED***\n  31 | \n  32 | var c = new C(); <at omitted>",
  "test/language/expressions/class/elements/evaluation-error/computed-name-referenceerror.js-strict:true": "test/language/expressions/class/elements/evaluation-error/computed-name-referenceerror.js: SyntaxError: test/language/expressions/class/elements/evaluation-error/computed-name-referenceerror.js: Unexpected token (53:12)\n  51 | function evaluate() ***REMOVED***\n  52 |   var C = class ***REMOVED***\n> 53 |     [noRef] = fn();\n     |             ^\n  54 |   ***REMOVED***;\n  55 | ***REMOVED***\n  56 |  <at omitted>",
  "test/language/expressions/class/elements/evaluation-error/computed-name-toprimitive-err.js-strict:true": "test/language/expressions/class/elements/evaluation-error/computed-name-toprimitive-err.js: SyntaxError: test/language/expressions/class/elements/evaluation-error/computed-name-toprimitive-err.js: Missing class properties transform.\n  53 | function evaluate() ***REMOVED***\n  54 |   var C = class ***REMOVED***\n> 55 |     [obj]\n     |     ^\n  56 |   ***REMOVED***;\n  57 | ***REMOVED***\n  58 |  <at omitted>",
  "test/language/expressions/class/elements/evaluation-error/computed-name-toprimitive-returns-noncallable.js-strict:true": "test/language/expressions/class/elements/evaluation-error/computed-name-toprimitive-returns-noncallable.js: SyntaxError: test/language/expressions/class/elements/evaluation-error/computed-name-toprimitive-returns-noncallable.js: Unexpected token (53:10)\n  51 | function evaluate() ***REMOVED***\n  52 |   var C = class ***REMOVED***\n> 53 |     [obj] = refErrorIfEvaluated;\n     |           ^\n  54 |   ***REMOVED***;\n  55 | ***REMOVED***\n  56 |  <at omitted>",
  "test/language/expressions/class/elements/evaluation-error/computed-name-toprimitive-returns-nonobject.js-strict:true": "test/language/expressions/class/elements/evaluation-error/computed-name-toprimitive-returns-nonobject.js: SyntaxError: test/language/expressions/class/elements/evaluation-error/computed-name-toprimitive-returns-nonobject.js: Unexpected token (53:10)\n  51 | function evaluate() ***REMOVED***\n  52 |   var C = class ***REMOVED***\n> 53 |     [obj] = refErrorIfEvaluated;\n     |           ^\n  54 |   ***REMOVED***;\n  55 | ***REMOVED***\n  56 |  <at omitted>",
  "test/language/expressions/class/elements/evaluation-error/computed-name-tostring-err.js-strict:true": "test/language/expressions/class/elements/evaluation-error/computed-name-tostring-err.js: SyntaxError: test/language/expressions/class/elements/evaluation-error/computed-name-tostring-err.js: Missing class properties transform.\n  53 | function evaluate() ***REMOVED***\n  54 |   var C = class ***REMOVED***\n> 55 |     [obj]\n     |     ^\n  56 |   ***REMOVED***;\n  57 | ***REMOVED***\n  58 |  <at omitted>",
  "test/language/expressions/class/elements/evaluation-error/computed-name-valueof-err.js-strict:true": "test/language/expressions/class/elements/evaluation-error/computed-name-valueof-err.js: SyntaxError: test/language/expressions/class/elements/evaluation-error/computed-name-valueof-err.js: Missing class properties transform.\n  54 | function evaluate() ***REMOVED***\n  55 |   var C = class ***REMOVED***\n> 56 |     [obj]\n     |     ^\n  57 |   ***REMOVED***;\n  58 | ***REMOVED***\n  59 |  <at omitted>",
  "test/language/expressions/class/elements/field-declaration.js-strict:true": "test/language/expressions/class/elements/field-declaration.js: SyntaxError: test/language/expressions/class/elements/field-declaration.js: Unexpected token (54:4)\n  52 | \n  53 | var C = class ***REMOVED***\n> 54 |   f = 'test262';\n     |     ^\n  55 |   'g';\n  56 |   0 = 'bar';\n  57 |   [computed]; <at omitted>",
  "test/language/expressions/class/elements/fields-asi-1.js-strict:true": "test/language/expressions/class/elements/fields-asi-1.js: SyntaxError: test/language/expressions/class/elements/fields-asi-1.js: Unexpected token (13:4)\n  11 | var obj = ***REMOVED******REMOVED***\n  12 | var C = class ***REMOVED***\n> 13 |   x = obj\n     |     ^\n  14 |   ['lol'] = 42\n  15 | ***REMOVED***\n  16 |  <at omitted>",
  "test/language/expressions/class/elements/fields-asi-2.js-strict:true": "test/language/expressions/class/elements/fields-asi-2.js: SyntaxError: test/language/expressions/class/elements/fields-asi-2.js: Unexpected token (12:4)\n  10 | \n  11 | var C = class ***REMOVED***\n> 12 |   x = \"lol\"\n     |     ^\n  13 |   [1]\n  14 | ***REMOVED***\n  15 |  <at omitted>",
  "test/language/expressions/class/elements/fields-asi-5.js-strict:true": "test/language/expressions/class/elements/fields-asi-5.js: SyntaxError: test/language/expressions/class/elements/fields-asi-5.js: Unexpected token (16:4)\n  14 | \n  15 | var C = class ***REMOVED***\n> 16 |   a = x\n     |     ^\n  17 |   in\n  18 |   z\n  19 |   b = y <at omitted>",
  "test/language/expressions/class/elements/fields-computed-name-static-propname-prototype.js-strict:true": "test/language/expressions/class/elements/fields-computed-name-static-propname-prototype.js: SyntaxError: test/language/expressions/class/elements/fields-computed-name-static-propname-prototype.js: Unexpected token (25:15)\n  23 | assert.throws(TypeError, function() ***REMOVED***\n  24 |   (0, class ***REMOVED***\n> 25 |     static [x] = 42;\n     |                ^\n  26 |   ***REMOVED***);\n  27 | ***REMOVED***);\n  28 |  <at omitted>",
  "test/language/expressions/class/elements/fields-multiple-definitions-static-private-methods-proxy.js-strict:true": "test/language/expressions/class/elements/fields-multiple-definitions-static-private-methods-proxy.js: SyntaxError: test/language/expressions/class/elements/fields-multiple-definitions-static-private-methods-proxy.js: Unexpected character '#' (27:9)\n  25 | \n  26 | var C = class ***REMOVED***\n> 27 |   static #x(value) ***REMOVED***\n     |          ^\n  28 |     return 1;\n  29 |   ***REMOVED***\n  30 |   static x() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/fields-run-once-on-double-super.js-strict:true": "test/language/expressions/class/elements/fields-run-once-on-double-super.js: SyntaxError: test/language/expressions/class/elements/fields-run-once-on-double-super.js: Unexpected token (28:8)\n  26 | \n  27 | var C = class extends Base ***REMOVED***\n> 28 |   field = ++fieldInitCalled;\n     |         ^\n  29 |   constructor() ***REMOVED***\n  30 |     assert.sameValue(baseCtorCalled, 0);\n  31 |     assert.sameValue(fieldInitCalled, 0); <at omitted>",
  "test/language/expressions/class/elements/indirect-eval-contains-arguments.js-strict:false": "test/language/expressions/class/elements/indirect-eval-contains-arguments.js: SyntaxError: test/language/expressions/class/elements/indirect-eval-contains-arguments.js: arguments is a reserved word in strict mode (16:4)\n  14 | \n  15 | \n> 16 | var arguments = 1;\n     |     ^\n  17 | var executed = false;\n  18 | var C = class ***REMOVED***\n  19 |   x = (0, eval)('arguments;'); <at omitted>",
  "test/language/expressions/class/elements/indirect-eval-err-contains-newtarget.js-strict:true": "test/language/expressions/class/elements/indirect-eval-err-contains-newtarget.js: SyntaxError: test/language/expressions/class/elements/indirect-eval-err-contains-newtarget.js: Unexpected token (29:4)\n  27 | var executed = false;\n  28 | var C = class ***REMOVED***\n> 29 |   x = (0, eval)('executed = true; new.target;');\n     |     ^\n  30 | ***REMOVED***\n  31 | \n  32 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/init-err-evaluation.js-strict:true": "test/language/expressions/class/elements/init-err-evaluation.js: SyntaxError: test/language/expressions/class/elements/init-err-evaluation.js: Unexpected token (28:4)\n  26 | \n  27 | var C = class ***REMOVED***\n> 28 |   x = fn1();\n     |     ^\n  29 |   y = fn2();\n  30 |   z = fn1();\n  31 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/init-value-defined-after-class.js-strict:true": "test/language/expressions/class/elements/init-value-defined-after-class.js: SyntaxError: test/language/expressions/class/elements/init-value-defined-after-class.js: Unexpected token (27:6)\n  25 | \n  26 | var C = class ***REMOVED***\n> 27 |   [x] = x;\n     |       ^\n  28 | ***REMOVED***\n  29 | \n  30 | var c1 = new C(); <at omitted>",
  "test/language/expressions/class/elements/init-value-incremental.js-strict:true": "test/language/expressions/class/elements/init-value-incremental.js: SyntaxError: test/language/expressions/class/elements/init-value-incremental.js: Unexpected token (36:8)\n  34 | \n  35 | var C = class ***REMOVED***\n> 36 |   [x++] = x++;\n     |         ^\n  37 |   [x++] = x++;\n  38 | ***REMOVED***\n  39 |  <at omitted>",
  "test/language/expressions/class/elements/intercalated-static-non-static-computed-fields.js-strict:true": "test/language/expressions/class/elements/intercalated-static-non-static-computed-fields.js: SyntaxError: test/language/expressions/class/elements/intercalated-static-non-static-computed-fields.js: Unexpected token (44:8)\n  42 | \n  43 | var C = class ***REMOVED***\n> 44 |   [i++] = i++;\n     |         ^\n  45 |   static [i++] = i++;\n  46 |   [i++] = i++;\n  47 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-computed-names.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-computed-names.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | var C = class ***REMOVED***\n> 28 |   foo = \"foobar\";\n     |       ^\n  29 |   m() ***REMOVED*** return 42 ***REMOVED***\n  30 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"]\n  31 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-computed-symbol-names.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-computed-symbol-names.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-computed-symbol-names.js: Unexpected token (29:6)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   foo = \"foobar\";\n     |       ^\n  30 |   m() ***REMOVED*** return 42 ***REMOVED***\n  31 |   [x]; [y] = 42\n  32 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-literal-names-asi.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-literal-names-asi.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-literal-names-asi.js: Unexpected token (26:6)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   foo = \"foobar\";\n     |       ^\n  27 |   m() ***REMOVED*** return 42 ***REMOVED***\n  28 |   a\n  29 |   b = 42; <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-literal-names.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-literal-names.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-literal-names.js: Unexpected token (28:6)\n  26 | \n  27 | var C = class ***REMOVED***\n> 28 |   foo = \"foobar\";\n     |       ^\n  29 |   m() ***REMOVED*** return 42 ***REMOVED***\n  30 |   a; b = 42;\n  31 |   c = fn <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-private-method-getter-usage.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-private-method-getter-usage.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-private-method-getter-usage.js: Unexpected token (27:6)\n  25 | \n  26 | var C = class ***REMOVED***\n> 27 |   foo = \"foobar\";\n     |       ^\n  28 |   m() ***REMOVED*** return 42 ***REMOVED***\n  29 |   get #m() ***REMOVED*** return 'test262'; ***REMOVED***\n  30 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-private-method-usage.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-private-method-usage.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-private-method-usage.js: Unexpected token (27:6)\n  25 | \n  26 | var C = class ***REMOVED***\n> 27 |   foo = \"foobar\";\n     |       ^\n  28 |   m() ***REMOVED*** return 42 ***REMOVED***\n  29 |   #m() ***REMOVED*** return 'test262'; ***REMOVED***\n  30 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-rs-field-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-field-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-field-identifier-initializer.js: Unexpected token (62:6)\n  60 | \n  61 | var C = class ***REMOVED***\n> 62 |   foo = \"foobar\";\n     |       ^\n  63 |   m() ***REMOVED*** return 42 ***REMOVED***\n  64 |   $ = 1; _ = 1; \\u***REMOVED***6F***REMOVED*** = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1\n  65 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-rs-field-identifier.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-field-identifier.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-field-identifier.js: Unexpected token (62:6)\n  60 | \n  61 | var C = class ***REMOVED***\n> 62 |   foo = \"foobar\";\n     |       ^\n  63 |   m() ***REMOVED*** return 42 ***REMOVED***\n  64 |   $; _; \\u***REMOVED***6F***REMOVED***; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J\n  65 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-async-method-privatename-identifier-alt.js: Unexpected token (64:6)\n  62 | \n  63 | var C = class ***REMOVED***\n> 64 |   foo = \"foobar\";\n     |       ^\n  65 |   m() ***REMOVED*** return 42 ***REMOVED***\n  66 |   static async #$(value) ***REMOVED***\n  67 |     return await value; <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-async-method-privatename-identifier.js: Unexpected token (64:6)\n  62 | \n  63 | var C = class ***REMOVED***\n> 64 |   foo = \"foobar\";\n     |       ^\n  65 |   m() ***REMOVED*** return 42 ***REMOVED***\n  66 |   static async #$(value) ***REMOVED***\n  67 |     return await value; <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-method-privatename-identifier-alt.js: Unexpected token (61:6)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() ***REMOVED*** return 42 ***REMOVED***\n  63 |   static #$(value) ***REMOVED***\n  64 |     return value; <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-method-privatename-identifier.js: Unexpected token (61:6)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() ***REMOVED*** return 42 ***REMOVED***\n  63 |   static #$(value) ***REMOVED***\n  64 |     return value; <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-alt-by-classname.js: Unexpected token (61:6)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() ***REMOVED*** return 42 ***REMOVED***\n  63 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n  64 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-alt.js: Unexpected token (61:6)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() ***REMOVED*** return 42 ***REMOVED***\n  63 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n  64 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-by-classname.js: Unexpected token (61:6)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() ***REMOVED*** return 42 ***REMOVED***\n  63 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n  64 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected token (61:6)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() ***REMOVED*** return 42 ***REMOVED***\n  63 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n  64 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer-alt.js: Unexpected token (61:6)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() ***REMOVED*** return 42 ***REMOVED***\n  63 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n  64 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer.js: Unexpected token (61:6)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() ***REMOVED*** return 42 ***REMOVED***\n  63 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1\n  64 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier.js: Unexpected token (61:6)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() ***REMOVED*** return 42 ***REMOVED***\n  63 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n  64 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-static-private-fields.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-static-private-fields.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-static-private-fields.js: Unexpected token (29:6)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   foo = \"foobar\";\n     |       ^\n  30 |   m() ***REMOVED*** return 42 ***REMOVED***\n  31 |   static #x; static #y\n  32 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-static-private-methods-with-fields.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-static-private-methods-with-fields.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-static-private-methods-with-fields.js: Unexpected token (29:6)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   foo = \"foobar\";\n     |       ^\n  30 |   m() ***REMOVED*** return 42 ***REMOVED***\n  31 |   static #xVal; static #yVal\n  32 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-static-private-methods.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-static-private-methods.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-static-private-methods.js: Unexpected token (29:6)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   foo = \"foobar\";\n     |       ^\n  30 |   m() ***REMOVED*** return 42 ***REMOVED***\n  31 |   \n  32 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-string-literal-names.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-string-literal-names.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-string-literal-names.js: Unexpected token (26:6)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   foo = \"foobar\";\n     |       ^\n  27 |   m() ***REMOVED*** return 42 ***REMOVED***\n  28 |   'a'; \"b\"; 'c' = 39;\n  29 |   \"d\" = 42 <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-computed-names.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-computed-names.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | var C = class ***REMOVED***\n> 28 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"]\n     |       ^\n  29 |   foo = \"foobar\"\n  30 |   bar = \"barbaz\";\n  31 |    <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-computed-symbol-names.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-computed-symbol-names.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-computed-symbol-names.js: Unexpected token (29:11)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   [x]; [y] = 42\n     |            ^\n  30 |   foo = \"foobar\"\n  31 |   bar = \"barbaz\";\n  32 |    <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-literal-names-asi.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-literal-names-asi.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-literal-names-asi.js: Unexpected token (27:4)\n  25 | var C = class ***REMOVED***\n  26 |   a\n> 27 |   b = 42;\n     |     ^\n  28 |   foo = \"foobar\"\n  29 |   bar = \"barbaz\";\n  30 |    <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-literal-names.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-literal-names.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-literal-names.js: Unexpected token (28:7)\n  26 | \n  27 | var C = class ***REMOVED***\n> 28 |   a; b = 42;\n     |        ^\n  29 |   c = fn\n  30 |   foo = \"foobar\"\n  31 |   bar = \"barbaz\"; <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-private-method-getter-usage.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-private-method-getter-usage.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-private-method-getter-usage.js: Unexpected character '#' (27:6)\n  25 | \n  26 | var C = class ***REMOVED***\n> 27 |   get #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |       ^\n  28 |   foo = \"foobar\"\n  29 |   bar = \"barbaz\";\n  30 |   method() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-private-method-usage.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-private-method-usage.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-private-method-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | var C = class ***REMOVED***\n> 27 |   #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |   ^\n  28 |   foo = \"foobar\"\n  29 |   bar = \"barbaz\";\n  30 |   method() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-field-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-field-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-field-identifier-initializer.js: Unexpected token (62:4)\n  60 | \n  61 | var C = class ***REMOVED***\n> 62 |   $ = 1; _ = 1; \\u***REMOVED***6F***REMOVED*** = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1\n     |     ^\n  63 |   foo = \"foobar\"\n  64 |   bar = \"barbaz\";\n  65 |    <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-field-identifier.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-field-identifier.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-field-identifier.js: Unexpected token (63:6)\n  61 | var C = class ***REMOVED***\n  62 |   $; _; \\u***REMOVED***6F***REMOVED***; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J\n> 63 |   foo = \"foobar\"\n     |       ^\n  64 |   bar = \"barbaz\";\n  65 |   \n  66 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:15)\n  62 | \n  63 | var C = class ***REMOVED***\n> 64 |   static async #$(value) ***REMOVED***\n     |                ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:15)\n  62 | \n  63 | var C = class ***REMOVED***\n> 64 |   static async #$(value) ***REMOVED***\n     |                ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$(value) ***REMOVED***\n     |          ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$(value) ***REMOVED***\n     |          ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-static-private-fields.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-static-private-fields.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-static-private-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   static #x; static #y\n     |          ^\n  30 |   foo = \"foobar\"\n  31 |   bar = \"barbaz\";\n  32 |   static x() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-static-private-methods-with-fields.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-static-private-methods-with-fields.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-static-private-methods-with-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   static #xVal; static #yVal\n     |          ^\n  30 |   foo = \"foobar\"\n  31 |   bar = \"barbaz\";\n  32 |   static #x(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-static-private-methods.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-static-private-methods.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-static-private-methods.js: Unexpected token (30:6)\n  28 | var C = class ***REMOVED***\n  29 |   \n> 30 |   foo = \"foobar\"\n     |       ^\n  31 |   bar = \"barbaz\";\n  32 |   static #x(value) ***REMOVED***\n  33 |     return value / 2; <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-string-literal-names.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-string-literal-names.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-string-literal-names.js: Unexpected token (26:16)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   'a'; \"b\"; 'c' = 39;\n     |                 ^\n  27 |   \"d\" = 42\n  28 |   foo = \"foobar\"\n  29 |   bar = \"barbaz\"; <at omitted>",
  "test/language/expressions/class/elements/nested-derived-cls-direct-eval-contains-superproperty-1.js-strict:true": "test/language/expressions/class/elements/nested-derived-cls-direct-eval-contains-superproperty-1.js: SyntaxError: test/language/expressions/class/elements/nested-derived-cls-direct-eval-contains-superproperty-1.js: Unexpected token (30:4)\n  28 | var A = class ***REMOVED******REMOVED***\n  29 | var C = class extends A ***REMOVED***\n> 30 |   x = eval('executed = true; super.x;');\n     |     ^\n  31 | ***REMOVED***;\n  32 | \n  33 | new C(); <at omitted>",
  "test/language/expressions/class/elements/nested-derived-cls-direct-eval-contains-superproperty-2.js-strict:true": "test/language/expressions/class/elements/nested-derived-cls-direct-eval-contains-superproperty-2.js: SyntaxError: test/language/expressions/class/elements/nested-derived-cls-direct-eval-contains-superproperty-2.js: Unexpected token (27:4)\n  25 | var A = class ***REMOVED******REMOVED***\n  26 | var C = class extends A ***REMOVED***\n> 27 |   x = eval('executed = true; super[\"x\"];');\n     |     ^\n  28 | ***REMOVED***;\n  29 | \n  30 | new C(); <at omitted>",
  "test/language/expressions/class/elements/nested-derived-cls-direct-eval-err-contains-supercall-1.js-strict:true": "test/language/expressions/class/elements/nested-derived-cls-direct-eval-err-contains-supercall-1.js: SyntaxError: test/language/expressions/class/elements/nested-derived-cls-direct-eval-err-contains-supercall-1.js: Unexpected token (30:4)\n  28 | var A = class ***REMOVED******REMOVED***\n  29 | var C = class extends A ***REMOVED***\n> 30 |   x = eval('executed = true; super()[\"x\"];');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/nested-derived-cls-direct-eval-err-contains-supercall-2.js-strict:true": "test/language/expressions/class/elements/nested-derived-cls-direct-eval-err-contains-supercall-2.js: SyntaxError: test/language/expressions/class/elements/nested-derived-cls-direct-eval-err-contains-supercall-2.js: Unexpected token (23:4)\n  21 | var A = class ***REMOVED******REMOVED***\n  22 | var C = class extends A ***REMOVED***\n> 23 |   x = eval('executed = true; super().x;');\n     |     ^\n  24 | ***REMOVED***\n  25 | \n  26 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/nested-derived-cls-direct-eval-err-contains-supercall.js-strict:true": "test/language/expressions/class/elements/nested-derived-cls-direct-eval-err-contains-supercall.js: SyntaxError: test/language/expressions/class/elements/nested-derived-cls-direct-eval-err-contains-supercall.js: Unexpected token (30:4)\n  28 | var A = class ***REMOVED******REMOVED***\n  29 | var C = class extends A ***REMOVED***\n> 30 |   x = eval('executed = true; super();');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/nested-derived-cls-indirect-eval-contains-superproperty-1.js-strict:true": "test/language/expressions/class/elements/nested-derived-cls-indirect-eval-contains-superproperty-1.js: SyntaxError: test/language/expressions/class/elements/nested-derived-cls-indirect-eval-contains-superproperty-1.js: Unexpected token (30:4)\n  28 | var A = class ***REMOVED******REMOVED***\n  29 | var C = class extends A ***REMOVED***\n> 30 |   x = (0, eval)('executed = true; super.x;');\n     |     ^\n  31 | ***REMOVED***;\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/nested-derived-cls-indirect-eval-contains-superproperty-2.js-strict:true": "test/language/expressions/class/elements/nested-derived-cls-indirect-eval-contains-superproperty-2.js: SyntaxError: test/language/expressions/class/elements/nested-derived-cls-indirect-eval-contains-superproperty-2.js: Unexpected token (27:4)\n  25 | var A = class ***REMOVED******REMOVED***\n  26 | var C = class extends A ***REMOVED***\n> 27 |   x = (0, eval)('executed = true; super[\"x\"];');\n     |     ^\n  28 | ***REMOVED***;\n  29 | \n  30 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall-1.js-strict:true": "test/language/expressions/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall-1.js: SyntaxError: test/language/expressions/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall-1.js: Unexpected token (30:4)\n  28 | var A = class ***REMOVED******REMOVED***\n  29 | var C = class extends A ***REMOVED***\n> 30 |   x = (0, eval)('executed = true; super()[\"x\"];');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall-2.js-strict:true": "test/language/expressions/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall-2.js: SyntaxError: test/language/expressions/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall-2.js: Unexpected token (23:4)\n  21 | var A = class ***REMOVED******REMOVED***\n  22 | var C = class extends A ***REMOVED***\n> 23 |   x = (0, eval)('executed = true; super().x;');\n     |     ^\n  24 | ***REMOVED***\n  25 | \n  26 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall.js-strict:true": "test/language/expressions/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall.js: SyntaxError: test/language/expressions/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall.js: Unexpected token (30:4)\n  28 | var A = class ***REMOVED******REMOVED***\n  29 | var C = class extends A ***REMOVED***\n> 30 |   x = (0, eval)('executed = true; super();');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/nested-direct-eval-err-contains-arguments.js-strict:true": "test/language/expressions/class/elements/nested-direct-eval-err-contains-arguments.js: SyntaxError: test/language/expressions/class/elements/nested-direct-eval-err-contains-arguments.js: Unexpected token (30:4)\n  28 | let executed = false;\n  29 | let C = class ***REMOVED***\n> 30 |   x = () => ***REMOVED***\n     |     ^\n  31 |     let f = eval('executed = true; arguments;');\n  32 |     f();\n  33 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/nested-direct-eval-err-contains-newtarget.js-strict:true": "test/language/expressions/class/elements/nested-direct-eval-err-contains-newtarget.js: SyntaxError: test/language/expressions/class/elements/nested-direct-eval-err-contains-newtarget.js: Unexpected token (29:4)\n  27 | var executed = false;\n  28 | var C = class ***REMOVED***\n> 29 |   x = eval('executed = true; new.target;');\n     |     ^\n  30 | ***REMOVED***\n  31 | \n  32 | var c = new C(); <at omitted>",
  "test/language/expressions/class/elements/nested-indirect-eval-contains-arguments.js-strict:false": "test/language/expressions/class/elements/nested-indirect-eval-contains-arguments.js: SyntaxError: test/language/expressions/class/elements/nested-indirect-eval-contains-arguments.js: arguments is a reserved word in strict mode (16:4)\n  14 | \n  15 | \n> 16 | var arguments = 1;\n     |     ^\n  17 | var C = class ***REMOVED***\n  18 |   x = () => (0, eval)('arguments;');\n  19 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/nested-indirect-eval-err-contains-newtarget.js-strict:true": "test/language/expressions/class/elements/nested-indirect-eval-err-contains-newtarget.js: SyntaxError: test/language/expressions/class/elements/nested-indirect-eval-err-contains-newtarget.js: Unexpected token (29:4)\n  27 | var executed = false;\n  28 | var C = class ***REMOVED***\n> 29 |   x = (0, eval)('executed = true; new.target;');\n     |     ^\n  30 | ***REMOVED***\n  31 | \n  32 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-computed-names.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-computed-names.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | var C = class ***REMOVED***\n> 28 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"]\n     |       ^\n  29 |   m() ***REMOVED*** return 42; ***REMOVED***\n  30 |   \n  31 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-computed-symbol-names.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-computed-symbol-names.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-computed-symbol-names.js: Unexpected token (29:11)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   [x]; [y] = 42\n     |            ^\n  30 |   m() ***REMOVED*** return 42; ***REMOVED***\n  31 |   \n  32 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-literal-names-asi.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-literal-names-asi.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-literal-names-asi.js: Unexpected token (27:4)\n  25 | var C = class ***REMOVED***\n  26 |   a\n> 27 |   b = 42;\n     |     ^\n  28 |   m() ***REMOVED*** return 42; ***REMOVED***\n  29 |   \n  30 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-literal-names.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-literal-names.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-literal-names.js: Unexpected token (28:7)\n  26 | \n  27 | var C = class ***REMOVED***\n> 28 |   a; b = 42;\n     |        ^\n  29 |   c = fn\n  30 |   m() ***REMOVED*** return 42; ***REMOVED***\n  31 |    <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-private-method-getter-usage.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-private-method-getter-usage.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-private-method-getter-usage.js: Unexpected character '#' (27:6)\n  25 | \n  26 | var C = class ***REMOVED***\n> 27 |   get #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |       ^\n  28 |   m() ***REMOVED*** return 42; ***REMOVED***\n  29 |   method() ***REMOVED***\n  30 |     return this.#m; <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-private-method-usage.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-private-method-usage.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-private-method-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | var C = class ***REMOVED***\n> 27 |   #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |   ^\n  28 |   m() ***REMOVED*** return 42; ***REMOVED***\n  29 |   method() ***REMOVED***\n  30 |     return this.#m(); <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-field-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-field-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-field-identifier-initializer.js: Unexpected token (62:4)\n  60 | \n  61 | var C = class ***REMOVED***\n> 62 |   $ = 1; _ = 1; \\u***REMOVED***6F***REMOVED*** = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1\n     |     ^\n  63 |   m() ***REMOVED*** return 42; ***REMOVED***\n  64 |   \n  65 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-field-identifier.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-field-identifier.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-field-identifier.js: Missing class properties transform.\n  60 | \n  61 | var C = class ***REMOVED***\n> 62 |   $; _; \\u***REMOVED***6F***REMOVED***; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J\n     |   ^\n  63 |   m() ***REMOVED*** return 42; ***REMOVED***\n  64 |   \n  65 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:15)\n  62 | \n  63 | var C = class ***REMOVED***\n> 64 |   static async #$(value) ***REMOVED***\n     |                ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:15)\n  62 | \n  63 | var C = class ***REMOVED***\n> 64 |   static async #$(value) ***REMOVED***\n     |                ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$(value) ***REMOVED***\n     |          ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$(value) ***REMOVED***\n     |          ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $(value) ***REMOVED***\n  64 |     C.#$ = value; <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $(value) ***REMOVED***\n  64 |     this.#$ = value; <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $(value) ***REMOVED***\n  64 |     C.#$ = value; <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $() ***REMOVED***\n  64 |     return C.#$; <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $() ***REMOVED***\n  64 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $() ***REMOVED***\n  64 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $(value) ***REMOVED***\n  64 |     this.#$ = value; <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-static-private-fields.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-static-private-fields.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-static-private-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   static #x; static #y\n     |          ^\n  30 |   m() ***REMOVED*** return 42; ***REMOVED***\n  31 |   static x() ***REMOVED***\n  32 |     this.#x = 42; <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-static-private-methods-with-fields.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-static-private-methods-with-fields.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-static-private-methods-with-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   static #xVal; static #yVal\n     |          ^\n  30 |   m() ***REMOVED*** return 42; ***REMOVED***\n  31 |   static #x(value) ***REMOVED***\n  32 |     this.#xVal = value; <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-static-private-methods.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-static-private-methods.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-static-private-methods.js: Unexpected character '#' (31:9)\n  29 |   \n  30 |   m() ***REMOVED*** return 42; ***REMOVED***\n> 31 |   static #x(value) ***REMOVED***\n     |          ^\n  32 |     return value / 2;\n  33 |   ***REMOVED***\n  34 |   static #y(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-string-literal-names.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-string-literal-names.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-string-literal-names.js: Unexpected token (26:16)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   'a'; \"b\"; 'c' = 39;\n     |                 ^\n  27 |   \"d\" = 42\n  28 |   m() ***REMOVED*** return 42; ***REMOVED***\n  29 |    <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-computed-names.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-computed-names.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | var C = class ***REMOVED***\n> 28 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"];\n     |       ^\n  29 |   m() ***REMOVED*** return 42; ***REMOVED***\n  30 |   \n  31 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-computed-symbol-names.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-computed-symbol-names.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-computed-symbol-names.js: Unexpected token (29:11)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   [x]; [y] = 42;\n     |            ^\n  30 |   m() ***REMOVED*** return 42; ***REMOVED***\n  31 |   \n  32 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-literal-names-asi.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-literal-names-asi.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-literal-names-asi.js: Unexpected token (27:4)\n  25 | var C = class ***REMOVED***\n  26 |   a\n> 27 |   b = 42;;\n     |     ^\n  28 |   m() ***REMOVED*** return 42; ***REMOVED***\n  29 |   \n  30 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-literal-names.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-literal-names.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-literal-names.js: Unexpected token (28:7)\n  26 | \n  27 | var C = class ***REMOVED***\n> 28 |   a; b = 42;\n     |        ^\n  29 |   c = fn;\n  30 |   m() ***REMOVED*** return 42; ***REMOVED***\n  31 |    <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-private-method-getter-usage.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-private-method-getter-usage.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-private-method-getter-usage.js: Unexpected character '#' (27:6)\n  25 | \n  26 | var C = class ***REMOVED***\n> 27 |   get #m() ***REMOVED*** return 'test262'; ***REMOVED***;\n     |       ^\n  28 |   m() ***REMOVED*** return 42; ***REMOVED***\n  29 |   method() ***REMOVED***\n  30 |     return this.#m; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-private-method-usage.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-private-method-usage.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-private-method-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | var C = class ***REMOVED***\n> 27 |   #m() ***REMOVED*** return 'test262'; ***REMOVED***;\n     |   ^\n  28 |   m() ***REMOVED*** return 42; ***REMOVED***\n  29 |   method() ***REMOVED***\n  30 |     return this.#m(); <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-rs-field-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-field-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-field-identifier-initializer.js: Unexpected token (62:4)\n  60 | \n  61 | var C = class ***REMOVED***\n> 62 |   $ = 1; _ = 1; \\u***REMOVED***6F***REMOVED*** = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;\n     |     ^\n  63 |   m() ***REMOVED*** return 42; ***REMOVED***\n  64 |   \n  65 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-rs-field-identifier.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-field-identifier.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-field-identifier.js: Missing class properties transform.\n  60 | \n  61 | var C = class ***REMOVED***\n> 62 |   $; _; \\u***REMOVED***6F***REMOVED***; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J;\n     |   ^\n  63 |   m() ***REMOVED*** return 42; ***REMOVED***\n  64 |   \n  65 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:15)\n  62 | \n  63 | var C = class ***REMOVED***\n> 64 |   static async #$(value) ***REMOVED***\n     |                ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:15)\n  62 | \n  63 | var C = class ***REMOVED***\n> 64 |   static async #$(value) ***REMOVED***\n     |                ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$(value) ***REMOVED***\n     |          ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$(value) ***REMOVED***\n     |          ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $(value) ***REMOVED***\n  64 |     C.#$ = value; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $(value) ***REMOVED***\n  64 |     this.#$ = value; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $(value) ***REMOVED***\n  64 |     C.#$ = value; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $() ***REMOVED***\n  64 |     return C.#$; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $() ***REMOVED***\n  64 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $() ***REMOVED***\n  64 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $(value) ***REMOVED***\n  64 |     this.#$ = value; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-static-private-fields.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-static-private-fields.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-static-private-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   static #x; static #y;\n     |          ^\n  30 |   m() ***REMOVED*** return 42; ***REMOVED***\n  31 |   static x() ***REMOVED***\n  32 |     this.#x = 42; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-static-private-methods-with-fields.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-static-private-methods-with-fields.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-static-private-methods-with-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   static #xVal; static #yVal;\n     |          ^\n  30 |   m() ***REMOVED*** return 42; ***REMOVED***\n  31 |   static #x(value) ***REMOVED***\n  32 |     this.#xVal = value; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-static-private-methods.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-static-private-methods.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-static-private-methods.js: Unexpected character '#' (31:9)\n  29 |   ;\n  30 |   m() ***REMOVED*** return 42; ***REMOVED***\n> 31 |   static #x(value) ***REMOVED***\n     |          ^\n  32 |     return value / 2;\n  33 |   ***REMOVED***\n  34 |   static #y(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-string-literal-names.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-string-literal-names.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-string-literal-names.js: Unexpected token (26:16)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   'a'; \"b\"; 'c' = 39;\n     |                 ^\n  27 |   \"d\" = 42;\n  28 |   m() ***REMOVED*** return 42; ***REMOVED***\n  29 |    <at omitted>",
  "test/language/expressions/class/elements/private-accessor-name/inst-private-escape-sequence-ZWJ.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/inst-private-escape-sequence-ZWJ.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/inst-private-escape-sequence-ZWJ.js: Unexpected character '#' (62:6)\n  60 | \n  61 | var C = class ***REMOVED***\n> 62 |   get #ZW_\\u200D_J() ***REMOVED*** return 'get string'; ***REMOVED***\n     |       ^\n  63 |   set #ZW_\\u200D_J(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-accessor-name/inst-private-escape-sequence-ZWNJ.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/inst-private-escape-sequence-ZWNJ.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/inst-private-escape-sequence-ZWNJ.js: Unexpected character '#' (62:6)\n  60 | \n  61 | var C = class ***REMOVED***\n> 62 |   get #ZW_\\u200C_NJ() ***REMOVED*** return 'get string'; ***REMOVED***\n     |       ^\n  63 |   set #ZW_\\u200C_NJ(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-accessor-name/inst-private-escape-sequence-u2118.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/inst-private-escape-sequence-u2118.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/inst-private-escape-sequence-u2118.js: Unexpected character '#' (62:6)\n  60 | \n  61 | var C = class ***REMOVED***\n> 62 |   get #\\u2118() ***REMOVED*** return 'get string'; ***REMOVED***\n     |       ^\n  63 |   set #\\u2118(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-accessor-name/inst-private-escape-sequence-u6F.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/inst-private-escape-sequence-u6F.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/inst-private-escape-sequence-u6F.js: Unexpected character '#' (62:6)\n  60 | \n  61 | var C = class ***REMOVED***\n> 62 |   get #\\u***REMOVED***6F***REMOVED***() ***REMOVED*** return 'get string'; ***REMOVED***\n     |       ^\n  63 |   set #\\u***REMOVED***6F***REMOVED***(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-accessor-name/inst-private-name-ZWJ.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/inst-private-name-ZWJ.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/inst-private-name-ZWJ.js: Unexpected character '#' (62:6)\n  60 | \n  61 | var C = class ***REMOVED***\n> 62 |   get #ZW_‍_J() ***REMOVED*** return 'get string'; ***REMOVED***\n     |       ^\n  63 |   set #ZW_‍_J(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-accessor-name/inst-private-name-ZWNJ.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/inst-private-name-ZWNJ.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/inst-private-name-ZWNJ.js: Unexpected character '#' (62:6)\n  60 | \n  61 | var C = class ***REMOVED***\n> 62 |   get #ZW_‌_NJ() ***REMOVED*** return 'get string'; ***REMOVED***\n     |       ^\n  63 |   set #ZW_‌_NJ(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-accessor-name/inst-private-name-common.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/inst-private-name-common.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/inst-private-name-common.js: Unexpected character '#' (62:6)\n  60 | \n  61 | var C = class ***REMOVED***\n> 62 |   get #test262() ***REMOVED*** return 'get string'; ***REMOVED***\n     |       ^\n  63 |   set #test262(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-accessor-name/inst-private-name-dollar.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/inst-private-name-dollar.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/inst-private-name-dollar.js: Unexpected character '#' (62:6)\n  60 | \n  61 | var C = class ***REMOVED***\n> 62 |   get #$() ***REMOVED*** return 'get string'; ***REMOVED***\n     |       ^\n  63 |   set #$(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-accessor-name/inst-private-name-u2118.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/inst-private-name-u2118.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/inst-private-name-u2118.js: Unexpected character '#' (62:6)\n  60 | \n  61 | var C = class ***REMOVED***\n> 62 |   get #℘() ***REMOVED*** return 'get string'; ***REMOVED***\n     |       ^\n  63 |   set #℘(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-accessor-name/inst-private-name-underscore.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/inst-private-name-underscore.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/inst-private-name-underscore.js: Unexpected character '#' (62:6)\n  60 | \n  61 | var C = class ***REMOVED***\n> 62 |   get #_() ***REMOVED*** return 'get string'; ***REMOVED***\n     |       ^\n  63 |   set #_(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-accessor-name/static-private-escape-sequence-ZWJ.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/static-private-escape-sequence-ZWJ.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/static-private-escape-sequence-ZWJ.js: Unexpected character '#' (63:13)\n  61 | \n  62 | var C = class ***REMOVED***\n> 63 |   static get #ZW_\\u200D_J() ***REMOVED*** return 'get string'; ***REMOVED***\n     |              ^\n  64 |   static set #ZW_\\u200D_J(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  65 | \n  66 |   static getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-accessor-name/static-private-escape-sequence-ZWNJ.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/static-private-escape-sequence-ZWNJ.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/static-private-escape-sequence-ZWNJ.js: Unexpected character '#' (63:13)\n  61 | \n  62 | var C = class ***REMOVED***\n> 63 |   static get #ZW_\\u200C_NJ() ***REMOVED*** return 'get string'; ***REMOVED***\n     |              ^\n  64 |   static set #ZW_\\u200C_NJ(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  65 | \n  66 |   static getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-accessor-name/static-private-escape-sequence-u2118.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/static-private-escape-sequence-u2118.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/static-private-escape-sequence-u2118.js: Unexpected character '#' (63:13)\n  61 | \n  62 | var C = class ***REMOVED***\n> 63 |   static get #\\u2118() ***REMOVED*** return 'get string'; ***REMOVED***\n     |              ^\n  64 |   static set #\\u2118(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  65 | \n  66 |   static getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-accessor-name/static-private-escape-sequence-u6F.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/static-private-escape-sequence-u6F.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/static-private-escape-sequence-u6F.js: Unexpected character '#' (63:13)\n  61 | \n  62 | var C = class ***REMOVED***\n> 63 |   static get #\\u***REMOVED***6F***REMOVED***() ***REMOVED*** return 'get string'; ***REMOVED***\n     |              ^\n  64 |   static set #\\u***REMOVED***6F***REMOVED***(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  65 | \n  66 |   static getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-accessor-name/static-private-name-ZWJ.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/static-private-name-ZWJ.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/static-private-name-ZWJ.js: Unexpected character '#' (63:13)\n  61 | \n  62 | var C = class ***REMOVED***\n> 63 |   static get #ZW_‍_J() ***REMOVED*** return 'get string'; ***REMOVED***\n     |              ^\n  64 |   static set #ZW_‍_J(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  65 | \n  66 |   static getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-accessor-name/static-private-name-ZWNJ.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/static-private-name-ZWNJ.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/static-private-name-ZWNJ.js: Unexpected character '#' (63:13)\n  61 | \n  62 | var C = class ***REMOVED***\n> 63 |   static get #ZW_‌_NJ() ***REMOVED*** return 'get string'; ***REMOVED***\n     |              ^\n  64 |   static set #ZW_‌_NJ(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  65 | \n  66 |   static getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-accessor-name/static-private-name-common.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/static-private-name-common.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/static-private-name-common.js: Unexpected character '#' (63:13)\n  61 | \n  62 | var C = class ***REMOVED***\n> 63 |   static get #test262() ***REMOVED*** return 'get string'; ***REMOVED***\n     |              ^\n  64 |   static set #test262(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  65 | \n  66 |   static getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-accessor-name/static-private-name-dollar.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/static-private-name-dollar.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/static-private-name-dollar.js: Unexpected character '#' (63:13)\n  61 | \n  62 | var C = class ***REMOVED***\n> 63 |   static get #$() ***REMOVED*** return 'get string'; ***REMOVED***\n     |              ^\n  64 |   static set #$(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  65 | \n  66 |   static getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-accessor-name/static-private-name-u2118.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/static-private-name-u2118.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/static-private-name-u2118.js: Unexpected character '#' (63:13)\n  61 | \n  62 | var C = class ***REMOVED***\n> 63 |   static get #℘() ***REMOVED*** return 'get string'; ***REMOVED***\n     |              ^\n  64 |   static set #℘(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  65 | \n  66 |   static getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-accessor-name/static-private-name-underscore.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/static-private-name-underscore.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/static-private-name-underscore.js: Unexpected character '#' (63:13)\n  61 | \n  62 | var C = class ***REMOVED***\n> 63 |   static get #_() ***REMOVED*** return 'get string'; ***REMOVED***\n     |              ^\n  64 |   static set #_(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  65 | \n  66 |   static getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-async-method-name.js-strict:true": "test/language/expressions/class/elements/private-async-method-name.js: SyntaxError: test/language/expressions/class/elements/private-async-method-name.js: Unexpected character '#' (52:8)\n  50 | \n  51 | var C = class ***REMOVED***\n> 52 |   async #method() ***REMOVED******REMOVED***;\n     |         ^\n  53 | \n  54 |   getPrivateMethod() ***REMOVED***\n  55 |     return this.#method; <at omitted>",
  "test/language/expressions/class/elements/private-getter-access-on-inner-arrow-function.js-strict:true": "test/language/expressions/class/elements/private-getter-access-on-inner-arrow-function.js: SyntaxError: test/language/expressions/class/elements/private-getter-access-on-inner-arrow-function.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   get #m() ***REMOVED*** return 'Test262'; ***REMOVED***\n     |       ^\n  27 | \n  28 |   method() ***REMOVED***\n  29 |     let arrowFunction = () => ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-getter-access-on-inner-function.js-strict:true": "test/language/expressions/class/elements/private-getter-access-on-inner-function.js: SyntaxError: test/language/expressions/class/elements/private-getter-access-on-inner-function.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   get #m() ***REMOVED*** return 'Test262'; ***REMOVED***\n     |       ^\n  27 | \n  28 |   method() ***REMOVED***\n  29 |     let self = this; <at omitted>",
  "test/language/expressions/class/elements/private-getter-is-not-a-own-property.js-strict:true": "test/language/expressions/class/elements/private-getter-is-not-a-own-property.js: SyntaxError: test/language/expressions/class/elements/private-getter-is-not-a-own-property.js: Unexpected character '#' (31:6)\n  29 | \n  30 | var C = class ***REMOVED***\n> 31 |   get #m() ***REMOVED*** return \"Test262\"; ***REMOVED***\n     |       ^\n  32 | \n  33 |   checkPrivateGetter() ***REMOVED***\n  34 |     assert.sameValue(this.hasOwnProperty(\"#m\"), false); <at omitted>",
  "test/language/expressions/class/elements/private-getter-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-getter-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-getter-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   get #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |       ^\n  27 | \n  28 |   B = class ***REMOVED***\n  29 |     method(o) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-getter-shadowed-by-getter-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-getter-shadowed-by-getter-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-getter-shadowed-by-getter-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   get #m() ***REMOVED*** return 'outer class'; ***REMOVED***\n     |       ^\n  27 | \n  28 |   method() ***REMOVED*** return this.#m; ***REMOVED***\n  29 |  <at omitted>",
  "test/language/expressions/class/elements/private-getter-shadowed-by-method-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-getter-shadowed-by-method-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-getter-shadowed-by-method-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   get #m() ***REMOVED*** throw new Test262Error(); ***REMOVED***\n     |       ^\n  27 | \n  28 |   B = class ***REMOVED***\n  29 |     method(o) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-getter-shadowed-by-setter-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-getter-shadowed-by-setter-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-getter-shadowed-by-setter-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   get #m() ***REMOVED*** return 'outer class'; ***REMOVED***\n     |       ^\n  27 | \n  28 |   method() ***REMOVED*** return this.#m; ***REMOVED***\n  29 |  <at omitted>",
  "test/language/expressions/class/elements/private-method-access-on-inner-arrow-function.js-strict:true": "test/language/expressions/class/elements/private-method-access-on-inner-arrow-function.js: SyntaxError: test/language/expressions/class/elements/private-method-access-on-inner-arrow-function.js: Unexpected character '#' (26:2)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   #m() ***REMOVED*** return 'Test262'; ***REMOVED***\n     |   ^\n  27 | \n  28 |   method() ***REMOVED***\n  29 |     let arrowFunction = () => ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-method-access-on-inner-function.js-strict:true": "test/language/expressions/class/elements/private-method-access-on-inner-function.js: SyntaxError: test/language/expressions/class/elements/private-method-access-on-inner-function.js: Unexpected character '#' (26:2)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   #m() ***REMOVED*** return 'Test262'; ***REMOVED***\n     |   ^\n  27 | \n  28 |   method() ***REMOVED***\n  29 |     let self = this; <at omitted>",
  "test/language/expressions/class/elements/private-method-comparison.js-strict:true": "test/language/expressions/class/elements/private-method-comparison.js: SyntaxError: test/language/expressions/class/elements/private-method-comparison.js: Unexpected character '#' (35:2)\n  33 | \n  34 | var C = class ***REMOVED***\n> 35 |   #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |   ^\n  36 |     \n  37 |   getPrivateMethod() ***REMOVED***\n  38 |       return this.#m; <at omitted>",
  "test/language/expressions/class/elements/private-method-get-and-call.js-strict:true": "test/language/expressions/class/elements/private-method-get-and-call.js: SyntaxError: test/language/expressions/class/elements/private-method-get-and-call.js: Unexpected character '#' (35:2)\n  33 | \n  34 | var C = class ***REMOVED***\n> 35 |   #m() ***REMOVED*** return this._v; ***REMOVED***\n     |   ^\n  36 |     \n  37 |   getPrivateMethod() ***REMOVED***\n  38 |       return this.#m; <at omitted>",
  "test/language/expressions/class/elements/private-method-is-not-a-own-property.js-strict:true": "test/language/expressions/class/elements/private-method-is-not-a-own-property.js: SyntaxError: test/language/expressions/class/elements/private-method-is-not-a-own-property.js: Unexpected character '#' (31:2)\n  29 | \n  30 | var C = class ***REMOVED***\n> 31 |   #m() ***REMOVED*** return \"Test262\"; ***REMOVED***\n     |   ^\n  32 | \n  33 |   checkPrivateMethod() ***REMOVED***\n  34 |     assert.sameValue(this.hasOwnProperty(\"#m\"), false); <at omitted>",
  "test/language/expressions/class/elements/private-method-length.js-strict:true": "test/language/expressions/class/elements/private-method-length.js: SyntaxError: test/language/expressions/class/elements/private-method-length.js: Unexpected character '#' (39:2)\n  37 | \n  38 | var C = class ***REMOVED***\n> 39 |   #method(a) ***REMOVED******REMOVED***;\n     |   ^\n  40 | \n  41 |   getPrivateMethod() ***REMOVED***\n  42 |     return this.#method; <at omitted>",
  "test/language/expressions/class/elements/private-method-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-method-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-method-on-nested-class.js: Unexpected character '#' (26:2)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |   ^\n  27 | \n  28 |   B = class ***REMOVED***\n  29 |     method(o) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-method-referenced-from-static-method.js-strict:true": "test/language/expressions/class/elements/private-method-referenced-from-static-method.js: SyntaxError: test/language/expressions/class/elements/private-method-referenced-from-static-method.js: Unexpected character '#' (29:2)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   #f() ***REMOVED*** return 42; ***REMOVED***\n     |   ^\n  30 |   static g() ***REMOVED***\n  31 |     return this.#f();\n  32 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-method-shadowed-by-getter-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-method-shadowed-by-getter-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-method-shadowed-by-getter-on-nested-class.js: Unexpected character '#' (26:2)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   #m() ***REMOVED*** return 'outer class'; ***REMOVED***\n     |   ^\n  27 | \n  28 |   method() ***REMOVED*** return this.#m(); ***REMOVED***\n  29 |  <at omitted>",
  "test/language/expressions/class/elements/private-method-shadowed-by-setter-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-method-shadowed-by-setter-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-method-shadowed-by-setter-on-nested-class.js: Unexpected character '#' (26:2)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   #m() ***REMOVED*** return 'outer class'; ***REMOVED***\n     |   ^\n  27 | \n  28 |   method() ***REMOVED*** return this.#m(); ***REMOVED***\n  29 |  <at omitted>",
  "test/language/expressions/class/elements/private-method-shadowed-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-method-shadowed-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-method-shadowed-on-nested-class.js: Unexpected character '#' (26:2)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   #m() ***REMOVED*** throw new Test262Error(); ***REMOVED***\n     |   ^\n  27 | \n  28 |   B = class ***REMOVED***\n  29 |     method() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-methods/prod-private-method.js-strict:true": "test/language/expressions/class/elements/private-methods/prod-private-method.js: SyntaxError: test/language/expressions/class/elements/private-methods/prod-private-method.js: Unexpected character '#' (88:2)\n  86 | \n  87 | var C = class ***REMOVED***\n> 88 |   #m() ***REMOVED*** return 42; ***REMOVED***\n     |   ^\n  89 | \n  90 | \n  91 |   get ref() ***REMOVED*** return this.#m; ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-setter-access-on-inner-arrow-function.js-strict:true": "test/language/expressions/class/elements/private-setter-access-on-inner-arrow-function.js: SyntaxError: test/language/expressions/class/elements/private-setter-access-on-inner-arrow-function.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   set #m(v) ***REMOVED*** this._v = v; ***REMOVED***\n     |       ^\n  27 | \n  28 |   method() ***REMOVED***\n  29 |     let arrowFunction = () => ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-setter-access-on-inner-function.js-strict:true": "test/language/expressions/class/elements/private-setter-access-on-inner-function.js: SyntaxError: test/language/expressions/class/elements/private-setter-access-on-inner-function.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   set #m(v) ***REMOVED*** this._v = v; ***REMOVED***\n     |       ^\n  27 | \n  28 |   method() ***REMOVED***\n  29 |     let self = this; <at omitted>",
  "test/language/expressions/class/elements/private-setter-is-not-a-own-property.js-strict:true": "test/language/expressions/class/elements/private-setter-is-not-a-own-property.js: SyntaxError: test/language/expressions/class/elements/private-setter-is-not-a-own-property.js: Unexpected character '#' (31:6)\n  29 | \n  30 | var C = class ***REMOVED***\n> 31 |   set #m(v) ***REMOVED*** this._v = v; ***REMOVED***\n     |       ^\n  32 | \n  33 |   checkPrivateSetter() ***REMOVED***\n  34 |     assert.sameValue(this.hasOwnProperty(\"#m\"), false); <at omitted>",
  "test/language/expressions/class/elements/private-setter-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-setter-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-setter-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   set #m(v) ***REMOVED*** this._v = v; ***REMOVED***\n     |       ^\n  27 | \n  28 |   B = class ***REMOVED***\n  29 |     method(o, v) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-setter-shadowed-by-getter-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-setter-shadowed-by-getter-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-setter-shadowed-by-getter-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   set #m(v) ***REMOVED*** this._v = v; ***REMOVED***\n     |       ^\n  27 | \n  28 |   method(v) ***REMOVED*** this.#m = v; ***REMOVED***\n  29 |  <at omitted>",
  "test/language/expressions/class/elements/private-setter-shadowed-by-method-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-setter-shadowed-by-method-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-setter-shadowed-by-method-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   set #m(v) ***REMOVED*** this._v = v; ***REMOVED***\n     |       ^\n  27 | \n  28 |   method(v) ***REMOVED*** this.#m = v; ***REMOVED***\n  29 |  <at omitted>",
  "test/language/expressions/class/elements/private-setter-shadowed-by-setter-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-setter-shadowed-by-setter-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-setter-shadowed-by-setter-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   set #m(v) ***REMOVED*** this._v = v; ***REMOVED***\n     |       ^\n  27 | \n  28 |   method(v) ***REMOVED*** this.#m = v; ***REMOVED***\n  29 |  <at omitted>",
  "test/language/expressions/class/elements/private-static-async-method-name.js-strict:true": "test/language/expressions/class/elements/private-static-async-method-name.js: SyntaxError: test/language/expressions/class/elements/private-static-async-method-name.js: Unexpected character '#' (54:15)\n  52 | \n  53 | var C = class ***REMOVED***\n> 54 |   static async #method() ***REMOVED******REMOVED***;\n     |                ^\n  55 | \n  56 |   static getPrivateMethod() ***REMOVED***\n  57 |     return this.#method; <at omitted>",
  "test/language/expressions/class/elements/private-static-field-shadowed-by-getter-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-static-field-shadowed-by-getter-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-static-field-shadowed-by-getter-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | var C = class ***REMOVED***\n> 68 |   static #m = 'outer class';\n     |          ^\n  69 | \n  70 |   static fieldAccess() ***REMOVED***\n  71 |     return this.#m; <at omitted>",
  "test/language/expressions/class/elements/private-static-field-shadowed-by-method-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-static-field-shadowed-by-method-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-static-field-shadowed-by-method-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | var C = class ***REMOVED***\n> 68 |   static #m = () => 'outer class';\n     |          ^\n  69 | \n  70 |   static fieldAccess() ***REMOVED***\n  71 |     return this.#m(); <at omitted>",
  "test/language/expressions/class/elements/private-static-field-shadowed-by-setter-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-static-field-shadowed-by-setter-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-static-field-shadowed-by-setter-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | var C = class ***REMOVED***\n> 68 |   static #m = 'outer class';\n     |          ^\n  69 | \n  70 |   static fieldAccess() ***REMOVED***\n  71 |     return this.#m; <at omitted>",
  "test/language/expressions/class/elements/private-static-field-usage-inside-nested-class.js-strict:true": "test/language/expressions/class/elements/private-static-field-usage-inside-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-static-field-usage-inside-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | var C = class ***REMOVED***\n> 68 |   static #m = 'outer class';\n     |          ^\n  69 | \n  70 |   static B = class ***REMOVED***\n  71 |     static fieldAccess(o) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/private-static-method-length.js-strict:true": "test/language/expressions/class/elements/private-static-method-length.js: SyntaxError: test/language/expressions/class/elements/private-static-method-length.js: Unexpected character '#' (39:9)\n  37 | \n  38 | var C = class ***REMOVED***\n> 39 |   static #method(a, b, c) ***REMOVED******REMOVED***;\n     |          ^\n  40 | \n  41 |   static getPrivateMethod() ***REMOVED***\n  42 |     return this.#method; <at omitted>",
  "test/language/expressions/class/elements/private-static-method-name.js-strict:true": "test/language/expressions/class/elements/private-static-method-name.js: SyntaxError: test/language/expressions/class/elements/private-static-method-name.js: Unexpected character '#' (62:9)\n  60 | \n  61 | var C = class ***REMOVED***\n> 62 |   static #method() ***REMOVED***\n     |          ^\n  63 |     return 'Test262';\n  64 |   ***REMOVED***;\n  65 |  <at omitted>",
  "test/language/expressions/class/elements/private-static-method-shadowed-by-getter-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-static-method-shadowed-by-getter-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-static-method-shadowed-by-getter-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | var C = class ***REMOVED***\n> 68 |   static #m() ***REMOVED*** return 'outer class'; ***REMOVED***\n     |          ^\n  69 | \n  70 |   static methodAccess() ***REMOVED***\n  71 |     return this.#m(); <at omitted>",
  "test/language/expressions/class/elements/private-static-method-shadowed-by-method-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-static-method-shadowed-by-method-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-static-method-shadowed-by-method-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | var C = class ***REMOVED***\n> 68 |   static #m() ***REMOVED*** return 'outer class'; ***REMOVED***\n     |          ^\n  69 | \n  70 |   static methodAccess() ***REMOVED***\n  71 |     return this.#m(); <at omitted>",
  "test/language/expressions/class/elements/private-static-method-shadowed-by-setter-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-static-method-shadowed-by-setter-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-static-method-shadowed-by-setter-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | var C = class ***REMOVED***\n> 68 |   static #m() ***REMOVED*** return 'outer class'; ***REMOVED***\n     |          ^\n  69 | \n  70 |   static methodAccess() ***REMOVED***\n  71 |     return this.#m(); <at omitted>",
  "test/language/expressions/class/elements/private-static-method-usage-inside-nested-class.js-strict:true": "test/language/expressions/class/elements/private-static-method-usage-inside-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-static-method-usage-inside-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | var C = class ***REMOVED***\n> 68 |   static #m() ***REMOVED***\n     |          ^\n  69 |     return 'outer class';\n  70 |   ***REMOVED***\n  71 |  <at omitted>",
  "test/language/expressions/class/elements/prod-private-getter-before-super-return-in-constructor.js-strict:true": "test/language/expressions/class/elements/prod-private-getter-before-super-return-in-constructor.js: SyntaxError: test/language/expressions/class/elements/prod-private-getter-before-super-return-in-constructor.js: Unexpected character '#' (40:15)\n  38 | \n  39 | class D extends C ***REMOVED***\n> 40 |     f() ***REMOVED*** this.#m; ***REMOVED***\n     |                ^\n  41 |     get #m() ***REMOVED*** return 42; ***REMOVED***\n  42 | ***REMOVED***\n  43 |  <at omitted>",
  "test/language/expressions/class/elements/prod-private-getter-before-super-return-in-field-initializer.js-strict:true": "test/language/expressions/class/elements/prod-private-getter-before-super-return-in-field-initializer.js: SyntaxError: test/language/expressions/class/elements/prod-private-getter-before-super-return-in-field-initializer.js: Unexpected token (33:4)\n  31 | \n  32 | var C = class ***REMOVED***\n> 33 |   f = this.g();\n     |     ^\n  34 | \n  35 | ***REMOVED***\n  36 |  <at omitted>",
  "test/language/expressions/class/elements/prod-private-method-before-super-return-in-constructor.js-strict:true": "test/language/expressions/class/elements/prod-private-method-before-super-return-in-constructor.js: SyntaxError: test/language/expressions/class/elements/prod-private-method-before-super-return-in-constructor.js: Unexpected character '#' (40:15)\n  38 | \n  39 | class D extends C ***REMOVED***\n> 40 |     f() ***REMOVED*** this.#m(); ***REMOVED***\n     |                ^\n  41 |     #m() ***REMOVED*** return 42; ***REMOVED***\n  42 | ***REMOVED***\n  43 |  <at omitted>",
  "test/language/expressions/class/elements/prod-private-method-before-super-return-in-field-initializer.js-strict:true": "test/language/expressions/class/elements/prod-private-method-before-super-return-in-field-initializer.js: SyntaxError: test/language/expressions/class/elements/prod-private-method-before-super-return-in-field-initializer.js: Unexpected token (33:4)\n  31 | \n  32 | var C = class ***REMOVED***\n> 33 |   f = this.g();\n     |     ^\n  34 | \n  35 | ***REMOVED***\n  36 |  <at omitted>",
  "test/language/expressions/class/elements/prod-private-setter-before-super-return-in-constructor.js-strict:true": "test/language/expressions/class/elements/prod-private-setter-before-super-return-in-constructor.js: SyntaxError: test/language/expressions/class/elements/prod-private-setter-before-super-return-in-constructor.js: Unexpected character '#' (40:15)\n  38 | \n  39 | class D extends C ***REMOVED***\n> 40 |     f() ***REMOVED*** this.#m = 42; ***REMOVED***\n     |                ^\n  41 |     set #m(val) ***REMOVED******REMOVED***\n  42 | ***REMOVED***\n  43 |  <at omitted>",
  "test/language/expressions/class/elements/prod-private-setter-before-super-return-in-field-initializer.js-strict:true": "test/language/expressions/class/elements/prod-private-setter-before-super-return-in-field-initializer.js: SyntaxError: test/language/expressions/class/elements/prod-private-setter-before-super-return-in-field-initializer.js: Unexpected token (33:4)\n  31 | \n  32 | var C = class ***REMOVED***\n> 33 |   f = this.g();\n     |     ^\n  34 | \n  35 | ***REMOVED***\n  36 |  <at omitted>",
  "test/language/expressions/class/elements/redeclaration-symbol.js-strict:true": "test/language/expressions/class/elements/redeclaration-symbol.js: SyntaxError: test/language/expressions/class/elements/redeclaration-symbol.js: Unexpected token (39:6)\n  37 | \n  38 | var C = class ***REMOVED***\n> 39 |   [y] = (x.push(\"a\"), \"old_value\");\n     |       ^\n  40 |   [y] = (x.push(\"b\"), \"same_value\");\n  41 |   [y] = (x.push(\"c\"), \"same_value\");\n  42 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/redeclaration.js-strict:true": "test/language/expressions/class/elements/redeclaration.js: SyntaxError: test/language/expressions/class/elements/redeclaration.js: Unexpected token (38:4)\n  36 | \n  37 | var C = class ***REMOVED***\n> 38 |   y = (x.push(\"a\"), \"old_value\");\n     |     ^\n  39 |   [\"y\"] = (x.push(\"b\"), \"another_value\");\n  40 |   \"y\" = (x.push(\"c\"), \"same_value\");\n  41 |   y = (x.push(\"d\"), \"same_value\"); <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-computed-names.js-strict:true": "test/language/expressions/class/elements/regular-definitions-computed-names.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | var C = class ***REMOVED***\n> 28 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"]\n     |       ^\n  29 |   \n  30 | ***REMOVED***\n  31 |  <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-computed-symbol-names.js-strict:true": "test/language/expressions/class/elements/regular-definitions-computed-symbol-names.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-computed-symbol-names.js: Unexpected token (29:11)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   [x]; [y] = 42\n     |            ^\n  30 |   \n  31 | ***REMOVED***\n  32 |  <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-literal-names-asi.js-strict:true": "test/language/expressions/class/elements/regular-definitions-literal-names-asi.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-literal-names-asi.js: Unexpected token (27:4)\n  25 | var C = class ***REMOVED***\n  26 |   a\n> 27 |   b = 42;\n     |     ^\n  28 |   \n  29 | ***REMOVED***\n  30 |  <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-literal-names.js-strict:true": "test/language/expressions/class/elements/regular-definitions-literal-names.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-literal-names.js: Unexpected token (28:7)\n  26 | \n  27 | var C = class ***REMOVED***\n> 28 |   a; b = 42;\n     |        ^\n  29 |   c = fn\n  30 |   \n  31 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-private-method-getter-usage.js-strict:true": "test/language/expressions/class/elements/regular-definitions-private-method-getter-usage.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-private-method-getter-usage.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   get #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |       ^\n  27 |   method() ***REMOVED***\n  28 |     return this.#m;\n  29 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-private-method-usage.js-strict:true": "test/language/expressions/class/elements/regular-definitions-private-method-usage.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-private-method-usage.js: Unexpected character '#' (26:2)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |   ^\n  27 |   method() ***REMOVED***\n  28 |     return this.#m();\n  29 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-rs-field-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-field-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-field-identifier-initializer.js: Unexpected token (61:4)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   $ = 1; _ = 1; \\u***REMOVED***6F***REMOVED*** = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1\n     |     ^\n  62 |   \n  63 | ***REMOVED***\n  64 |  <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-rs-field-identifier.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-field-identifier.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-field-identifier.js: Missing class properties transform.\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   $; _; \\u***REMOVED***6F***REMOVED***; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J\n     |   ^\n  62 |   \n  63 | ***REMOVED***\n  64 |  <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (63:15)\n  61 | \n  62 | var C = class ***REMOVED***\n> 63 |   static async #$(value) ***REMOVED***\n     |                ^\n  64 |     return await value;\n  65 |   ***REMOVED***\n  66 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (63:15)\n  61 | \n  62 | var C = class ***REMOVED***\n> 63 |   static async #$(value) ***REMOVED***\n     |                ^\n  64 |     return await value;\n  65 |   ***REMOVED***\n  66 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (60:9)\n  58 | \n  59 | var C = class ***REMOVED***\n> 60 |   static #$(value) ***REMOVED***\n     |          ^\n  61 |     return value;\n  62 |   ***REMOVED***\n  63 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-rs-static-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-method-privatename-identifier.js: Unexpected character '#' (60:9)\n  58 | \n  59 | var C = class ***REMOVED***\n> 60 |   static #$(value) ***REMOVED***\n     |          ^\n  61 |     return value;\n  62 |   ***REMOVED***\n  63 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (60:9)\n  58 | \n  59 | var C = class ***REMOVED***\n> 60 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n     |          ^\n  61 |   static $(value) ***REMOVED***\n  62 |     C.#$ = value;\n  63 |     return C.#$; <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-alt.js: Unexpected character '#' (60:9)\n  58 | \n  59 | var C = class ***REMOVED***\n> 60 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n     |          ^\n  61 |   static $(value) ***REMOVED***\n  62 |     this.#$ = value;\n  63 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (60:9)\n  58 | \n  59 | var C = class ***REMOVED***\n> 60 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n     |          ^\n  61 |   static $(value) ***REMOVED***\n  62 |     C.#$ = value;\n  63 |     return C.#$; <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (60:9)\n  58 | \n  59 | var C = class ***REMOVED***\n> 60 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n     |          ^\n  61 |   static $() ***REMOVED***\n  62 |     return C.#$;\n  63 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:9)\n  58 | \n  59 | var C = class ***REMOVED***\n> 60 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n     |          ^\n  61 |   static $() ***REMOVED***\n  62 |     return this.#$;\n  63 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (60:9)\n  58 | \n  59 | var C = class ***REMOVED***\n> 60 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1\n     |          ^\n  61 |   static $() ***REMOVED***\n  62 |     return this.#$;\n  63 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier.js: Unexpected character '#' (60:9)\n  58 | \n  59 | var C = class ***REMOVED***\n> 60 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n     |          ^\n  61 |   static $(value) ***REMOVED***\n  62 |     this.#$ = value;\n  63 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-static-private-fields.js-strict:true": "test/language/expressions/class/elements/regular-definitions-static-private-fields.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-static-private-fields.js: Unexpected character '#' (28:9)\n  26 | \n  27 | var C = class ***REMOVED***\n> 28 |   static #x; static #y\n     |          ^\n  29 |   static x() ***REMOVED***\n  30 |     this.#x = 42;\n  31 |     return this.#x; <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-static-private-methods-with-fields.js-strict:true": "test/language/expressions/class/elements/regular-definitions-static-private-methods-with-fields.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-static-private-methods-with-fields.js: Unexpected character '#' (28:9)\n  26 | \n  27 | var C = class ***REMOVED***\n> 28 |   static #xVal; static #yVal\n     |          ^\n  29 |   static #x(value) ***REMOVED***\n  30 |     this.#xVal = value;\n  31 |     return this.#xVal; <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-static-private-methods.js-strict:true": "test/language/expressions/class/elements/regular-definitions-static-private-methods.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-static-private-methods.js: Unexpected character '#' (29:9)\n  27 | var C = class ***REMOVED***\n  28 |   \n> 29 |   static #x(value) ***REMOVED***\n     |          ^\n  30 |     return value / 2;\n  31 |   ***REMOVED***\n  32 |   static #y(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-string-literal-names.js-strict:true": "test/language/expressions/class/elements/regular-definitions-string-literal-names.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-string-literal-names.js: Unexpected token (26:16)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   'a'; \"b\"; 'c' = 39;\n     |                 ^\n  27 |   \"d\" = 42\n  28 |   \n  29 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/same-line-method-computed-names.js-strict:true": "test/language/expressions/class/elements/same-line-method-computed-names.js: SyntaxError: test/language/expressions/class/elements/same-line-method-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | var C = class ***REMOVED***\n> 28 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"]; m() ***REMOVED*** return 42; ***REMOVED***\n     |       ^\n  29 |   \n  30 | ***REMOVED***\n  31 |  <at omitted>",
  "test/language/expressions/class/elements/same-line-method-computed-symbol-names.js-strict:true": "test/language/expressions/class/elements/same-line-method-computed-symbol-names.js: SyntaxError: test/language/expressions/class/elements/same-line-method-computed-symbol-names.js: Unexpected token (29:11)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   [x]; [y] = 42; m() ***REMOVED*** return 42; ***REMOVED***\n     |            ^\n  30 |   \n  31 | ***REMOVED***\n  32 |  <at omitted>",
  "test/language/expressions/class/elements/same-line-method-literal-names-asi.js-strict:true": "test/language/expressions/class/elements/same-line-method-literal-names-asi.js: SyntaxError: test/language/expressions/class/elements/same-line-method-literal-names-asi.js: Unexpected token (27:4)\n  25 | var C = class ***REMOVED***\n  26 |   a\n> 27 |   b = 42;; m() ***REMOVED*** return 42; ***REMOVED***\n     |     ^\n  28 |   \n  29 | ***REMOVED***\n  30 |  <at omitted>",
  "test/language/expressions/class/elements/same-line-method-literal-names.js-strict:true": "test/language/expressions/class/elements/same-line-method-literal-names.js: SyntaxError: test/language/expressions/class/elements/same-line-method-literal-names.js: Unexpected token (28:7)\n  26 | \n  27 | var C = class ***REMOVED***\n> 28 |   a; b = 42;\n     |        ^\n  29 |   c = fn; m() ***REMOVED*** return 42; ***REMOVED***\n  30 |   \n  31 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/same-line-method-private-method-getter-usage.js-strict:true": "test/language/expressions/class/elements/same-line-method-private-method-getter-usage.js: SyntaxError: test/language/expressions/class/elements/same-line-method-private-method-getter-usage.js: Unexpected character '#' (27:6)\n  25 | \n  26 | var C = class ***REMOVED***\n> 27 |   get #m() ***REMOVED*** return 'test262'; ***REMOVED***; m() ***REMOVED*** return 42; ***REMOVED***\n     |       ^\n  28 |   method() ***REMOVED***\n  29 |     return this.#m;\n  30 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/same-line-method-private-method-usage.js-strict:true": "test/language/expressions/class/elements/same-line-method-private-method-usage.js: SyntaxError: test/language/expressions/class/elements/same-line-method-private-method-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | var C = class ***REMOVED***\n> 27 |   #m() ***REMOVED*** return 'test262'; ***REMOVED***; m() ***REMOVED*** return 42; ***REMOVED***\n     |   ^\n  28 |   method() ***REMOVED***\n  29 |     return this.#m();\n  30 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/same-line-method-rs-field-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-field-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-field-identifier-initializer.js: Unexpected token (62:4)\n  60 | \n  61 | var C = class ***REMOVED***\n> 62 |   $ = 1; _ = 1; \\u***REMOVED***6F***REMOVED*** = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1; m() ***REMOVED*** return 42; ***REMOVED***\n     |     ^\n  63 |   \n  64 | ***REMOVED***\n  65 |  <at omitted>",
  "test/language/expressions/class/elements/same-line-method-rs-field-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-field-identifier.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-field-identifier.js: Missing class properties transform.\n  60 | \n  61 | var C = class ***REMOVED***\n> 62 |   $; _; \\u***REMOVED***6F***REMOVED***; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J; m() ***REMOVED*** return 42; ***REMOVED***\n     |   ^\n  63 |   \n  64 | ***REMOVED***\n  65 |  <at omitted>",
  "test/language/expressions/class/elements/same-line-method-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:15)\n  62 | \n  63 | var C = class ***REMOVED***\n> 64 |   static async #$(value) ***REMOVED***\n     |                ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/same-line-method-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:15)\n  62 | \n  63 | var C = class ***REMOVED***\n> 64 |   static async #$(value) ***REMOVED***\n     |                ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/same-line-method-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$(value) ***REMOVED***\n     |          ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/same-line-method-rs-static-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$(value) ***REMOVED***\n     |          ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J; m() ***REMOVED*** return 42; ***REMOVED***\n     |          ^\n  62 |   static $(value) ***REMOVED***\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J; m() ***REMOVED*** return 42; ***REMOVED***\n     |          ^\n  62 |   static $(value) ***REMOVED***\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J; m() ***REMOVED*** return 42; ***REMOVED***\n     |          ^\n  62 |   static $(value) ***REMOVED***\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1; m() ***REMOVED*** return 42; ***REMOVED***\n     |          ^\n  62 |   static $() ***REMOVED***\n  63 |     return C.#$;\n  64 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1; m() ***REMOVED*** return 42; ***REMOVED***\n     |          ^\n  62 |   static $() ***REMOVED***\n  63 |     return this.#$;\n  64 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1; m() ***REMOVED*** return 42; ***REMOVED***\n     |          ^\n  62 |   static $() ***REMOVED***\n  63 |     return this.#$;\n  64 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J; m() ***REMOVED*** return 42; ***REMOVED***\n     |          ^\n  62 |   static $(value) ***REMOVED***\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/same-line-method-static-private-fields.js-strict:true": "test/language/expressions/class/elements/same-line-method-static-private-fields.js: SyntaxError: test/language/expressions/class/elements/same-line-method-static-private-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   static #x; static #y; m() ***REMOVED*** return 42; ***REMOVED***\n     |          ^\n  30 |   static x() ***REMOVED***\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/expressions/class/elements/same-line-method-static-private-methods-with-fields.js-strict:true": "test/language/expressions/class/elements/same-line-method-static-private-methods-with-fields.js: SyntaxError: test/language/expressions/class/elements/same-line-method-static-private-methods-with-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   static #xVal; static #yVal; m() ***REMOVED*** return 42; ***REMOVED***\n     |          ^\n  30 |   static #x(value) ***REMOVED***\n  31 |     this.#xVal = value;\n  32 |     return this.#xVal; <at omitted>",
  "test/language/expressions/class/elements/same-line-method-static-private-methods.js-strict:true": "test/language/expressions/class/elements/same-line-method-static-private-methods.js: SyntaxError: test/language/expressions/class/elements/same-line-method-static-private-methods.js: Unexpected character '#' (30:9)\n  28 | var C = class ***REMOVED***\n  29 |   ; m() ***REMOVED*** return 42; ***REMOVED***\n> 30 |   static #x(value) ***REMOVED***\n     |          ^\n  31 |     return value / 2;\n  32 |   ***REMOVED***\n  33 |   static #y(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/same-line-method-string-literal-names.js-strict:true": "test/language/expressions/class/elements/same-line-method-string-literal-names.js: SyntaxError: test/language/expressions/class/elements/same-line-method-string-literal-names.js: Unexpected token (26:16)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   'a'; \"b\"; 'c' = 39;\n     |                 ^\n  27 |   \"d\" = 42; m() ***REMOVED*** return 42; ***REMOVED***\n  28 |   \n  29 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/static-as-valid-instance-field-assigned.js-strict:true": "test/language/expressions/class/elements/static-as-valid-instance-field-assigned.js: SyntaxError: test/language/expressions/class/elements/static-as-valid-instance-field-assigned.js: Unexpected token (26:9)\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   static = \"foo\";\n     |          ^\n  27 | ***REMOVED***\n  28 | \n  29 | let c = new C(); <at omitted>",
  "test/language/expressions/class/elements/static-as-valid-instance-field.js-strict:true": "test/language/expressions/class/elements/static-as-valid-instance-field.js: SyntaxError: test/language/expressions/class/elements/static-as-valid-instance-field.js: Missing class properties transform.\n  24 | \n  25 | var C = class ***REMOVED***\n> 26 |   static;\n     |   ^\n  27 | ***REMOVED***\n  28 | \n  29 | let c = new C(); <at omitted>",
  "test/language/expressions/class/elements/static-as-valid-static-field-assigned.js-strict:true": "test/language/expressions/class/elements/static-as-valid-static-field-assigned.js: SyntaxError: test/language/expressions/class/elements/static-as-valid-static-field-assigned.js: Unexpected token (20:16)\n  18 | \n  19 | var C = class ***REMOVED***\n> 20 |   static static = \"test262\";\n     |                 ^\n  21 | ***REMOVED***\n  22 | \n  23 | verifyProperty(C, \"static\", ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/static-as-valid-static-field.js-strict:true": "test/language/expressions/class/elements/static-as-valid-static-field.js: SyntaxError: test/language/expressions/class/elements/static-as-valid-static-field.js: Missing class properties transform.\n  18 | \n  19 | var C = class ***REMOVED***\n> 20 |   static static;\n     |   ^\n  21 | ***REMOVED***\n  22 | \n  23 | verifyProperty(C, \"static\", ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/static-field-anonymous-function-length.js-strict:true": "test/language/expressions/class/elements/static-field-anonymous-function-length.js: SyntaxError: test/language/expressions/class/elements/static-field-anonymous-function-length.js: Unexpected character '#' (52:9)\n  50 | \n  51 | var C = class ***REMOVED***\n> 52 |   static #field = (a, b) => undefined;\n     |          ^\n  53 |   static field = function() ***REMOVED******REMOVED***;\n  54 | \n  55 |   static accessPrivateField() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/static-field-anonymous-function-name.js-strict:true": "test/language/expressions/class/elements/static-field-anonymous-function-name.js: SyntaxError: test/language/expressions/class/elements/static-field-anonymous-function-name.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static #field = () => 'Test262';\n     |          ^\n  62 |   static field = function() ***REMOVED*** return 42; ***REMOVED***;\n  63 | \n  64 |   static accessPrivateField() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/static-field-declaration.js-strict:true": "test/language/expressions/class/elements/static-field-declaration.js: SyntaxError: test/language/expressions/class/elements/static-field-declaration.js: Unexpected token (75:11)\n  73 | \n  74 | var C = class ***REMOVED***\n> 75 |   static f = 'test262';\n     |            ^\n  76 |   static 'g';\n  77 |   static 0 = 'bar';\n  78 |   static [computed]; <at omitted>",
  "test/language/expressions/class/elements/static-field-init-this-inside-arrow-function.js-strict:true": "test/language/expressions/class/elements/static-field-init-this-inside-arrow-function.js: SyntaxError: test/language/expressions/class/elements/static-field-init-this-inside-arrow-function.js: Unexpected token (61:11)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static f = () => this;\n     |            ^\n  62 | ***REMOVED***\n  63 | \n  64 | assert.sameValue(C.f(), C); <at omitted>",
  "test/language/expressions/class/elements/static-field-init-with-this.js-strict:true": "test/language/expressions/class/elements/static-field-init-with-this.js: SyntaxError: test/language/expressions/class/elements/static-field-init-with-this.js: Unexpected token (61:11)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static f = 'test';\n     |            ^\n  62 |   static g = this.f + '262';\n  63 |   static h = eval('this.g') + 'test';\n  64 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/static-field-redeclaration.js-strict:true": "test/language/expressions/class/elements/static-field-redeclaration.js: SyntaxError: test/language/expressions/class/elements/static-field-redeclaration.js: Unexpected token (61:11)\n  59 | \n  60 | var C = class ***REMOVED***\n> 61 |   static f = 'test';\n     |            ^\n  62 |   static f = this.f + '262';\n  63 |   static g() ***REMOVED***\n  64 |     return 45; <at omitted>",
  "test/language/expressions/class/elements/static-private-fields-proxy-default-handler-throws.js-strict:true": "test/language/expressions/class/elements/static-private-fields-proxy-default-handler-throws.js: SyntaxError: test/language/expressions/class/elements/static-private-fields-proxy-default-handler-throws.js: Unexpected character '#' (18:9)\n  16 | \n  17 | var C = class ***REMOVED***\n> 18 |   static #x = 1;\n     |          ^\n  19 |   static x() ***REMOVED***\n  20 |     return this.#x;\n  21 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/static-private-getter-access-on-inner-arrow-function.js-strict:true": "test/language/expressions/class/elements/static-private-getter-access-on-inner-arrow-function.js: SyntaxError: test/language/expressions/class/elements/static-private-getter-access-on-inner-arrow-function.js: Unexpected character '#' (29:13)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   static get #f() ***REMOVED***\n     |              ^\n  30 |     return 'Test262';\n  31 |   ***REMOVED***\n  32 |  <at omitted>",
  "test/language/expressions/class/elements/static-private-getter-access-on-inner-class.js-strict:true": "test/language/expressions/class/elements/static-private-getter-access-on-inner-class.js: SyntaxError: test/language/expressions/class/elements/static-private-getter-access-on-inner-class.js: Unexpected character '#' (29:13)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   static get #f() ***REMOVED***\n     |              ^\n  30 |     return 'Test262';\n  31 |   ***REMOVED***\n  32 |  <at omitted>",
  "test/language/expressions/class/elements/static-private-getter-access-on-inner-function.js-strict:true": "test/language/expressions/class/elements/static-private-getter-access-on-inner-function.js: SyntaxError: test/language/expressions/class/elements/static-private-getter-access-on-inner-function.js: Unexpected character '#' (29:13)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   static get #f() ***REMOVED***\n     |              ^\n  30 |     return 'Test262';\n  31 |   ***REMOVED***\n  32 |  <at omitted>",
  "test/language/expressions/class/elements/static-private-getter.js-strict:true": "test/language/expressions/class/elements/static-private-getter.js: SyntaxError: test/language/expressions/class/elements/static-private-getter.js: Unexpected character '#' (44:13)\n  42 | \n  43 | var C = class ***REMOVED***\n> 44 |   static get #f() ***REMOVED***\n     |              ^\n  45 |     return 'Test262';\n  46 |   ***REMOVED***\n  47 |  <at omitted>",
  "test/language/expressions/class/elements/static-private-method-access-on-inner-arrow-function.js-strict:true": "test/language/expressions/class/elements/static-private-method-access-on-inner-arrow-function.js: SyntaxError: test/language/expressions/class/elements/static-private-method-access-on-inner-arrow-function.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   static #f() ***REMOVED*** return 42; ***REMOVED***\n     |          ^\n  30 |   static g() ***REMOVED***\n  31 |     const arrowFunction = () => ***REMOVED***\n  32 |       return this.#f(); <at omitted>",
  "test/language/expressions/class/elements/static-private-method-access-on-inner-function.js-strict:true": "test/language/expressions/class/elements/static-private-method-access-on-inner-function.js: SyntaxError: test/language/expressions/class/elements/static-private-method-access-on-inner-function.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   static #f() ***REMOVED*** return 42; ***REMOVED***\n     |          ^\n  30 |   static g() ***REMOVED***\n  31 |     const self = this;\n  32 |  <at omitted>",
  "test/language/expressions/class/elements/static-private-method-and-instance-method-brand-check.js-strict:true": "test/language/expressions/class/elements/static-private-method-and-instance-method-brand-check.js: SyntaxError: test/language/expressions/class/elements/static-private-method-and-instance-method-brand-check.js: Unexpected character '#' (37:9)\n  35 | \n  36 | var C = class ***REMOVED***\n> 37 |   static #f() ***REMOVED***\n     |          ^\n  38 |     return 'static';\n  39 |   ***REMOVED***\n  40 |  <at omitted>",
  "test/language/expressions/class/elements/static-private-method-referenced-from-instance-method.js-strict:true": "test/language/expressions/class/elements/static-private-method-referenced-from-instance-method.js: SyntaxError: test/language/expressions/class/elements/static-private-method-referenced-from-instance-method.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   static #f() ***REMOVED*** return 42; ***REMOVED***\n     |          ^\n  30 |   g() ***REMOVED***\n  31 |     return this.#f();\n  32 |   ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/static-private-method-subclass-receiver.js-strict:true": "test/language/expressions/class/elements/static-private-method-subclass-receiver.js: SyntaxError: test/language/expressions/class/elements/static-private-method-subclass-receiver.js: Unexpected character '#' (29:27)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   static f() ***REMOVED*** return this.#g(); ***REMOVED***\n     |                            ^\n  30 |   static #g() ***REMOVED*** return 42; ***REMOVED***\n  31 | \n  32 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/static-private-methods-proxy-default-handler-throws.js-strict:true": "test/language/expressions/class/elements/static-private-methods-proxy-default-handler-throws.js: SyntaxError: test/language/expressions/class/elements/static-private-methods-proxy-default-handler-throws.js: Unexpected character '#' (19:9)\n  17 | \n  18 | var C = class ***REMOVED***\n> 19 |   static #x(value) ***REMOVED***\n     |          ^\n  20 |     return 1;\n  21 |   ***REMOVED***\n  22 |   static x() ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/static-private-setter-access-on-inner-arrow-function.js-strict:true": "test/language/expressions/class/elements/static-private-setter-access-on-inner-arrow-function.js: SyntaxError: test/language/expressions/class/elements/static-private-setter-access-on-inner-arrow-function.js: Unexpected character '#' (29:13)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   static set #f(v) ***REMOVED***\n     |              ^\n  30 |     this._v = v;\n  31 |   ***REMOVED***\n  32 |  <at omitted>",
  "test/language/expressions/class/elements/static-private-setter-access-on-inner-class.js-strict:true": "test/language/expressions/class/elements/static-private-setter-access-on-inner-class.js: SyntaxError: test/language/expressions/class/elements/static-private-setter-access-on-inner-class.js: Unexpected character '#' (29:13)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   static set #f(v) ***REMOVED***\n     |              ^\n  30 |     return this._v = v;\n  31 |   ***REMOVED***\n  32 |  <at omitted>",
  "test/language/expressions/class/elements/static-private-setter-access-on-inner-function.js-strict:true": "test/language/expressions/class/elements/static-private-setter-access-on-inner-function.js: SyntaxError: test/language/expressions/class/elements/static-private-setter-access-on-inner-function.js: Unexpected character '#' (29:13)\n  27 | \n  28 | var C = class ***REMOVED***\n> 29 |   static set #f(v) ***REMOVED***\n     |              ^\n  30 |     this._v = v;\n  31 |   ***REMOVED***\n  32 |  <at omitted>",
  "test/language/expressions/class/elements/static-private-setter.js-strict:true": "test/language/expressions/class/elements/static-private-setter.js: SyntaxError: test/language/expressions/class/elements/static-private-setter.js: Unexpected character '#' (44:13)\n  42 | \n  43 | var C = class ***REMOVED***\n> 44 |   static set #f(v) ***REMOVED***\n     |              ^\n  45 |     this._v = v;\n  46 |   ***REMOVED***\n  47 |  <at omitted>",
  "test/language/expressions/class/elements/super-access-from-arrow-func-on-field.js-strict:true": "test/language/expressions/class/elements/super-access-from-arrow-func-on-field.js: SyntaxError: test/language/expressions/class/elements/super-access-from-arrow-func-on-field.js: Unexpected token (23:7)\n  21 | \n  22 | var C = class ***REMOVED***\n> 23 |   func = () => ***REMOVED***\n     |        ^\n  24 |       super.prop = 'test262';\n  25 |   ***REMOVED***\n  26 |  <at omitted>",
  "test/language/expressions/class/elements/syntax/early-errors/grammar-static-get-meth-prototype.js-strict:true": "test/language/expressions/class/elements/syntax/early-errors/grammar-static-get-meth-prototype.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/class/elements/syntax/early-errors/grammar-static-set-meth-prototype.js-strict:true": "test/language/expressions/class/elements/syntax/early-errors/grammar-static-set-meth-prototype.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/class/elements/syntax/valid/grammar-field-classelementname-initializer-alt.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-field-classelementname-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-field-classelementname-initializer-alt.js: Unexpected token (65:4)\n  63 | \n  64 | var C = class ***REMOVED***\n> 65 |   $ = 1;\n     |     ^\n  66 |   _ = 2;\n  67 |   \\u***REMOVED***6F***REMOVED*** = 3;\n  68 |   ℘ = 4;      // DO NOT CHANGE THE NAME OF THIS FIELD <at omitted>",
  "test/language/expressions/class/elements/syntax/valid/grammar-field-classelementname-initializer.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-field-classelementname-initializer.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-field-classelementname-initializer.js: Unexpected token (65:4)\n  63 | \n  64 | var C = class ***REMOVED***\n> 65 |   $ = 1;\n     |     ^\n  66 |   _ = 2;\n  67 |   \\u***REMOVED***6F***REMOVED*** = 3;\n  68 |   \\u2118 = 4; <at omitted>",
  "test/language/expressions/class/elements/syntax/valid/grammar-field-identifier-alt.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-field-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-field-identifier-alt.js: Missing class properties transform.\n  63 | \n  64 | var C = class ***REMOVED***\n> 65 |   $;\n     |   ^\n  66 |   _;\n  67 |   \\u***REMOVED***6F***REMOVED***;\n  68 |   ℘;      // DO NOT CHANGE THE NAME OF THIS FIELD <at omitted>",
  "test/language/expressions/class/elements/syntax/valid/grammar-field-identifier.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-field-identifier.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-field-identifier.js: Missing class properties transform.\n  63 | \n  64 | var C = class ***REMOVED***\n> 65 |   $;\n     |   ^\n  66 |   _;\n  67 |   \\u***REMOVED***6F***REMOVED***;\n  68 |   \\u2118; <at omitted>",
  "test/language/expressions/class/elements/syntax/valid/grammar-fields-multi-line.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-fields-multi-line.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-fields-multi-line.js: Missing class properties transform.\n  26 | \n  27 | var C = class ***REMOVED***\n> 28 |   x\n     |   ^\n  29 |   y\n  30 | ***REMOVED***;\n  31 |  <at omitted>",
  "test/language/expressions/class/elements/syntax/valid/grammar-privatemeth-duplicate-get-set.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-privatemeth-duplicate-get-set.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-privatemeth-duplicate-get-set.js: Unexpected character '#' (20:6)\n  18 | \n  19 | var C = class ***REMOVED***\n> 20 |   get #m() ***REMOVED******REMOVED***\n     |       ^\n  21 |   set #m(_) ***REMOVED******REMOVED***\n  22 | ***REMOVED***;\n  23 |  <at omitted>",
  "test/language/expressions/class/elements/syntax/valid/grammar-privatemeth-duplicate-meth-nestedclassmeth.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-privatemeth-duplicate-meth-nestedclassmeth.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-privatemeth-duplicate-meth-nestedclassmeth.js: Unexpected character '#' (22:6)\n  20 |   constructor() ***REMOVED***\n  21 |     class B ***REMOVED***\n> 22 |       #m() ***REMOVED******REMOVED***\n     |       ^\n  23 |     ***REMOVED***\n  24 |   ***REMOVED***\n  25 |  <at omitted>",
  "test/language/expressions/class/elements/syntax/valid/grammar-static-private-meth-prototype.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-static-private-meth-prototype.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-static-private-meth-prototype.js: Unexpected character '#' (20:9)\n  18 | \n  19 | var C = class ***REMOVED***\n> 20 |   static #prototype() ***REMOVED******REMOVED***\n     |          ^\n  21 | ***REMOVED***;\n  22 |  <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-computed-names.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-computed-names.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-computed-names.js: Unexpected token (29:12)\n  27 | var C = class ***REMOVED***\n  28 |   ;;;;\n> 29 |   ;;;;;;[x] = 42; [10] = \"meep\"; [\"not initialized\"];;;;;;;\n     |             ^\n  30 |   ;;;;\n  31 |   \n  32 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-computed-symbol-names.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-computed-symbol-names.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-computed-symbol-names.js: Unexpected token (30:17)\n  28 | var C = class ***REMOVED***\n  29 |   ;;;;\n> 30 |   ;;;;;;[x]; [y] = 42;;;;;;;\n     |                  ^\n  31 |   ;;;;\n  32 |   \n  33 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-literal-names-asi.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-literal-names-asi.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-literal-names-asi.js: Unexpected token (28:4)\n  26 |   ;;;;\n  27 |   ;;;;;;a\n> 28 |   b = 42;;;;;;;;\n     |     ^\n  29 |   ;;;;\n  30 |   \n  31 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-literal-names.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-literal-names.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-literal-names.js: Unexpected token (29:13)\n  27 | var C = class ***REMOVED***\n  28 |   ;;;;\n> 29 |   ;;;;;;a; b = 42;\n     |              ^\n  30 |   c = fn;;;;;;;\n  31 |   ;;;;\n  32 |    <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-private-method-getter-usage.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-private-method-getter-usage.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-private-method-getter-usage.js: Unexpected character '#' (27:12)\n  25 | var C = class ***REMOVED***\n  26 |   ;;;;\n> 27 |   ;;;;;;get #m() ***REMOVED*** return 'test262'; ***REMOVED***;;;;;;;\n     |             ^\n  28 |   ;;;;\n  29 |   method() ***REMOVED***\n  30 |     return this.#m; <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-private-method-usage.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-private-method-usage.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-private-method-usage.js: Unexpected character '#' (27:8)\n  25 | var C = class ***REMOVED***\n  26 |   ;;;;\n> 27 |   ;;;;;;#m() ***REMOVED*** return 'test262'; ***REMOVED***;;;;;;;\n     |         ^\n  28 |   ;;;;\n  29 |   method() ***REMOVED***\n  30 |     return this.#m(); <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-field-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-field-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-field-identifier-initializer.js: Unexpected token (62:10)\n  60 | var C = class ***REMOVED***\n  61 |   ;;;;\n> 62 |   ;;;;;;$ = 1; _ = 1; \\u***REMOVED***6F***REMOVED*** = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;;;;;;;\n     |           ^\n  63 |   ;;;;\n  64 |   \n  65 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-field-identifier.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-field-identifier.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-field-identifier.js: Missing class properties transform.\n  60 | var C = class ***REMOVED***\n  61 |   ;;;;\n> 62 |   ;;;;;;$; _; \\u***REMOVED***6F***REMOVED***; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J;;;;;;;\n     |         ^\n  63 |   ;;;;\n  64 |   \n  65 | ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:21)\n  62 | var C = class ***REMOVED***\n  63 |   ;;;;\n> 64 |   ;;;;;;static async #$(value) ***REMOVED***\n     |                      ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:21)\n  62 | var C = class ***REMOVED***\n  63 |   ;;;;\n> 64 |   ;;;;;;static async #$(value) ***REMOVED***\n     |                      ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:15)\n  59 | var C = class ***REMOVED***\n  60 |   ;;;;\n> 61 |   ;;;;;;static #$(value) ***REMOVED***\n     |                ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:15)\n  59 | var C = class ***REMOVED***\n  60 |   ;;;;\n> 61 |   ;;;;;;static #$(value) ***REMOVED***\n     |                ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:15)\n  59 | var C = class ***REMOVED***\n  60 |   ;;;;\n> 61 |   ;;;;;;static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $(value) ***REMOVED***\n  64 |     C.#$ = value; <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:15)\n  59 | var C = class ***REMOVED***\n  60 |   ;;;;\n> 61 |   ;;;;;;static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $(value) ***REMOVED***\n  64 |     this.#$ = value; <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:15)\n  59 | var C = class ***REMOVED***\n  60 |   ;;;;\n> 61 |   ;;;;;;static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $(value) ***REMOVED***\n  64 |     C.#$ = value; <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:15)\n  59 | var C = class ***REMOVED***\n  60 |   ;;;;\n> 61 |   ;;;;;;static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $() ***REMOVED***\n  64 |     return C.#$; <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:15)\n  59 | var C = class ***REMOVED***\n  60 |   ;;;;\n> 61 |   ;;;;;;static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $() ***REMOVED***\n  64 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:15)\n  59 | var C = class ***REMOVED***\n  60 |   ;;;;\n> 61 |   ;;;;;;static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $() ***REMOVED***\n  64 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier.js: Unexpected character '#' (61:15)\n  59 | var C = class ***REMOVED***\n  60 |   ;;;;\n> 61 |   ;;;;;;static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $(value) ***REMOVED***\n  64 |     this.#$ = value; <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-static-private-fields.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-static-private-fields.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-static-private-fields.js: Unexpected character '#' (29:15)\n  27 | var C = class ***REMOVED***\n  28 |   ;;;;\n> 29 |   ;;;;;;static #x; static #y;;;;;;;\n     |                ^\n  30 |   ;;;;\n  31 |   static x() ***REMOVED***\n  32 |     this.#x = 42; <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-static-private-methods-with-fields.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-static-private-methods-with-fields.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-static-private-methods-with-fields.js: Unexpected character '#' (29:15)\n  27 | var C = class ***REMOVED***\n  28 |   ;;;;\n> 29 |   ;;;;;;static #xVal; static #yVal;;;;;;;\n     |                ^\n  30 |   ;;;;\n  31 |   static #x(value) ***REMOVED***\n  32 |     this.#xVal = value; <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-static-private-methods.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-static-private-methods.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-static-private-methods.js: Unexpected character '#' (31:9)\n  29 |   ;;;;;;;;;;;;;\n  30 |   ;;;;\n> 31 |   static #x(value) ***REMOVED***\n     |          ^\n  32 |     return value / 2;\n  33 |   ***REMOVED***\n  34 |   static #y(value) ***REMOVED*** <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-string-literal-names.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-string-literal-names.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-string-literal-names.js: Unexpected token (27:22)\n  25 | var C = class ***REMOVED***\n  26 |   ;;;;\n> 27 |   ;;;;;;'a'; \"b\"; 'c' = 39;\n     |                       ^\n  28 |   \"d\" = 42;;;;;;;\n  29 |   ;;;;\n  30 |    <at omitted>",
  "test/language/expressions/class/heritage-arrow-function.js-strict:true": "test/language/expressions/class/heritage-arrow-function.js: test/language/expressions/class/heritage-arrow-function.js: Line 30:206 Malformed arrow function parameter list (and 3 more errors)",
  "test/language/expressions/class/heritage-async-arrow-function.js-strict:true": "test/language/expressions/class/heritage-async-arrow-function.js: test/language/expressions/class/heritage-async-arrow-function.js: Line 30:206 Malformed arrow function parameter list (and 3 more errors)",
  "test/language/expressions/class/name.js-strict:true": "test/language/expressions/class/name.js: Test262Error: descriptor value should be  <at omitted>",
  "test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-eval-indirect.js-strict:false": "test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-eval-indirect.js: SyntaxError: SyntaxError: <eval>: Line 2:1 Unexpected reserved word (and 7 more errors) <at omitted>",
  "test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-eval.js-strict:false": "test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-eval.js: SyntaxError: SyntaxError: <eval>: Line 2:1 Unexpected reserved word (and 7 more errors) <at omitted>",
  "test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-factory.js-strict:true": "test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-factory.js: SyntaxError: test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-factory.js: Unexpected character '#' (25:8)\n  23 | let createAndInstantiateClass = function () ***REMOVED***\n  24 |   const C = class ***REMOVED***\n> 25 |     get #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |         ^\n  26 | \n  27 |     access(o) ***REMOVED***\n  28 |       return o.#m; <at omitted>",
  "test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-function-ctor.js-strict:true": "test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-function-ctor.js: SyntaxError: SyntaxError: <eval>: Line 4:8 Unexpected reserved word (and 6 more errors) <at omitted>",
  "test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-eval-indirect.js-strict:false": "test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-eval-indirect.js: SyntaxError: SyntaxError: <eval>: Line 2:1 Unexpected reserved word (and 7 more errors) <at omitted>",
  "test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-eval.js-strict:false": "test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-eval.js: SyntaxError: SyntaxError: <eval>: Line 2:1 Unexpected reserved word (and 7 more errors) <at omitted>",
  "test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-factory.js-strict:true": "test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-factory.js: SyntaxError: test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-factory.js: Unexpected character '#' (25:4)\n  23 | let createAndInstantiateClass = function () ***REMOVED***\n  24 |   const C = class ***REMOVED***\n> 25 |     #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |     ^\n  26 | \n  27 |     access(o) ***REMOVED***\n  28 |       return o.#m(); <at omitted>",
  "test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-function-ctor.js-strict:true": "test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-function-ctor.js: SyntaxError: SyntaxError: <eval>: Line 4:8 Unexpected reserved word (and 6 more errors) <at omitted>",
  "test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-eval-indirect.js-strict:false": "test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-eval-indirect.js: SyntaxError: SyntaxError: <eval>: Line 2:1 Unexpected reserved word (and 3 more errors) <at omitted>",
  "test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-eval.js-strict:false": "test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-eval.js: SyntaxError: SyntaxError: <eval>: Line 2:1 Unexpected reserved word (and 3 more errors) <at omitted>",
  "test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-factory.js-strict:true": "test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-factory.js: SyntaxError: test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-factory.js: Unexpected character '#' (25:8)\n  23 | let createAndInstantiateClass = function () ***REMOVED***\n  24 |   const C = class ***REMOVED***\n> 25 |     set #m(v) ***REMOVED*** this._v = v; ***REMOVED***\n     |         ^\n  26 | \n  27 |     access(o, v) ***REMOVED***\n  28 |       o.#m = v; <at omitted>",
  "test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-function-ctor.js-strict:true": "test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-function-ctor.js: SyntaxError: SyntaxError: <eval>: Line 4:8 Unexpected reserved word (and 4 more errors) <at omitted>",
  "test/language/expressions/class/private-static-field-multiple-evaluations-of-class-direct-eval.js-strict:false": "test/language/expressions/class/private-static-field-multiple-evaluations-of-class-direct-eval.js: SyntaxError: SyntaxError: <eval>: Line 2:1 Unexpected reserved word (and 5 more errors) <at omitted>",
  "test/language/expressions/class/private-static-field-multiple-evaluations-of-class-eval-indirect.js-strict:false": "test/language/expressions/class/private-static-field-multiple-evaluations-of-class-eval-indirect.js: SyntaxError: SyntaxError: <eval>: Line 2:1 Unexpected reserved word (and 5 more errors) <at omitted>",
  "test/language/expressions/class/private-static-field-multiple-evaluations-of-class-factory.js-strict:true": "test/language/expressions/class/private-static-field-multiple-evaluations-of-class-factory.js: SyntaxError: test/language/expressions/class/private-static-field-multiple-evaluations-of-class-factory.js: Unexpected character '#' (44:11)\n  42 | let createClass = function () ***REMOVED***\n  43 |   return class ***REMOVED***\n> 44 |     static #m = 'test262';\n     |            ^\n  45 | \n  46 |     static access() ***REMOVED***\n  47 |       return this.#m; <at omitted>",
  "test/language/expressions/class/private-static-field-multiple-evaluations-of-class-function-ctor.js-strict:true": "test/language/expressions/class/private-static-field-multiple-evaluations-of-class-function-ctor.js: SyntaxError: SyntaxError: <eval>: Line 4:8 Unexpected reserved word (and 6 more errors) <at omitted>",
  "test/language/expressions/class/private-static-getter-multiple-evaluations-of-class-direct-eval.js-strict:false": "test/language/expressions/class/private-static-getter-multiple-evaluations-of-class-direct-eval.js: SyntaxError: SyntaxError: <eval>: Line 2:1 Unexpected reserved word (and 7 more errors) <at omitted>",
  "test/language/expressions/class/private-static-getter-multiple-evaluations-of-class-eval-indirect.js-strict:false": "test/language/expressions/class/private-static-getter-multiple-evaluations-of-class-eval-indirect.js: SyntaxError: SyntaxError: <eval>: Line 2:1 Unexpected reserved word (and 7 more errors) <at omitted>",
  "test/language/expressions/class/private-static-getter-multiple-evaluations-of-class-factory.js-strict:true": "test/language/expressions/class/private-static-getter-multiple-evaluations-of-class-factory.js: SyntaxError: test/language/expressions/class/private-static-getter-multiple-evaluations-of-class-factory.js: Unexpected character '#' (28:15)\n  26 | let createClass = function () ***REMOVED***\n  27 |   return class ***REMOVED***\n> 28 |     static get #m() ***REMOVED***\n     |                ^\n  29 |       return 'test262';\n  30 |     ***REMOVED***;\n  31 |  <at omitted>",
  "test/language/expressions/class/private-static-getter-multiple-evaluations-of-class-function-ctor.js-strict:true": "test/language/expressions/class/private-static-getter-multiple-evaluations-of-class-function-ctor.js: SyntaxError: SyntaxError: <eval>: Line 4:8 Unexpected reserved word (and 7 more errors) <at omitted>",
  "test/language/expressions/class/private-static-method-brand-check-multiple-evaluations-of-class-direct-eval.js-strict:false": "test/language/expressions/class/private-static-method-brand-check-multiple-evaluations-of-class-direct-eval.js: SyntaxError: SyntaxError: <eval>: Line 2:1 Unexpected reserved word (and 7 more errors) <at omitted>",
  "test/language/expressions/class/private-static-method-brand-check-multiple-evaluations-of-class-eval-indirect.js-strict:false": "test/language/expressions/class/private-static-method-brand-check-multiple-evaluations-of-class-eval-indirect.js: SyntaxError: SyntaxError: <eval>: Line 2:1 Unexpected reserved word (and 7 more errors) <at omitted>",
  "test/language/expressions/class/private-static-method-brand-check-multiple-evaluations-of-class-factory.js-strict:true": "test/language/expressions/class/private-static-method-brand-check-multiple-evaluations-of-class-factory.js: SyntaxError: test/language/expressions/class/private-static-method-brand-check-multiple-evaluations-of-class-factory.js: Unexpected character '#' (28:11)\n  26 | let createClass = function () ***REMOVED***\n  27 |   return class ***REMOVED***\n> 28 |     static #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |            ^\n  29 | \n  30 |     static access() ***REMOVED***\n  31 |       return this.#m(); <at omitted>",
  "test/language/expressions/class/private-static-method-brand-check-multiple-evaluations-of-class-function-ctor.js-strict:true": "test/language/expressions/class/private-static-method-brand-check-multiple-evaluations-of-class-function-ctor.js: SyntaxError: SyntaxError: <eval>: Line 4:8 Unexpected reserved word (and 8 more errors) <at omitted>",
  "test/language/expressions/class/private-static-setter-multiple-evaluations-of-class-direct-eval.js-strict:false": "test/language/expressions/class/private-static-setter-multiple-evaluations-of-class-direct-eval.js: SyntaxError: SyntaxError: <eval>: Line 2:1 Unexpected reserved word (and 3 more errors) <at omitted>",
  "test/language/expressions/class/private-static-setter-multiple-evaluations-of-class-eval-indirect.js-strict:false": "test/language/expressions/class/private-static-setter-multiple-evaluations-of-class-eval-indirect.js: SyntaxError: SyntaxError: <eval>: Line 2:1 Unexpected reserved word (and 3 more errors) <at omitted>",
  "test/language/expressions/class/private-static-setter-multiple-evaluations-of-class-factory.js-strict:true": "test/language/expressions/class/private-static-setter-multiple-evaluations-of-class-factory.js: SyntaxError: test/language/expressions/class/private-static-setter-multiple-evaluations-of-class-factory.js: Unexpected character '#' (28:15)\n  26 | let createClass = function () ***REMOVED***\n  27 |   return class ***REMOVED***\n> 28 |     static set #m(v) ***REMOVED***\n     |                ^\n  29 |       this._v = v;\n  30 |     ***REMOVED***;\n  31 |  <at omitted>",
  "test/language/expressions/class/private-static-setter-multiple-evaluations-of-class-function-ctor.js-strict:true": "test/language/expressions/class/private-static-setter-multiple-evaluations-of-class-function-ctor.js: SyntaxError: SyntaxError: <eval>: Line 4:8 Unexpected reserved word (and 4 more errors) <at omitted>",
  "test/language/expressions/class/scope-name-lex-open-heritage.js-strict:true": "test/language/expressions/class/scope-name-lex-open-heritage.js: Test262Error: from class heritage Expected SameValue(«outside», «function C() ***REMOVED***_classCallCheck(this, C);return _possibleConstructorReturn(this, (C.__proto__ || Object.getPrototypeOf(C)).apply(this, arguments));***REMOVED***») to be true <at omitted>",
  "test/language/expressions/class/scope-name-lex-open-no-heritage.js-strict:true": "test/language/expressions/class/scope-name-lex-open-no-heritage.js: Test262Error: inner binding rejects modification Expected a TypeError to be thrown but no exception was thrown at all <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-AggregateError.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-AggregateError.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-Array.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Array.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-ArrayBuffer.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-ArrayBuffer.js: TypeError: Constructor ArrayBuffer requires 'new' <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-DataView.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-DataView.js: TypeError: Constructor DataView requires 'new' <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-Error.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Error.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-EvalError.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-EvalError.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-Float32Array.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Float32Array.js: TypeError: Constructor TypedArray requires 'new' <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-Float64Array.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Float64Array.js: TypeError: Constructor TypedArray requires 'new' <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-Function.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Function.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-Int16Array.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Int16Array.js: TypeError: Constructor TypedArray requires 'new' <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-Int32Array.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Int32Array.js: TypeError: Constructor TypedArray requires 'new' <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-Int8Array.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Int8Array.js: TypeError: Constructor TypedArray requires 'new' <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-Map.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Map.js: TypeError: Constructor Map requires 'new' <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-Object.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Object.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-Promise.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Promise.js: TypeError: Constructor Promise requires 'new' <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-RangeError.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-RangeError.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-ReferenceError.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-ReferenceError.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-RegExp.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-RegExp.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-Set.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Set.js: TypeError: Constructor Set requires 'new' <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-SyntaxError.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-SyntaxError.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-TypeError.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-TypeError.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-URIError.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-URIError.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-Uint16Array.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Uint16Array.js: TypeError: Constructor TypedArray requires 'new' <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-Uint32Array.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Uint32Array.js: TypeError: Constructor TypedArray requires 'new' <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-Uint8Array.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Uint8Array.js: TypeError: Constructor TypedArray requires 'new' <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-Uint8ClampedArray.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Uint8ClampedArray.js: TypeError: Constructor TypedArray requires 'new' <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-WeakMap.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-WeakMap.js: TypeError: Constructor WeakMap requires 'new' <at omitted>",
  "test/language/expressions/class/subclass-builtins/subclass-WeakSet.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-WeakSet.js: TypeError: Constructor WeakSet requires 'new' <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.10_T1.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.10_T1.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.10_T2.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.10_T2.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.10_T4.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.10_T4.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.11_T1.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.11_T1.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.11_T2.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.11_T2.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.11_T4.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.11_T4.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.1_T1.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.1_T1.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.1_T2.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.1_T2.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.1_T4.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.1_T4.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.2_T1.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.2_T1.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.2_T2.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.2_T2.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.2_T4.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.2_T4.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.3_T1.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.3_T1.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.3_T2.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.3_T2.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.3_T4.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.3_T4.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.4_T1.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.4_T1.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.4_T2.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.4_T2.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.4_T4.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.4_T4.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.5_T1.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.5_T1.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.5_T2.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.5_T2.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.5_T4.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.5_T4.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.6_T1.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.6_T1.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.6_T2.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.6_T2.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.6_T4.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.6_T4.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.7_T1.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.7_T1.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.7_T2.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.7_T2.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.7_T4.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.7_T4.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.8_T1.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.8_T1.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.8_T2.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.8_T2.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.8_T4.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.8_T4.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.9_T1.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.9_T1.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.9_T2.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.9_T2.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/compound-assignment/S11.13.2_A7.9_T4.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.9_T4.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/delete/super-property-method.js-strict:true": "test/language/expressions/delete/super-property-method.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all <at omitted>",
  "test/language/expressions/delete/super-property-null-base.js-strict:true": "test/language/expressions/delete/super-property-null-base.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all <at omitted>",
  "test/language/expressions/delete/super-property.js-strict:true": "test/language/expressions/delete/super-property.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all <at omitted>",
  "test/language/expressions/function/dstr/ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/function/dstr/ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/expressions/function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/expressions/function/dstr/dflt-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/function/dstr/dflt-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/expressions/function/dstr/obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/function/dstr/obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/expressions/new.target/escaped-new.js-strict:true": "test/language/expressions/new.target/escaped-new.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/new.target/escaped-target.js-strict:true": "test/language/expressions/new.target/escaped-target.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/new.target/value-via-super-call.js-strict:true": "test/language/expressions/new.target/value-via-super-call.js: Test262Error: within \"parent\" constructor Expected SameValue(«undefined», «function Child() ***REMOVED***_classCallCheck(this, Child);return _possibleConstructorReturn(this, (Child.__proto__ || Object.getPrototypeOf(Child)).call(this));\n\n  ***REMOVED***») to be true <at omitted>",
  "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-async-arrow-function-expression.js-strict:true": "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-async-arrow-function-expression.js: test/language/expressions/object/cpn-obj-lit-computed-property-name-from-async-arrow-function-expression.js: Line 29:4 Malformed arrow function parameter list (and 6 more errors)",
  "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-await-expression.js-strict:true": "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-await-expression.js: SyntaxError: test/language/expressions/object/cpn-obj-lit-computed-property-name-from-await-expression.js: await is a reserved word (30:3)\n  28 | \n  29 | let o = ***REMOVED***\n> 30 |   [await 9]: 9\n     |    ^\n  31 | ***REMOVED***;\n  32 | \n  33 | assert.sameValue( <at omitted>",
  "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-expression-coalesce.js-strict:true": "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-expression-coalesce.js: SyntaxError: test/language/expressions/object/cpn-obj-lit-computed-property-name-from-expression-coalesce.js: Unexpected token (30:6)\n  28 | \n  29 | let o = ***REMOVED***\n> 30 |   [x ?? 1]: 2\n     |       ^\n  31 | ***REMOVED***;\n  32 | \n  33 | assert.sameValue( <at omitted>",
  "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-integer-separators.js-strict:true": "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-integer-separators.js: SyntaxError: test/language/expressions/object/cpn-obj-lit-computed-property-name-from-integer-separators.js: Identifier directly after number (29:4)\n  27 | \n  28 | let o = ***REMOVED***\n> 29 |   [1_2_3_4_5_6_7_8]: 1_2_3_4_5_6_7_8\n     |     ^\n  30 | ***REMOVED***;\n  31 | \n  32 | assert.sameValue( <at omitted>",
  "test/language/expressions/object/dstr/meth-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/object/dstr/meth-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/expressions/object/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/object/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/expressions/object/dstr/meth-dflt-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/object/dstr/meth-dflt-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/expressions/object/dstr/meth-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/object/dstr/meth-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/expressions/object/fn-name-class.js-strict:true": "test/language/expressions/object/fn-name-class.js: Test262Error: via anonymous Symbol Expected SameValue(«_class», «») to be true <at omitted>",
  "test/language/expressions/object/method-definition/async-super-call-body.js-strict:true": "test/language/expressions/object/method-definition/async-super-call-body.js: test/language/expressions/object/method-definition/async-super-call-body.js: Line 20:9 Unexpected identifier (and 7 more errors)",
  "test/language/expressions/object/method-definition/async-super-call-param.js-strict:true": "test/language/expressions/object/method-definition/async-super-call-param.js: test/language/expressions/object/method-definition/async-super-call-param.js: Line 20:9 Unexpected identifier (and 6 more errors)",
  "test/language/expressions/object/method-definition/escaped-get-e.js-strict:true": "test/language/expressions/object/method-definition/escaped-get-e.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/escaped-get-g.js-strict:true": "test/language/expressions/object/method-definition/escaped-get-g.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/escaped-get-t.js-strict:true": "test/language/expressions/object/method-definition/escaped-get-t.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/escaped-get.js-strict:true": "test/language/expressions/object/method-definition/escaped-get.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/escaped-set-e.js-strict:true": "test/language/expressions/object/method-definition/escaped-set-e.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/escaped-set-s.js-strict:true": "test/language/expressions/object/method-definition/escaped-set-s.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/escaped-set-t.js-strict:true": "test/language/expressions/object/method-definition/escaped-set-t.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/escaped-set.js-strict:true": "test/language/expressions/object/method-definition/escaped-set.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/object-method-returns-promise.js-strict:true": "test/language/expressions/object/method-definition/object-method-returns-promise.js: test/language/expressions/object/method-definition/object-method-returns-promise.js: Line 12:9 Unexpected identifier (and 4 more errors)",
  "test/language/expressions/optional-chaining/call-expression.js-strict:true": "test/language/expressions/optional-chaining/call-expression.js: SyntaxError: test/language/expressions/optional-chaining/call-expression.js: Unexpected token (24:26)\n  22 |   ***REMOVED***\n  23 | ***REMOVED***\n> 24 | assert.sameValue(33, fn()?.a);\n     |                           ^\n  25 | assert.sameValue(undefined, fn()?.b);\n  26 | assert.sameValue(44, obj?.fn());\n  27 |  <at omitted>",
  "test/language/expressions/optional-chaining/iteration-statement-for-await-of.js-strict:true": "test/language/expressions/optional-chaining/iteration-statement-for-await-of.js: SyntaxError: test/language/expressions/optional-chaining/iteration-statement-for-await-of.js: Unexpected token, expected ( (31:6)\n  29 | async function checkAssertions() ***REMOVED***\n  30 |   let count = 0;\n> 31 |   for await (const num of obj?.iterable) ***REMOVED***\n     |       ^\n  32 |     count += num;\n  33 |   ***REMOVED***\n  34 |   assert.sameValue(3, count); <at omitted>",
  "test/language/expressions/optional-chaining/member-expression-async-identifier.js-strict:true": "test/language/expressions/optional-chaining/member-expression-async-identifier.js: SyntaxError: test/language/expressions/optional-chaining/member-expression-async-identifier.js: Unexpected token (19:27)\n  17 | const c = ***REMOVED***d: Promise.resolve(11)***REMOVED***;\n  18 | async function checkAssertions() ***REMOVED***\n> 19 |   assert.sameValue(await a?.b, undefined);\n     |                            ^\n  20 |   assert.sameValue(await c?.d, 11);\n  21 |   \n  22 |   Promise.prototype.x = 42; <at omitted>",
  "test/language/expressions/optional-chaining/member-expression-async-literal.js-strict:true": "test/language/expressions/optional-chaining/member-expression-async-literal.js: SyntaxError: test/language/expressions/optional-chaining/member-expression-async-literal.js: Unexpected token (17:33)\n  15 | \n  16 | async function checkAssertions() ***REMOVED***\n> 17 |   assert.sameValue(await \"hello\"?.[0], 'h');\n     |                                  ^\n  18 |   assert.sameValue(await null?.a, undefined);\n  19 | ***REMOVED***\n  20 | checkAssertions().then($DONE, $DONE); <at omitted>",
  "test/language/expressions/optional-chaining/member-expression-async-this.js-strict:true": "test/language/expressions/optional-chaining/member-expression-async-this.js: SyntaxError: test/language/expressions/optional-chaining/member-expression-async-this.js: Unexpected token (17:20)\n  15 | \n  16 | async function thisFn() ***REMOVED***\n> 17 |   return await this?.a\n     |                     ^\n  18 | ***REMOVED***\n  19 | thisFn.call(***REMOVED***a: Promise.resolve(33)***REMOVED***).then(function(arg) ***REMOVED***\n  20 |   assert.sameValue(33, arg); <at omitted>",
  "test/language/expressions/optional-chaining/member-expression.js-strict:true": "test/language/expressions/optional-chaining/member-expression.js: SyntaxError: test/language/expressions/optional-chaining/member-expression.js: Unexpected token (18:23)\n  16 | //   IdentifierReference\n  17 | const a = ***REMOVED***b: 22***REMOVED***;\n> 18 | assert.sameValue(22, a?.b);\n     |                        ^\n  19 | //   this\n  20 | function fn () ***REMOVED***\n  21 |   return this?.a <at omitted>",
  "test/language/expressions/optional-chaining/optional-chain-async-optional-chain-square-brackets.js-strict:true": "test/language/expressions/optional-chaining/optional-chain-async-optional-chain-square-brackets.js: SyntaxError: test/language/expressions/optional-chaining/optional-chain-async-optional-chain-square-brackets.js: Unexpected token (18:35)\n  16 | \n  17 | async function checkAssertions() ***REMOVED***\n> 18 |   assert.sameValue(await ***REMOVED***a: [11]***REMOVED***?.a[0], 11);\n     |                                    ^\n  19 |   const b = ***REMOVED***c: [22, 33]***REMOVED***;\n  20 |   assert.sameValue(b?.c[await Promise.resolve(1)], 33);\n  21 |   function e(val) ***REMOVED*** <at omitted>",
  "test/language/expressions/optional-chaining/optional-chain-async-square-brackets.js-strict:true": "test/language/expressions/optional-chaining/optional-chain-async-square-brackets.js: SyntaxError: test/language/expressions/optional-chaining/optional-chain-async-square-brackets.js: Unexpected token (18:30)\n  16 | \n  17 | async function checkAssertions() ***REMOVED***\n> 18 |   assert.sameValue(await [11]?.[0], 11);\n     |                               ^\n  19 |   assert.sameValue([22, 33]?.[await Promise.resolve(1)], 33);\n  20 |   assert.sameValue([44, await Promise.resolve(55)]?.[1], 55);\n  21 |   assert.sameValue(undefined?.[ <at omitted>",
  "test/language/expressions/optional-chaining/super-property-optional-call.js-strict:true": "test/language/expressions/optional-chaining/super-property-optional-call.js: SyntaxError: test/language/expressions/optional-chaining/super-property-optional-call.js: Unexpected token (25:19)\n  23 | class Foo extends Base ***REMOVED***\n  24 |     method() ***REMOVED***\n> 25 |       super.method?.();\n     |                    ^\n  26 |     ***REMOVED***\n  27 | ***REMOVED***\n  28 | const foo = new Foo(); <at omitted>",
  "test/language/expressions/postfix-decrement/S11.3.2_A6_T1.js-strict:true": "test/language/expressions/postfix-decrement/S11.3.2_A6_T1.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/postfix-decrement/S11.3.2_A6_T2.js-strict:true": "test/language/expressions/postfix-decrement/S11.3.2_A6_T2.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/postfix-decrement/S11.3.2_A6_T3.js-strict:true": "test/language/expressions/postfix-decrement/S11.3.2_A6_T3.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/postfix-increment/S11.3.1_A6_T1.js-strict:true": "test/language/expressions/postfix-increment/S11.3.1_A6_T1.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/postfix-increment/S11.3.1_A6_T2.js-strict:true": "test/language/expressions/postfix-increment/S11.3.1_A6_T2.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/postfix-increment/S11.3.1_A6_T3.js-strict:true": "test/language/expressions/postfix-increment/S11.3.1_A6_T3.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/prefix-decrement/S11.4.5_A6_T1.js-strict:true": "test/language/expressions/prefix-decrement/S11.4.5_A6_T1.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/prefix-decrement/S11.4.5_A6_T2.js-strict:true": "test/language/expressions/prefix-decrement/S11.4.5_A6_T2.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/prefix-decrement/S11.4.5_A6_T3.js-strict:true": "test/language/expressions/prefix-decrement/S11.4.5_A6_T3.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/prefix-increment/S11.4.4_A6_T1.js-strict:true": "test/language/expressions/prefix-increment/S11.4.4_A6_T1.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/prefix-increment/S11.4.4_A6_T2.js-strict:true": "test/language/expressions/prefix-increment/S11.4.4_A6_T2.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/expressions/prefix-increment/S11.4.4_A6_T3.js-strict:true": "test/language/expressions/prefix-increment/S11.4.4_A6_T3.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/expressions/super/call-bind-this-value-twice.js-strict:true": "test/language/expressions/super/call-bind-this-value-twice.js: Test262Error: Expected SameValue(«undefined», «object») to be true <at omitted>",
  "test/language/expressions/super/call-construct-invocation.js-strict:true": "test/language/expressions/super/call-construct-invocation.js: TypeError: Cannot call a class as a function <at omitted>",
  "test/language/expressions/super/call-poisoned-underscore-proto.js-strict:true": "test/language/expressions/super/call-poisoned-underscore-proto.js: Test262Error: should not be called <at omitted>",
  "test/language/expressions/super/call-proto-not-ctor.js-strict:true": "test/language/expressions/super/call-proto-not-ctor.js: Test262Error: Expected SameValue(«undefined», «object») to be true <at omitted>",
  "test/language/expressions/super/call-spread-err-mult-err-obj-unresolvable.js-strict:true": "test/language/expressions/super/call-spread-err-mult-err-obj-unresolvable.js: SyntaxError: test/language/expressions/super/call-spread-err-mult-err-obj-unresolvable.js: Unexpected token (38:17)\n  36 | class Test262ChildClass extends Test262ParentClass ***REMOVED***\n  37 |   constructor() ***REMOVED***\n> 38 |     super(***REMOVED***a: 0, ...unresolvableReference***REMOVED***);\n     |                  ^\n  39 |   ***REMOVED***\n  40 | ***REMOVED***\n  41 |  <at omitted>",
  "test/language/expressions/super/call-spread-err-sngl-err-obj-unresolvable.js-strict:true": "test/language/expressions/super/call-spread-err-sngl-err-obj-unresolvable.js: SyntaxError: test/language/expressions/super/call-spread-err-sngl-err-obj-unresolvable.js: Unexpected token (38:11)\n  36 | class Test262ChildClass extends Test262ParentClass ***REMOVED***\n  37 |   constructor() ***REMOVED***\n> 38 |     super(***REMOVED***...unresolvableReference***REMOVED***);\n     |            ^\n  39 |   ***REMOVED***\n  40 | ***REMOVED***\n  41 |  <at omitted>",
  "test/language/expressions/super/call-spread-mult-obj-ident.js-strict:true": "test/language/expressions/super/call-spread-mult-obj-ident.js: SyntaxError: test/language/expressions/super/call-spread-mult-obj-ident.js: Unexpected token (74:23)\n  72 | class Test262ChildClass extends Test262ParentClass ***REMOVED***\n  73 |   constructor() ***REMOVED***\n> 74 |     super(***REMOVED***a: 1, b: 2, ...o***REMOVED***);\n     |                        ^\n  75 |   ***REMOVED***\n  76 | ***REMOVED***\n  77 |  <at omitted>",
  "test/language/expressions/super/call-spread-mult-obj-null.js-strict:true": "test/language/expressions/super/call-spread-mult-obj-null.js: SyntaxError: test/language/expressions/super/call-spread-mult-obj-null.js: Unexpected token (45:23)\n  43 | class Test262ChildClass extends Test262ParentClass ***REMOVED***\n  44 |   constructor() ***REMOVED***\n> 45 |     super(***REMOVED***a: 1, b: 2, ...null***REMOVED***);\n     |                        ^\n  46 |   ***REMOVED***\n  47 | ***REMOVED***\n  48 |  <at omitted>",
  "test/language/expressions/super/call-spread-mult-obj-undefined.js-strict:true": "test/language/expressions/super/call-spread-mult-obj-undefined.js: SyntaxError: test/language/expressions/super/call-spread-mult-obj-undefined.js: Unexpected token (45:23)\n  43 | class Test262ChildClass extends Test262ParentClass ***REMOVED***\n  44 |   constructor() ***REMOVED***\n> 45 |     super(***REMOVED***a: 1, b: 2, ...undefined***REMOVED***);\n     |                        ^\n  46 |   ***REMOVED***\n  47 | ***REMOVED***\n  48 |  <at omitted>",
  "test/language/expressions/super/call-spread-obj-getter-descriptor.js-strict:true": "test/language/expressions/super/call-spread-obj-getter-descriptor.js: SyntaxError: test/language/expressions/super/call-spread-obj-getter-descriptor.js: Unexpected token (59:11)\n  57 | class Test262ChildClass extends Test262ParentClass ***REMOVED***\n  58 |   constructor() ***REMOVED***\n> 59 |     super(***REMOVED***...o, c: 4, d: 5***REMOVED***);\n     |            ^\n  60 |   ***REMOVED***\n  61 | ***REMOVED***\n  62 |  <at omitted>",
  "test/language/expressions/super/call-spread-obj-getter-init.js-strict:true": "test/language/expressions/super/call-spread-obj-getter-init.js: SyntaxError: test/language/expressions/super/call-spread-obj-getter-init.js: Unexpected token (39:11)\n  37 | class Test262ChildClass extends Test262ParentClass ***REMOVED***\n  38 |   constructor() ***REMOVED***\n> 39 |     super(***REMOVED***...o, get c() ***REMOVED*** executedGetter = true; ***REMOVED******REMOVED***);\n     |            ^\n  40 |   ***REMOVED***\n  41 | ***REMOVED***\n  42 |  <at omitted>",
  "test/language/expressions/super/call-spread-obj-manipulate-outter-obj-in-getter.js-strict:true": "test/language/expressions/super/call-spread-obj-manipulate-outter-obj-in-getter.js: SyntaxError: test/language/expressions/super/call-spread-obj-manipulate-outter-obj-in-getter.js: Unexpected token (53:11)\n  51 | class Test262ChildClass extends Test262ParentClass ***REMOVED***\n  52 |   constructor() ***REMOVED***\n> 53 |     super(***REMOVED***...cthulhu, ...o***REMOVED***);\n     |            ^\n  54 |   ***REMOVED***\n  55 | ***REMOVED***\n  56 |  <at omitted>",
  "test/language/expressions/super/call-spread-obj-mult-spread-getter.js-strict:true": "test/language/expressions/super/call-spread-obj-mult-spread-getter.js: SyntaxError: test/language/expressions/super/call-spread-obj-mult-spread-getter.js: Unexpected token (53:11)\n  51 | class Test262ChildClass extends Test262ParentClass ***REMOVED***\n  52 |   constructor() ***REMOVED***\n> 53 |     super(***REMOVED***...o, c: 4, d: 5, a: 42, ...o***REMOVED***);\n     |            ^\n  54 |   ***REMOVED***\n  55 | ***REMOVED***\n  56 |  <at omitted>",
  "test/language/expressions/super/call-spread-obj-mult-spread.js-strict:true": "test/language/expressions/super/call-spread-obj-mult-spread.js: SyntaxError: test/language/expressions/super/call-spread-obj-mult-spread.js: Unexpected token (51:11)\n  49 | class Test262ChildClass extends Test262ParentClass ***REMOVED***\n  50 |   constructor() ***REMOVED***\n> 51 |     super(***REMOVED***...o, ...o2***REMOVED***);\n     |            ^\n  52 |   ***REMOVED***\n  53 | ***REMOVED***\n  54 |  <at omitted>",
  "test/language/expressions/super/call-spread-obj-null.js-strict:true": "test/language/expressions/super/call-spread-obj-null.js: SyntaxError: test/language/expressions/super/call-spread-obj-null.js: Unexpected token (43:11)\n  41 | class Test262ChildClass extends Test262ParentClass ***REMOVED***\n  42 |   constructor() ***REMOVED***\n> 43 |     super(***REMOVED***...null***REMOVED***);\n     |            ^\n  44 |   ***REMOVED***\n  45 | ***REMOVED***\n  46 |  <at omitted>",
  "test/language/expressions/super/call-spread-obj-override-immutable.js-strict:true": "test/language/expressions/super/call-spread-obj-override-immutable.js: SyntaxError: test/language/expressions/super/call-spread-obj-override-immutable.js: Unexpected token (52:11)\n  50 | class Test262ChildClass extends Test262ParentClass ***REMOVED***\n  51 |   constructor() ***REMOVED***\n> 52 |     super(***REMOVED***...o, a: 3***REMOVED***);\n     |            ^\n  53 |   ***REMOVED***\n  54 | ***REMOVED***\n  55 |  <at omitted>",
  "test/language/expressions/super/call-spread-obj-overrides-prev-properties.js-strict:true": "test/language/expressions/super/call-spread-obj-overrides-prev-properties.js: SyntaxError: test/language/expressions/super/call-spread-obj-overrides-prev-properties.js: Unexpected token (49:23)\n  47 | class Test262ChildClass extends Test262ParentClass ***REMOVED***\n  48 |   constructor() ***REMOVED***\n> 49 |     super(***REMOVED***a: 1, b: 7, ...o***REMOVED***);\n     |                        ^\n  50 |   ***REMOVED***\n  51 | ***REMOVED***\n  52 |  <at omitted>",
  "test/language/expressions/super/call-spread-obj-skip-non-enumerable.js-strict:true": "test/language/expressions/super/call-spread-obj-skip-non-enumerable.js: SyntaxError: test/language/expressions/super/call-spread-obj-skip-non-enumerable.js: Unexpected token (37:11)\n  35 | class Test262ChildClass extends Test262ParentClass ***REMOVED***\n  36 |   constructor() ***REMOVED***\n> 37 |     super(***REMOVED***...o***REMOVED***);\n     |            ^\n  38 |   ***REMOVED***\n  39 | ***REMOVED***\n  40 |  <at omitted>",
  "test/language/expressions/super/call-spread-obj-spread-order.js-strict:true": "test/language/expressions/super/call-spread-obj-spread-order.js: SyntaxError: test/language/expressions/super/call-spread-obj-spread-order.js: Unexpected token (50:11)\n  48 | class Test262ChildClass extends Test262ParentClass ***REMOVED***\n  49 |   constructor() ***REMOVED***\n> 50 |     super(***REMOVED***...o***REMOVED***);\n     |            ^\n  51 |   ***REMOVED***\n  52 | ***REMOVED***\n  53 |  <at omitted>",
  "test/language/expressions/super/call-spread-obj-symbol-property.js-strict:true": "test/language/expressions/super/call-spread-obj-symbol-property.js: SyntaxError: test/language/expressions/super/call-spread-obj-symbol-property.js: Unexpected token (51:11)\n  49 | class Test262ChildClass extends Test262ParentClass ***REMOVED***\n  50 |   constructor() ***REMOVED***\n> 51 |     super(***REMOVED***...o, c: 4, d: 5***REMOVED***);\n     |            ^\n  52 |   ***REMOVED***\n  53 | ***REMOVED***\n  54 |  <at omitted>",
  "test/language/expressions/super/call-spread-obj-undefined.js-strict:true": "test/language/expressions/super/call-spread-obj-undefined.js: SyntaxError: test/language/expressions/super/call-spread-obj-undefined.js: Unexpected token (43:11)\n  41 | class Test262ChildClass extends Test262ParentClass ***REMOVED***\n  42 |   constructor() ***REMOVED***\n> 43 |     super(***REMOVED***...undefined***REMOVED***);\n     |            ^\n  44 |   ***REMOVED***\n  45 | ***REMOVED***\n  46 |  <at omitted>",
  "test/language/expressions/super/call-spread-obj-with-overrides.js-strict:true": "test/language/expressions/super/call-spread-obj-with-overrides.js: SyntaxError: test/language/expressions/super/call-spread-obj-with-overrides.js: Unexpected token (55:11)\n  53 | class Test262ChildClass extends Test262ParentClass ***REMOVED***\n  54 |   constructor() ***REMOVED***\n> 55 |     super(***REMOVED***...o, a: 1, b: 7, d: 5, h: -0, i: Symbol(\"foo\"), j: o***REMOVED***);\n     |            ^\n  56 |   ***REMOVED***\n  57 | ***REMOVED***\n  58 |  <at omitted>",
  "test/language/expressions/super/call-spread-sngl-obj-ident.js-strict:true": "test/language/expressions/super/call-spread-sngl-obj-ident.js: SyntaxError: test/language/expressions/super/call-spread-sngl-obj-ident.js: Unexpected token (60:11)\n  58 | class Test262ChildClass extends Test262ParentClass ***REMOVED***\n  59 |   constructor() ***REMOVED***\n> 60 |     super(***REMOVED***...o***REMOVED***);\n     |            ^\n  61 |   ***REMOVED***\n  62 | ***REMOVED***\n  63 |  <at omitted>",
  "test/language/expressions/super/prop-dot-cls-null-proto.js-strict:true": "test/language/expressions/super/prop-dot-cls-null-proto.js: Test262Error: Expected SameValue(«undefined», «object») to be true <at omitted>",
  "test/language/expressions/super/prop-dot-cls-ref-strict.js-strict:true": "test/language/expressions/super/prop-dot-cls-ref-strict.js: Test262Error: Expected SameValue(«undefined», «object») to be true <at omitted>",
  "test/language/expressions/super/prop-dot-cls-this-uninit.js-strict:true": "test/language/expressions/super/prop-dot-cls-this-uninit.js: SyntaxError: test/language/expressions/super/prop-dot-cls-this-uninit.js: 'super.*' is not allowed before super()\n  33 |   constructor() ***REMOVED***\n  34 |     try ***REMOVED***\n> 35 |       super.x;\n     |       ^\n  36 |     ***REMOVED*** catch (err) ***REMOVED***\n  37 |       caught = err;\n  38 |     ***REMOVED*** <at omitted>",
  "test/language/expressions/super/prop-dot-cls-val-from-eval.js-strict:true": "test/language/expressions/super/prop-dot-cls-val-from-eval.js: SyntaxError: SyntaxError: <eval>: Line 1:1 Unexpected reserved word <at omitted>",
  "test/language/expressions/super/prop-dot-obj-null-proto.js-strict:true": "test/language/expressions/super/prop-dot-obj-null-proto.js: Test262Error: Expected SameValue(«undefined», «object») to be true <at omitted>",
  "test/language/expressions/super/prop-dot-obj-ref-non-strict.js-strict:false": "test/language/expressions/super/prop-dot-obj-ref-non-strict.js: Test262Error: Expected SameValue(«false», «true») to be true <at omitted>",
  "test/language/expressions/super/prop-dot-obj-ref-strict.js-strict:true": "test/language/expressions/super/prop-dot-obj-ref-strict.js: Test262Error: Expected SameValue(«undefined», «object») to be true <at omitted>",
  "test/language/expressions/super/prop-dot-obj-val-from-eval.js-strict:true": "test/language/expressions/super/prop-dot-obj-val-from-eval.js: SyntaxError: SyntaxError: <eval>: Line 1:1 Unexpected reserved word <at omitted>",
  "test/language/expressions/super/prop-expr-cls-null-proto.js-strict:true": "test/language/expressions/super/prop-expr-cls-null-proto.js: Test262Error: Expected SameValue(«undefined», «object») to be true <at omitted>",
  "test/language/expressions/super/prop-expr-cls-ref-strict.js-strict:true": "test/language/expressions/super/prop-expr-cls-ref-strict.js: Test262Error: Expected SameValue(«undefined», «object») to be true <at omitted>",
  "test/language/expressions/super/prop-expr-cls-this-uninit.js-strict:true": "test/language/expressions/super/prop-expr-cls-this-uninit.js: SyntaxError: test/language/expressions/super/prop-expr-cls-this-uninit.js: 'super.*' is not allowed before super()\n  33 |   constructor() ***REMOVED***\n  34 |     try ***REMOVED***\n> 35 |       super['x'];\n     |       ^\n  36 |     ***REMOVED*** catch (err) ***REMOVED***\n  37 |       caught = err;\n  38 |     ***REMOVED*** <at omitted>",
  "test/language/expressions/super/prop-expr-cls-val-from-eval.js-strict:true": "test/language/expressions/super/prop-expr-cls-val-from-eval.js: SyntaxError: SyntaxError: <eval>: Line 1:1 Unexpected reserved word <at omitted>",
  "test/language/expressions/super/prop-expr-obj-null-proto.js-strict:true": "test/language/expressions/super/prop-expr-obj-null-proto.js: Test262Error: Expected SameValue(«undefined», «object») to be true <at omitted>",
  "test/language/expressions/super/prop-expr-obj-ref-non-strict.js-strict:false": "test/language/expressions/super/prop-expr-obj-ref-non-strict.js: Test262Error: Expected SameValue(«false», «true») to be true <at omitted>",
  "test/language/expressions/super/prop-expr-obj-ref-strict.js-strict:true": "test/language/expressions/super/prop-expr-obj-ref-strict.js: Test262Error: Expected SameValue(«undefined», «object») to be true <at omitted>",
  "test/language/expressions/super/prop-expr-obj-val-from-eval.js-strict:true": "test/language/expressions/super/prop-expr-obj-val-from-eval.js: SyntaxError: SyntaxError: <eval>: Line 1:1 Unexpected reserved word <at omitted>",
  "test/language/expressions/super/prop-poisoned-underscore-proto.js-strict:true": "test/language/expressions/super/prop-poisoned-underscore-proto.js: Test262Error: should not be called <at omitted>",
  "test/language/future-reserved-words/implements.js-strict:false": "test/language/future-reserved-words/implements.js: SyntaxError: test/language/future-reserved-words/implements.js: implements is a reserved word in strict mode (12:4)\n  10 | ---*/\n  11 | \n> 12 | var implements = 1;\n     |     ^\n  13 | var impl\\u0065ments = 2;\n  14 | \n  15 | ***REMOVED*** let implements = 3; ***REMOVED*** <at omitted>",
  "test/language/future-reserved-words/interface.js-strict:false": "test/language/future-reserved-words/interface.js: SyntaxError: test/language/future-reserved-words/interface.js: interface is a reserved word in strict mode (16:4)\n  14 | ---*/\n  15 | \n> 16 | var interface = 1;\n     |     ^\n  17 | var int\\u0065rface = 2;\n  18 | \n  19 | ***REMOVED*** let interface = 3; ***REMOVED*** <at omitted>",
  "test/language/future-reserved-words/package.js-strict:false": "test/language/future-reserved-words/package.js: SyntaxError: test/language/future-reserved-words/package.js: package is a reserved word in strict mode (12:4)\n  10 | ---*/\n  11 | \n> 12 | var package = 1;\n     |     ^\n  13 | var pack\\u0061ge = 2;\n  14 | \n  15 | ***REMOVED*** let package = 3; ***REMOVED*** <at omitted>",
  "test/language/future-reserved-words/private.js-strict:false": "test/language/future-reserved-words/private.js: SyntaxError: test/language/future-reserved-words/private.js: private is a reserved word in strict mode (12:4)\n  10 | ---*/\n  11 | \n> 12 | var private = 1;\n     |     ^\n  13 | var priv\\u0061te = 2;\n  14 | \n  15 | ***REMOVED*** let private = 3; ***REMOVED*** <at omitted>",
  "test/language/future-reserved-words/protected.js-strict:false": "test/language/future-reserved-words/protected.js: SyntaxError: test/language/future-reserved-words/protected.js: protected is a reserved word in strict mode (12:4)\n  10 | ---*/\n  11 | \n> 12 | var protected = 1;\n     |     ^\n  13 | var prot\\u0065cted = 2;\n  14 | \n  15 | ***REMOVED*** let protected = 3; ***REMOVED*** <at omitted>",
  "test/language/future-reserved-words/public.js-strict:false": "test/language/future-reserved-words/public.js: SyntaxError: test/language/future-reserved-words/public.js: public is a reserved word in strict mode (12:4)\n  10 | ---*/\n  11 | \n> 12 | var public = 1;\n     |     ^\n  13 | var publi\\u0063 = 2;\n  14 | \n  15 | ***REMOVED*** let public = 3; ***REMOVED*** <at omitted>",
  "test/language/future-reserved-words/static.js-strict:false": "test/language/future-reserved-words/static.js: SyntaxError: test/language/future-reserved-words/static.js: static is a reserved word in strict mode (12:4)\n  10 | ---*/\n  11 | \n> 12 | var static = 1;\n     |     ^\n  13 | var st\\u0061tic = 2;\n  14 | \n  15 | ***REMOVED*** let static = 3; ***REMOVED*** <at omitted>",
  "test/language/global-code/decl-lex-deletion.js-strict:false": "test/language/global-code/decl-lex-deletion.js: SyntaxError: test/language/global-code/decl-lex-deletion.js: Deleting local variable in strict mode (23:0)\n  21 | let test262let;\n  22 | \n> 23 | delete test262let;\n     | ^\n  24 | \n  25 | // Binding values are asserted by a dedicated test. IdentifierReferences serve\n  26 | // to ensure that the entries in the environment record persist. <at omitted>",
  "test/language/global-code/decl-lex.js-strict:true": "test/language/global-code/decl-lex.js: TypeError: Cannot read property 'hasOwnProperty' of undefined or null <at omitted>",
  "test/language/global-code/new.target-arrow.js-strict:true": "test/language/global-code/new.target-arrow.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/global-code/script-decl-func-dups.js-strict:true": "test/language/global-code/script-decl-func-dups.js: TypeError: Object has no member 'evalScript' <at omitted>",
  "test/language/global-code/script-decl-func.js-strict:true": "test/language/global-code/script-decl-func.js: TypeError: Object has no member 'evalScript' <at omitted>",
  "test/language/global-code/script-decl-lex-deletion.js-strict:false": "test/language/global-code/script-decl-lex-deletion.js: TypeError: Object has no member 'evalScript' <at omitted>",
  "test/language/global-code/script-decl-lex-lex.js-strict:true": "test/language/global-code/script-decl-lex-lex.js: Test262Error: `let` binding Expected a SyntaxError but got a TypeError <at omitted>",
  "test/language/global-code/script-decl-lex-restricted-global.js-strict:true": "test/language/global-code/script-decl-lex-restricted-global.js: TypeError: Object has no member 'evalScript' <at omitted>",
  "test/language/global-code/script-decl-lex-var.js-strict:true": "test/language/global-code/script-decl-lex-var.js: Test262Error: variable Expected a SyntaxError but got a TypeError <at omitted>",
  "test/language/global-code/script-decl-lex.js-strict:true": "test/language/global-code/script-decl-lex.js: TypeError: Object has no member 'evalScript' <at omitted>",
  "test/language/global-code/script-decl-var-collision.js-strict:true": "test/language/global-code/script-decl-var-collision.js: TypeError: Object has no member 'evalScript' <at omitted>",
  "test/language/global-code/script-decl-var.js-strict:true": "test/language/global-code/script-decl-var.js: TypeError: Object has no member 'evalScript' <at omitted>",
  "test/language/identifiers/part-unicode-14.0.0-escaped.js-strict:true": "test/language/identifiers/part-unicode-14.0.0-escaped.js: SyntaxError: test/language/identifiers/part-unicode-14.0.0-escaped.js: Invalid Unicode escape (17:5)\n  15 | ---*/\n  16 | \n> 17 | var _\\u0898\\u0899\\u089A\\u089B\\u089C\\u089D\\u089E\\u089F\\u08CA\\u08CB\\u08CC\\u08CD\\u08CE\\u08CF\\u08D0\\u08D1\\u08D2\\u0C3C\\u1715\\u180F\\u1AC1\\u1AC2\\u1AC3\\u1AC4\\u1AC5\\u1AC6\\u1AC7\\u1AC8\\u1AC9\\u1ACA\\u1ACB\\u1ACC\\u1ACD\\u1ACE\\u1DFA\\u***REMOVED***10F82***REMOVED***\\u***REMOVED***10F83***REMOVED***\\u***REMOVED***10F84***REMOVED***\\u***REMOVED***10F85***REMOVED***\\u***REMOVED***11070***REMOVED***\\u***REMOVED***11073***REMOVED***\\u***REMOVED***11074***REMOVED***\\u***REMOVED***110C2***REMOVED***\\u***REMOVED***16AC0***REMOVED***\\u***REMOVED***16AC1***REMOVED***\\u***REMOVED***16AC2***REMOVED***\\u***REMOVED***16AC3***REMOVED***\\u***REMOVED***16AC4***REMOVED***\\u***REMOVED***16AC5***REMOVED***\\u***REMOVED***16AC6***REMOVED***\\u***REMOVED***16AC7***REMOVED***\\u***REMOVED***16AC8***REMOVED***\\u***REMOVED***16AC9***REMOVED***\\u***REMOVED***1CF00***REMOVED***\\u***REMOVED***1CF01***REMOVED***\\u***REMOVED***1CF02***REMOVED***\\u***REMOVED***1CF03***REMOVED***\\u***REMOVED***1CF04***REMOVED***\\u***REMOVED***1CF05***REMOVED***\\u***REMOVED***1CF06***REMOVED***\\u***REMOVED***1CF07***REMOVED***\\u***REMOVED***1CF08***REMOVED***\\u***REMOVED***1CF09***REMOVED***\\u***REMOVED***1CF0A***REMOVED***\\u***REMOVED***1CF0B***REMOVED***\\u***REMOVED***1CF0C***REMOVED***\\u***REMOVED***1CF0D***REMOVED***\\u***REMOVED***1CF0E***REMOVED***\\u***REMOVED***1CF0F***REMOVED***\\u***REMOVED***1CF10***REMOVED***\\u***REMOVED***1CF11***REMOVED***\\u***REMOVED***1CF12***REMOVED***\\u***REMOVED***1CF13***REMOVED***\\u***REMOVED***1CF14***REMOVED***\\u***REMOVED***1CF15***REMOVED***\\u***REMOVED***1CF16***REMOVED***\\u***REMOVED***1CF17***REMOVED***\\u***REMOVED***1CF18***REMOVED***\\u***REMOVED***1CF19***REMOVED***\\u***REMOVED***1CF1A***REMOVED***\\u***REMOVED***1CF1B***REMOVED***\\u***REMOVED***1CF1C***REMOVED***\\u***REMOVED***1CF1D***REMOVED***\\u***REMOVED***1CF1E***REMOVED***\\u***REMOVED***1CF1F***REMOVED***\\u***REMOVED***1CF20***REMOVED***\\u***REMOVED***1CF21***REMOVED***\\u***REMOVED***1CF22***REMOVED***\\u***REMOVED***1CF23***REMOVED***\\u***REMOVED***1CF24***REMOVED***\\u***REMOVED***1CF25***REMOVED***\\u***REMOVED***1CF26***REMOVED***\\u***REMOVED***1CF27***REMOVED***\\u***REMOVED***1CF28***REMOVED***\\u***REMOVED***1CF29***REMOVED***\\u***REMOVED***1CF2A***REMOVED***\\u***REMOVED***1CF2B***REMOVED***\\u***REMOVED***1CF2C***REMOVED***\\u***REMOVED***1CF2D***REMOVED***\\u***REMOVED***1CF30***REMOVED***\\u***REMOVED***1CF31***REMOVED***\\u***REMOVED***1CF32***REMOVED***\\u***REMOVED***1CF33***REMOVED***\\u***REMOVED***1CF34***REMOVED***\\u***REMOVED***1CF35***REMOVED***\\u***REMOVED***1CF36***REMOVED***\\u***REMOVED***1CF37***REMOVED***\\u***REMOVED***1CF38***REMOVED***\\u***REMOVED***1CF39***REMOVED***\\u***REMOVED***1CF3A***REMOVED***\\u***REMOVED***1CF3B***REMOVED***\\u***REMOVED***1CF3C***REMOVED***\\u***REMOVED***1CF3D***REMOVED***\\u***REMOVED***1CF3E***REMOVED***\\u***REMOVED***1CF3F***REMOVED***\\u***REMOVED***1CF40***REMOVED***\\u***REMOVED***1CF41***REMOVED***\\u***REMOVED***1CF42***REMOVED***\\u***REMOVED***1CF43***REMOVED***\\u***REMOVED***1CF44***REMOVED***\\u***REMOVED***1CF45***REMOVED***\\u***REMOVED***1CF46***REMOVED***\\u***REMOVED***1E2AE***REMOVED***;\n     |      ^\n  18 |  <at omitted>",
  "test/language/identifiers/part-unicode-14.0.0.js-strict:true": "test/language/identifiers/part-unicode-14.0.0.js: SyntaxError: test/language/identifiers/part-unicode-14.0.0.js: Unexpected character '࢘' (15:5)\n  13 | ---*/\n  14 | \n> 15 | var _఼᜕࢙࢚࢛࣏࣐࣑࣒࢘࢜࢝࢞࢟࣊࣋࣌࣍࣎᠏𑁰᷺᫃᫄᫊𐾃𐾅᫁᫂᫅᫆᫇᫈᫉᫋ᫌᫍᫎ𐾂𐾄𑁳𑁴𑃂𖫀𖫁𖫂𖫃𖫄𖫅𖫆𖫇𖫈𖫉𜼀𜼁𜼂𜼃𜼄𜼅𜼆𜼇𜼈𜼉𜼊𜼋𜼌𜼍𜼎𜼏𜼐𜼑𜼒𜼓𜼔𜼕𜼖𜼗𜼘𜼙𜼚𜼛𜼜𜼝𜼞𜼟𜼠𜼡𜼢𜼣𜼤𜼥𜼦𜼧𜼨𜼩𜼪𜼫𜼬𜼭𜼰𜼱𜼲𜼳𜼴𜼵𜼶𜼷𜼸𜼹𜼺𜼻𜼼𜼽𜼾𜼿𜽀𜽁𜽂𜽃𜽄𜽅𜽆𞊮;\n     |      ^\n  16 |  <at omitted>",
  "test/language/literals/numeric/non-octal-decimal-integer.js-strict:false": "test/language/literals/numeric/non-octal-decimal-integer.js: SyntaxError: test/language/literals/numeric/non-octal-decimal-integer.js: Invalid number (28:17)\n  26 | // NonOctalDecimalIntegerLiteral ::\n  27 | //   0 NonOctalDigit\n> 28 | assert.sameValue(08, 8, '08');\n     |                  ^\n  29 | assert.sameValue(09, 9, '09');\n  30 | \n  31 | // NonOctalDecimalIntegerLiteral :: <at omitted>",
  "test/language/literals/regexp/S7.8.5_A1.1_T2.js-strict:true": "test/language/literals/regexp/S7.8.5_A1.1_T2.js: Test262Error: Code unit: d800 Expected SameValue(«\\ud800», «�») to be true <at omitted>",
  "test/language/literals/regexp/S7.8.5_A1.4_T2.js-strict:true": "test/language/literals/regexp/S7.8.5_A1.4_T2.js: Test262Error: Code unit: d800 Expected SameValue(«\\\\\\ud800», «\\�») to be true <at omitted>",
  "test/language/literals/regexp/S7.8.5_A2.1_T2.js-strict:true": "test/language/literals/regexp/S7.8.5_A2.1_T2.js: Test262Error: Code unit: d800 Expected SameValue(«nnnn\\ud800», «nnnn�») to be true <at omitted>",
  "test/language/literals/regexp/S7.8.5_A2.4_T2.js-strict:true": "test/language/literals/regexp/S7.8.5_A2.4_T2.js: Test262Error: Code unit: d800 Expected SameValue(«a\\\\\\ud800», «a\\�») to be true <at omitted>",
  "test/language/literals/regexp/early-err-flags-unicode-escape.js-strict:true": "test/language/literals/regexp/early-err-flags-unicode-escape.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/invalid-optional-lookbehind.js-strict:true": "test/language/literals/regexp/invalid-optional-lookbehind.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/invalid-optional-negative-lookbehind.js-strict:true": "test/language/literals/regexp/invalid-optional-negative-lookbehind.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/invalid-range-lookbehind.js-strict:true": "test/language/literals/regexp/invalid-range-lookbehind.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/invalid-range-negative-lookbehind.js-strict:true": "test/language/literals/regexp/invalid-range-negative-lookbehind.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-case-mapping.js-strict:true": "test/language/literals/regexp/u-case-mapping.js: Test262Error: Case mapping is not applied in the absence of the `u` flag Expected SameValue(«true», «false») to be true <at omitted>",
  "test/language/literals/regexp/u-invalid-class-escape.js-strict:true": "test/language/literals/regexp/u-invalid-class-escape.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-extended-pattern-char.js-strict:true": "test/language/literals/regexp/u-invalid-extended-pattern-char.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-identity-escape.js-strict:true": "test/language/literals/regexp/u-invalid-identity-escape.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-legacy-octal-escape.js-strict:true": "test/language/literals/regexp/u-invalid-legacy-octal-escape.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-non-empty-class-ranges-no-dash-a.js-strict:true": "test/language/literals/regexp/u-invalid-non-empty-class-ranges-no-dash-a.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-oob-decimal-escape.js-strict:true": "test/language/literals/regexp/u-invalid-oob-decimal-escape.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-optional-lookahead.js-strict:true": "test/language/literals/regexp/u-invalid-optional-lookahead.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-optional-lookbehind.js-strict:true": "test/language/literals/regexp/u-invalid-optional-lookbehind.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-optional-negative-lookahead.js-strict:true": "test/language/literals/regexp/u-invalid-optional-negative-lookahead.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-optional-negative-lookbehind.js-strict:true": "test/language/literals/regexp/u-invalid-optional-negative-lookbehind.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-range-lookahead.js-strict:true": "test/language/literals/regexp/u-invalid-range-lookahead.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-range-lookbehind.js-strict:true": "test/language/literals/regexp/u-invalid-range-lookbehind.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-range-negative-lookahead.js-strict:true": "test/language/literals/regexp/u-invalid-range-negative-lookahead.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-range-negative-lookbehind.js-strict:true": "test/language/literals/regexp/u-invalid-range-negative-lookbehind.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-unicode-esc-non-hex.js-strict:true": "test/language/literals/regexp/u-unicode-esc-non-hex.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/S7.8.4_A4.3_T1.js-strict:true": "test/language/literals/string/S7.8.4_A4.3_T1.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/S7.8.4_A4.3_T2.js-strict:true": "test/language/literals/string/S7.8.4_A4.3_T2.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/legacy-non-octal-escape-sequence-1-strict-explicit-pragma.js-strict:false": "test/language/literals/string/legacy-non-octal-escape-sequence-1-strict-explicit-pragma.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/legacy-non-octal-escape-sequence-2-strict-explicit-pragma.js-strict:false": "test/language/literals/string/legacy-non-octal-escape-sequence-2-strict-explicit-pragma.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/legacy-non-octal-escape-sequence-3-strict-explicit-pragma.js-strict:false": "test/language/literals/string/legacy-non-octal-escape-sequence-3-strict-explicit-pragma.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/legacy-non-octal-escape-sequence-4-strict-explicit-pragma.js-strict:false": "test/language/literals/string/legacy-non-octal-escape-sequence-4-strict-explicit-pragma.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/legacy-non-octal-escape-sequence-5-strict-explicit-pragma.js-strict:false": "test/language/literals/string/legacy-non-octal-escape-sequence-5-strict-explicit-pragma.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/legacy-non-octal-escape-sequence-6-strict-explicit-pragma.js-strict:false": "test/language/literals/string/legacy-non-octal-escape-sequence-6-strict-explicit-pragma.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/legacy-non-octal-escape-sequence-7-strict-explicit-pragma.js-strict:false": "test/language/literals/string/legacy-non-octal-escape-sequence-7-strict-explicit-pragma.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/legacy-non-octal-escape-sequence-8-strict-explicit-pragma.js-strict:false": "test/language/literals/string/legacy-non-octal-escape-sequence-8-strict-explicit-pragma.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/legacy-non-octal-escape-sequence-8-strict.js-strict:true": "test/language/literals/string/legacy-non-octal-escape-sequence-8-strict.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/legacy-non-octal-escape-sequence-9-strict-explicit-pragma.js-strict:false": "test/language/literals/string/legacy-non-octal-escape-sequence-9-strict-explicit-pragma.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/legacy-non-octal-escape-sequence-9-strict.js-strict:true": "test/language/literals/string/legacy-non-octal-escape-sequence-9-strict.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/legacy-non-octal-escape-sequence-strict.js-strict:true": "test/language/literals/string/legacy-non-octal-escape-sequence-strict.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/legacy-octal-escape-sequence-prologue-strict.js-strict:true": "test/language/literals/string/legacy-octal-escape-sequence-prologue-strict.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/legacy-octal-escape-sequence-strict.js-strict:true": "test/language/literals/string/legacy-octal-escape-sequence-strict.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/legacy-octal-escape-sequence.js-strict:false": "test/language/literals/string/legacy-octal-escape-sequence.js: Test262Error: \\400 Expected SameValue(«Ā», « 0») to be true <at omitted>",
  "test/language/literals/string/line-separator-eval.js-strict:true": "test/language/literals/string/line-separator-eval.js: SyntaxError: SyntaxError: <eval>: Line 1:1 Unexpected token ILLEGAL <at omitted>",
  "test/language/literals/string/line-separator.js-strict:true": "test/language/literals/string/line-separator.js: SyntaxError: test/language/literals/string/line-separator.js: Unterminated string constant (19:17)\n  17 | \n  18 | // U+2028 in strings; UTF8(0x2028) = 0xE2 0x80 0xA8\n> 19 | assert.sameValue(\"\n     |                  ^\n  20 | \", \"\\u2028\");\n  21 |  <at omitted>",
  "test/language/literals/string/paragraph-separator-eval.js-strict:true": "test/language/literals/string/paragraph-separator-eval.js: SyntaxError: SyntaxError: <eval>: Line 1:1 Unexpected token ILLEGAL <at omitted>",
  "test/language/literals/string/paragraph-separator.js-strict:true": "test/language/literals/string/paragraph-separator.js: SyntaxError: test/language/literals/string/paragraph-separator.js: Unterminated string constant (19:17)\n  17 | \n  18 | // U+2029 in strings; UTF8(0x2029) = 0xE2 0x80 0xA9\n> 19 | assert.sameValue(\"\n     |                  ^\n  20 | \", \"\\u2029\");\n  21 |  <at omitted>",
  "test/language/module-code/comment-multi-line-html-close.js-strict:true": "test/language/module-code/comment-multi-line-html-close.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/module-code/comment-single-line-html-close.js-strict:true": "test/language/module-code/comment-single-line-html-close.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/module-code/early-dup-top-function.js-strict:true": "test/language/module-code/early-dup-top-function.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/module-code/eval-export-cls-semi.js-strict:true": "test/language/module-code/eval-export-cls-semi.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/eval-export-dflt-cls-anon-semi.js-strict:true": "test/language/module-code/eval-export-dflt-cls-anon-semi.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/eval-export-dflt-cls-anon.js-strict:true": "test/language/module-code/eval-export-dflt-cls-anon.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/eval-export-dflt-cls-name-meth.js-strict:true": "test/language/module-code/eval-export-dflt-cls-name-meth.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/eval-export-dflt-cls-named-semi.js-strict:true": "test/language/module-code/eval-export-dflt-cls-named-semi.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/eval-export-dflt-cls-named.js-strict:true": "test/language/module-code/eval-export-dflt-cls-named.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/eval-export-dflt-expr-cls-anon.js-strict:true": "test/language/module-code/eval-export-dflt-expr-cls-anon.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/eval-export-dflt-expr-cls-name-meth.js-strict:true": "test/language/module-code/eval-export-dflt-expr-cls-name-meth.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/eval-export-dflt-expr-cls-named.js-strict:true": "test/language/module-code/eval-export-dflt-expr-cls-named.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/eval-export-dflt-expr-err-eval.js-strict:true": "test/language/module-code/eval-export-dflt-expr-err-eval.js: unexpected error type (ReferenceError), expected (Test262Error)",
  "test/language/module-code/eval-export-dflt-expr-fn-anon.js-strict:true": "test/language/module-code/eval-export-dflt-expr-fn-anon.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/eval-export-dflt-expr-fn-named.js-strict:true": "test/language/module-code/eval-export-dflt-expr-fn-named.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/eval-export-dflt-expr-in.js-strict:true": "test/language/module-code/eval-export-dflt-expr-in.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/eval-export-dflt-fun-anon-semi.js-strict:true": "test/language/module-code/eval-export-dflt-fun-anon-semi.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/eval-export-dflt-fun-named-semi.js-strict:true": "test/language/module-code/eval-export-dflt-fun-named-semi.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/eval-export-fun-semi.js-strict:true": "test/language/module-code/eval-export-fun-semi.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/eval-gtbndng-indirect-trlng-comma.js-strict:true": "test/language/module-code/eval-gtbndng-indirect-trlng-comma.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/eval-gtbndng-indirect-update-as.js-strict:true": "test/language/module-code/eval-gtbndng-indirect-update-as.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/eval-gtbndng-indirect-update-dflt.js-strict:true": "test/language/module-code/eval-gtbndng-indirect-update-dflt.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/eval-gtbndng-indirect-update.js-strict:true": "test/language/module-code/eval-gtbndng-indirect-update.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/eval-rqstd-abrupt.js-strict:true": "test/language/module-code/eval-rqstd-abrupt.js: unexpected error type (ReferenceError), expected (TypeError)",
  "test/language/module-code/eval-rqstd-once.js-strict:true": "test/language/module-code/eval-rqstd-once.js: SyntaxError: test/language/module-code/eval-rqstd-once.js: Unexpected token (27:9)\n  25 | import dflt2, ***REMOVED******REMOVED*** from './eval-rqstd-once_FIXTURE.js';\n  26 | export * from './eval-rqstd-once_FIXTURE.js';\n> 27 | export * as ns2 from './eval-rqstd-once_FIXTURE.js';\n     |          ^\n  28 | export * as class from './eval-rqstd-once_FIXTURE.js';\n  29 | import dflt3, * as ns3 from './eval-rqstd-once_FIXTURE.js';\n  30 | export default null; <at omitted>",
  "test/language/module-code/eval-rqstd-order.js-strict:true": "test/language/module-code/eval-rqstd-order.js: SyntaxError: test/language/module-code/eval-rqstd-order.js: Unexpected token (41:9)\n  39 | import dflt3, * as ns2 from './eval-rqstd-order-8_FIXTURE.js';\n  40 | \n> 41 | export * as ns3 from './eval-rqstd-order-9_FIXTURE.js';\n     |          ^\n  42 |  <at omitted>",
  "test/language/module-code/eval-self-once.js-strict:true": "test/language/module-code/eval-self-once.js: SyntaxError: test/language/module-code/eval-self-once.js: Unexpected token (36:9)\n  34 | import dflt2, ***REMOVED******REMOVED*** from './eval-self-once.js';\n  35 | export * from './eval-self-once.js';\n> 36 | export * as ns2 from './eval-self-once.js';\n     |          ^\n  37 | import dflt3, * as ns from './eval-self-once.js';\n  38 | export default null;\n  39 |  <at omitted>",
  "test/language/module-code/eval-this.js-strict:true": "test/language/module-code/eval-this.js: Test262Error: Expected SameValue(«[object global]», «undefined») to be true <at omitted>",
  "test/language/module-code/export-default-asyncfunction-declaration-binding.js-strict:true": "test/language/module-code/export-default-asyncfunction-declaration-binding.js: test/language/module-code/export-default-asyncfunction-declaration-binding.js: Line 18:7 Unexpected token function (and 2 more errors)",
  "test/language/module-code/export-default-function-declaration-binding.js-strict:true": "test/language/module-code/export-default-function-declaration-binding.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/export-expname-binding-index.js-strict:true": "test/language/module-code/export-expname-binding-index.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/export-expname-binding-string.js-strict:true": "test/language/module-code/export-expname-binding-string.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/export-expname-from-binding-string.js-strict:true": "test/language/module-code/export-expname-from-binding-string.js: SyntaxError: test/language/module-code/export-expname-from-binding-string.js: Unexpected token (21:20)\n  19 | ---*/\n  20 | import * as Scouts from \"./export-expname-from-binding-string.js\";\n> 21 | export ***REMOVED*** Mercury as \"☿\" ***REMOVED*** from \"./export-expname_FIXTURE.js\";\n     |                     ^\n  22 | \n  23 | assert.sameValue(Scouts.Mercury, undefined);\n  24 | assert.sameValue(Scouts[\"☿\"], globalThis.Mercury); <at omitted>",
  "test/language/module-code/export-expname-from-star-string.js-strict:true": "test/language/module-code/export-expname-from-star-string.js: SyntaxError: test/language/module-code/export-expname-from-star-string.js: Unexpected token (18:9)\n  16 | ---*/\n  17 | import * as Scouts from \"./export-expname-from-star-string.js\";\n> 18 | export * as \"All\" from \"./export-expname_FIXTURE.js\";\n     |          ^\n  19 | \n  20 | assert.sameValue(Scouts[\"☿\"], undefined);\n  21 | assert.sameValue(Scouts.All[\"☿\"], globalThis.Mercury); <at omitted>",
  "test/language/module-code/export-expname-from-star.js-strict:true": "test/language/module-code/export-expname-from-star.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/export-expname-from-string-binding.js-strict:true": "test/language/module-code/export-expname-from-string-binding.js: SyntaxError: test/language/module-code/export-expname-from-string-binding.js: Unexpected token (19:9)\n  17 | ---*/\n  18 | import * as Scouts from \"./export-expname-from-string-binding.js\";\n> 19 | export ***REMOVED*** \"☿\" as Ami ***REMOVED*** from \"./export-expname_FIXTURE.js\";\n     |          ^\n  20 | \n  21 | assert.sameValue(Scouts[\"☿\"], undefined);\n  22 | assert.sameValue(Scouts.Ami, globalThis.Mercury); <at omitted>",
  "test/language/module-code/export-expname-from-string-string.js-strict:true": "test/language/module-code/export-expname-from-string-string.js: SyntaxError: test/language/module-code/export-expname-from-string-string.js: Unexpected token (19:9)\n  17 | ---*/\n  18 | import * as Scouts from \"./export-expname-from-string-string.js\";\n> 19 | export ***REMOVED*** \"☿\" as \"Ami\" ***REMOVED*** from \"./export-expname_FIXTURE.js\";\n     |          ^\n  20 | \n  21 | assert.sameValue(Scouts[\"☿\"], undefined);\n  22 | assert.sameValue(Scouts.Ami, globalThis.Mercury); <at omitted>",
  "test/language/module-code/export-expname-from-string.js-strict:true": "test/language/module-code/export-expname-from-string.js: SyntaxError: test/language/module-code/export-expname-from-string.js: Unexpected token (21:9)\n  19 | ---*/\n  20 | import * as Scouts from \"./export-expname-from-string.js\";\n> 21 | export ***REMOVED*** \"☿\" ***REMOVED*** from \"./export-expname_FIXTURE.js\";\n     |          ^\n  22 | \n  23 | assert.sameValue(typeof Scouts[\"☿\"], \"function\");\n  24 |  <at omitted>",
  "test/language/module-code/export-expname-import-string-binding.js-strict:true": "test/language/module-code/export-expname-import-string-binding.js: SyntaxError: test/language/module-code/export-expname-import-string-binding.js: Unexpected token (16:9)\n  14 | features: [arbitrary-module-namespace-names]\n  15 | ---*/\n> 16 | import ***REMOVED*** \"☿\" as Ami ***REMOVED*** from \"./export-expname_FIXTURE.js\";\n     |          ^\n  17 | \n  18 | assert.sameValue(Ami, globalThis.Mercury);\n  19 |  <at omitted>",
  "test/language/module-code/export-star-as-dflt.js-strict:true": "test/language/module-code/export-star-as-dflt.js: SyntaxError: test/language/module-code/export-star-as-dflt.js: Unexpected token (22:9)\n  20 | ---*/\n  21 | \n> 22 | export * as default from './export-star-as-dflt_FIXTURE.js';\n     |          ^\n  23 | import Self from './export-star-as-dflt.js';\n  24 | import ***REMOVED*** default as named ***REMOVED*** from './export-star-as-dflt.js';\n  25 | import * as ns from './export-star-as-dflt.js'; <at omitted>",
  "test/language/module-code/instn-iee-bndng-cls.js-strict:true": "test/language/module-code/instn-iee-bndng-cls.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-iee-bndng-const.js-strict:true": "test/language/module-code/instn-iee-bndng-const.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-iee-bndng-fun.js-strict:true": "test/language/module-code/instn-iee-bndng-fun.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-iee-bndng-let.js-strict:true": "test/language/module-code/instn-iee-bndng-let.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-iee-bndng-var.js-strict:true": "test/language/module-code/instn-iee-bndng-var.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-iee-iee-cycle.js-strict:true": "test/language/module-code/instn-iee-iee-cycle.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-iee-star-cycle.js-strict:true": "test/language/module-code/instn-iee-star-cycle.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-iee-trlng-comma.js-strict:true": "test/language/module-code/instn-iee-trlng-comma.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-local-bndng-export-cls.js-strict:true": "test/language/module-code/instn-local-bndng-export-cls.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-local-bndng-export-const.js-strict:true": "test/language/module-code/instn-local-bndng-export-const.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-local-bndng-export-fun.js-strict:true": "test/language/module-code/instn-local-bndng-export-fun.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-local-bndng-export-gen.js-strict:true": "test/language/module-code/instn-local-bndng-export-gen.js: test/language/module-code/instn-local-bndng-export-gen.js: Line 33:290 Unexpected token * (and 8 more errors)",
  "test/language/module-code/instn-local-bndng-export-let.js-strict:true": "test/language/module-code/instn-local-bndng-export-let.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-local-bndng-export-var.js-strict:true": "test/language/module-code/instn-local-bndng-export-var.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-local-bndng-for.js-strict:true": "test/language/module-code/instn-local-bndng-for.js: Test262Error: Expected SameValue(«[object Object]», «undefined») to be true <at omitted>",
  "test/language/module-code/instn-local-bndng-fun.js-strict:true": "test/language/module-code/instn-local-bndng-fun.js: Test262Error: Expected SameValue(«[object Object]», «undefined») to be true <at omitted>",
  "test/language/module-code/instn-local-bndng-gen.js-strict:true": "test/language/module-code/instn-local-bndng-gen.js: test/language/module-code/instn-local-bndng-gen.js: Line 42:9 Unexpected token * (and 8 more errors)",
  "test/language/module-code/instn-local-bndng-var.js-strict:true": "test/language/module-code/instn-local-bndng-var.js: Test262Error: Expected SameValue(«[object Object]», «undefined») to be true <at omitted>",
  "test/language/module-code/instn-named-bndng-cls.js-strict:true": "test/language/module-code/instn-named-bndng-cls.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-named-bndng-const.js-strict:true": "test/language/module-code/instn-named-bndng-const.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-named-bndng-dflt-cls.js-strict:true": "test/language/module-code/instn-named-bndng-dflt-cls.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-named-bndng-dflt-expr.js-strict:true": "test/language/module-code/instn-named-bndng-dflt-expr.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-named-bndng-dflt-fun-anon.js-strict:true": "test/language/module-code/instn-named-bndng-dflt-fun-anon.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-named-bndng-dflt-fun-named.js-strict:true": "test/language/module-code/instn-named-bndng-dflt-fun-named.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-named-bndng-dflt-named.js-strict:true": "test/language/module-code/instn-named-bndng-dflt-named.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-named-bndng-dflt-star.js-strict:true": "test/language/module-code/instn-named-bndng-dflt-star.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-named-bndng-fun.js-strict:true": "test/language/module-code/instn-named-bndng-fun.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-named-bndng-let.js-strict:true": "test/language/module-code/instn-named-bndng-let.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-named-bndng-trlng-comma.js-strict:true": "test/language/module-code/instn-named-bndng-trlng-comma.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-named-bndng-var.js-strict:true": "test/language/module-code/instn-named-bndng-var.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-named-id-name.js-strict:true": "test/language/module-code/instn-named-id-name.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-named-iee-cycle.js-strict:true": "test/language/module-code/instn-named-iee-cycle.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-named-star-cycle.js-strict:true": "test/language/module-code/instn-named-star-cycle.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/instn-once.js-strict:true": "test/language/module-code/instn-once.js: SyntaxError: test/language/module-code/instn-once.js: Unexpected token (35:9)\n  33 | import dflt2, ***REMOVED******REMOVED*** from './instn-once.js';\n  34 | export * from './instn-once.js';\n> 35 | export * as ns2 from './instn-once.js';\n     |          ^\n  36 | import dflt3, * as ns from './instn-once.js';\n  37 | export default null;\n  38 |  <at omitted>",
  "test/language/module-code/instn-same-global.js-strict:true": "test/language/module-code/instn-same-global.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/instn-star-ambiguous.js-strict:true": "test/language/module-code/instn-star-ambiguous.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/instn-star-as-props-dflt-skip.js-strict:true": "test/language/module-code/instn-star-as-props-dflt-skip.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/instn-star-binding.js-strict:true": "test/language/module-code/instn-star-binding.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/instn-star-equality.js-strict:true": "test/language/module-code/instn-star-equality.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/instn-star-id-name.js-strict:true": "test/language/module-code/instn-star-id-name.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-star-iee-cycle.js-strict:true": "test/language/module-code/instn-star-iee-cycle.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/instn-star-props-circular.js-strict:true": "test/language/module-code/instn-star-props-circular.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/instn-star-props-dflt-keep-indirect.js-strict:true": "test/language/module-code/instn-star-props-dflt-keep-indirect.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/instn-star-props-dflt-keep-local.js-strict:true": "test/language/module-code/instn-star-props-dflt-keep-local.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/instn-star-props-dflt-skip.js-strict:true": "test/language/module-code/instn-star-props-dflt-skip.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/instn-star-props-nrml.js-strict:true": "test/language/module-code/instn-star-props-nrml.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/instn-star-star-cycle.js-strict:true": "test/language/module-code/instn-star-star-cycle.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/namespace/Symbol.iterator.js-strict:true": "test/language/module-code/namespace/Symbol.iterator.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/namespace/Symbol.toStringTag.js-strict:true": "test/language/module-code/namespace/Symbol.toStringTag.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/namespace/internals/define-own-property.js-strict:true": "test/language/module-code/namespace/internals/define-own-property.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/namespace/internals/delete-exported-init.js-strict:true": "test/language/module-code/namespace/internals/delete-exported-init.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/namespace/internals/delete-exported-uninit.js-strict:true": "test/language/module-code/namespace/internals/delete-exported-uninit.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/namespace/internals/delete-non-exported.js-strict:true": "test/language/module-code/namespace/internals/delete-non-exported.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/namespace/internals/enumerate-binding-uninit.js-strict:true": "test/language/module-code/namespace/internals/enumerate-binding-uninit.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/namespace/internals/get-nested-namespace-dflt-skip.js-strict:true": "test/language/module-code/namespace/internals/get-nested-namespace-dflt-skip.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/namespace/internals/get-nested-namespace-props-nrml.js-strict:true": "test/language/module-code/namespace/internals/get-nested-namespace-props-nrml.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/namespace/internals/get-own-property-str-found-init.js-strict:true": "test/language/module-code/namespace/internals/get-own-property-str-found-init.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/namespace/internals/get-own-property-str-found-uninit.js-strict:true": "test/language/module-code/namespace/internals/get-own-property-str-found-uninit.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/namespace/internals/get-own-property-str-not-found.js-strict:true": "test/language/module-code/namespace/internals/get-own-property-str-not-found.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/namespace/internals/get-own-property-sym.js-strict:true": "test/language/module-code/namespace/internals/get-own-property-sym.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/namespace/internals/get-prototype-of.js-strict:true": "test/language/module-code/namespace/internals/get-prototype-of.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/namespace/internals/get-str-found-init.js-strict:true": "test/language/module-code/namespace/internals/get-str-found-init.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/namespace/internals/get-str-found-uninit.js-strict:true": "test/language/module-code/namespace/internals/get-str-found-uninit.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/namespace/internals/get-str-initialize.js-strict:true": "test/language/module-code/namespace/internals/get-str-initialize.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/namespace/internals/get-str-not-found.js-strict:true": "test/language/module-code/namespace/internals/get-str-not-found.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/namespace/internals/get-str-update.js-strict:true": "test/language/module-code/namespace/internals/get-str-update.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/namespace/internals/get-sym-found.js-strict:true": "test/language/module-code/namespace/internals/get-sym-found.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/namespace/internals/get-sym-not-found.js-strict:true": "test/language/module-code/namespace/internals/get-sym-not-found.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/namespace/internals/has-property-str-found-init.js-strict:true": "test/language/module-code/namespace/internals/has-property-str-found-init.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/namespace/internals/has-property-str-found-uninit.js-strict:true": "test/language/module-code/namespace/internals/has-property-str-found-uninit.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/namespace/internals/has-property-str-not-found.js-strict:true": "test/language/module-code/namespace/internals/has-property-str-not-found.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/namespace/internals/has-property-sym-found.js-strict:true": "test/language/module-code/namespace/internals/has-property-sym-found.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/namespace/internals/has-property-sym-not-found.js-strict:true": "test/language/module-code/namespace/internals/has-property-sym-not-found.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/namespace/internals/is-extensible.js-strict:true": "test/language/module-code/namespace/internals/is-extensible.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/namespace/internals/object-hasOwnProperty-binding-uninit.js-strict:true": "test/language/module-code/namespace/internals/object-hasOwnProperty-binding-uninit.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/namespace/internals/object-keys-binding-uninit.js-strict:true": "test/language/module-code/namespace/internals/object-keys-binding-uninit.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/namespace/internals/object-propertyIsEnumerable-binding-uninit.js-strict:true": "test/language/module-code/namespace/internals/object-propertyIsEnumerable-binding-uninit.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/namespace/internals/own-property-keys-binding-types.js-strict:true": "test/language/module-code/namespace/internals/own-property-keys-binding-types.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/namespace/internals/own-property-keys-sort.js-strict:true": "test/language/module-code/namespace/internals/own-property-keys-sort.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/namespace/internals/prevent-extensions.js-strict:true": "test/language/module-code/namespace/internals/prevent-extensions.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/namespace/internals/set-prototype-of-null.js-strict:true": "test/language/module-code/namespace/internals/set-prototype-of-null.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/namespace/internals/set-prototype-of.js-strict:true": "test/language/module-code/namespace/internals/set-prototype-of.js: ReferenceError: require is not defined <at omitted>",
  "test/language/module-code/namespace/internals/set.js-strict:true": "test/language/module-code/namespace/internals/set.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/module-code/parse-err-hoist-lex-fun.js-strict:true": "test/language/module-code/parse-err-hoist-lex-fun.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/module-code/parse-export-empty.js-strict:true": "test/language/module-code/parse-export-empty.js: ReferenceError: exports is not defined <at omitted>",
  "test/language/reserved-words/await-module.js-strict:true": "test/language/reserved-words/await-module.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statementList/eval-class-array-literal-with-item.js-strict:true": "test/language/statementList/eval-class-array-literal-with-item.js: SyntaxError: SyntaxError: <eval>: Line 1:1 Unexpected reserved word <at omitted>",
  "test/language/statementList/eval-class-array-literal.js-strict:true": "test/language/statementList/eval-class-array-literal.js: SyntaxError: SyntaxError: <eval>: Line 1:1 Unexpected reserved word <at omitted>",
  "test/language/statementList/eval-class-arrow-function-assignment-expr.js-strict:true": "test/language/statementList/eval-class-arrow-function-assignment-expr.js: SyntaxError: SyntaxError: <eval>: Line 1:1 Unexpected reserved word <at omitted>",
  "test/language/statementList/eval-class-arrow-function-functionbody.js-strict:true": "test/language/statementList/eval-class-arrow-function-functionbody.js: SyntaxError: SyntaxError: <eval>: Line 1:1 Unexpected reserved word (and 2 more errors) <at omitted>",
  "test/language/statementList/eval-class-block-with-labels.js-strict:true": "test/language/statementList/eval-class-block-with-labels.js: SyntaxError: SyntaxError: <eval>: Line 1:1 Unexpected reserved word <at omitted>",
  "test/language/statementList/eval-class-block.js-strict:true": "test/language/statementList/eval-class-block.js: SyntaxError: SyntaxError: <eval>: Line 1:1 Unexpected reserved word <at omitted>",
  "test/language/statementList/eval-class-expr-arrow-function-boolean-literal.js-strict:true": "test/language/statementList/eval-class-expr-arrow-function-boolean-literal.js: SyntaxError: SyntaxError: <eval>: Line 1:1 Unexpected reserved word <at omitted>",
  "test/language/statementList/eval-class-let-declaration.js-strict:true": "test/language/statementList/eval-class-let-declaration.js: SyntaxError: SyntaxError: <eval>: Line 1:1 Unexpected reserved word <at omitted>",
  "test/language/statementList/eval-class-regexp-literal-flags.js-strict:true": "test/language/statementList/eval-class-regexp-literal-flags.js: SyntaxError: SyntaxError: <eval>: Line 1:1 Unexpected reserved word <at omitted>",
  "test/language/statementList/eval-class-regexp-literal.js-strict:true": "test/language/statementList/eval-class-regexp-literal.js: SyntaxError: SyntaxError: <eval>: Line 1:1 Unexpected reserved word <at omitted>",
  "test/language/statements/class/class-name-ident-await-escaped.js-strict:true": "test/language/statements/class/class-name-ident-await-escaped.js: SyntaxError: test/language/statements/class/class-name-ident-await-escaped.js: await is a reserved word (18:6)\n  16 | ---*/\n  17 | \n> 18 | class aw\\u0061it ***REMOVED******REMOVED***\n     |       ^\n  19 |  <at omitted>",
  "test/language/statements/class/class-name-ident-await.js-strict:true": "test/language/statements/class/class-name-ident-await.js: SyntaxError: test/language/statements/class/class-name-ident-await.js: await is a reserved word (17:6)\n  15 | ---*/\n  16 | \n> 17 | class await ***REMOVED******REMOVED***\n     |       ^\n  18 |  <at omitted>",
  "test/language/statements/class/classelementname-abrupt-completion.js-strict:true": "test/language/statements/class/classelementname-abrupt-completion.js: SyntaxError: test/language/statements/class/classelementname-abrupt-completion.js: Missing class properties transform.\n  39 | assert.throws(Test262Error, function() ***REMOVED***\n  40 |   class C ***REMOVED***\n> 41 |     [f()]\n     |     ^\n  42 |   ***REMOVED***\n  43 | ***REMOVED***);\n  44 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-async-arrow-function-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-async-arrow-function-expression.js: test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-async-arrow-function-expression.js: Line 44:5 Malformed arrow function parameter list (and 15 more errors)",
  "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-await-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-await-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-await-expression.js: await is a reserved word (41:7)\n  39 | \n  40 | class C ***REMOVED***\n> 41 |   get [await 9]() ***REMOVED***\n     |        ^\n  42 |     return 9;\n  43 |   ***REMOVED***\n  44 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-expression-coalesce.js-strict:true": "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-expression-coalesce.js: SyntaxError: test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-expression-coalesce.js: Unexpected token (41:10)\n  39 | \n  40 | class C ***REMOVED***\n> 41 |   get [x ?? 1]() ***REMOVED***\n     |           ^\n  42 |     return 2;\n  43 |   ***REMOVED***\n  44 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-integer-separators.js-strict:true": "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-integer-separators.js: SyntaxError: test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-integer-separators.js: Identifier directly after number (40:8)\n  38 | \n  39 | class C ***REMOVED***\n> 40 |   get [1_2_3_4_5_6_7_8]() ***REMOVED***\n     |         ^\n  41 |     return 1_2_3_4_5_6_7_8;\n  42 |   ***REMOVED***\n  43 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-computed-property-name-from-async-arrow-function-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-computed-property-name-from-async-arrow-function-expression.js: test/language/statements/class/cpn-class-decl-computed-property-name-from-async-arrow-function-expression.js: Line 40:5 Malformed arrow function parameter list (and 13 more errors)",
  "test/language/statements/class/cpn-class-decl-computed-property-name-from-await-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-computed-property-name-from-await-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-computed-property-name-from-await-expression.js: await is a reserved word (41:3)\n  39 | \n  40 | class C ***REMOVED***\n> 41 |   [await 9]() ***REMOVED***\n     |    ^\n  42 |     return 9;\n  43 |   ***REMOVED***\n  44 |   static [await 9]() ***REMOVED*** <at omitted>",
  "test/language/statements/class/cpn-class-decl-computed-property-name-from-expression-coalesce.js-strict:true": "test/language/statements/class/cpn-class-decl-computed-property-name-from-expression-coalesce.js: SyntaxError: test/language/statements/class/cpn-class-decl-computed-property-name-from-expression-coalesce.js: Unexpected token (41:6)\n  39 | \n  40 | class C ***REMOVED***\n> 41 |   [x ?? 1]() ***REMOVED***\n     |       ^\n  42 |     return 2;\n  43 |   ***REMOVED***\n  44 |   static [x ?? 1]() ***REMOVED*** <at omitted>",
  "test/language/statements/class/cpn-class-decl-computed-property-name-from-integer-separators.js-strict:true": "test/language/statements/class/cpn-class-decl-computed-property-name-from-integer-separators.js: SyntaxError: test/language/statements/class/cpn-class-decl-computed-property-name-from-integer-separators.js: Identifier directly after number (40:4)\n  38 | \n  39 | class C ***REMOVED***\n> 40 |   [1_2_3_4_5_6_7_8]() ***REMOVED***\n     |     ^\n  41 |     return 1_2_3_4_5_6_7_8;\n  42 |   ***REMOVED***\n  43 |   static [1_2_3_4_5_6_7_8]() ***REMOVED*** <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-additive-expression-add.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-additive-expression-add.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-additive-expression-add.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1 + 1] = 2;\n     |           ^\n  41 | \n  42 |   static [1 + 1] = 2;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-additive-expression-subtract.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-additive-expression-subtract.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-additive-expression-subtract.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1 - 1] = 0;\n     |           ^\n  41 | \n  42 |   static [1 - 1] = 0;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-arrow-function-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-arrow-function-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-arrow-function-expression.js: Unexpected token (40:14)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [() => ***REMOVED*** ***REMOVED***] = 1;\n     |               ^\n  41 | \n  42 |   static [() => ***REMOVED*** ***REMOVED***] = 1;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-assignment-expression-assignment.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-assignment-expression-assignment.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-assignment-expression-assignment.js: Unexpected token (41:10)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [x = 1] = 2;\n     |           ^\n  42 | \n  43 |   static [x = 1] = 2;\n  44 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-assignment-expression-bitwise-or.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-assignment-expression-bitwise-or.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-assignment-expression-bitwise-or.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [x |= 1] = 2;\n     |            ^\n  42 | \n  43 |   static [x |= 1] = 2;\n  44 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-async-arrow-function-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-async-arrow-function-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-async-arrow-function-expression.js: Unexpected token (40:19)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [async () => ***REMOVED******REMOVED***] = 1;\n     |                    ^\n  41 | \n  42 |   static [async () => ***REMOVED******REMOVED***] = 1;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-await-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-await-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-await-expression.js: await is a reserved word (41:3)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [await 9] = 9;\n     |    ^\n  42 | \n  43 |   static [await 9] = 9;\n  44 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-condition-expression-false.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-condition-expression-false.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-condition-expression-false.js: Unexpected token (40:18)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [false ? 1 : 2] = 1;\n     |                   ^\n  41 | \n  42 |   static [false ? 1 : 2] = 1;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-condition-expression-true.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-condition-expression-true.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-condition-expression-true.js: Unexpected token (40:17)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [true ? 1 : 2] = 2;\n     |                  ^\n  41 | \n  42 |   static [true ? 1 : 2] = 2;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-decimal-e-notational-literal.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-decimal-e-notational-literal.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-decimal-e-notational-literal.js: Unexpected token (40:9)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1.e1] = 2;\n     |          ^\n  41 | \n  42 |   static [1.e1] = 2;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-decimal-literal.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-decimal-literal.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-decimal-literal.js: Unexpected token (40:8)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1.1] = 2;\n     |         ^\n  41 | \n  42 |   static [1.1] = 2;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-exponetiation-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-exponetiation-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-exponetiation-expression.js: Unexpected token (40:11)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [2 ** 2] = 4;\n     |            ^\n  41 | \n  42 |   static [2 ** 2] = 4;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-expression-coalesce.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-expression-coalesce.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-expression-coalesce.js: Unexpected token (41:6)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [x ?? 1] = 2;\n     |       ^\n  42 | \n  43 |   static [x ?? 1] = 2;\n  44 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-expression-logical-and.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-expression-logical-and.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-expression-logical-and.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [x && 1] = 2;\n     |            ^\n  42 | \n  43 |   static [x && 1] = 2;\n  44 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-expression-logical-or.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-expression-logical-or.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-expression-logical-or.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [x || 1] = 2;\n     |            ^\n  42 | \n  43 |   static [x || 1] = 2;\n  44 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-function-declaration.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-function-declaration.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-function-declaration.js: Unexpected token (41:8)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [f()] = 1;\n     |         ^\n  42 | \n  43 |   static [f()] = 1;\n  44 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-function-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-function-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-function-expression.js: Unexpected token (40:19)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [function () ***REMOVED******REMOVED***] = 1;\n     |                    ^\n  41 | \n  42 |   static [function () ***REMOVED******REMOVED***] = 1;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-identifier.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-identifier.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-identifier.js: Unexpected token (42:6)\n  40 | \n  41 | let C = class ***REMOVED***\n> 42 |   [x] = '2';\n     |       ^\n  43 | \n  44 |   static [x] = '2';\n  45 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-integer-e-notational-literal.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-integer-e-notational-literal.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-integer-e-notational-literal.js: Unexpected token (40:6)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1] = 2;\n     |       ^\n  41 | \n  42 |   static [1] = 2;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-integer-separators.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-integer-separators.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-integer-separators.js: Identifier directly after number (40:4)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1_2_3_4_5_6_7_8] = 1_2_3_4_5_6_7_8;\n     |     ^\n  41 | \n  42 |   static [1_2_3_4_5_6_7_8] = 1_2_3_4_5_6_7_8;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-math.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-math.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-math.js: Unexpected token (40:27)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1 + 2 - 3 * 4 / 5 ** 6] = 2.999232;\n     |                            ^\n  41 | \n  42 |   static [1 + 2 - 3 * 4 / 5 ** 6] = 2.999232;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-multiplicative-expression-div.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-multiplicative-expression-div.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-multiplicative-expression-div.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1 / 1] = 1;\n     |           ^\n  41 | \n  42 |   static [1 / 1] = 1;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-multiplicative-expression-mult.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-multiplicative-expression-mult.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-multiplicative-expression-mult.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1 * 1] = 1;\n     |           ^\n  41 | \n  42 |   static [1 * 1] = 1;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-null.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-null.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-null.js: Unexpected token (40:9)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [null] = null;\n     |          ^\n  41 | \n  42 |   static [null] = null;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-numeric-literal.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-numeric-literal.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-numeric-literal.js: Unexpected token (40:6)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1] = 2;\n     |       ^\n  41 | \n  42 |   static [1] = 2;\n  43 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-string-literal.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-string-literal.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-string-literal.js: Unexpected token (40:8)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   ['1'] = '2';\n     |         ^\n  41 | \n  42 |   static ['1'] = '2';\n  43 | ***REMOVED***; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-additive-expression-add.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-additive-expression-add.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-additive-expression-add.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1 + 1] = () => ***REMOVED***\n     |           ^\n  41 |     return 2;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-additive-expression-subtract.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-additive-expression-subtract.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-additive-expression-subtract.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1 - 1] = () => ***REMOVED***\n     |           ^\n  41 |     return 0;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-arrow-function-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-arrow-function-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-arrow-function-expression.js: Unexpected token (40:14)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [() => ***REMOVED*** ***REMOVED***] = () => ***REMOVED***\n     |               ^\n  41 |     return 1;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-assignment-expression-assignment.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-assignment-expression-assignment.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-assignment-expression-assignment.js: Unexpected token (41:10)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [x = 1] = () => ***REMOVED***\n     |           ^\n  42 |     return 2;\n  43 |   ***REMOVED***;\n  44 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-assignment-expression-bitwise-or.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-assignment-expression-bitwise-or.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-assignment-expression-bitwise-or.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [x |= 1] = () => ***REMOVED***\n     |            ^\n  42 |     return 2;\n  43 |   ***REMOVED***;\n  44 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-async-arrow-function-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-async-arrow-function-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-async-arrow-function-expression.js: Unexpected token (40:19)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [async () => ***REMOVED******REMOVED***] = () => ***REMOVED***\n     |                    ^\n  41 |     return 1;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-await-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-await-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-await-expression.js: await is a reserved word (41:3)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [await 9] = () => ***REMOVED***\n     |    ^\n  42 |     return 9;\n  43 |   ***REMOVED***;\n  44 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-condition-expression-false.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-condition-expression-false.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-condition-expression-false.js: Unexpected token (40:18)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [false ? 1 : 2] = () => ***REMOVED***\n     |                   ^\n  41 |     return 1;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-condition-expression-true.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-condition-expression-true.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-condition-expression-true.js: Unexpected token (40:17)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [true ? 1 : 2] = () => ***REMOVED***\n     |                  ^\n  41 |     return 2;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-decimal-e-notational-literal.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-decimal-e-notational-literal.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-decimal-e-notational-literal.js: Unexpected token (40:9)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1.e1] = () => ***REMOVED***\n     |          ^\n  41 |     return 2;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-decimal-literal.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-decimal-literal.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-decimal-literal.js: Unexpected token (40:8)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1.1] = () => ***REMOVED***\n     |         ^\n  41 |     return 2;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-exponetiation-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-exponetiation-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-exponetiation-expression.js: Unexpected token (40:11)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [2 ** 2] = () => ***REMOVED***\n     |            ^\n  41 |     return 4;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-expression-coalesce.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-expression-coalesce.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-expression-coalesce.js: Unexpected token (41:6)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [x ?? 1] = () => ***REMOVED***\n     |       ^\n  42 |     return 2;\n  43 |   ***REMOVED***;\n  44 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-expression-logical-and.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-expression-logical-and.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-expression-logical-and.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [x && 1] = () => ***REMOVED***\n     |            ^\n  42 |     return 2;\n  43 |   ***REMOVED***;\n  44 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-expression-logical-or.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-expression-logical-or.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-expression-logical-or.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [x || 1] = () => ***REMOVED***\n     |            ^\n  42 |     return 2;\n  43 |   ***REMOVED***;\n  44 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-function-declaration.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-function-declaration.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-function-declaration.js: Unexpected token (41:8)\n  39 | \n  40 | let C = class ***REMOVED***\n> 41 |   [f()] = () => ***REMOVED***\n     |         ^\n  42 |     return 1;\n  43 |   ***REMOVED***;\n  44 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-function-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-function-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-function-expression.js: Unexpected token (40:19)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [function () ***REMOVED******REMOVED***] = () => ***REMOVED***\n     |                    ^\n  41 |     return 1;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-identifier.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-identifier.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-identifier.js: Unexpected token (42:6)\n  40 | \n  41 | let C = class ***REMOVED***\n> 42 |   [x] = () => ***REMOVED***\n     |       ^\n  43 |     return '2';\n  44 |   ***REMOVED***;\n  45 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-integer-e-notational-literal.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-integer-e-notational-literal.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-integer-e-notational-literal.js: Unexpected token (40:6)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1] = () => ***REMOVED***\n     |       ^\n  41 |     return 2;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-integer-separators.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-integer-separators.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-integer-separators.js: Identifier directly after number (40:4)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1_2_3_4_5_6_7_8] = () => ***REMOVED***\n     |     ^\n  41 |     return 1_2_3_4_5_6_7_8;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-math.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-math.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-math.js: Unexpected token (40:27)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1 + 2 - 3 * 4 / 5 ** 6] = () => ***REMOVED***\n     |                            ^\n  41 |     return 2.999232;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-multiplicative-expression-div.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-multiplicative-expression-div.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-multiplicative-expression-div.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1 / 1] = () => ***REMOVED***\n     |           ^\n  41 |     return 1;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-multiplicative-expression-mult.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-multiplicative-expression-mult.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-multiplicative-expression-mult.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1 * 1] = () => ***REMOVED***\n     |           ^\n  41 |     return 1;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-null.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-null.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-null.js: Unexpected token (40:9)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [null] = () => ***REMOVED***\n     |          ^\n  41 |     return null;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-numeric-literal.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-numeric-literal.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-numeric-literal.js: Unexpected token (40:6)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   [1] = () => ***REMOVED***\n     |       ^\n  41 |     return 2;\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-string-literal.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-string-literal.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-string-literal.js: Unexpected token (40:8)\n  38 | \n  39 | let C = class ***REMOVED***\n> 40 |   ['1'] = () => ***REMOVED***\n     |         ^\n  41 |     return '2';\n  42 |   ***REMOVED***;\n  43 |  <at omitted>",
  "test/language/statements/class/cptn-decl.js-strict:true": "test/language/statements/class/cptn-decl.js: SyntaxError: SyntaxError: <eval>: Line 1:1 Unexpected reserved word <at omitted>",
  "test/language/statements/class/definition/accessors.js-strict:true": "test/language/statements/class/definition/accessors.js: Test262Error: The result of `'prototype' in desc.get` is `false` Expected SameValue(«true», «false») to be true <at omitted>",
  "test/language/statements/class/definition/fn-name-accessor-get.js-strict:true": "test/language/statements/class/definition/fn-name-accessor-get.js: Test262Error: Expected SameValue(«get», «get id») to be true <at omitted>",
  "test/language/statements/class/definition/fn-name-accessor-set.js-strict:true": "test/language/statements/class/definition/fn-name-accessor-set.js: Test262Error: Expected SameValue(«set», «set id») to be true <at omitted>",
  "test/language/statements/class/definition/fn-name-method.js-strict:true": "test/language/statements/class/definition/fn-name-method.js: Test262Error: via anonymous Symbol Expected SameValue(«value», «») to be true <at omitted>",
  "test/language/statements/class/definition/getters-prop-desc.js-strict:true": "test/language/statements/class/definition/getters-prop-desc.js: Test262Error: The result of `'prototype' in desc.get` is `false` Expected SameValue(«true», «false») to be true <at omitted>",
  "test/language/statements/class/definition/methods.js-strict:true": "test/language/statements/class/definition/methods.js: Test262Error: The result of `'prototype' in desc.value` is `false` Expected SameValue(«true», «false») to be true <at omitted>",
  "test/language/statements/class/definition/numeric-property-names.js-strict:true": "test/language/statements/class/definition/numeric-property-names.js: Test262Error: The result of `'prototype' in desc.value` is `false` Expected SameValue(«true», «false») to be true <at omitted>",
  "test/language/statements/class/definition/prototype-property.js-strict:true": "test/language/statements/class/definition/prototype-property.js: Test262Error: The value of `descr.writable` is `false` Expected SameValue(«true», «false») to be true <at omitted>",
  "test/language/statements/class/definition/setters-prop-desc.js-strict:true": "test/language/statements/class/definition/setters-prop-desc.js: Test262Error: The result of `'prototype' in descr.set` is `false` Expected SameValue(«true», «false») to be true <at omitted>",
  "test/language/statements/class/definition/this-access-restriction-2.js-strict:true": "test/language/statements/class/definition/this-access-restriction-2.js: SyntaxError: test/language/statements/class/definition/this-access-restriction-2.js: 'this' is not allowed before super()\n  19 |     var exn;\n  20 |     try ***REMOVED***\n> 21 |       this.prp1 = 3;\n     |       ^\n  22 |     ***REMOVED*** catch (e) ***REMOVED***\n  23 |       exn = e;\n  24 |     ***REMOVED*** <at omitted>",
  "test/language/statements/class/definition/this-access-restriction.js-strict:true": "test/language/statements/class/definition/this-access-restriction.js: SyntaxError: test/language/statements/class/definition/this-access-restriction.js: 'this' is not allowed before super()\n  19 |   class C extends Base ***REMOVED***\n  20 |     constructor() ***REMOVED***\n> 21 |       super(this.x);\n     |             ^\n  22 |     ***REMOVED***\n  23 |   ***REMOVED***; new C();\n  24 | ***REMOVED***); <at omitted>",
  "test/language/statements/class/definition/this-check-ordering.js-strict:true": "test/language/statements/class/definition/this-check-ordering.js: test/language/statements/class/definition/this-check-ordering.js: Line 43:7 Unexpected reserved word (and 15 more errors)",
  "test/language/statements/class/dstr/meth-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/meth-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/class/dstr/meth-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/class/dstr/meth-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/class/dstr/meth-ary-ptrn-rest-ary-elem.js: Unexpected token (96:13)\n  94 | var callCount = 0;\n  95 | class C ***REMOVED***\n> 96 |   method([...[x, y, z]]) ***REMOVED***\n     |              ^\n  97 |     assert.sameValue(x, 3);\n  98 |     assert.sameValue(y, 4);\n  99 |     assert.sameValue(z, 5); <at omitted>",
  "test/language/statements/class/dstr/meth-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/class/dstr/meth-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/class/dstr/meth-ary-ptrn-rest-ary-rest.js: Unexpected token (77:13)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   method([...[...x]]) ***REMOVED***\n     |              ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.sameValue(x.length, 3);\n  80 |     assert.sameValue(x[0], 1); <at omitted>",
  "test/language/statements/class/dstr/meth-ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/class/dstr/meth-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/class/dstr/meth-ary-ptrn-rest-obj-id.js: Unexpected token (76:13)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   method([...***REMOVED*** length ***REMOVED***]) ***REMOVED***\n     |              ^\n  77 |     assert.sameValue(length, 3);\n  78 |     callCount = callCount + 1;\n  79 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/meth-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/class/dstr/meth-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/class/dstr/meth-ary-ptrn-rest-obj-prop-id.js: Unexpected token (77:13)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   method([...***REMOVED*** 0: v, 1: w, 2: x, 3: y, length: z ***REMOVED***]) ***REMOVED***\n     |              ^\n  78 |     assert.sameValue(v, 7);\n  79 |     assert.sameValue(w, 8);\n  80 |     assert.sameValue(x, 9); <at omitted>",
  "test/language/statements/class/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-ary-elem.js: Unexpected token (96:13)\n  94 | var callCount = 0;\n  95 | class C ***REMOVED***\n> 96 |   method([...[x, y, z]] = [3, 4, 5]) ***REMOVED***\n     |              ^\n  97 |     assert.sameValue(x, 3);\n  98 |     assert.sameValue(y, 4);\n  99 |     assert.sameValue(z, 5); <at omitted>",
  "test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-ary-rest.js: Unexpected token (77:13)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   method([...[...x]] = values) ***REMOVED***\n     |              ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.sameValue(x.length, 3);\n  80 |     assert.sameValue(x[0], 1); <at omitted>",
  "test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-obj-id.js: Unexpected token (76:13)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   method([...***REMOVED*** length ***REMOVED***] = [1, 2, 3]) ***REMOVED***\n     |              ^\n  77 |     assert.sameValue(length, 3);\n  78 |     callCount = callCount + 1;\n  79 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-obj-prop-id.js: Unexpected token (77:13)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   method([...***REMOVED*** 0: v, 1: w, 2: x, 3: y, length: z ***REMOVED***] = [7, 8, 9]) ***REMOVED***\n     |              ^\n  78 |     assert.sameValue(v, 7);\n  79 |     assert.sameValue(w, 8);\n  80 |     assert.sameValue(x, 9); <at omitted>",
  "test/language/statements/class/dstr/meth-dflt-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/meth-dflt-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/class/dstr/meth-dflt-obj-ptrn-rest-getter.js-strict:true": "test/language/statements/class/dstr/meth-dflt-obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/class/dstr/meth-dflt-obj-ptrn-rest-getter.js: Unexpected token (65:10)\n  63 | var callCount = 0;\n  64 | class C ***REMOVED***\n> 65 |   method(***REMOVED***...x***REMOVED*** = ***REMOVED*** get v() ***REMOVED*** count++; return 2; ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |           ^\n  66 |     assert.sameValue(count, 1);\n  67 | \n  68 |     verifyProperty(x, \"v\", ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/meth-dflt-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/class/dstr/meth-dflt-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/class/dstr/meth-dflt-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (66:10)\n  64 | var callCount = 0;\n  65 | class C ***REMOVED***\n> 66 |   method(***REMOVED***...rest***REMOVED*** = o) ***REMOVED***\n     |           ^\n  67 |     assert.sameValue(rest.x, undefined);\n  68 | \n  69 |     verifyProperty(rest, \"a\", ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/meth-dflt-obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/class/dstr/meth-dflt-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/class/dstr/meth-dflt-obj-ptrn-rest-val-obj.js: Unexpected token (64:16)\n  62 | var callCount = 0;\n  63 | class C ***REMOVED***\n> 64 |   method(***REMOVED***a, b, ...rest***REMOVED*** = ***REMOVED***x: 1, y: 2, a: 5, b: 3***REMOVED***) ***REMOVED***\n     |                 ^\n  65 |     assert.sameValue(rest.a, undefined);\n  66 |     assert.sameValue(rest.b, undefined);\n  67 |  <at omitted>",
  "test/language/statements/class/dstr/meth-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/meth-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/class/dstr/meth-obj-ptrn-rest-getter.js-strict:true": "test/language/statements/class/dstr/meth-obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/class/dstr/meth-obj-ptrn-rest-getter.js: Unexpected token (65:10)\n  63 | var callCount = 0;\n  64 | class C ***REMOVED***\n> 65 |   method(***REMOVED***...x***REMOVED***) ***REMOVED***\n     |           ^\n  66 |     assert.sameValue(count, 1);\n  67 | \n  68 |     verifyProperty(x, \"v\", ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/meth-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/class/dstr/meth-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/class/dstr/meth-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (66:10)\n  64 | var callCount = 0;\n  65 | class C ***REMOVED***\n> 66 |   method(***REMOVED***...rest***REMOVED***) ***REMOVED***\n     |           ^\n  67 |     assert.sameValue(rest.x, undefined);\n  68 | \n  69 |     verifyProperty(rest, \"a\", ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/meth-obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/class/dstr/meth-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/class/dstr/meth-obj-ptrn-rest-val-obj.js: Unexpected token (64:16)\n  62 | var callCount = 0;\n  63 | class C ***REMOVED***\n> 64 |   method(***REMOVED***a, b, ...rest***REMOVED***) ***REMOVED***\n     |                 ^\n  65 |     assert.sameValue(rest.a, undefined);\n  66 |     assert.sameValue(rest.b, undefined);\n  67 |  <at omitted>",
  "test/language/statements/class/dstr/meth-static-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/meth-static-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/class/dstr/meth-static-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/class/dstr/meth-static-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/class/dstr/meth-static-ary-ptrn-rest-ary-elem.js: Unexpected token (96:20)\n  94 | var callCount = 0;\n  95 | class C ***REMOVED***\n> 96 |   static method([...[x, y, z]]) ***REMOVED***\n     |                     ^\n  97 |     assert.sameValue(x, 3);\n  98 |     assert.sameValue(y, 4);\n  99 |     assert.sameValue(z, 5); <at omitted>",
  "test/language/statements/class/dstr/meth-static-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/class/dstr/meth-static-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/class/dstr/meth-static-ary-ptrn-rest-ary-rest.js: Unexpected token (77:20)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   static method([...[...x]]) ***REMOVED***\n     |                     ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.sameValue(x.length, 3);\n  80 |     assert.sameValue(x[0], 1); <at omitted>",
  "test/language/statements/class/dstr/meth-static-ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/class/dstr/meth-static-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/class/dstr/meth-static-ary-ptrn-rest-obj-id.js: Unexpected token (76:20)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   static method([...***REMOVED*** length ***REMOVED***]) ***REMOVED***\n     |                     ^\n  77 |     assert.sameValue(length, 3);\n  78 |     callCount = callCount + 1;\n  79 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/meth-static-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/class/dstr/meth-static-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/class/dstr/meth-static-ary-ptrn-rest-obj-prop-id.js: Unexpected token (77:20)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   static method([...***REMOVED*** 0: v, 1: w, 2: x, 3: y, length: z ***REMOVED***]) ***REMOVED***\n     |                     ^\n  78 |     assert.sameValue(v, 7);\n  79 |     assert.sameValue(w, 8);\n  80 |     assert.sameValue(x, 9); <at omitted>",
  "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-elem.js: Unexpected token (96:20)\n  94 | var callCount = 0;\n  95 | class C ***REMOVED***\n> 96 |   static method([...[x, y, z]] = [3, 4, 5]) ***REMOVED***\n     |                     ^\n  97 |     assert.sameValue(x, 3);\n  98 |     assert.sameValue(y, 4);\n  99 |     assert.sameValue(z, 5); <at omitted>",
  "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-rest.js: Unexpected token (77:20)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   static method([...[...x]] = values) ***REMOVED***\n     |                     ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.sameValue(x.length, 3);\n  80 |     assert.sameValue(x[0], 1); <at omitted>",
  "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-obj-id.js: Unexpected token (76:20)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   static method([...***REMOVED*** length ***REMOVED***] = [1, 2, 3]) ***REMOVED***\n     |                     ^\n  77 |     assert.sameValue(length, 3);\n  78 |     callCount = callCount + 1;\n  79 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-obj-prop-id.js: Unexpected token (77:20)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   static method([...***REMOVED*** 0: v, 1: w, 2: x, 3: y, length: z ***REMOVED***] = [7, 8, 9]) ***REMOVED***\n     |                     ^\n  78 |     assert.sameValue(v, 7);\n  79 |     assert.sameValue(w, 8);\n  80 |     assert.sameValue(x, 9); <at omitted>",
  "test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-rest-getter.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-rest-getter.js: Unexpected token (65:17)\n  63 | var callCount = 0;\n  64 | class C ***REMOVED***\n> 65 |   static method(***REMOVED***...x***REMOVED*** = ***REMOVED*** get v() ***REMOVED*** count++; return 2; ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |                  ^\n  66 |     assert.sameValue(count, 1);\n  67 | \n  68 |     verifyProperty(x, \"v\", ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (66:17)\n  64 | var callCount = 0;\n  65 | class C ***REMOVED***\n> 66 |   static method(***REMOVED***...rest***REMOVED*** = o) ***REMOVED***\n     |                  ^\n  67 |     assert.sameValue(rest.x, undefined);\n  68 | \n  69 |     verifyProperty(rest, \"a\", ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-rest-val-obj.js: Unexpected token (64:23)\n  62 | var callCount = 0;\n  63 | class C ***REMOVED***\n> 64 |   static method(***REMOVED***a, b, ...rest***REMOVED*** = ***REMOVED***x: 1, y: 2, a: 5, b: 3***REMOVED***) ***REMOVED***\n     |                        ^\n  65 |     assert.sameValue(rest.a, undefined);\n  66 |     assert.sameValue(rest.b, undefined);\n  67 |  <at omitted>",
  "test/language/statements/class/dstr/meth-static-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/meth-static-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/class/dstr/meth-static-obj-ptrn-rest-getter.js-strict:true": "test/language/statements/class/dstr/meth-static-obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/class/dstr/meth-static-obj-ptrn-rest-getter.js: Unexpected token (65:17)\n  63 | var callCount = 0;\n  64 | class C ***REMOVED***\n> 65 |   static method(***REMOVED***...x***REMOVED***) ***REMOVED***\n     |                  ^\n  66 |     assert.sameValue(count, 1);\n  67 | \n  68 |     verifyProperty(x, \"v\", ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/meth-static-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/class/dstr/meth-static-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/class/dstr/meth-static-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (66:17)\n  64 | var callCount = 0;\n  65 | class C ***REMOVED***\n> 66 |   static method(***REMOVED***...rest***REMOVED***) ***REMOVED***\n     |                  ^\n  67 |     assert.sameValue(rest.x, undefined);\n  68 | \n  69 |     verifyProperty(rest, \"a\", ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/meth-static-obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/class/dstr/meth-static-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/class/dstr/meth-static-obj-ptrn-rest-val-obj.js: Unexpected token (64:23)\n  62 | var callCount = 0;\n  63 | class C ***REMOVED***\n> 64 |   static method(***REMOVED***a, b, ...rest***REMOVED***) ***REMOVED***\n     |                        ^\n  65 |     assert.sameValue(rest.a, undefined);\n  66 |     assert.sameValue(rest.b, undefined);\n  67 |  <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-init-iter-close.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-init-iter-close.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-init-iter-close.js: Unexpected character '#' (86:2)\n  84 | var callCount = 0;\n  85 | class C ***REMOVED***\n> 86 |   #method([x]) ***REMOVED***\n     |   ^\n  87 |     assert.sameValue(doneCallCount, 1);\n  88 |     callCount = callCount + 1;\n  89 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-init-iter-no-close.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-init-iter-no-close.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-init-iter-no-close.js: Unexpected character '#' (86:2)\n  84 | var callCount = 0;\n  85 | class C ***REMOVED***\n> 86 |   #method([x]) ***REMOVED***\n     |   ^\n  87 |     assert.sameValue(doneCallCount, 0);\n  88 |     callCount = callCount + 1;\n  89 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-name-iter-val.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-name-iter-val.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-name-iter-val.js: Unexpected character '#' (83:2)\n  81 | var callCount = 0;\n  82 | class C ***REMOVED***\n> 83 |   #method([x, y, z]) ***REMOVED***\n     |   ^\n  84 |     assert.sameValue(x, 1);\n  85 |     assert.sameValue(y, 2);\n  86 |     assert.sameValue(z, 3); <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-elem-init.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-elem-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-elem-init.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   #method([[x, y, z] = [4, 5, 6]]) ***REMOVED***\n     |   ^\n  76 |     assert.sameValue(x, 4);\n  77 |     assert.sameValue(y, 5);\n  78 |     assert.sameValue(z, 6); <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-elem-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-elem-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-elem-iter.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   #method([[x, y, z] = [4, 5, 6]]) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(x, 7);\n  78 |     assert.sameValue(y, 8);\n  79 |     assert.sameValue(z, 9); <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-empty-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-empty-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-empty-iter.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   #method([[] = function() ***REMOVED*** initCount += 1; ***REMOVED***()]) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(initCount, 0);\n  79 |     callCount = callCount + 1;\n  80 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-rest-init.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-rest-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-rest-init.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   #method([[...x] = values]) ***REMOVED***\n     |   ^\n  77 |     assert(Array.isArray(x));\n  78 |     assert.sameValue(x[0], 2);\n  79 |     assert.sameValue(x[1], 1); <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-rest-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-rest-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-rest-iter.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | class C ***REMOVED***\n> 78 |   #method([[...x] = function() ***REMOVED*** initCount += 1; ***REMOVED***()]) ***REMOVED***\n     |   ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.sameValue(x[0], 2);\n  81 |     assert.sameValue(x[1], 1); <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-exhausted.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-exhausted.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-exhausted.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   #method([x = 23]) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(x, 23);\n  78 |     callCount = callCount + 1;\n  79 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-arrow.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-arrow.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   #method([arrow = () => ***REMOVED******REMOVED***]) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(arrow.name, 'arrow');\n  79 |     callCount = callCount + 1;\n  80 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-class.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-class.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   #method([cls = class ***REMOVED******REMOVED***, xCls = class X ***REMOVED******REMOVED***, xCls2 = class ***REMOVED*** static name() ***REMOVED******REMOVED*** ***REMOVED***]) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(cls.name, 'cls');\n  79 |     assert.notSameValue(xCls.name, 'xCls');\n  80 |     assert.notSameValue(xCls2.name, 'xCls2'); <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-cover.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-cover.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   #method([cover = (function () ***REMOVED******REMOVED***), xCover = (0, function() ***REMOVED******REMOVED***)]) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(cover.name, 'cover');\n  79 |     assert.notSameValue(xCover.name, 'xCover');\n  80 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-fn.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-fn.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   #method([fn = function () ***REMOVED******REMOVED***, xFn = function x() ***REMOVED******REMOVED***]) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(fn.name, 'fn');\n  79 |     assert.notSameValue(xFn.name, 'xFn');\n  80 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-hole.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-hole.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-hole.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | class C ***REMOVED***\n> 71 |   #method([x = 23]) ***REMOVED***\n     |   ^\n  72 |     assert.sameValue(x, 23);\n  73 |     // another statement\n  74 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-skipped.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-skipped.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-skipped.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   #method([w = counter(), x = counter(), y = counter(), z = counter()]) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(w, null);\n  79 |     assert.sameValue(x, 0);\n  80 |     assert.sameValue(y, false); <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-undef.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-undef.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-undef.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   #method([x = 23]) ***REMOVED***\n     |   ^\n  76 |     assert.sameValue(x, 23);\n  77 |     callCount = callCount + 1;\n  78 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-iter-complete.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-iter-complete.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-iter-complete.js: Unexpected character '#' (79:2)\n  77 | var callCount = 0;\n  78 | class C ***REMOVED***\n> 79 |   #method([x]) ***REMOVED***\n     |   ^\n  80 |     assert.sameValue(x, undefined);\n  81 |     callCount = callCount + 1;\n  82 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-iter-done.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-iter-done.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-iter-done.js: Unexpected character '#' (74:2)\n  72 | var callCount = 0;\n  73 | class C ***REMOVED***\n> 74 |   #method([_, x]) ***REMOVED***\n     |   ^\n  75 |     assert.sameValue(x, undefined);\n  76 |     callCount = callCount + 1;\n  77 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-iter-val.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-iter-val.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-iter-val.js: Unexpected character '#' (83:2)\n  81 | var callCount = 0;\n  82 | class C ***REMOVED***\n> 83 |   #method([x, y, z]) ***REMOVED***\n     |   ^\n  84 |     assert.sameValue(x, 1);\n  85 |     assert.sameValue(y, 2);\n  86 |     assert.sameValue(z, 3); <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-obj-id-init.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-obj-id-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-obj-id-init.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   #method([***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 44, y: 55, z: 66 ***REMOVED***]) ***REMOVED***\n     |   ^\n  76 |     assert.sameValue(x, 44);\n  77 |     assert.sameValue(y, 55);\n  78 |     assert.sameValue(z, 66); <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-obj-id.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-obj-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-obj-id.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   #method([***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 44, y: 55, z: 66 ***REMOVED***]) ***REMOVED***\n     |   ^\n  76 |     assert.sameValue(x, 11);\n  77 |     assert.sameValue(y, 22);\n  78 |     assert.sameValue(z, 33); <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-obj-prop-id-init.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-obj-prop-id-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-obj-prop-id-init.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   #method([***REMOVED*** u: v, w: x, y: z ***REMOVED*** = ***REMOVED*** u: 444, w: 555, y: 666 ***REMOVED***]) ***REMOVED***\n     |   ^\n  76 |     assert.sameValue(v, 444);\n  77 |     assert.sameValue(x, 555);\n  78 |     assert.sameValue(z, 666); <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-obj-prop-id.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-obj-prop-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-obj-prop-id.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   #method([***REMOVED*** u: v, w: x, y: z ***REMOVED*** = ***REMOVED*** u: 444, w: 555, y: 666 ***REMOVED***]) ***REMOVED***\n     |   ^\n  76 |     assert.sameValue(v, 777);\n  77 |     assert.sameValue(x, 888);\n  78 |     assert.sameValue(z, 999); <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-rest-ary-elem.js: Unexpected character '#' (96:2)\n  94 | var callCount = 0;\n  95 | class C ***REMOVED***\n> 96 |   #method([...[x, y, z]]) ***REMOVED***\n     |   ^\n  97 |     assert.sameValue(x, 3);\n  98 |     assert.sameValue(y, 4);\n  99 |     assert.sameValue(z, 5); <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-rest-ary-rest.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   #method([...[...x]]) ***REMOVED***\n     |   ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.sameValue(x.length, 3);\n  80 |     assert.sameValue(x[0], 1); <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-id-direct.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-id-direct.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-rest-id-direct.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   #method([...x]) ***REMOVED***\n     |   ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.compareArray(x, [1]);\n  80 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-id-elision.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-id-elision.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-rest-id-elision.js: Unexpected character '#' (74:2)\n  72 | var callCount = 0;\n  73 | class C ***REMOVED***\n> 74 |   #method([ , , ...x]) ***REMOVED***\n     |   ^\n  75 |     assert(Array.isArray(x));\n  76 |     assert.sameValue(x.length, 3);\n  77 |     assert.sameValue(x[0], 3); <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-id-exhausted.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-id-exhausted.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-rest-id-exhausted.js: Unexpected character '#' (74:2)\n  72 | var callCount = 0;\n  73 | class C ***REMOVED***\n> 74 |   #method([, , ...x]) ***REMOVED***\n     |   ^\n  75 |     assert(Array.isArray(x));\n  76 |     assert.sameValue(x.length, 0);\n  77 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-id.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-rest-id.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | class C ***REMOVED***\n> 71 |   #method([...x]) ***REMOVED***\n     |   ^\n  72 |     assert(Array.isArray(x));\n  73 |     assert.sameValue(x.length, 3);\n  74 |     assert.sameValue(x[0], 1); <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-rest-obj-id.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   #method([...***REMOVED*** length ***REMOVED***]) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(length, 3);\n  78 |     callCount = callCount + 1;\n  79 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-rest-obj-prop-id.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   #method([...***REMOVED*** 0: v, 1: w, 2: x, 3: y, length: z ***REMOVED***]) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(v, 7);\n  79 |     assert.sameValue(w, 8);\n  80 |     assert.sameValue(x, 9); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-init-iter-close.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-init-iter-close.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-init-iter-close.js: Unexpected character '#' (86:2)\n  84 | var callCount = 0;\n  85 | class C ***REMOVED***\n> 86 |   #method([x] = iter) ***REMOVED***\n     |   ^\n  87 |     assert.sameValue(doneCallCount, 1);\n  88 |     callCount = callCount + 1;\n  89 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-init-iter-no-close.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-init-iter-no-close.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-init-iter-no-close.js: Unexpected character '#' (86:2)\n  84 | var callCount = 0;\n  85 | class C ***REMOVED***\n> 86 |   #method([x] = iter) ***REMOVED***\n     |   ^\n  87 |     assert.sameValue(doneCallCount, 0);\n  88 |     callCount = callCount + 1;\n  89 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-name-iter-val.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-name-iter-val.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-name-iter-val.js: Unexpected character '#' (83:2)\n  81 | var callCount = 0;\n  82 | class C ***REMOVED***\n> 83 |   #method([x, y, z] = [1, 2, 3]) ***REMOVED***\n     |   ^\n  84 |     assert.sameValue(x, 1);\n  85 |     assert.sameValue(y, 2);\n  86 |     assert.sameValue(z, 3); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elem-init.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elem-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elem-init.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   #method([[x, y, z] = [4, 5, 6]] = []) ***REMOVED***\n     |   ^\n  76 |     assert.sameValue(x, 4);\n  77 |     assert.sameValue(y, 5);\n  78 |     assert.sameValue(z, 6); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elem-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elem-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elem-iter.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   #method([[x, y, z] = [4, 5, 6]] = [[7, 8, 9]]) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(x, 7);\n  78 |     assert.sameValue(y, 8);\n  79 |     assert.sameValue(z, 9); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-empty-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-empty-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-empty-iter.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   #method([[] = function() ***REMOVED*** initCount += 1; ***REMOVED***()] = [[23]]) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(initCount, 0);\n  79 |     callCount = callCount + 1;\n  80 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-rest-init.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-rest-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-rest-init.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   #method([[...x] = values] = []) ***REMOVED***\n     |   ^\n  77 |     assert(Array.isArray(x));\n  78 |     assert.sameValue(x[0], 2);\n  79 |     assert.sameValue(x[1], 1); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-rest-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-rest-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-rest-iter.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | class C ***REMOVED***\n> 78 |   #method([[...x] = function() ***REMOVED*** initCount += 1; ***REMOVED***()] = [values]) ***REMOVED***\n     |   ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.sameValue(x[0], 2);\n  81 |     assert.sameValue(x[1], 1); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-exhausted.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-exhausted.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-exhausted.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   #method([x = 23] = []) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(x, 23);\n  78 |     callCount = callCount + 1;\n  79 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   #method([arrow = () => ***REMOVED******REMOVED***] = []) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(arrow.name, 'arrow');\n  79 |     callCount = callCount + 1;\n  80 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   #method([cls = class ***REMOVED******REMOVED***, xCls = class X ***REMOVED******REMOVED***, xCls2 = class ***REMOVED*** static name() ***REMOVED******REMOVED*** ***REMOVED***] = []) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(cls.name, 'cls');\n  79 |     assert.notSameValue(xCls.name, 'xCls');\n  80 |     assert.notSameValue(xCls2.name, 'xCls2'); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-cover.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-cover.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   #method([cover = (function () ***REMOVED******REMOVED***), xCover = (0, function() ***REMOVED******REMOVED***)] = []) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(cover.name, 'cover');\n  79 |     assert.notSameValue(xCover.name, 'xCover');\n  80 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-fn.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-fn.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   #method([fn = function () ***REMOVED******REMOVED***, xFn = function x() ***REMOVED******REMOVED***] = []) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(fn.name, 'fn');\n  79 |     assert.notSameValue(xFn.name, 'xFn');\n  80 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-hole.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-hole.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-hole.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | class C ***REMOVED***\n> 71 |   #method([x = 23] = [,]) ***REMOVED***\n     |   ^\n  72 |     assert.sameValue(x, 23);\n  73 |     // another statement\n  74 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-skipped.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-skipped.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-skipped.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   #method([w = counter(), x = counter(), y = counter(), z = counter()] = [null, 0, false, '']) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(w, null);\n  79 |     assert.sameValue(x, 0);\n  80 |     assert.sameValue(y, false); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-undef.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-undef.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-undef.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   #method([x = 23] = [undefined]) ***REMOVED***\n     |   ^\n  76 |     assert.sameValue(x, 23);\n  77 |     callCount = callCount + 1;\n  78 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-complete.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-complete.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-complete.js: Unexpected character '#' (79:2)\n  77 | var callCount = 0;\n  78 | class C ***REMOVED***\n> 79 |   #method([x] = []) ***REMOVED***\n     |   ^\n  80 |     assert.sameValue(x, undefined);\n  81 |     callCount = callCount + 1;\n  82 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-done.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-done.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-done.js: Unexpected character '#' (74:2)\n  72 | var callCount = 0;\n  73 | class C ***REMOVED***\n> 74 |   #method([_, x] = []) ***REMOVED***\n     |   ^\n  75 |     assert.sameValue(x, undefined);\n  76 |     callCount = callCount + 1;\n  77 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-val.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-val.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-val.js: Unexpected character '#' (83:2)\n  81 | var callCount = 0;\n  82 | class C ***REMOVED***\n> 83 |   #method([x, y, z] = [1, 2, 3]) ***REMOVED***\n     |   ^\n  84 |     assert.sameValue(x, 1);\n  85 |     assert.sameValue(y, 2);\n  86 |     assert.sameValue(z, 3); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-id-init.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-id-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-id-init.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   #method([***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 44, y: 55, z: 66 ***REMOVED***] = []) ***REMOVED***\n     |   ^\n  76 |     assert.sameValue(x, 44);\n  77 |     assert.sameValue(y, 55);\n  78 |     assert.sameValue(z, 66); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-id.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-id.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   #method([***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 44, y: 55, z: 66 ***REMOVED***] = [***REMOVED*** x: 11, y: 22, z: 33 ***REMOVED***]) ***REMOVED***\n     |   ^\n  76 |     assert.sameValue(x, 11);\n  77 |     assert.sameValue(y, 22);\n  78 |     assert.sameValue(z, 33); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-prop-id-init.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-prop-id-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-prop-id-init.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   #method([***REMOVED*** u: v, w: x, y: z ***REMOVED*** = ***REMOVED*** u: 444, w: 555, y: 666 ***REMOVED***] = []) ***REMOVED***\n     |   ^\n  76 |     assert.sameValue(v, 444);\n  77 |     assert.sameValue(x, 555);\n  78 |     assert.sameValue(z, 666); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-prop-id.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-prop-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-prop-id.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   #method([***REMOVED*** u: v, w: x, y: z ***REMOVED*** = ***REMOVED*** u: 444, w: 555, y: 666 ***REMOVED***] = [***REMOVED*** u: 777, w: 888, y: 999 ***REMOVED***]) ***REMOVED***\n     |   ^\n  76 |     assert.sameValue(v, 777);\n  77 |     assert.sameValue(x, 888);\n  78 |     assert.sameValue(z, 999); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-elem.js: Unexpected character '#' (96:2)\n  94 | var callCount = 0;\n  95 | class C ***REMOVED***\n> 96 |   #method([...[x, y, z]] = [3, 4, 5]) ***REMOVED***\n     |   ^\n  97 |     assert.sameValue(x, 3);\n  98 |     assert.sameValue(y, 4);\n  99 |     assert.sameValue(z, 5); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-rest.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   #method([...[...x]] = values) ***REMOVED***\n     |   ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.sameValue(x.length, 3);\n  80 |     assert.sameValue(x[0], 1); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-id-direct.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-id-direct.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-id-direct.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   #method([...x] = [1]) ***REMOVED***\n     |   ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.compareArray(x, [1]);\n  80 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-id-elision.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-id-elision.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-id-elision.js: Unexpected character '#' (74:2)\n  72 | var callCount = 0;\n  73 | class C ***REMOVED***\n> 74 |   #method([ , , ...x] = values) ***REMOVED***\n     |   ^\n  75 |     assert(Array.isArray(x));\n  76 |     assert.sameValue(x.length, 3);\n  77 |     assert.sameValue(x[0], 3); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-id-exhausted.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-id-exhausted.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-id-exhausted.js: Unexpected character '#' (74:2)\n  72 | var callCount = 0;\n  73 | class C ***REMOVED***\n> 74 |   #method([, , ...x] = [1, 2]) ***REMOVED***\n     |   ^\n  75 |     assert(Array.isArray(x));\n  76 |     assert.sameValue(x.length, 0);\n  77 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-id.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-id.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | class C ***REMOVED***\n> 71 |   #method([...x] = values) ***REMOVED***\n     |   ^\n  72 |     assert(Array.isArray(x));\n  73 |     assert.sameValue(x.length, 3);\n  74 |     assert.sameValue(x[0], 1); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-obj-id.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   #method([...***REMOVED*** length ***REMOVED***] = [1, 2, 3]) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(length, 3);\n  78 |     callCount = callCount + 1;\n  79 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-obj-prop-id.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   #method([...***REMOVED*** 0: v, 1: w, 2: x, 3: y, length: z ***REMOVED***] = [7, 8, 9]) ***REMOVED***\n     |   ^\n  78 |     assert.sameValue(v, 7);\n  79 |     assert.sameValue(w, 8);\n  80 |     assert.sameValue(x, 9); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-empty.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-empty.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-empty.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   #method(***REMOVED******REMOVED*** = obj) ***REMOVED***\n     |   ^\n  76 |     assert.sameValue(accessCount, 0);\n  77 |     callCount = callCount + 1;\n  78 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-arrow.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-arrow.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   #method(***REMOVED*** arrow = () => ***REMOVED******REMOVED*** ***REMOVED*** = ***REMOVED******REMOVED***) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(arrow.name, 'arrow');\n  78 |     callCount = callCount + 1;\n  79 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-class.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-class.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   #method(***REMOVED*** cls = class ***REMOVED******REMOVED***, xCls = class X ***REMOVED******REMOVED***, xCls2 = class ***REMOVED*** static name() ***REMOVED******REMOVED*** ***REMOVED*** ***REMOVED*** = ***REMOVED******REMOVED***) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(cls.name, 'cls');\n  78 |     assert.notSameValue(xCls.name, 'xCls');\n  79 |     assert.notSameValue(xCls2.name, 'xCls2'); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-cover.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-cover.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   #method(***REMOVED*** cover = (function () ***REMOVED******REMOVED***), xCover = (0, function() ***REMOVED******REMOVED***)  ***REMOVED*** = ***REMOVED******REMOVED***) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(cover.name, 'cover');\n  78 |     assert.notSameValue(xCover.name, 'xCover');\n  79 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-fn.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-fn.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   #method(***REMOVED*** fn = function () ***REMOVED******REMOVED***, xFn = function x() ***REMOVED******REMOVED*** ***REMOVED*** = ***REMOVED******REMOVED***) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(fn.name, 'fn');\n  78 |     assert.notSameValue(xFn.name, 'xFn');\n  79 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-skipped.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-skipped.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-skipped.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   #method(***REMOVED*** w = counter(), x = counter(), y = counter(), z = counter() ***REMOVED*** = ***REMOVED*** w: null, x: 0, y: false, z: '' ***REMOVED***) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(w, null);\n  78 |     assert.sameValue(x, 0);\n  79 |     assert.sameValue(y, false); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-trailing-comma.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-trailing-comma.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-trailing-comma.js: Unexpected character '#' (70:2)\n  68 | var callCount = 0;\n  69 | class C ***REMOVED***\n> 70 |   #method(***REMOVED*** x, ***REMOVED*** = ***REMOVED*** x: 23 ***REMOVED***) ***REMOVED***\n     |   ^\n  71 |     assert.sameValue(x, 23);\n  72 |     callCount = callCount + 1;\n  73 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-ary-init.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-ary-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-ary-init.js: Unexpected character '#' (73:2)\n  71 | var callCount = 0;\n  72 | class C ***REMOVED***\n> 73 |   #method(***REMOVED*** w: [x, y, z] = [4, 5, 6] ***REMOVED*** = ***REMOVED******REMOVED***) ***REMOVED***\n     |   ^\n  74 |     assert.sameValue(x, 4);\n  75 |     assert.sameValue(y, 5);\n  76 |     assert.sameValue(z, 6); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-ary-trailing-comma.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-ary-trailing-comma.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-ary-trailing-comma.js: Unexpected character '#' (70:2)\n  68 | var callCount = 0;\n  69 | class C ***REMOVED***\n> 70 |   #method(***REMOVED*** x: [y], ***REMOVED*** = ***REMOVED*** x: [45] ***REMOVED***) ***REMOVED***\n     |   ^\n  71 |     assert.sameValue(y,45);\n  72 |     callCount = callCount + 1;\n  73 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-ary.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-ary.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-ary.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | class C ***REMOVED***\n> 71 |   #method(***REMOVED*** w: [x, y, z] = [4, 5, 6] ***REMOVED*** = ***REMOVED*** w: [7, undefined, ] ***REMOVED***) ***REMOVED***\n     |   ^\n  72 |     assert.sameValue(x, 7);\n  73 |     assert.sameValue(y, undefined);\n  74 |     assert.sameValue(z, undefined); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-id-init-skipped.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-id-init-skipped.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-id-init-skipped.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   #method(***REMOVED*** s: t = counter(), u: v = counter(), w: x = counter(), y: z = counter() ***REMOVED*** = ***REMOVED*** s: null, u: 0, w: false, y: '' ***REMOVED***) ***REMOVED***\n     |   ^\n  76 |     assert.sameValue(t, null);\n  77 |     assert.sameValue(v, 0);\n  78 |     assert.sameValue(x, false); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-id-init.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-id-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-id-init.js: Unexpected character '#' (70:2)\n  68 | var callCount = 0;\n  69 | class C ***REMOVED***\n> 70 |   #method(***REMOVED*** x: y = 33 ***REMOVED*** = ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |   ^\n  71 |     assert.sameValue(y, 33);\n  72 |     assert.throws(ReferenceError, function() ***REMOVED***\n  73 |       x; <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-id-trailing-comma.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-id-trailing-comma.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-id-trailing-comma.js: Unexpected character '#' (70:2)\n  68 | var callCount = 0;\n  69 | class C ***REMOVED***\n> 70 |   #method(***REMOVED*** x: y, ***REMOVED*** = ***REMOVED*** x: 23 ***REMOVED***) ***REMOVED***\n     |   ^\n  71 |     assert.sameValue(y, 23);\n  72 | \n  73 |     assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-id.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-id.js: Unexpected character '#' (70:2)\n  68 | var callCount = 0;\n  69 | class C ***REMOVED***\n> 70 |   #method(***REMOVED*** x: y ***REMOVED*** = ***REMOVED*** x: 23 ***REMOVED***) ***REMOVED***\n     |   ^\n  71 |     assert.sameValue(y, 23);\n  72 |     assert.throws(ReferenceError, function() ***REMOVED***\n  73 |       x; <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-obj-init.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-obj-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-obj-init.js: Unexpected character '#' (73:2)\n  71 | var callCount = 0;\n  72 | class C ***REMOVED***\n> 73 |   #method(***REMOVED*** w: ***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 4, y: 5, z: 6 ***REMOVED*** ***REMOVED*** = ***REMOVED*** w: undefined ***REMOVED***) ***REMOVED***\n     |   ^\n  74 |     assert.sameValue(x, 4);\n  75 |     assert.sameValue(y, 5);\n  76 |     assert.sameValue(z, 6); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-obj.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-obj.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-obj.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | class C ***REMOVED***\n> 71 |   #method(***REMOVED*** w: ***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 4, y: 5, z: 6 ***REMOVED*** ***REMOVED*** = ***REMOVED*** w: ***REMOVED*** x: undefined, z: 7 ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |   ^\n  72 |     assert.sameValue(x, undefined);\n  73 |     assert.sameValue(y, undefined);\n  74 |     assert.sameValue(z, 7); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-rest-getter.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-rest-getter.js: Unexpected character '#' (65:2)\n  63 | var callCount = 0;\n  64 | class C ***REMOVED***\n> 65 |   #method(***REMOVED***...x***REMOVED*** = ***REMOVED*** get v() ***REMOVED*** count++; return 2; ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |   ^\n  66 |     assert.sameValue(count, 1);\n  67 | \n  68 |     verifyProperty(x, \"v\", ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-rest-skip-non-enumerable.js: Unexpected character '#' (66:2)\n  64 | var callCount = 0;\n  65 | class C ***REMOVED***\n> 66 |   #method(***REMOVED***...rest***REMOVED*** = o) ***REMOVED***\n     |   ^\n  67 |     assert.sameValue(rest.x, undefined);\n  68 | \n  69 |     verifyProperty(rest, \"a\", ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-rest-val-obj.js: Unexpected character '#' (64:2)\n  62 | var callCount = 0;\n  63 | class C ***REMOVED***\n> 64 |   #method(***REMOVED***a, b, ...rest***REMOVED*** = ***REMOVED***x: 1, y: 2, a: 5, b: 3***REMOVED***) ***REMOVED***\n     |   ^\n  65 |     assert.sameValue(rest.a, undefined);\n  66 |     assert.sameValue(rest.b, undefined);\n  67 |  <at omitted>",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-empty.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-empty.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-empty.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   #method(***REMOVED******REMOVED***) ***REMOVED***\n     |   ^\n  76 |     assert.sameValue(accessCount, 0);\n  77 |     callCount = callCount + 1;\n  78 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-arrow.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-arrow.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   #method(***REMOVED*** arrow = () => ***REMOVED******REMOVED*** ***REMOVED***) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(arrow.name, 'arrow');\n  78 |     callCount = callCount + 1;\n  79 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-class.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-class.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   #method(***REMOVED*** cls = class ***REMOVED******REMOVED***, xCls = class X ***REMOVED******REMOVED***, xCls2 = class ***REMOVED*** static name() ***REMOVED******REMOVED*** ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(cls.name, 'cls');\n  78 |     assert.notSameValue(xCls.name, 'xCls');\n  79 |     assert.notSameValue(xCls2.name, 'xCls2'); <at omitted>",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-cover.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-cover.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   #method(***REMOVED*** cover = (function () ***REMOVED******REMOVED***), xCover = (0, function() ***REMOVED******REMOVED***)  ***REMOVED***) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(cover.name, 'cover');\n  78 |     assert.notSameValue(xCover.name, 'xCover');\n  79 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-fn.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-fn.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   #method(***REMOVED*** fn = function () ***REMOVED******REMOVED***, xFn = function x() ***REMOVED******REMOVED*** ***REMOVED***) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(fn.name, 'fn');\n  78 |     assert.notSameValue(xFn.name, 'xFn');\n  79 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-skipped.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-skipped.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-skipped.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   #method(***REMOVED*** w = counter(), x = counter(), y = counter(), z = counter() ***REMOVED***) ***REMOVED***\n     |   ^\n  77 |     assert.sameValue(w, null);\n  78 |     assert.sameValue(x, 0);\n  79 |     assert.sameValue(y, false); <at omitted>",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-id-trailing-comma.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-id-trailing-comma.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-id-trailing-comma.js: Unexpected character '#' (70:2)\n  68 | var callCount = 0;\n  69 | class C ***REMOVED***\n> 70 |   #method(***REMOVED*** x, ***REMOVED***) ***REMOVED***\n     |   ^\n  71 |     assert.sameValue(x, 23);\n  72 |     callCount = callCount + 1;\n  73 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-ary-init.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-ary-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-prop-ary-init.js: Unexpected character '#' (73:2)\n  71 | var callCount = 0;\n  72 | class C ***REMOVED***\n> 73 |   #method(***REMOVED*** w: [x, y, z] = [4, 5, 6] ***REMOVED***) ***REMOVED***\n     |   ^\n  74 |     assert.sameValue(x, 4);\n  75 |     assert.sameValue(y, 5);\n  76 |     assert.sameValue(z, 6); <at omitted>",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-ary-trailing-comma.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-ary-trailing-comma.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-prop-ary-trailing-comma.js: Unexpected character '#' (70:2)\n  68 | var callCount = 0;\n  69 | class C ***REMOVED***\n> 70 |   #method(***REMOVED*** x: [y], ***REMOVED***) ***REMOVED***\n     |   ^\n  71 |     assert.sameValue(y,45);\n  72 |     callCount = callCount + 1;\n  73 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-ary.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-ary.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-prop-ary.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | class C ***REMOVED***\n> 71 |   #method(***REMOVED*** w: [x, y, z] = [4, 5, 6] ***REMOVED***) ***REMOVED***\n     |   ^\n  72 |     assert.sameValue(x, 7);\n  73 |     assert.sameValue(y, undefined);\n  74 |     assert.sameValue(z, undefined); <at omitted>",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-id-init-skipped.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-id-init-skipped.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-prop-id-init-skipped.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   #method(***REMOVED*** s: t = counter(), u: v = counter(), w: x = counter(), y: z = counter() ***REMOVED***) ***REMOVED***\n     |   ^\n  76 |     assert.sameValue(t, null);\n  77 |     assert.sameValue(v, 0);\n  78 |     assert.sameValue(x, false); <at omitted>",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-id-init.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-id-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-prop-id-init.js: Unexpected character '#' (70:2)\n  68 | var callCount = 0;\n  69 | class C ***REMOVED***\n> 70 |   #method(***REMOVED*** x: y = 33 ***REMOVED***) ***REMOVED***\n     |   ^\n  71 |     assert.sameValue(y, 33);\n  72 |     assert.throws(ReferenceError, function() ***REMOVED***\n  73 |       x; <at omitted>",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-id-trailing-comma.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-id-trailing-comma.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-prop-id-trailing-comma.js: Unexpected character '#' (70:2)\n  68 | var callCount = 0;\n  69 | class C ***REMOVED***\n> 70 |   #method(***REMOVED*** x: y, ***REMOVED***) ***REMOVED***\n     |   ^\n  71 |     assert.sameValue(y, 23);\n  72 | \n  73 |     assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-id.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-prop-id.js: Unexpected character '#' (70:2)\n  68 | var callCount = 0;\n  69 | class C ***REMOVED***\n> 70 |   #method(***REMOVED*** x: y ***REMOVED***) ***REMOVED***\n     |   ^\n  71 |     assert.sameValue(y, 23);\n  72 |     assert.throws(ReferenceError, function() ***REMOVED***\n  73 |       x; <at omitted>",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-obj-init.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-obj-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-prop-obj-init.js: Unexpected character '#' (73:2)\n  71 | var callCount = 0;\n  72 | class C ***REMOVED***\n> 73 |   #method(***REMOVED*** w: ***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 4, y: 5, z: 6 ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |   ^\n  74 |     assert.sameValue(x, 4);\n  75 |     assert.sameValue(y, 5);\n  76 |     assert.sameValue(z, 6); <at omitted>",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-obj.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-obj.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-prop-obj.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | class C ***REMOVED***\n> 71 |   #method(***REMOVED*** w: ***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 4, y: 5, z: 6 ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |   ^\n  72 |     assert.sameValue(x, undefined);\n  73 |     assert.sameValue(y, undefined);\n  74 |     assert.sameValue(z, 7); <at omitted>",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-rest-getter.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-rest-getter.js: Unexpected character '#' (65:2)\n  63 | var callCount = 0;\n  64 | class C ***REMOVED***\n> 65 |   #method(***REMOVED***...x***REMOVED***) ***REMOVED***\n     |   ^\n  66 |     assert.sameValue(count, 1);\n  67 | \n  68 |     verifyProperty(x, \"v\", ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-rest-skip-non-enumerable.js: Unexpected character '#' (66:2)\n  64 | var callCount = 0;\n  65 | class C ***REMOVED***\n> 66 |   #method(***REMOVED***...rest***REMOVED***) ***REMOVED***\n     |   ^\n  67 |     assert.sameValue(rest.x, undefined);\n  68 | \n  69 |     verifyProperty(rest, \"a\", ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-rest-val-obj.js: Unexpected character '#' (64:2)\n  62 | var callCount = 0;\n  63 | class C ***REMOVED***\n> 64 |   #method(***REMOVED***a, b, ...rest***REMOVED***) ***REMOVED***\n     |   ^\n  65 |     assert.sameValue(rest.a, undefined);\n  66 |     assert.sameValue(rest.b, undefined);\n  67 |  <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-init-iter-close.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-init-iter-close.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-init-iter-close.js: Unexpected character '#' (86:9)\n  84 | var callCount = 0;\n  85 | class C ***REMOVED***\n> 86 |   static #method([x]) ***REMOVED***\n     |          ^\n  87 |     assert.sameValue(doneCallCount, 1);\n  88 |     callCount = callCount + 1;\n  89 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-init-iter-no-close.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-init-iter-no-close.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-init-iter-no-close.js: Unexpected character '#' (86:9)\n  84 | var callCount = 0;\n  85 | class C ***REMOVED***\n> 86 |   static #method([x]) ***REMOVED***\n     |          ^\n  87 |     assert.sameValue(doneCallCount, 0);\n  88 |     callCount = callCount + 1;\n  89 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-name-iter-val.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-name-iter-val.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-name-iter-val.js: Unexpected character '#' (83:9)\n  81 | var callCount = 0;\n  82 | class C ***REMOVED***\n> 83 |   static #method([x, y, z]) ***REMOVED***\n     |          ^\n  84 |     assert.sameValue(x, 1);\n  85 |     assert.sameValue(y, 2);\n  86 |     assert.sameValue(z, 3); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-elem-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-elem-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-elem-init.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   static #method([[x, y, z] = [4, 5, 6]]) ***REMOVED***\n     |          ^\n  76 |     assert.sameValue(x, 4);\n  77 |     assert.sameValue(y, 5);\n  78 |     assert.sameValue(z, 6); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-elem-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-elem-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-elem-iter.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   static #method([[x, y, z] = [4, 5, 6]]) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(x, 7);\n  78 |     assert.sameValue(y, 8);\n  79 |     assert.sameValue(z, 9); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-empty-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-empty-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-empty-iter.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   static #method([[] = function() ***REMOVED*** initCount += 1; ***REMOVED***()]) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(initCount, 0);\n  79 |     callCount = callCount + 1;\n  80 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-rest-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-rest-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-rest-init.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   static #method([[...x] = values]) ***REMOVED***\n     |          ^\n  77 |     assert(Array.isArray(x));\n  78 |     assert.sameValue(x[0], 2);\n  79 |     assert.sameValue(x[1], 1); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-rest-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-rest-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-rest-iter.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | class C ***REMOVED***\n> 78 |   static #method([[...x] = function() ***REMOVED*** initCount += 1; ***REMOVED***()]) ***REMOVED***\n     |          ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.sameValue(x[0], 2);\n  81 |     assert.sameValue(x[1], 1); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-exhausted.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-exhausted.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-exhausted.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   static #method([x = 23]) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(x, 23);\n  78 |     callCount = callCount + 1;\n  79 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-arrow.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-arrow.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   static #method([arrow = () => ***REMOVED******REMOVED***]) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(arrow.name, 'arrow');\n  79 |     callCount = callCount + 1;\n  80 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-class.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-class.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   static #method([cls = class ***REMOVED******REMOVED***, xCls = class X ***REMOVED******REMOVED***, xCls2 = class ***REMOVED*** static name() ***REMOVED******REMOVED*** ***REMOVED***]) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(cls.name, 'cls');\n  79 |     assert.notSameValue(xCls.name, 'xCls');\n  80 |     assert.notSameValue(xCls2.name, 'xCls2'); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-cover.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-cover.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   static #method([cover = (function () ***REMOVED******REMOVED***), xCover = (0, function() ***REMOVED******REMOVED***)]) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(cover.name, 'cover');\n  79 |     assert.notSameValue(xCover.name, 'xCover');\n  80 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-fn.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-fn.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   static #method([fn = function () ***REMOVED******REMOVED***, xFn = function x() ***REMOVED******REMOVED***]) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(fn.name, 'fn');\n  79 |     assert.notSameValue(xFn.name, 'xFn');\n  80 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-hole.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-hole.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-hole.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | class C ***REMOVED***\n> 71 |   static #method([x = 23]) ***REMOVED***\n     |          ^\n  72 |     assert.sameValue(x, 23);\n  73 |     // another statement\n  74 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-skipped.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-skipped.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-skipped.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   static #method([w = counter(), x = counter(), y = counter(), z = counter()]) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(w, null);\n  79 |     assert.sameValue(x, 0);\n  80 |     assert.sameValue(y, false); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-undef.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-undef.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-undef.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   static #method([x = 23]) ***REMOVED***\n     |          ^\n  76 |     assert.sameValue(x, 23);\n  77 |     callCount = callCount + 1;\n  78 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-complete.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-complete.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-complete.js: Unexpected character '#' (79:9)\n  77 | var callCount = 0;\n  78 | class C ***REMOVED***\n> 79 |   static #method([x]) ***REMOVED***\n     |          ^\n  80 |     assert.sameValue(x, undefined);\n  81 |     callCount = callCount + 1;\n  82 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-done.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-done.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-done.js: Unexpected character '#' (74:9)\n  72 | var callCount = 0;\n  73 | class C ***REMOVED***\n> 74 |   static #method([_, x]) ***REMOVED***\n     |          ^\n  75 |     assert.sameValue(x, undefined);\n  76 |     callCount = callCount + 1;\n  77 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-val.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-val.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-val.js: Unexpected character '#' (83:9)\n  81 | var callCount = 0;\n  82 | class C ***REMOVED***\n> 83 |   static #method([x, y, z]) ***REMOVED***\n     |          ^\n  84 |     assert.sameValue(x, 1);\n  85 |     assert.sameValue(y, 2);\n  86 |     assert.sameValue(z, 3); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-obj-id-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-obj-id-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-obj-id-init.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   static #method([***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 44, y: 55, z: 66 ***REMOVED***]) ***REMOVED***\n     |          ^\n  76 |     assert.sameValue(x, 44);\n  77 |     assert.sameValue(y, 55);\n  78 |     assert.sameValue(z, 66); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-obj-id.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-obj-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-obj-id.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   static #method([***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 44, y: 55, z: 66 ***REMOVED***]) ***REMOVED***\n     |          ^\n  76 |     assert.sameValue(x, 11);\n  77 |     assert.sameValue(y, 22);\n  78 |     assert.sameValue(z, 33); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-obj-prop-id-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-obj-prop-id-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-obj-prop-id-init.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   static #method([***REMOVED*** u: v, w: x, y: z ***REMOVED*** = ***REMOVED*** u: 444, w: 555, y: 666 ***REMOVED***]) ***REMOVED***\n     |          ^\n  76 |     assert.sameValue(v, 444);\n  77 |     assert.sameValue(x, 555);\n  78 |     assert.sameValue(z, 666); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-obj-prop-id.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-obj-prop-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-obj-prop-id.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   static #method([***REMOVED*** u: v, w: x, y: z ***REMOVED*** = ***REMOVED*** u: 444, w: 555, y: 666 ***REMOVED***]) ***REMOVED***\n     |          ^\n  76 |     assert.sameValue(v, 777);\n  77 |     assert.sameValue(x, 888);\n  78 |     assert.sameValue(z, 999); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-ary-elem.js: Unexpected character '#' (96:9)\n  94 | var callCount = 0;\n  95 | class C ***REMOVED***\n> 96 |   static #method([...[x, y, z]]) ***REMOVED***\n     |          ^\n  97 |     assert.sameValue(x, 3);\n  98 |     assert.sameValue(y, 4);\n  99 |     assert.sameValue(z, 5); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-ary-rest.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   static #method([...[...x]]) ***REMOVED***\n     |          ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.sameValue(x.length, 3);\n  80 |     assert.sameValue(x[0], 1); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-id-direct.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-id-direct.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-id-direct.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   static #method([...x]) ***REMOVED***\n     |          ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.compareArray(x, [1]);\n  80 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-id-elision.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-id-elision.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-id-elision.js: Unexpected character '#' (74:9)\n  72 | var callCount = 0;\n  73 | class C ***REMOVED***\n> 74 |   static #method([ , , ...x]) ***REMOVED***\n     |          ^\n  75 |     assert(Array.isArray(x));\n  76 |     assert.sameValue(x.length, 3);\n  77 |     assert.sameValue(x[0], 3); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-id-exhausted.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-id-exhausted.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-id-exhausted.js: Unexpected character '#' (74:9)\n  72 | var callCount = 0;\n  73 | class C ***REMOVED***\n> 74 |   static #method([, , ...x]) ***REMOVED***\n     |          ^\n  75 |     assert(Array.isArray(x));\n  76 |     assert.sameValue(x.length, 0);\n  77 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-id.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-id.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | class C ***REMOVED***\n> 71 |   static #method([...x]) ***REMOVED***\n     |          ^\n  72 |     assert(Array.isArray(x));\n  73 |     assert.sameValue(x.length, 3);\n  74 |     assert.sameValue(x[0], 1); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-obj-id.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   static #method([...***REMOVED*** length ***REMOVED***]) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(length, 3);\n  78 |     callCount = callCount + 1;\n  79 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-obj-prop-id.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   static #method([...***REMOVED*** 0: v, 1: w, 2: x, 3: y, length: z ***REMOVED***]) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(v, 7);\n  79 |     assert.sameValue(w, 8);\n  80 |     assert.sameValue(x, 9); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-init-iter-close.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-init-iter-close.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-init-iter-close.js: Unexpected character '#' (86:9)\n  84 | var callCount = 0;\n  85 | class C ***REMOVED***\n> 86 |   static #method([x] = iter) ***REMOVED***\n     |          ^\n  87 |     assert.sameValue(doneCallCount, 1);\n  88 |     callCount = callCount + 1;\n  89 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-init-iter-no-close.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-init-iter-no-close.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-init-iter-no-close.js: Unexpected character '#' (86:9)\n  84 | var callCount = 0;\n  85 | class C ***REMOVED***\n> 86 |   static #method([x] = iter) ***REMOVED***\n     |          ^\n  87 |     assert.sameValue(doneCallCount, 0);\n  88 |     callCount = callCount + 1;\n  89 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-name-iter-val.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-name-iter-val.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-name-iter-val.js: Unexpected character '#' (83:9)\n  81 | var callCount = 0;\n  82 | class C ***REMOVED***\n> 83 |   static #method([x, y, z] = [1, 2, 3]) ***REMOVED***\n     |          ^\n  84 |     assert.sameValue(x, 1);\n  85 |     assert.sameValue(y, 2);\n  86 |     assert.sameValue(z, 3); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elem-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elem-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elem-init.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   static #method([[x, y, z] = [4, 5, 6]] = []) ***REMOVED***\n     |          ^\n  76 |     assert.sameValue(x, 4);\n  77 |     assert.sameValue(y, 5);\n  78 |     assert.sameValue(z, 6); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elem-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elem-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elem-iter.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   static #method([[x, y, z] = [4, 5, 6]] = [[7, 8, 9]]) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(x, 7);\n  78 |     assert.sameValue(y, 8);\n  79 |     assert.sameValue(z, 9); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-empty-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-empty-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-empty-iter.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   static #method([[] = function() ***REMOVED*** initCount += 1; ***REMOVED***()] = [[23]]) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(initCount, 0);\n  79 |     callCount = callCount + 1;\n  80 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-rest-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-rest-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-rest-init.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   static #method([[...x] = values] = []) ***REMOVED***\n     |          ^\n  77 |     assert(Array.isArray(x));\n  78 |     assert.sameValue(x[0], 2);\n  79 |     assert.sameValue(x[1], 1); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-rest-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-rest-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-rest-iter.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | class C ***REMOVED***\n> 78 |   static #method([[...x] = function() ***REMOVED*** initCount += 1; ***REMOVED***()] = [values]) ***REMOVED***\n     |          ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.sameValue(x[0], 2);\n  81 |     assert.sameValue(x[1], 1); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-exhausted.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-exhausted.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-exhausted.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   static #method([x = 23] = []) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(x, 23);\n  78 |     callCount = callCount + 1;\n  79 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   static #method([arrow = () => ***REMOVED******REMOVED***] = []) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(arrow.name, 'arrow');\n  79 |     callCount = callCount + 1;\n  80 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-class.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-class.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   static #method([cls = class ***REMOVED******REMOVED***, xCls = class X ***REMOVED******REMOVED***, xCls2 = class ***REMOVED*** static name() ***REMOVED******REMOVED*** ***REMOVED***] = []) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(cls.name, 'cls');\n  79 |     assert.notSameValue(xCls.name, 'xCls');\n  80 |     assert.notSameValue(xCls2.name, 'xCls2'); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-cover.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-cover.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   static #method([cover = (function () ***REMOVED******REMOVED***), xCover = (0, function() ***REMOVED******REMOVED***)] = []) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(cover.name, 'cover');\n  79 |     assert.notSameValue(xCover.name, 'xCover');\n  80 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-fn.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-fn.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   static #method([fn = function () ***REMOVED******REMOVED***, xFn = function x() ***REMOVED******REMOVED***] = []) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(fn.name, 'fn');\n  79 |     assert.notSameValue(xFn.name, 'xFn');\n  80 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-hole.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-hole.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-hole.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | class C ***REMOVED***\n> 71 |   static #method([x = 23] = [,]) ***REMOVED***\n     |          ^\n  72 |     assert.sameValue(x, 23);\n  73 |     // another statement\n  74 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-skipped.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-skipped.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-skipped.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   static #method([w = counter(), x = counter(), y = counter(), z = counter()] = [null, 0, false, '']) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(w, null);\n  79 |     assert.sameValue(x, 0);\n  80 |     assert.sameValue(y, false); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-undef.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-undef.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-undef.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   static #method([x = 23] = [undefined]) ***REMOVED***\n     |          ^\n  76 |     assert.sameValue(x, 23);\n  77 |     callCount = callCount + 1;\n  78 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-complete.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-complete.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-complete.js: Unexpected character '#' (79:9)\n  77 | var callCount = 0;\n  78 | class C ***REMOVED***\n> 79 |   static #method([x] = []) ***REMOVED***\n     |          ^\n  80 |     assert.sameValue(x, undefined);\n  81 |     callCount = callCount + 1;\n  82 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-done.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-done.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-done.js: Unexpected character '#' (74:9)\n  72 | var callCount = 0;\n  73 | class C ***REMOVED***\n> 74 |   static #method([_, x] = []) ***REMOVED***\n     |          ^\n  75 |     assert.sameValue(x, undefined);\n  76 |     callCount = callCount + 1;\n  77 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-val.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-val.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-val.js: Unexpected character '#' (83:9)\n  81 | var callCount = 0;\n  82 | class C ***REMOVED***\n> 83 |   static #method([x, y, z] = [1, 2, 3]) ***REMOVED***\n     |          ^\n  84 |     assert.sameValue(x, 1);\n  85 |     assert.sameValue(y, 2);\n  86 |     assert.sameValue(z, 3); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-id-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-id-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-id-init.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   static #method([***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 44, y: 55, z: 66 ***REMOVED***] = []) ***REMOVED***\n     |          ^\n  76 |     assert.sameValue(x, 44);\n  77 |     assert.sameValue(y, 55);\n  78 |     assert.sameValue(z, 66); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-id.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-id.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   static #method([***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 44, y: 55, z: 66 ***REMOVED***] = [***REMOVED*** x: 11, y: 22, z: 33 ***REMOVED***]) ***REMOVED***\n     |          ^\n  76 |     assert.sameValue(x, 11);\n  77 |     assert.sameValue(y, 22);\n  78 |     assert.sameValue(z, 33); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-prop-id-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-prop-id-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-prop-id-init.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   static #method([***REMOVED*** u: v, w: x, y: z ***REMOVED*** = ***REMOVED*** u: 444, w: 555, y: 666 ***REMOVED***] = []) ***REMOVED***\n     |          ^\n  76 |     assert.sameValue(v, 444);\n  77 |     assert.sameValue(x, 555);\n  78 |     assert.sameValue(z, 666); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-prop-id.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-prop-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-prop-id.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   static #method([***REMOVED*** u: v, w: x, y: z ***REMOVED*** = ***REMOVED*** u: 444, w: 555, y: 666 ***REMOVED***] = [***REMOVED*** u: 777, w: 888, y: 999 ***REMOVED***]) ***REMOVED***\n     |          ^\n  76 |     assert.sameValue(v, 777);\n  77 |     assert.sameValue(x, 888);\n  78 |     assert.sameValue(z, 999); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-elem.js: Unexpected character '#' (96:9)\n  94 | var callCount = 0;\n  95 | class C ***REMOVED***\n> 96 |   static #method([...[x, y, z]] = [3, 4, 5]) ***REMOVED***\n     |          ^\n  97 |     assert.sameValue(x, 3);\n  98 |     assert.sameValue(y, 4);\n  99 |     assert.sameValue(z, 5); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-rest.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   static #method([...[...x]] = values) ***REMOVED***\n     |          ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.sameValue(x.length, 3);\n  80 |     assert.sameValue(x[0], 1); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-direct.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-direct.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-direct.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   static #method([...x] = [1]) ***REMOVED***\n     |          ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.compareArray(x, [1]);\n  80 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-elision.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-elision.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-elision.js: Unexpected character '#' (74:9)\n  72 | var callCount = 0;\n  73 | class C ***REMOVED***\n> 74 |   static #method([ , , ...x] = values) ***REMOVED***\n     |          ^\n  75 |     assert(Array.isArray(x));\n  76 |     assert.sameValue(x.length, 3);\n  77 |     assert.sameValue(x[0], 3); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-exhausted.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-exhausted.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-exhausted.js: Unexpected character '#' (74:9)\n  72 | var callCount = 0;\n  73 | class C ***REMOVED***\n> 74 |   static #method([, , ...x] = [1, 2]) ***REMOVED***\n     |          ^\n  75 |     assert(Array.isArray(x));\n  76 |     assert.sameValue(x.length, 0);\n  77 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | class C ***REMOVED***\n> 71 |   static #method([...x] = values) ***REMOVED***\n     |          ^\n  72 |     assert(Array.isArray(x));\n  73 |     assert.sameValue(x.length, 3);\n  74 |     assert.sameValue(x[0], 1); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-obj-id.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   static #method([...***REMOVED*** length ***REMOVED***] = [1, 2, 3]) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(length, 3);\n  78 |     callCount = callCount + 1;\n  79 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-obj-prop-id.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C ***REMOVED***\n> 77 |   static #method([...***REMOVED*** 0: v, 1: w, 2: x, 3: y, length: z ***REMOVED***] = [7, 8, 9]) ***REMOVED***\n     |          ^\n  78 |     assert.sameValue(v, 7);\n  79 |     assert.sameValue(w, 8);\n  80 |     assert.sameValue(x, 9); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-empty.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-empty.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-empty.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   static #method(***REMOVED******REMOVED*** = obj) ***REMOVED***\n     |          ^\n  76 |     assert.sameValue(accessCount, 0);\n  77 |     callCount = callCount + 1;\n  78 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-arrow.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-arrow.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   static #method(***REMOVED*** arrow = () => ***REMOVED******REMOVED*** ***REMOVED*** = ***REMOVED******REMOVED***) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(arrow.name, 'arrow');\n  78 |     callCount = callCount + 1;\n  79 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-class.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-class.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   static #method(***REMOVED*** cls = class ***REMOVED******REMOVED***, xCls = class X ***REMOVED******REMOVED***, xCls2 = class ***REMOVED*** static name() ***REMOVED******REMOVED*** ***REMOVED*** ***REMOVED*** = ***REMOVED******REMOVED***) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(cls.name, 'cls');\n  78 |     assert.notSameValue(xCls.name, 'xCls');\n  79 |     assert.notSameValue(xCls2.name, 'xCls2'); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-cover.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-cover.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   static #method(***REMOVED*** cover = (function () ***REMOVED******REMOVED***), xCover = (0, function() ***REMOVED******REMOVED***)  ***REMOVED*** = ***REMOVED******REMOVED***) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(cover.name, 'cover');\n  78 |     assert.notSameValue(xCover.name, 'xCover');\n  79 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-fn.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-fn.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   static #method(***REMOVED*** fn = function () ***REMOVED******REMOVED***, xFn = function x() ***REMOVED******REMOVED*** ***REMOVED*** = ***REMOVED******REMOVED***) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(fn.name, 'fn');\n  78 |     assert.notSameValue(xFn.name, 'xFn');\n  79 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-skipped.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-skipped.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-skipped.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   static #method(***REMOVED*** w = counter(), x = counter(), y = counter(), z = counter() ***REMOVED*** = ***REMOVED*** w: null, x: 0, y: false, z: '' ***REMOVED***) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(w, null);\n  78 |     assert.sameValue(x, 0);\n  79 |     assert.sameValue(y, false); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-trailing-comma.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-trailing-comma.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-trailing-comma.js: Unexpected character '#' (70:9)\n  68 | var callCount = 0;\n  69 | class C ***REMOVED***\n> 70 |   static #method(***REMOVED*** x, ***REMOVED*** = ***REMOVED*** x: 23 ***REMOVED***) ***REMOVED***\n     |          ^\n  71 |     assert.sameValue(x, 23);\n  72 |     callCount = callCount + 1;\n  73 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary-init.js: Unexpected character '#' (73:9)\n  71 | var callCount = 0;\n  72 | class C ***REMOVED***\n> 73 |   static #method(***REMOVED*** w: [x, y, z] = [4, 5, 6] ***REMOVED*** = ***REMOVED******REMOVED***) ***REMOVED***\n     |          ^\n  74 |     assert.sameValue(x, 4);\n  75 |     assert.sameValue(y, 5);\n  76 |     assert.sameValue(z, 6); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary-trailing-comma.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary-trailing-comma.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary-trailing-comma.js: Unexpected character '#' (70:9)\n  68 | var callCount = 0;\n  69 | class C ***REMOVED***\n> 70 |   static #method(***REMOVED*** x: [y], ***REMOVED*** = ***REMOVED*** x: [45] ***REMOVED***) ***REMOVED***\n     |          ^\n  71 |     assert.sameValue(y,45);\n  72 |     callCount = callCount + 1;\n  73 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | class C ***REMOVED***\n> 71 |   static #method(***REMOVED*** w: [x, y, z] = [4, 5, 6] ***REMOVED*** = ***REMOVED*** w: [7, undefined, ] ***REMOVED***) ***REMOVED***\n     |          ^\n  72 |     assert.sameValue(x, 7);\n  73 |     assert.sameValue(y, undefined);\n  74 |     assert.sameValue(z, undefined); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-init-skipped.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-init-skipped.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-init-skipped.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   static #method(***REMOVED*** s: t = counter(), u: v = counter(), w: x = counter(), y: z = counter() ***REMOVED*** = ***REMOVED*** s: null, u: 0, w: false, y: '' ***REMOVED***) ***REMOVED***\n     |          ^\n  76 |     assert.sameValue(t, null);\n  77 |     assert.sameValue(v, 0);\n  78 |     assert.sameValue(x, false); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-init.js: Unexpected character '#' (70:9)\n  68 | var callCount = 0;\n  69 | class C ***REMOVED***\n> 70 |   static #method(***REMOVED*** x: y = 33 ***REMOVED*** = ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |          ^\n  71 |     assert.sameValue(y, 33);\n  72 |     assert.throws(ReferenceError, function() ***REMOVED***\n  73 |       x; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-trailing-comma.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-trailing-comma.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-trailing-comma.js: Unexpected character '#' (70:9)\n  68 | var callCount = 0;\n  69 | class C ***REMOVED***\n> 70 |   static #method(***REMOVED*** x: y, ***REMOVED*** = ***REMOVED*** x: 23 ***REMOVED***) ***REMOVED***\n     |          ^\n  71 |     assert.sameValue(y, 23);\n  72 | \n  73 |     assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id.js: Unexpected character '#' (70:9)\n  68 | var callCount = 0;\n  69 | class C ***REMOVED***\n> 70 |   static #method(***REMOVED*** x: y ***REMOVED*** = ***REMOVED*** x: 23 ***REMOVED***) ***REMOVED***\n     |          ^\n  71 |     assert.sameValue(y, 23);\n  72 |     assert.throws(ReferenceError, function() ***REMOVED***\n  73 |       x; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-obj-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-obj-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-obj-init.js: Unexpected character '#' (73:9)\n  71 | var callCount = 0;\n  72 | class C ***REMOVED***\n> 73 |   static #method(***REMOVED*** w: ***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 4, y: 5, z: 6 ***REMOVED*** ***REMOVED*** = ***REMOVED*** w: undefined ***REMOVED***) ***REMOVED***\n     |          ^\n  74 |     assert.sameValue(x, 4);\n  75 |     assert.sameValue(y, 5);\n  76 |     assert.sameValue(z, 6); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-obj.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-obj.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-obj.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | class C ***REMOVED***\n> 71 |   static #method(***REMOVED*** w: ***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 4, y: 5, z: 6 ***REMOVED*** ***REMOVED*** = ***REMOVED*** w: ***REMOVED*** x: undefined, z: 7 ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |          ^\n  72 |     assert.sameValue(x, undefined);\n  73 |     assert.sameValue(y, undefined);\n  74 |     assert.sameValue(z, 7); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-rest-getter.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-rest-getter.js: Unexpected character '#' (65:9)\n  63 | var callCount = 0;\n  64 | class C ***REMOVED***\n> 65 |   static #method(***REMOVED***...x***REMOVED*** = ***REMOVED*** get v() ***REMOVED*** count++; return 2; ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |          ^\n  66 |     assert.sameValue(count, 1);\n  67 | \n  68 |     verifyProperty(x, \"v\", ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js: Unexpected character '#' (66:9)\n  64 | var callCount = 0;\n  65 | class C ***REMOVED***\n> 66 |   static #method(***REMOVED***...rest***REMOVED*** = o) ***REMOVED***\n     |          ^\n  67 |     assert.sameValue(rest.x, undefined);\n  68 | \n  69 |     verifyProperty(rest, \"a\", ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-rest-val-obj.js: Unexpected character '#' (64:9)\n  62 | var callCount = 0;\n  63 | class C ***REMOVED***\n> 64 |   static #method(***REMOVED***a, b, ...rest***REMOVED*** = ***REMOVED***x: 1, y: 2, a: 5, b: 3***REMOVED***) ***REMOVED***\n     |          ^\n  65 |     assert.sameValue(rest.a, undefined);\n  66 |     assert.sameValue(rest.b, undefined);\n  67 |  <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-empty.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-empty.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-empty.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   static #method(***REMOVED******REMOVED***) ***REMOVED***\n     |          ^\n  76 |     assert.sameValue(accessCount, 0);\n  77 |     callCount = callCount + 1;\n  78 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-arrow.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-arrow.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   static #method(***REMOVED*** arrow = () => ***REMOVED******REMOVED*** ***REMOVED***) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(arrow.name, 'arrow');\n  78 |     callCount = callCount + 1;\n  79 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-class.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-class.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   static #method(***REMOVED*** cls = class ***REMOVED******REMOVED***, xCls = class X ***REMOVED******REMOVED***, xCls2 = class ***REMOVED*** static name() ***REMOVED******REMOVED*** ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(cls.name, 'cls');\n  78 |     assert.notSameValue(xCls.name, 'xCls');\n  79 |     assert.notSameValue(xCls2.name, 'xCls2'); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-cover.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-cover.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   static #method(***REMOVED*** cover = (function () ***REMOVED******REMOVED***), xCover = (0, function() ***REMOVED******REMOVED***)  ***REMOVED***) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(cover.name, 'cover');\n  78 |     assert.notSameValue(xCover.name, 'xCover');\n  79 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-fn.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-fn.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   static #method(***REMOVED*** fn = function () ***REMOVED******REMOVED***, xFn = function x() ***REMOVED******REMOVED*** ***REMOVED***) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(fn.name, 'fn');\n  78 |     assert.notSameValue(xFn.name, 'xFn');\n  79 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-skipped.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-skipped.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-skipped.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C ***REMOVED***\n> 76 |   static #method(***REMOVED*** w = counter(), x = counter(), y = counter(), z = counter() ***REMOVED***) ***REMOVED***\n     |          ^\n  77 |     assert.sameValue(w, null);\n  78 |     assert.sameValue(x, 0);\n  79 |     assert.sameValue(y, false); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-trailing-comma.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-trailing-comma.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-trailing-comma.js: Unexpected character '#' (70:9)\n  68 | var callCount = 0;\n  69 | class C ***REMOVED***\n> 70 |   static #method(***REMOVED*** x, ***REMOVED***) ***REMOVED***\n     |          ^\n  71 |     assert.sameValue(x, 23);\n  72 |     callCount = callCount + 1;\n  73 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-ary-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-ary-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-ary-init.js: Unexpected character '#' (73:9)\n  71 | var callCount = 0;\n  72 | class C ***REMOVED***\n> 73 |   static #method(***REMOVED*** w: [x, y, z] = [4, 5, 6] ***REMOVED***) ***REMOVED***\n     |          ^\n  74 |     assert.sameValue(x, 4);\n  75 |     assert.sameValue(y, 5);\n  76 |     assert.sameValue(z, 6); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-ary-trailing-comma.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-ary-trailing-comma.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-ary-trailing-comma.js: Unexpected character '#' (70:9)\n  68 | var callCount = 0;\n  69 | class C ***REMOVED***\n> 70 |   static #method(***REMOVED*** x: [y], ***REMOVED***) ***REMOVED***\n     |          ^\n  71 |     assert.sameValue(y,45);\n  72 |     callCount = callCount + 1;\n  73 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-ary.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-ary.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-ary.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | class C ***REMOVED***\n> 71 |   static #method(***REMOVED*** w: [x, y, z] = [4, 5, 6] ***REMOVED***) ***REMOVED***\n     |          ^\n  72 |     assert.sameValue(x, 7);\n  73 |     assert.sameValue(y, undefined);\n  74 |     assert.sameValue(z, undefined); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-id-init-skipped.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-id-init-skipped.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-id-init-skipped.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C ***REMOVED***\n> 75 |   static #method(***REMOVED*** s: t = counter(), u: v = counter(), w: x = counter(), y: z = counter() ***REMOVED***) ***REMOVED***\n     |          ^\n  76 |     assert.sameValue(t, null);\n  77 |     assert.sameValue(v, 0);\n  78 |     assert.sameValue(x, false); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-id-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-id-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-id-init.js: Unexpected character '#' (70:9)\n  68 | var callCount = 0;\n  69 | class C ***REMOVED***\n> 70 |   static #method(***REMOVED*** x: y = 33 ***REMOVED***) ***REMOVED***\n     |          ^\n  71 |     assert.sameValue(y, 33);\n  72 |     assert.throws(ReferenceError, function() ***REMOVED***\n  73 |       x; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-id-trailing-comma.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-id-trailing-comma.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-id-trailing-comma.js: Unexpected character '#' (70:9)\n  68 | var callCount = 0;\n  69 | class C ***REMOVED***\n> 70 |   static #method(***REMOVED*** x: y, ***REMOVED***) ***REMOVED***\n     |          ^\n  71 |     assert.sameValue(y, 23);\n  72 | \n  73 |     assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-id.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-id.js: Unexpected character '#' (70:9)\n  68 | var callCount = 0;\n  69 | class C ***REMOVED***\n> 70 |   static #method(***REMOVED*** x: y ***REMOVED***) ***REMOVED***\n     |          ^\n  71 |     assert.sameValue(y, 23);\n  72 |     assert.throws(ReferenceError, function() ***REMOVED***\n  73 |       x; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-obj-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-obj-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-obj-init.js: Unexpected character '#' (73:9)\n  71 | var callCount = 0;\n  72 | class C ***REMOVED***\n> 73 |   static #method(***REMOVED*** w: ***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 4, y: 5, z: 6 ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |          ^\n  74 |     assert.sameValue(x, 4);\n  75 |     assert.sameValue(y, 5);\n  76 |     assert.sameValue(z, 6); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-obj.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-obj.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-obj.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | class C ***REMOVED***\n> 71 |   static #method(***REMOVED*** w: ***REMOVED*** x, y, z ***REMOVED*** = ***REMOVED*** x: 4, y: 5, z: 6 ***REMOVED*** ***REMOVED***) ***REMOVED***\n     |          ^\n  72 |     assert.sameValue(x, undefined);\n  73 |     assert.sameValue(y, undefined);\n  74 |     assert.sameValue(z, 7); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-rest-getter.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-rest-getter.js: Unexpected character '#' (65:9)\n  63 | var callCount = 0;\n  64 | class C ***REMOVED***\n> 65 |   static #method(***REMOVED***...x***REMOVED***) ***REMOVED***\n     |          ^\n  66 |     assert.sameValue(count, 1);\n  67 | \n  68 |     verifyProperty(x, \"v\", ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-rest-skip-non-enumerable.js: Unexpected character '#' (66:9)\n  64 | var callCount = 0;\n  65 | class C ***REMOVED***\n> 66 |   static #method(***REMOVED***...rest***REMOVED***) ***REMOVED***\n     |          ^\n  67 |     assert.sameValue(rest.x, undefined);\n  68 | \n  69 |     verifyProperty(rest, \"a\", ***REMOVED*** <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-rest-val-obj.js: Unexpected character '#' (64:9)\n  62 | var callCount = 0;\n  63 | class C ***REMOVED***\n> 64 |   static #method(***REMOVED***a, b, ...rest***REMOVED***) ***REMOVED***\n     |          ^\n  65 |     assert.sameValue(rest.a, undefined);\n  66 |     assert.sameValue(rest.b, undefined);\n  67 |  <at omitted>",
  "test/language/statements/class/elements/abrupt-completition-on-field-initializer.js-strict:true": "test/language/statements/class/elements/abrupt-completition-on-field-initializer.js: SyntaxError: test/language/statements/class/elements/abrupt-completition-on-field-initializer.js: Unexpected token (39:4)\n  37 | \n  38 | class C ***REMOVED***\n> 39 |   a = abruptCompletion();\n     |     ^\n  40 |   b = sideEffect();\n  41 | ***REMOVED***\n  42 |  <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-computed-names.js-strict:true": "test/language/statements/class/elements/after-same-line-method-computed-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-computed-names.js: Unexpected token (28:25)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   m() ***REMOVED*** return 42; ***REMOVED*** [x] = 42; [10] = \"meep\"; [\"not initialized\"];\n     |                          ^\n  29 |   \n  30 | ***REMOVED***\n  31 |  <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-computed-symbol-names.js-strict:true": "test/language/statements/class/elements/after-same-line-method-computed-symbol-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-computed-symbol-names.js: Unexpected token (29:30)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   m() ***REMOVED*** return 42; ***REMOVED*** [x]; [y] = 42;\n     |                               ^\n  30 |   \n  31 | ***REMOVED***\n  32 |  <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-literal-names-asi.js-strict:true": "test/language/statements/class/elements/after-same-line-method-literal-names-asi.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-literal-names-asi.js: Unexpected token (27:4)\n  25 | class C ***REMOVED***\n  26 |   m() ***REMOVED*** return 42; ***REMOVED*** a\n> 27 |   b = 42;;\n     |     ^\n  28 |   \n  29 | ***REMOVED***\n  30 |  <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-literal-names.js-strict:true": "test/language/statements/class/elements/after-same-line-method-literal-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-literal-names.js: Unexpected token (28:26)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   m() ***REMOVED*** return 42; ***REMOVED*** a; b = 42;\n     |                           ^\n  29 |   c = fn;\n  30 |   \n  31 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-private-method-getter-usage.js-strict:true": "test/language/statements/class/elements/after-same-line-method-private-method-getter-usage.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-private-method-getter-usage.js: Unexpected character '#' (27:25)\n  25 | \n  26 | class C ***REMOVED***\n> 27 |   m() ***REMOVED*** return 42; ***REMOVED*** get #m() ***REMOVED*** return 'test262'; ***REMOVED***;\n     |                          ^\n  28 |   method() ***REMOVED***\n  29 |     return this.#m;\n  30 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-private-method-usage.js-strict:true": "test/language/statements/class/elements/after-same-line-method-private-method-usage.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-private-method-usage.js: Unexpected character '#' (27:21)\n  25 | \n  26 | class C ***REMOVED***\n> 27 |   m() ***REMOVED*** return 42; ***REMOVED*** #m() ***REMOVED*** return 'test262'; ***REMOVED***;\n     |                      ^\n  28 |   method() ***REMOVED***\n  29 |     return this.#m();\n  30 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-rs-field-identifier-initializer.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-field-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-field-identifier-initializer.js: Unexpected token (62:23)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   m() ***REMOVED*** return 42; ***REMOVED*** $ = 1; _ = 1; \\u***REMOVED***6F***REMOVED*** = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;\n     |                        ^\n  63 |   \n  64 | ***REMOVED***\n  65 |  <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-rs-field-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-field-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-field-identifier.js: Missing class properties transform.\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   m() ***REMOVED*** return 42; ***REMOVED*** $; _; \\u***REMOVED***6F***REMOVED***; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J;\n     |                      ^\n  63 |   \n  64 | ***REMOVED***\n  65 |  <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:34)\n  62 | \n  63 | class C ***REMOVED***\n> 64 |   m() ***REMOVED*** return 42; ***REMOVED*** static async #$(value) ***REMOVED***\n     |                                   ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:34)\n  62 | \n  63 | class C ***REMOVED***\n> 64 |   m() ***REMOVED*** return 42; ***REMOVED*** static async #$(value) ***REMOVED***\n     |                                   ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:28)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   m() ***REMOVED*** return 42; ***REMOVED*** static #$(value) ***REMOVED***\n     |                             ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-rs-static-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:28)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   m() ***REMOVED*** return 42; ***REMOVED*** static #$(value) ***REMOVED***\n     |                             ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:28)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   m() ***REMOVED*** return 42; ***REMOVED*** static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                             ^\n  62 |   static $(value) ***REMOVED***\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:28)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   m() ***REMOVED*** return 42; ***REMOVED*** static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                             ^\n  62 |   static $(value) ***REMOVED***\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:28)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   m() ***REMOVED*** return 42; ***REMOVED*** static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                             ^\n  62 |   static $(value) ***REMOVED***\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:28)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   m() ***REMOVED*** return 42; ***REMOVED*** static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                             ^\n  62 |   static $() ***REMOVED***\n  63 |     return C.#$;\n  64 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:28)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   m() ***REMOVED*** return 42; ***REMOVED*** static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                             ^\n  62 |   static $() ***REMOVED***\n  63 |     return this.#$;\n  64 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:28)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   m() ***REMOVED*** return 42; ***REMOVED*** static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;\n     |                             ^\n  62 |   static $() ***REMOVED***\n  63 |     return this.#$;\n  64 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier.js: Unexpected character '#' (61:28)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   m() ***REMOVED*** return 42; ***REMOVED*** static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                             ^\n  62 |   static $(value) ***REMOVED***\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-static-private-fields.js-strict:true": "test/language/statements/class/elements/after-same-line-method-static-private-fields.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-static-private-fields.js: Unexpected character '#' (29:28)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   m() ***REMOVED*** return 42; ***REMOVED*** static #x; static #y;\n     |                             ^\n  30 |   static x() ***REMOVED***\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-static-private-methods-with-fields.js-strict:true": "test/language/statements/class/elements/after-same-line-method-static-private-methods-with-fields.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-static-private-methods-with-fields.js: Unexpected character '#' (29:28)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   m() ***REMOVED*** return 42; ***REMOVED*** static #xVal; static #yVal;\n     |                             ^\n  30 |   static #x(value) ***REMOVED***\n  31 |     this.#xVal = value;\n  32 |     return this.#xVal; <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-static-private-methods.js-strict:true": "test/language/statements/class/elements/after-same-line-method-static-private-methods.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-static-private-methods.js: Unexpected character '#' (30:9)\n  28 | class C ***REMOVED***\n  29 |   m() ***REMOVED*** return 42; ***REMOVED*** ;\n> 30 |   static #x(value) ***REMOVED***\n     |          ^\n  31 |     return value / 2;\n  32 |   ***REMOVED***\n  33 |   static #y(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-string-literal-names.js-strict:true": "test/language/statements/class/elements/after-same-line-method-string-literal-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-string-literal-names.js: Unexpected token (26:35)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   m() ***REMOVED*** return 42; ***REMOVED*** 'a'; \"b\"; 'c' = 39;\n     |                                    ^\n  27 |   \"d\" = 42;\n  28 |   \n  29 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-computed-names.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-computed-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-computed-names.js: Unexpected token (28:32)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   static m() ***REMOVED*** return 42; ***REMOVED*** [x] = 42; [10] = \"meep\"; [\"not initialized\"];\n     |                                 ^\n  29 |   \n  30 | ***REMOVED***\n  31 |  <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-computed-symbol-names.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-computed-symbol-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-computed-symbol-names.js: Unexpected token (29:37)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   static m() ***REMOVED*** return 42; ***REMOVED*** [x]; [y] = 42;\n     |                                      ^\n  30 |   \n  31 | ***REMOVED***\n  32 |  <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-literal-names-asi.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-literal-names-asi.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-literal-names-asi.js: Unexpected token (27:4)\n  25 | class C ***REMOVED***\n  26 |   static m() ***REMOVED*** return 42; ***REMOVED*** a\n> 27 |   b = 42;;\n     |     ^\n  28 |   \n  29 | ***REMOVED***\n  30 |  <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-literal-names.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-literal-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-literal-names.js: Unexpected token (28:33)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   static m() ***REMOVED*** return 42; ***REMOVED*** a; b = 42;\n     |                                  ^\n  29 |   c = fn;\n  30 |   \n  31 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-private-method-getter-usage.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-private-method-getter-usage.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-private-method-getter-usage.js: Unexpected character '#' (27:32)\n  25 | \n  26 | class C ***REMOVED***\n> 27 |   static m() ***REMOVED*** return 42; ***REMOVED*** get #m() ***REMOVED*** return 'test262'; ***REMOVED***;\n     |                                 ^\n  28 |   method() ***REMOVED***\n  29 |     return this.#m;\n  30 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-private-method-usage.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-private-method-usage.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-private-method-usage.js: Unexpected character '#' (27:28)\n  25 | \n  26 | class C ***REMOVED***\n> 27 |   static m() ***REMOVED*** return 42; ***REMOVED*** #m() ***REMOVED*** return 'test262'; ***REMOVED***;\n     |                             ^\n  28 |   method() ***REMOVED***\n  29 |     return this.#m();\n  30 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-rs-field-identifier-initializer.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-field-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-field-identifier-initializer.js: Unexpected token (62:30)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   static m() ***REMOVED*** return 42; ***REMOVED*** $ = 1; _ = 1; \\u***REMOVED***6F***REMOVED*** = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;\n     |                               ^\n  63 |   \n  64 | ***REMOVED***\n  65 |  <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-rs-field-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-field-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-field-identifier.js: Missing class properties transform.\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   static m() ***REMOVED*** return 42; ***REMOVED*** $; _; \\u***REMOVED***6F***REMOVED***; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J;\n     |                             ^\n  63 |   \n  64 | ***REMOVED***\n  65 |  <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:41)\n  62 | \n  63 | class C ***REMOVED***\n> 64 |   static m() ***REMOVED*** return 42; ***REMOVED*** static async #$(value) ***REMOVED***\n     |                                          ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:41)\n  62 | \n  63 | class C ***REMOVED***\n> 64 |   static m() ***REMOVED*** return 42; ***REMOVED*** static async #$(value) ***REMOVED***\n     |                                          ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:35)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static m() ***REMOVED*** return 42; ***REMOVED*** static #$(value) ***REMOVED***\n     |                                    ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:35)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static m() ***REMOVED*** return 42; ***REMOVED*** static #$(value) ***REMOVED***\n     |                                    ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:35)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static m() ***REMOVED*** return 42; ***REMOVED*** static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                                    ^\n  62 |   static $(value) ***REMOVED***\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:35)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static m() ***REMOVED*** return 42; ***REMOVED*** static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                                    ^\n  62 |   static $(value) ***REMOVED***\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:35)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static m() ***REMOVED*** return 42; ***REMOVED*** static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                                    ^\n  62 |   static $(value) ***REMOVED***\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:35)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static m() ***REMOVED*** return 42; ***REMOVED*** static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                                    ^\n  62 |   static $() ***REMOVED***\n  63 |     return C.#$;\n  64 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:35)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static m() ***REMOVED*** return 42; ***REMOVED*** static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                                    ^\n  62 |   static $() ***REMOVED***\n  63 |     return this.#$;\n  64 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:35)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static m() ***REMOVED*** return 42; ***REMOVED*** static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;\n     |                                    ^\n  62 |   static $() ***REMOVED***\n  63 |     return this.#$;\n  64 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier.js: Unexpected character '#' (61:35)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static m() ***REMOVED*** return 42; ***REMOVED*** static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                                    ^\n  62 |   static $(value) ***REMOVED***\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-static-private-fields.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-static-private-fields.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-static-private-fields.js: Unexpected character '#' (29:35)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   static m() ***REMOVED*** return 42; ***REMOVED*** static #x; static #y;\n     |                                    ^\n  30 |   static x() ***REMOVED***\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-static-private-methods-with-fields.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-static-private-methods-with-fields.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-static-private-methods-with-fields.js: Unexpected character '#' (29:35)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   static m() ***REMOVED*** return 42; ***REMOVED*** static #xVal; static #yVal;\n     |                                    ^\n  30 |   static #x(value) ***REMOVED***\n  31 |     this.#xVal = value;\n  32 |     return this.#xVal; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-static-private-methods.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-static-private-methods.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-static-private-methods.js: Unexpected character '#' (30:9)\n  28 | class C ***REMOVED***\n  29 |   static m() ***REMOVED*** return 42; ***REMOVED*** ;\n> 30 |   static #x(value) ***REMOVED***\n     |          ^\n  31 |     return value / 2;\n  32 |   ***REMOVED***\n  33 |   static #y(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-string-literal-names.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-string-literal-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-string-literal-names.js: Unexpected token (26:42)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   static m() ***REMOVED*** return 42; ***REMOVED*** 'a'; \"b\"; 'c' = 39;\n     |                                           ^\n  27 |   \"d\" = 42;\n  28 |   \n  29 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-contains-superproperty-1.js-strict:true": "test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-contains-superproperty-1.js: SyntaxError: test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-contains-superproperty-1.js: Unexpected token (30:4)\n  28 | class A ***REMOVED******REMOVED***\n  29 | class C extends A ***REMOVED***\n> 30 |   x = eval('executed = true; () => super.x;');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | new C().x(); <at omitted>",
  "test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-contains-superproperty-2.js-strict:true": "test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-contains-superproperty-2.js: SyntaxError: test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-contains-superproperty-2.js: Unexpected token (27:4)\n  25 | class A ***REMOVED******REMOVED***\n  26 | class C extends A ***REMOVED***\n> 27 |   x = eval('executed = true; () => super[\"x\"];');\n     |     ^\n  28 | ***REMOVED***\n  29 | \n  30 | new C().x(); <at omitted>",
  "test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall-1.js-strict:true": "test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall-1.js: SyntaxError: test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall-1.js: Unexpected token (30:4)\n  28 | class A ***REMOVED******REMOVED***\n  29 | class C extends A ***REMOVED***\n> 30 |   x = eval('executed = true; () => super()[\"x\"];');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall-2.js-strict:true": "test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall-2.js: SyntaxError: test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall-2.js: Unexpected token (23:4)\n  21 | class A ***REMOVED******REMOVED***\n  22 | class C extends A ***REMOVED***\n> 23 |   x = eval('executed = true; () => super().x;');\n     |     ^\n  24 | ***REMOVED***\n  25 | \n  26 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall.js-strict:true": "test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall.js: SyntaxError: test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall.js: Unexpected token (30:4)\n  28 | class A ***REMOVED******REMOVED***\n  29 | class C extends A ***REMOVED***\n> 30 |   x = eval('executed = true; () => super();');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-contains-superproperty-1.js-strict:true": "test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-contains-superproperty-1.js: SyntaxError: test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-contains-superproperty-1.js: Unexpected token (29:4)\n  27 | class A ***REMOVED******REMOVED***\n  28 | class C extends A ***REMOVED***\n> 29 |   x = (0, eval)('() => super.x;');\n     |     ^\n  30 | ***REMOVED***\n  31 | \n  32 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-contains-superproperty-2.js-strict:true": "test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-contains-superproperty-2.js: SyntaxError: test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-contains-superproperty-2.js: Unexpected token (26:4)\n  24 | class A ***REMOVED******REMOVED***\n  25 | class C extends A ***REMOVED***\n> 26 |   x = (0, eval)('() => super[\"x\"];');\n     |     ^\n  27 | ***REMOVED***\n  28 | \n  29 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall-1.js-strict:true": "test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall-1.js: SyntaxError: test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall-1.js: Unexpected token (29:4)\n  27 | class A ***REMOVED******REMOVED***\n  28 | class C extends A ***REMOVED***\n> 29 |   x = (0, eval)('() => super()[\"x\"];');\n     |     ^\n  30 | ***REMOVED***\n  31 | \n  32 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall-2.js-strict:true": "test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall-2.js: SyntaxError: test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall-2.js: Unexpected token (22:4)\n  20 | class A ***REMOVED******REMOVED***\n  21 | class C extends A ***REMOVED***\n> 22 |   x = (0, eval)('() => super().x;');\n     |     ^\n  23 | ***REMOVED***\n  24 | \n  25 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall.js-strict:true": "test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall.js: SyntaxError: test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall.js: Unexpected token (29:4)\n  27 | class A ***REMOVED******REMOVED***\n  28 | class C extends A ***REMOVED***\n> 29 |   x = (0, eval)('() => super();');\n     |     ^\n  30 | ***REMOVED***\n  31 | \n  32 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/arrow-body-direct-eval-err-contains-arguments.js-strict:true": "test/language/statements/class/elements/arrow-body-direct-eval-err-contains-arguments.js: SyntaxError: test/language/statements/class/elements/arrow-body-direct-eval-err-contains-arguments.js: Unexpected token (30:4)\n  28 | var executed = false;\n  29 | class C ***REMOVED***\n> 30 |   x = eval('executed = true; () => arguments;');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/arrow-body-direct-eval-err-contains-newtarget.js-strict:true": "test/language/statements/class/elements/arrow-body-direct-eval-err-contains-newtarget.js: SyntaxError: test/language/statements/class/elements/arrow-body-direct-eval-err-contains-newtarget.js: Unexpected token (29:4)\n  27 | var executed = false;\n  28 | class C ***REMOVED***\n> 29 |   x = eval('executed = true; () => new.target;');\n     |     ^\n  30 | ***REMOVED***\n  31 | \n  32 | var c = new C(); <at omitted>",
  "test/language/statements/class/elements/arrow-body-indirect-eval-err-contains-newtarget.js-strict:true": "test/language/statements/class/elements/arrow-body-indirect-eval-err-contains-newtarget.js: SyntaxError: test/language/statements/class/elements/arrow-body-indirect-eval-err-contains-newtarget.js: Unexpected token (28:4)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   x = (0, eval)('() => new.target;');\n     |     ^\n  29 | ***REMOVED***\n  30 | \n  31 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/class-field-is-observable-by-proxy.js-strict:true": "test/language/statements/class/elements/class-field-is-observable-by-proxy.js: SyntaxError: test/language/statements/class/elements/class-field-is-observable-by-proxy.js: Unexpected token (39:4)\n  37 | \n  38 | class Test extends ProxyBase ***REMOVED***\n> 39 |   f = 3;\n     |     ^\n  40 |   g = \"Test262\";\n  41 | ***REMOVED***\n  42 |  <at omitted>",
  "test/language/statements/class/elements/class-field-on-frozen-objects.js-strict:true": "test/language/statements/class/elements/class-field-on-frozen-objects.js: SyntaxError: test/language/statements/class/elements/class-field-on-frozen-objects.js: Unexpected token (22:4)\n  20 | \n  21 | class Test ***REMOVED***\n> 22 |   f = Object.freeze(this);\n     |     ^\n  23 |   g = \"Test262\";\n  24 | ***REMOVED***\n  25 |  <at omitted>",
  "test/language/statements/class/elements/computed-name-toprimitive-symbol.js-strict:true": "test/language/statements/class/elements/computed-name-toprimitive-symbol.js: SyntaxError: test/language/statements/class/elements/computed-name-toprimitive-symbol.js: Unexpected token (69:9)\n  67 | \n  68 | class C ***REMOVED***\n> 69 |   [obj1] = 42;\n     |          ^\n  70 |   [obj2] = 43;\n  71 |   [obj3] = 44;\n  72 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/computed-name-toprimitive.js-strict:true": "test/language/statements/class/elements/computed-name-toprimitive.js: SyntaxError: test/language/statements/class/elements/computed-name-toprimitive.js: Unexpected token (66:9)\n  64 | \n  65 | class C ***REMOVED***\n> 66 |   [obj1] = 42;\n     |          ^\n  67 |   [obj2] = 43;\n  68 |   [obj3] = 44;\n  69 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/computed-property-abrupt-completition.js-strict:true": "test/language/statements/class/elements/computed-property-abrupt-completition.js: SyntaxError: test/language/statements/class/elements/computed-property-abrupt-completition.js: Missing class properties transform.\n  30 | assert.throws(Test262Error, function() ***REMOVED***\n  31 |   class C ***REMOVED***\n> 32 |     [abruptCompletion()];\n     |     ^\n  33 |     [neverExecuted = true];\n  34 |   ***REMOVED***\n  35 | ***REMOVED***, 'computed property should have abrupt completion'); <at omitted>",
  "test/language/statements/class/elements/ctor-called-after-fields-init.js-strict:true": "test/language/statements/class/elements/ctor-called-after-fields-init.js: SyntaxError: test/language/statements/class/elements/ctor-called-after-fields-init.js: Unexpected token (29:6)\n  27 |     ctor = this.foo;\n  28 |   ***REMOVED***\n> 29 |   foo = 42;\n     |       ^\n  30 | ***REMOVED***\n  31 | \n  32 | var c = new C(); <at omitted>",
  "test/language/statements/class/elements/derived-cls-direct-eval-contains-superproperty-1.js-strict:true": "test/language/statements/class/elements/derived-cls-direct-eval-contains-superproperty-1.js: SyntaxError: test/language/statements/class/elements/derived-cls-direct-eval-contains-superproperty-1.js: Unexpected token (30:4)\n  28 | class A ***REMOVED******REMOVED***\n  29 | class C extends A ***REMOVED***\n> 30 |   x = eval('executed = true; super.x;');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | new C(); <at omitted>",
  "test/language/statements/class/elements/derived-cls-direct-eval-contains-superproperty-2.js-strict:true": "test/language/statements/class/elements/derived-cls-direct-eval-contains-superproperty-2.js: SyntaxError: test/language/statements/class/elements/derived-cls-direct-eval-contains-superproperty-2.js: Unexpected token (27:4)\n  25 | class A ***REMOVED******REMOVED***\n  26 | class C extends A ***REMOVED***\n> 27 |   x = eval('executed = true; super[\"x\"];');\n     |     ^\n  28 | ***REMOVED***\n  29 | \n  30 | new C(); <at omitted>",
  "test/language/statements/class/elements/derived-cls-direct-eval-err-contains-supercall-1.js-strict:true": "test/language/statements/class/elements/derived-cls-direct-eval-err-contains-supercall-1.js: SyntaxError: test/language/statements/class/elements/derived-cls-direct-eval-err-contains-supercall-1.js: Unexpected token (30:4)\n  28 | class A ***REMOVED******REMOVED***\n  29 | class C extends A ***REMOVED***\n> 30 |   x = eval('executed = true; super()[\"x\"];');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/derived-cls-direct-eval-err-contains-supercall-2.js-strict:true": "test/language/statements/class/elements/derived-cls-direct-eval-err-contains-supercall-2.js: SyntaxError: test/language/statements/class/elements/derived-cls-direct-eval-err-contains-supercall-2.js: Unexpected token (23:4)\n  21 | class A ***REMOVED******REMOVED***\n  22 | class C extends A ***REMOVED***\n> 23 |   x = eval('executed = true; super().x;');\n     |     ^\n  24 | ***REMOVED***\n  25 | \n  26 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/derived-cls-direct-eval-err-contains-supercall.js-strict:true": "test/language/statements/class/elements/derived-cls-direct-eval-err-contains-supercall.js: SyntaxError: test/language/statements/class/elements/derived-cls-direct-eval-err-contains-supercall.js: Unexpected token (30:4)\n  28 | class A ***REMOVED******REMOVED***\n  29 | class C extends A ***REMOVED***\n> 30 |   x = eval('executed = true; super();');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/derived-cls-indirect-eval-contains-superproperty-1.js-strict:true": "test/language/statements/class/elements/derived-cls-indirect-eval-contains-superproperty-1.js: SyntaxError: test/language/statements/class/elements/derived-cls-indirect-eval-contains-superproperty-1.js: Unexpected token (30:4)\n  28 | class A ***REMOVED******REMOVED***\n  29 | class C extends A ***REMOVED***\n> 30 |   x = (0, eval)('executed = true; super.x;');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/derived-cls-indirect-eval-contains-superproperty-2.js-strict:true": "test/language/statements/class/elements/derived-cls-indirect-eval-contains-superproperty-2.js: SyntaxError: test/language/statements/class/elements/derived-cls-indirect-eval-contains-superproperty-2.js: Unexpected token (27:4)\n  25 | class A ***REMOVED******REMOVED***\n  26 | class C extends A ***REMOVED***\n> 27 |   x = (0, eval)('executed = true; super[\"x\"];');\n     |     ^\n  28 | ***REMOVED***\n  29 | \n  30 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/derived-cls-indirect-eval-err-contains-supercall-1.js-strict:true": "test/language/statements/class/elements/derived-cls-indirect-eval-err-contains-supercall-1.js: SyntaxError: test/language/statements/class/elements/derived-cls-indirect-eval-err-contains-supercall-1.js: Unexpected token (30:4)\n  28 | class A ***REMOVED******REMOVED***\n  29 | class C extends A ***REMOVED***\n> 30 |   x = (0, eval)('executed = true; super()[\"x\"];');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/derived-cls-indirect-eval-err-contains-supercall-2.js-strict:true": "test/language/statements/class/elements/derived-cls-indirect-eval-err-contains-supercall-2.js: SyntaxError: test/language/statements/class/elements/derived-cls-indirect-eval-err-contains-supercall-2.js: Unexpected token (23:4)\n  21 | class A ***REMOVED******REMOVED***\n  22 | class C extends A ***REMOVED***\n> 23 |   x = (0, eval)('executed = true; super().x;');\n     |     ^\n  24 | ***REMOVED***\n  25 | \n  26 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/derived-cls-indirect-eval-err-contains-supercall.js-strict:true": "test/language/statements/class/elements/derived-cls-indirect-eval-err-contains-supercall.js: SyntaxError: test/language/statements/class/elements/derived-cls-indirect-eval-err-contains-supercall.js: Unexpected token (30:4)\n  28 | class A ***REMOVED******REMOVED***\n  29 | class C extends A ***REMOVED***\n> 30 |   x = (0, eval)('executed = true; super();');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/direct-eval-err-contains-arguments.js-strict:true": "test/language/statements/class/elements/direct-eval-err-contains-arguments.js: SyntaxError: test/language/statements/class/elements/direct-eval-err-contains-arguments.js: Unexpected token (30:4)\n  28 | var executed = false;\n  29 | class C ***REMOVED***\n> 30 |   x = eval('executed = true; arguments;');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/direct-eval-err-contains-newtarget.js-strict:true": "test/language/statements/class/elements/direct-eval-err-contains-newtarget.js: SyntaxError: test/language/statements/class/elements/direct-eval-err-contains-newtarget.js: Unexpected token (29:4)\n  27 | var executed = false;\n  28 | class C ***REMOVED***\n> 29 |   x = eval('executed = true; new.target;');\n     |     ^\n  30 | ***REMOVED***\n  31 | \n  32 | var c = new C(); <at omitted>",
  "test/language/statements/class/elements/evaluation-error/computed-name-referenceerror.js-strict:true": "test/language/statements/class/elements/evaluation-error/computed-name-referenceerror.js: SyntaxError: test/language/statements/class/elements/evaluation-error/computed-name-referenceerror.js: Unexpected token (53:12)\n  51 | function evaluate() ***REMOVED***\n  52 |   class C ***REMOVED***\n> 53 |     [noRef] = fn();\n     |             ^\n  54 |   ***REMOVED***\n  55 | ***REMOVED***\n  56 |  <at omitted>",
  "test/language/statements/class/elements/evaluation-error/computed-name-toprimitive-err.js-strict:true": "test/language/statements/class/elements/evaluation-error/computed-name-toprimitive-err.js: SyntaxError: test/language/statements/class/elements/evaluation-error/computed-name-toprimitive-err.js: Missing class properties transform.\n  53 | function evaluate() ***REMOVED***\n  54 |   class C ***REMOVED***\n> 55 |     [obj]\n     |     ^\n  56 |   ***REMOVED***\n  57 | ***REMOVED***\n  58 |  <at omitted>",
  "test/language/statements/class/elements/evaluation-error/computed-name-toprimitive-returns-noncallable.js-strict:true": "test/language/statements/class/elements/evaluation-error/computed-name-toprimitive-returns-noncallable.js: SyntaxError: test/language/statements/class/elements/evaluation-error/computed-name-toprimitive-returns-noncallable.js: Unexpected token (53:10)\n  51 | function evaluate() ***REMOVED***\n  52 |   class C ***REMOVED***\n> 53 |     [obj] = refErrorIfEvaluated;\n     |           ^\n  54 |   ***REMOVED***\n  55 | ***REMOVED***\n  56 |  <at omitted>",
  "test/language/statements/class/elements/evaluation-error/computed-name-toprimitive-returns-nonobject.js-strict:true": "test/language/statements/class/elements/evaluation-error/computed-name-toprimitive-returns-nonobject.js: SyntaxError: test/language/statements/class/elements/evaluation-error/computed-name-toprimitive-returns-nonobject.js: Unexpected token (53:10)\n  51 | function evaluate() ***REMOVED***\n  52 |   class C ***REMOVED***\n> 53 |     [obj] = refErrorIfEvaluated;\n     |           ^\n  54 |   ***REMOVED***\n  55 | ***REMOVED***\n  56 |  <at omitted>",
  "test/language/statements/class/elements/evaluation-error/computed-name-tostring-err.js-strict:true": "test/language/statements/class/elements/evaluation-error/computed-name-tostring-err.js: SyntaxError: test/language/statements/class/elements/evaluation-error/computed-name-tostring-err.js: Missing class properties transform.\n  53 | function evaluate() ***REMOVED***\n  54 |   class C ***REMOVED***\n> 55 |     [obj]\n     |     ^\n  56 |   ***REMOVED***\n  57 | ***REMOVED***\n  58 |  <at omitted>",
  "test/language/statements/class/elements/evaluation-error/computed-name-valueof-err.js-strict:true": "test/language/statements/class/elements/evaluation-error/computed-name-valueof-err.js: SyntaxError: test/language/statements/class/elements/evaluation-error/computed-name-valueof-err.js: Missing class properties transform.\n  54 | function evaluate() ***REMOVED***\n  55 |   class C ***REMOVED***\n> 56 |     [obj]\n     |     ^\n  57 |   ***REMOVED***\n  58 | ***REMOVED***\n  59 |  <at omitted>",
  "test/language/statements/class/elements/field-declaration.js-strict:true": "test/language/statements/class/elements/field-declaration.js: SyntaxError: test/language/statements/class/elements/field-declaration.js: Unexpected token (54:4)\n  52 | \n  53 | class C ***REMOVED***\n> 54 |   f = 'test262';\n     |     ^\n  55 |   'g';\n  56 |   0 = 'bar';\n  57 |   [computed]; <at omitted>",
  "test/language/statements/class/elements/fielddefinition-initializer-abrupt-completion.js-strict:true": "test/language/statements/class/elements/fielddefinition-initializer-abrupt-completion.js: SyntaxError: test/language/statements/class/elements/fielddefinition-initializer-abrupt-completion.js: Unexpected token (42:4)\n  40 | \n  41 | class C ***REMOVED***\n> 42 |   x = f();\n     |     ^\n  43 | ***REMOVED***\n  44 | \n  45 | assert.throws(Test262Error, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/fields-asi-1.js-strict:true": "test/language/statements/class/elements/fields-asi-1.js: SyntaxError: test/language/statements/class/elements/fields-asi-1.js: Unexpected token (13:4)\n  11 | var obj = ***REMOVED******REMOVED***\n  12 | class C ***REMOVED***\n> 13 |   x = obj\n     |     ^\n  14 |   ['lol'] = 42\n  15 | ***REMOVED***\n  16 |  <at omitted>",
  "test/language/statements/class/elements/fields-asi-2.js-strict:true": "test/language/statements/class/elements/fields-asi-2.js: SyntaxError: test/language/statements/class/elements/fields-asi-2.js: Unexpected token (12:4)\n  10 | \n  11 | class C ***REMOVED***\n> 12 |   x = \"lol\"\n     |     ^\n  13 |   [1]\n  14 | ***REMOVED***\n  15 |  <at omitted>",
  "test/language/statements/class/elements/fields-asi-5.js-strict:true": "test/language/statements/class/elements/fields-asi-5.js: SyntaxError: test/language/statements/class/elements/fields-asi-5.js: Unexpected token (16:4)\n  14 | \n  15 | class C ***REMOVED***\n> 16 |   a = x\n     |     ^\n  17 |   in\n  18 |   z\n  19 |   b = y <at omitted>",
  "test/language/statements/class/elements/fields-computed-name-propname-constructor.js-strict:true": "test/language/statements/class/elements/fields-computed-name-propname-constructor.js: SyntaxError: test/language/statements/class/elements/fields-computed-name-propname-constructor.js: Missing class properties transform.\n  45 | var x = \"constructor\";\n  46 | class C1 ***REMOVED***\n> 47 |   [x];\n     |   ^\n  48 | ***REMOVED***\n  49 | \n  50 | var c1 = new C1(); <at omitted>",
  "test/language/statements/class/elements/fields-computed-name-static-computed-var-propname-constructor.js-strict:true": "test/language/statements/class/elements/fields-computed-name-static-computed-var-propname-constructor.js: SyntaxError: test/language/statements/class/elements/fields-computed-name-static-computed-var-propname-constructor.js: Unexpected token (73:13)\n  71 | \n  72 | class C2 ***REMOVED***\n> 73 |   static [x] = 42;\n     |              ^\n  74 | ***REMOVED***\n  75 | \n  76 | verifyProperty(C2, 'constructor', ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/fields-computed-name-static-computed-var-propname-prototype.js-strict:true": "test/language/statements/class/elements/fields-computed-name-static-computed-var-propname-prototype.js: SyntaxError: test/language/statements/class/elements/fields-computed-name-static-computed-var-propname-prototype.js: Unexpected token (25:15)\n  23 | assert.throws(TypeError, function() ***REMOVED***\n  24 |   class C ***REMOVED***\n> 25 |     static [x] = 42;\n     |                ^\n  26 |   ***REMOVED***\n  27 | ***REMOVED***);\n  28 |  <at omitted>",
  "test/language/statements/class/elements/fields-computed-name-static-propname-constructor.js-strict:true": "test/language/statements/class/elements/fields-computed-name-static-propname-constructor.js: SyntaxError: test/language/statements/class/elements/fields-computed-name-static-propname-constructor.js: Unexpected token (72:25)\n  70 | \n  71 | class C2 ***REMOVED***\n> 72 |   static ['constructor'] = 42;\n     |                          ^\n  73 | ***REMOVED***\n  74 | \n  75 | verifyProperty(C2, 'constructor', ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/fields-computed-name-static-propname-prototype.js-strict:true": "test/language/statements/class/elements/fields-computed-name-static-propname-prototype.js: SyntaxError: test/language/statements/class/elements/fields-computed-name-static-propname-prototype.js: Unexpected token (23:25)\n  21 | assert.throws(TypeError, function() ***REMOVED***\n  22 |   class C ***REMOVED***\n> 23 |     static ['prototype'] = 42;\n     |                          ^\n  24 |   ***REMOVED***\n  25 | ***REMOVED***);\n  26 |  <at omitted>",
  "test/language/statements/class/elements/fields-hash-constructor-is-a-valid-name.js-strict:true": "test/language/statements/class/elements/fields-hash-constructor-is-a-valid-name.js: SyntaxError: test/language/statements/class/elements/fields-hash-constructor-is-a-valid-name.js: Unexpected token (30:19)\n  28 | \n  29 | class C2 ***REMOVED***\n> 30 |   [\"#constructor\"] = 42;\n     |                    ^\n  31 | ***REMOVED***\n  32 | \n  33 | var c2 = new C2(); <at omitted>",
  "test/language/statements/class/elements/get-access-of-missing-private-getter.js-strict:true": "test/language/statements/class/elements/get-access-of-missing-private-getter.js: SyntaxError: test/language/statements/class/elements/get-access-of-missing-private-getter.js: Unexpected character '#' (28:6)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   set #f(v) ***REMOVED***\n     |       ^\n  29 |     throw new Test262Error();\n  30 |   ***REMOVED***\n  31 |  <at omitted>",
  "test/language/statements/class/elements/get-access-of-missing-private-static-getter.js-strict:true": "test/language/statements/class/elements/get-access-of-missing-private-static-getter.js: SyntaxError: test/language/statements/class/elements/get-access-of-missing-private-static-getter.js: Unexpected character '#' (28:13)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   static set #f(v) ***REMOVED***\n     |              ^\n  29 |     throw new Test262Error();\n  30 |   ***REMOVED***\n  31 |  <at omitted>",
  "test/language/statements/class/elements/get-access-of-missing-shadowed-private-getter.js-strict:true": "test/language/statements/class/elements/get-access-of-missing-shadowed-private-getter.js: SyntaxError: test/language/statements/class/elements/get-access-of-missing-shadowed-private-getter.js: Unexpected character '#' (28:6)\n  26 | \n  27 | class A ***REMOVED***\n> 28 |   get #f() ***REMOVED***\n     |       ^\n  29 |     throw new Test262Error();\n  30 |   ***REMOVED***\n  31 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/indirect-eval-contains-arguments.js-strict:false": "test/language/statements/class/elements/indirect-eval-contains-arguments.js: SyntaxError: test/language/statements/class/elements/indirect-eval-contains-arguments.js: arguments is a reserved word in strict mode (16:4)\n  14 | \n  15 | \n> 16 | var arguments = 1;\n     |     ^\n  17 | class C ***REMOVED***\n  18 |   x = (0, eval)('arguments;');\n  19 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/indirect-eval-err-contains-newtarget.js-strict:true": "test/language/statements/class/elements/indirect-eval-err-contains-newtarget.js: SyntaxError: test/language/statements/class/elements/indirect-eval-err-contains-newtarget.js: Unexpected token (29:4)\n  27 | var executed = false;\n  28 | class C ***REMOVED***\n> 29 |   x = (0, eval)('executed = true; new.target;');\n     |     ^\n  30 | ***REMOVED***\n  31 | \n  32 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/init-err-evaluation.js-strict:true": "test/language/statements/class/elements/init-err-evaluation.js: SyntaxError: test/language/statements/class/elements/init-err-evaluation.js: Unexpected token (28:4)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   x = fn1();\n     |     ^\n  29 |   y = fn2();\n  30 |   z = fn1();\n  31 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/init-value-defined-after-class.js-strict:true": "test/language/statements/class/elements/init-value-defined-after-class.js: SyntaxError: test/language/statements/class/elements/init-value-defined-after-class.js: Unexpected token (27:6)\n  25 | \n  26 | class C ***REMOVED***\n> 27 |   [x] = x;\n     |       ^\n  28 | ***REMOVED***\n  29 | \n  30 | var c1 = new C(); <at omitted>",
  "test/language/statements/class/elements/init-value-incremental.js-strict:true": "test/language/statements/class/elements/init-value-incremental.js: SyntaxError: test/language/statements/class/elements/init-value-incremental.js: Unexpected token (36:8)\n  34 | \n  35 | class C ***REMOVED***\n> 36 |   [x++] = x++;\n     |         ^\n  37 |   [x++] = x++;\n  38 | ***REMOVED***\n  39 |  <at omitted>",
  "test/language/statements/class/elements/intercalated-static-non-static-computed-fields.js-strict:true": "test/language/statements/class/elements/intercalated-static-non-static-computed-fields.js: SyntaxError: test/language/statements/class/elements/intercalated-static-non-static-computed-fields.js: Unexpected token (44:8)\n  42 | \n  43 | class C ***REMOVED***\n> 44 |   [i++] = i++;\n     |         ^\n  45 |   static [i++] = i++;\n  46 |   [i++] = i++;\n  47 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-computed-names.js-strict:true": "test/language/statements/class/elements/multiple-definitions-computed-names.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   foo = \"foobar\";\n     |       ^\n  29 |   m() ***REMOVED*** return 42 ***REMOVED***\n  30 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"]\n  31 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-computed-symbol-names.js-strict:true": "test/language/statements/class/elements/multiple-definitions-computed-symbol-names.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-computed-symbol-names.js: Unexpected token (29:6)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   foo = \"foobar\";\n     |       ^\n  30 |   m() ***REMOVED*** return 42 ***REMOVED***\n  31 |   [x]; [y] = 42\n  32 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-literal-names-asi.js-strict:true": "test/language/statements/class/elements/multiple-definitions-literal-names-asi.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-literal-names-asi.js: Unexpected token (26:6)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   foo = \"foobar\";\n     |       ^\n  27 |   m() ***REMOVED*** return 42 ***REMOVED***\n  28 |   a\n  29 |   b = 42; <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-literal-names.js-strict:true": "test/language/statements/class/elements/multiple-definitions-literal-names.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-literal-names.js: Unexpected token (28:6)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   foo = \"foobar\";\n     |       ^\n  29 |   m() ***REMOVED*** return 42 ***REMOVED***\n  30 |   a; b = 42;\n  31 |   c = fn <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-private-method-getter-usage.js-strict:true": "test/language/statements/class/elements/multiple-definitions-private-method-getter-usage.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-private-method-getter-usage.js: Unexpected token (27:6)\n  25 | \n  26 | class C ***REMOVED***\n> 27 |   foo = \"foobar\";\n     |       ^\n  28 |   m() ***REMOVED*** return 42 ***REMOVED***\n  29 |   get #m() ***REMOVED*** return 'test262'; ***REMOVED***\n  30 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-private-method-usage.js-strict:true": "test/language/statements/class/elements/multiple-definitions-private-method-usage.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-private-method-usage.js: Unexpected token (27:6)\n  25 | \n  26 | class C ***REMOVED***\n> 27 |   foo = \"foobar\";\n     |       ^\n  28 |   m() ***REMOVED*** return 42 ***REMOVED***\n  29 |   #m() ***REMOVED*** return 'test262'; ***REMOVED***\n  30 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-rs-field-identifier-initializer.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-field-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-field-identifier-initializer.js: Unexpected token (62:6)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   foo = \"foobar\";\n     |       ^\n  63 |   m() ***REMOVED*** return 42 ***REMOVED***\n  64 |   $ = 1; _ = 1; \\u***REMOVED***6F***REMOVED*** = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1\n  65 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-rs-field-identifier.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-field-identifier.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-field-identifier.js: Unexpected token (62:6)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   foo = \"foobar\";\n     |       ^\n  63 |   m() ***REMOVED*** return 42 ***REMOVED***\n  64 |   $; _; \\u***REMOVED***6F***REMOVED***; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J\n  65 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-async-method-privatename-identifier-alt.js: Unexpected token (64:6)\n  62 | \n  63 | class C ***REMOVED***\n> 64 |   foo = \"foobar\";\n     |       ^\n  65 |   m() ***REMOVED*** return 42 ***REMOVED***\n  66 |   static async #$(value) ***REMOVED***\n  67 |     return await value; <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-async-method-privatename-identifier.js: Unexpected token (64:6)\n  62 | \n  63 | class C ***REMOVED***\n> 64 |   foo = \"foobar\";\n     |       ^\n  65 |   m() ***REMOVED*** return 42 ***REMOVED***\n  66 |   static async #$(value) ***REMOVED***\n  67 |     return await value; <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-method-privatename-identifier-alt.js: Unexpected token (61:6)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() ***REMOVED*** return 42 ***REMOVED***\n  63 |   static #$(value) ***REMOVED***\n  64 |     return value; <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-rs-static-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-method-privatename-identifier.js: Unexpected token (61:6)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() ***REMOVED*** return 42 ***REMOVED***\n  63 |   static #$(value) ***REMOVED***\n  64 |     return value; <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-alt-by-classname.js: Unexpected token (61:6)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() ***REMOVED*** return 42 ***REMOVED***\n  63 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n  64 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-alt.js: Unexpected token (61:6)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() ***REMOVED*** return 42 ***REMOVED***\n  63 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n  64 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-by-classname.js: Unexpected token (61:6)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() ***REMOVED*** return 42 ***REMOVED***\n  63 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n  64 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected token (61:6)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() ***REMOVED*** return 42 ***REMOVED***\n  63 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n  64 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer-alt.js: Unexpected token (61:6)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() ***REMOVED*** return 42 ***REMOVED***\n  63 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n  64 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer.js: Unexpected token (61:6)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() ***REMOVED*** return 42 ***REMOVED***\n  63 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1\n  64 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier.js: Unexpected token (61:6)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() ***REMOVED*** return 42 ***REMOVED***\n  63 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n  64 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-static-private-fields.js-strict:true": "test/language/statements/class/elements/multiple-definitions-static-private-fields.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-static-private-fields.js: Unexpected token (29:6)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   foo = \"foobar\";\n     |       ^\n  30 |   m() ***REMOVED*** return 42 ***REMOVED***\n  31 |   static #x; static #y\n  32 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-static-private-methods-with-fields.js-strict:true": "test/language/statements/class/elements/multiple-definitions-static-private-methods-with-fields.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-static-private-methods-with-fields.js: Unexpected token (29:6)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   foo = \"foobar\";\n     |       ^\n  30 |   m() ***REMOVED*** return 42 ***REMOVED***\n  31 |   static #xVal; static #yVal\n  32 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-static-private-methods.js-strict:true": "test/language/statements/class/elements/multiple-definitions-static-private-methods.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-static-private-methods.js: Unexpected token (29:6)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   foo = \"foobar\";\n     |       ^\n  30 |   m() ***REMOVED*** return 42 ***REMOVED***\n  31 |   \n  32 |   m2() ***REMOVED*** return 39 ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-string-literal-names.js-strict:true": "test/language/statements/class/elements/multiple-definitions-string-literal-names.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-string-literal-names.js: Unexpected token (26:6)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   foo = \"foobar\";\n     |       ^\n  27 |   m() ***REMOVED*** return 42 ***REMOVED***\n  28 |   'a'; \"b\"; 'c' = 39;\n  29 |   \"d\" = 42 <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-computed-names.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-computed-names.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"]\n     |       ^\n  29 |   foo = \"foobar\"\n  30 |   bar = \"barbaz\";\n  31 |    <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-computed-symbol-names.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-computed-symbol-names.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-computed-symbol-names.js: Unexpected token (29:11)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   [x]; [y] = 42\n     |            ^\n  30 |   foo = \"foobar\"\n  31 |   bar = \"barbaz\";\n  32 |    <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-literal-names-asi.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-literal-names-asi.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-literal-names-asi.js: Unexpected token (27:4)\n  25 | class C ***REMOVED***\n  26 |   a\n> 27 |   b = 42;\n     |     ^\n  28 |   foo = \"foobar\"\n  29 |   bar = \"barbaz\";\n  30 |    <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-literal-names.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-literal-names.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-literal-names.js: Unexpected token (28:7)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   a; b = 42;\n     |        ^\n  29 |   c = fn\n  30 |   foo = \"foobar\"\n  31 |   bar = \"barbaz\"; <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-private-method-getter-usage.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-private-method-getter-usage.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-private-method-getter-usage.js: Unexpected character '#' (27:6)\n  25 | \n  26 | class C ***REMOVED***\n> 27 |   get #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |       ^\n  28 |   foo = \"foobar\"\n  29 |   bar = \"barbaz\";\n  30 |   method() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-private-method-usage.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-private-method-usage.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-private-method-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | class C ***REMOVED***\n> 27 |   #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |   ^\n  28 |   foo = \"foobar\"\n  29 |   bar = \"barbaz\";\n  30 |   method() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-field-identifier-initializer.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-field-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-field-identifier-initializer.js: Unexpected token (62:4)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   $ = 1; _ = 1; \\u***REMOVED***6F***REMOVED*** = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1\n     |     ^\n  63 |   foo = \"foobar\"\n  64 |   bar = \"barbaz\";\n  65 |    <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-field-identifier.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-field-identifier.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-field-identifier.js: Unexpected token (63:6)\n  61 | class C ***REMOVED***\n  62 |   $; _; \\u***REMOVED***6F***REMOVED***; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J\n> 63 |   foo = \"foobar\"\n     |       ^\n  64 |   bar = \"barbaz\";\n  65 |   \n  66 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:15)\n  62 | \n  63 | class C ***REMOVED***\n> 64 |   static async #$(value) ***REMOVED***\n     |                ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:15)\n  62 | \n  63 | class C ***REMOVED***\n> 64 |   static async #$(value) ***REMOVED***\n     |                ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$(value) ***REMOVED***\n     |          ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$(value) ***REMOVED***\n     |          ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-static-private-fields.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-static-private-fields.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-static-private-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   static #x; static #y\n     |          ^\n  30 |   foo = \"foobar\"\n  31 |   bar = \"barbaz\";\n  32 |   static x() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-static-private-methods-with-fields.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-static-private-methods-with-fields.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-static-private-methods-with-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   static #xVal; static #yVal\n     |          ^\n  30 |   foo = \"foobar\"\n  31 |   bar = \"barbaz\";\n  32 |   static #x(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-static-private-methods.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-static-private-methods.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-static-private-methods.js: Unexpected token (30:6)\n  28 | class C ***REMOVED***\n  29 |   \n> 30 |   foo = \"foobar\"\n     |       ^\n  31 |   bar = \"barbaz\";\n  32 |   static #x(value) ***REMOVED***\n  33 |     return value / 2; <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-string-literal-names.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-string-literal-names.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-string-literal-names.js: Unexpected token (26:16)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   'a'; \"b\"; 'c' = 39;\n     |                 ^\n  27 |   \"d\" = 42\n  28 |   foo = \"foobar\"\n  29 |   bar = \"barbaz\"; <at omitted>",
  "test/language/statements/class/elements/nested-derived-cls-direct-eval-contains-superproperty-1.js-strict:true": "test/language/statements/class/elements/nested-derived-cls-direct-eval-contains-superproperty-1.js: SyntaxError: test/language/statements/class/elements/nested-derived-cls-direct-eval-contains-superproperty-1.js: Unexpected token (30:4)\n  28 | class A ***REMOVED******REMOVED***\n  29 | class C extends A ***REMOVED***\n> 30 |   x = eval('executed = true; super.x;');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | new C(); <at omitted>",
  "test/language/statements/class/elements/nested-derived-cls-direct-eval-contains-superproperty-2.js-strict:true": "test/language/statements/class/elements/nested-derived-cls-direct-eval-contains-superproperty-2.js: SyntaxError: test/language/statements/class/elements/nested-derived-cls-direct-eval-contains-superproperty-2.js: Unexpected token (27:4)\n  25 | class A ***REMOVED******REMOVED***\n  26 | class C extends A ***REMOVED***\n> 27 |   x = eval('executed = true; super[\"x\"];');\n     |     ^\n  28 | ***REMOVED***\n  29 | \n  30 | new C(); <at omitted>",
  "test/language/statements/class/elements/nested-derived-cls-direct-eval-err-contains-supercall-1.js-strict:true": "test/language/statements/class/elements/nested-derived-cls-direct-eval-err-contains-supercall-1.js: SyntaxError: test/language/statements/class/elements/nested-derived-cls-direct-eval-err-contains-supercall-1.js: Unexpected token (30:4)\n  28 | class A ***REMOVED******REMOVED***\n  29 | class C extends A ***REMOVED***\n> 30 |   x = eval('executed = true; super()[\"x\"];');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/nested-derived-cls-direct-eval-err-contains-supercall-2.js-strict:true": "test/language/statements/class/elements/nested-derived-cls-direct-eval-err-contains-supercall-2.js: SyntaxError: test/language/statements/class/elements/nested-derived-cls-direct-eval-err-contains-supercall-2.js: Unexpected token (23:4)\n  21 | class A ***REMOVED******REMOVED***\n  22 | class C extends A ***REMOVED***\n> 23 |   x = eval('executed = true; super().x;');\n     |     ^\n  24 | ***REMOVED***\n  25 | \n  26 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/nested-derived-cls-direct-eval-err-contains-supercall.js-strict:true": "test/language/statements/class/elements/nested-derived-cls-direct-eval-err-contains-supercall.js: SyntaxError: test/language/statements/class/elements/nested-derived-cls-direct-eval-err-contains-supercall.js: Unexpected token (30:4)\n  28 | class A ***REMOVED******REMOVED***\n  29 | class C extends A ***REMOVED***\n> 30 |   x = eval('executed = true; super();');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/nested-derived-cls-indirect-eval-contains-superproperty-1.js-strict:true": "test/language/statements/class/elements/nested-derived-cls-indirect-eval-contains-superproperty-1.js: SyntaxError: test/language/statements/class/elements/nested-derived-cls-indirect-eval-contains-superproperty-1.js: Unexpected token (30:4)\n  28 | class A ***REMOVED******REMOVED***\n  29 | class C extends A ***REMOVED***\n> 30 |   x = (0, eval)('executed = true; super.x;');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/nested-derived-cls-indirect-eval-contains-superproperty-2.js-strict:true": "test/language/statements/class/elements/nested-derived-cls-indirect-eval-contains-superproperty-2.js: SyntaxError: test/language/statements/class/elements/nested-derived-cls-indirect-eval-contains-superproperty-2.js: Unexpected token (27:4)\n  25 | class A ***REMOVED******REMOVED***\n  26 | class C extends A ***REMOVED***\n> 27 |   x = (0, eval)('executed = true; super[\"x\"];');\n     |     ^\n  28 | ***REMOVED***\n  29 | \n  30 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall-1.js-strict:true": "test/language/statements/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall-1.js: SyntaxError: test/language/statements/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall-1.js: Unexpected token (30:4)\n  28 | class A ***REMOVED******REMOVED***\n  29 | class C extends A ***REMOVED***\n> 30 |   x = (0, eval)('executed = true; super()[\"x\"];');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall-2.js-strict:true": "test/language/statements/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall-2.js: SyntaxError: test/language/statements/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall-2.js: Unexpected token (23:4)\n  21 | class A ***REMOVED******REMOVED***\n  22 | class C extends A ***REMOVED***\n> 23 |   x = (0, eval)('executed = true; super().x;');\n     |     ^\n  24 | ***REMOVED***\n  25 | \n  26 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall.js-strict:true": "test/language/statements/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall.js: SyntaxError: test/language/statements/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall.js: Unexpected token (30:4)\n  28 | class A ***REMOVED******REMOVED***\n  29 | class C extends A ***REMOVED***\n> 30 |   x = (0, eval)('executed = true; super();');\n     |     ^\n  31 | ***REMOVED***\n  32 | \n  33 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/nested-direct-eval-err-contains-arguments.js-strict:true": "test/language/statements/class/elements/nested-direct-eval-err-contains-arguments.js: SyntaxError: test/language/statements/class/elements/nested-direct-eval-err-contains-arguments.js: Unexpected token (30:4)\n  28 | var executed = false;\n  29 | class C ***REMOVED***\n> 30 |   x = () => ***REMOVED***\n     |     ^\n  31 |     var t = () => ***REMOVED*** eval('executed = true; arguments;'); ***REMOVED***;\n  32 |     t();\n  33 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/nested-direct-eval-err-contains-newtarget.js-strict:true": "test/language/statements/class/elements/nested-direct-eval-err-contains-newtarget.js: SyntaxError: test/language/statements/class/elements/nested-direct-eval-err-contains-newtarget.js: Unexpected token (29:4)\n  27 | var executed = false;\n  28 | class C ***REMOVED***\n> 29 |   x = eval('executed = true; new.target;');\n     |     ^\n  30 | ***REMOVED***\n  31 | \n  32 | var c = new C(); <at omitted>",
  "test/language/statements/class/elements/nested-indirect-eval-contains-arguments.js-strict:false": "test/language/statements/class/elements/nested-indirect-eval-contains-arguments.js: SyntaxError: test/language/statements/class/elements/nested-indirect-eval-contains-arguments.js: arguments is a reserved word in strict mode (16:4)\n  14 | \n  15 | \n> 16 | var arguments = 1;\n     |     ^\n  17 | class C ***REMOVED***\n  18 |   x = () => ***REMOVED***\n  19 |     var t = () => (0, eval)('arguments;'); <at omitted>",
  "test/language/statements/class/elements/nested-indirect-eval-err-contains-newtarget.js-strict:true": "test/language/statements/class/elements/nested-indirect-eval-err-contains-newtarget.js: SyntaxError: test/language/statements/class/elements/nested-indirect-eval-err-contains-newtarget.js: Unexpected token (29:4)\n  27 | var executed = false;\n  28 | class C ***REMOVED***\n> 29 |   x = (0, eval)('executed = true; new.target;');\n     |     ^\n  30 | ***REMOVED***\n  31 | \n  32 | assert.throws(SyntaxError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-computed-names.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-computed-names.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"]\n     |       ^\n  29 |   m() ***REMOVED*** return 42; ***REMOVED***\n  30 |   \n  31 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-computed-symbol-names.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-computed-symbol-names.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-computed-symbol-names.js: Unexpected token (29:11)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   [x]; [y] = 42\n     |            ^\n  30 |   m() ***REMOVED*** return 42; ***REMOVED***\n  31 |   \n  32 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-literal-names-asi.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-literal-names-asi.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-literal-names-asi.js: Unexpected token (27:4)\n  25 | class C ***REMOVED***\n  26 |   a\n> 27 |   b = 42;\n     |     ^\n  28 |   m() ***REMOVED*** return 42; ***REMOVED***\n  29 |   \n  30 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-literal-names.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-literal-names.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-literal-names.js: Unexpected token (28:7)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   a; b = 42;\n     |        ^\n  29 |   c = fn\n  30 |   m() ***REMOVED*** return 42; ***REMOVED***\n  31 |    <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-private-method-getter-usage.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-private-method-getter-usage.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-private-method-getter-usage.js: Unexpected character '#' (27:6)\n  25 | \n  26 | class C ***REMOVED***\n> 27 |   get #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |       ^\n  28 |   m() ***REMOVED*** return 42; ***REMOVED***\n  29 |   method() ***REMOVED***\n  30 |     return this.#m; <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-private-method-usage.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-private-method-usage.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-private-method-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | class C ***REMOVED***\n> 27 |   #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |   ^\n  28 |   m() ***REMOVED*** return 42; ***REMOVED***\n  29 |   method() ***REMOVED***\n  30 |     return this.#m(); <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-field-identifier-initializer.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-field-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-field-identifier-initializer.js: Unexpected token (62:4)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   $ = 1; _ = 1; \\u***REMOVED***6F***REMOVED*** = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1\n     |     ^\n  63 |   m() ***REMOVED*** return 42; ***REMOVED***\n  64 |   \n  65 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-field-identifier.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-field-identifier.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-field-identifier.js: Missing class properties transform.\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   $; _; \\u***REMOVED***6F***REMOVED***; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J\n     |   ^\n  63 |   m() ***REMOVED*** return 42; ***REMOVED***\n  64 |   \n  65 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:15)\n  62 | \n  63 | class C ***REMOVED***\n> 64 |   static async #$(value) ***REMOVED***\n     |                ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:15)\n  62 | \n  63 | class C ***REMOVED***\n> 64 |   static async #$(value) ***REMOVED***\n     |                ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$(value) ***REMOVED***\n     |          ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$(value) ***REMOVED***\n     |          ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $(value) ***REMOVED***\n  64 |     C.#$ = value; <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $(value) ***REMOVED***\n  64 |     this.#$ = value; <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $(value) ***REMOVED***\n  64 |     C.#$ = value; <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $() ***REMOVED***\n  64 |     return C.#$; <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $() ***REMOVED***\n  64 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $() ***REMOVED***\n  64 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $(value) ***REMOVED***\n  64 |     this.#$ = value; <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-static-private-fields.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-static-private-fields.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-static-private-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   static #x; static #y\n     |          ^\n  30 |   m() ***REMOVED*** return 42; ***REMOVED***\n  31 |   static x() ***REMOVED***\n  32 |     this.#x = 42; <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-static-private-methods-with-fields.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-static-private-methods-with-fields.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-static-private-methods-with-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   static #xVal; static #yVal\n     |          ^\n  30 |   m() ***REMOVED*** return 42; ***REMOVED***\n  31 |   static #x(value) ***REMOVED***\n  32 |     this.#xVal = value; <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-static-private-methods.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-static-private-methods.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-static-private-methods.js: Unexpected character '#' (31:9)\n  29 |   \n  30 |   m() ***REMOVED*** return 42; ***REMOVED***\n> 31 |   static #x(value) ***REMOVED***\n     |          ^\n  32 |     return value / 2;\n  33 |   ***REMOVED***\n  34 |   static #y(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-string-literal-names.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-string-literal-names.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-string-literal-names.js: Unexpected token (26:16)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   'a'; \"b\"; 'c' = 39;\n     |                 ^\n  27 |   \"d\" = 42\n  28 |   m() ***REMOVED*** return 42; ***REMOVED***\n  29 |    <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-computed-names.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-computed-names.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"];\n     |       ^\n  29 |   m() ***REMOVED*** return 42; ***REMOVED***\n  30 |   \n  31 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-computed-symbol-names.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-computed-symbol-names.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-computed-symbol-names.js: Unexpected token (29:11)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   [x]; [y] = 42;\n     |            ^\n  30 |   m() ***REMOVED*** return 42; ***REMOVED***\n  31 |   \n  32 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-literal-names-asi.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-literal-names-asi.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-literal-names-asi.js: Unexpected token (27:4)\n  25 | class C ***REMOVED***\n  26 |   a\n> 27 |   b = 42;;\n     |     ^\n  28 |   m() ***REMOVED*** return 42; ***REMOVED***\n  29 |   \n  30 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-literal-names.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-literal-names.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-literal-names.js: Unexpected token (28:7)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   a; b = 42;\n     |        ^\n  29 |   c = fn;\n  30 |   m() ***REMOVED*** return 42; ***REMOVED***\n  31 |    <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-private-method-getter-usage.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-private-method-getter-usage.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-private-method-getter-usage.js: Unexpected character '#' (27:6)\n  25 | \n  26 | class C ***REMOVED***\n> 27 |   get #m() ***REMOVED*** return 'test262'; ***REMOVED***;\n     |       ^\n  28 |   m() ***REMOVED*** return 42; ***REMOVED***\n  29 |   method() ***REMOVED***\n  30 |     return this.#m; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-private-method-usage.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-private-method-usage.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-private-method-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | class C ***REMOVED***\n> 27 |   #m() ***REMOVED*** return 'test262'; ***REMOVED***;\n     |   ^\n  28 |   m() ***REMOVED*** return 42; ***REMOVED***\n  29 |   method() ***REMOVED***\n  30 |     return this.#m(); <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-rs-field-identifier-initializer.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-field-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-field-identifier-initializer.js: Unexpected token (62:4)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   $ = 1; _ = 1; \\u***REMOVED***6F***REMOVED*** = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;\n     |     ^\n  63 |   m() ***REMOVED*** return 42; ***REMOVED***\n  64 |   \n  65 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-rs-field-identifier.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-field-identifier.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-field-identifier.js: Missing class properties transform.\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   $; _; \\u***REMOVED***6F***REMOVED***; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J;\n     |   ^\n  63 |   m() ***REMOVED*** return 42; ***REMOVED***\n  64 |   \n  65 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:15)\n  62 | \n  63 | class C ***REMOVED***\n> 64 |   static async #$(value) ***REMOVED***\n     |                ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:15)\n  62 | \n  63 | class C ***REMOVED***\n> 64 |   static async #$(value) ***REMOVED***\n     |                ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$(value) ***REMOVED***\n     |          ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$(value) ***REMOVED***\n     |          ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $(value) ***REMOVED***\n  64 |     C.#$ = value; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $(value) ***REMOVED***\n  64 |     this.#$ = value; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $(value) ***REMOVED***\n  64 |     C.#$ = value; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $() ***REMOVED***\n  64 |     return C.#$; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $() ***REMOVED***\n  64 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $() ***REMOVED***\n  64 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |          ^\n  62 |   m() ***REMOVED*** return 42; ***REMOVED***\n  63 |   static $(value) ***REMOVED***\n  64 |     this.#$ = value; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-static-private-fields.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-static-private-fields.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-static-private-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   static #x; static #y;\n     |          ^\n  30 |   m() ***REMOVED*** return 42; ***REMOVED***\n  31 |   static x() ***REMOVED***\n  32 |     this.#x = 42; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-static-private-methods-with-fields.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-static-private-methods-with-fields.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-static-private-methods-with-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   static #xVal; static #yVal;\n     |          ^\n  30 |   m() ***REMOVED*** return 42; ***REMOVED***\n  31 |   static #x(value) ***REMOVED***\n  32 |     this.#xVal = value; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-static-private-methods.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-static-private-methods.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-static-private-methods.js: Unexpected character '#' (31:9)\n  29 |   ;\n  30 |   m() ***REMOVED*** return 42; ***REMOVED***\n> 31 |   static #x(value) ***REMOVED***\n     |          ^\n  32 |     return value / 2;\n  33 |   ***REMOVED***\n  34 |   static #y(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-string-literal-names.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-string-literal-names.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-string-literal-names.js: Unexpected token (26:16)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   'a'; \"b\"; 'c' = 39;\n     |                 ^\n  27 |   \"d\" = 42;\n  28 |   m() ***REMOVED*** return 42; ***REMOVED***\n  29 |    <at omitted>",
  "test/language/statements/class/elements/private-accessor-is-visible-in-computed-properties.js-strict:true": "test/language/statements/class/elements/private-accessor-is-visible-in-computed-properties.js: SyntaxError: test/language/statements/class/elements/private-accessor-is-visible-in-computed-properties.js: Unexpected character '#' (26:8)\n  24 | assert.throws(TypeError, function() ***REMOVED***\n  25 |   class C ***REMOVED***\n> 26 |     get #f() ***REMOVED***\n     |         ^\n  27 |       throw new Test262Error();\n  28 |     ***REMOVED***\n  29 |  <at omitted>",
  "test/language/statements/class/elements/private-accessor-name/inst-private-escape-sequence-ZWJ.js-strict:true": "test/language/statements/class/elements/private-accessor-name/inst-private-escape-sequence-ZWJ.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/inst-private-escape-sequence-ZWJ.js: Unexpected character '#' (62:6)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   get #ZW_\\u200D_J() ***REMOVED*** return 'get string'; ***REMOVED***\n     |       ^\n  63 |   set #ZW_\\u200D_J(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-accessor-name/inst-private-escape-sequence-ZWNJ.js-strict:true": "test/language/statements/class/elements/private-accessor-name/inst-private-escape-sequence-ZWNJ.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/inst-private-escape-sequence-ZWNJ.js: Unexpected character '#' (62:6)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   get #ZW_\\u200C_NJ() ***REMOVED*** return 'get string'; ***REMOVED***\n     |       ^\n  63 |   set #ZW_\\u200C_NJ(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-accessor-name/inst-private-escape-sequence-u2118.js-strict:true": "test/language/statements/class/elements/private-accessor-name/inst-private-escape-sequence-u2118.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/inst-private-escape-sequence-u2118.js: Unexpected character '#' (62:6)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   get #\\u2118() ***REMOVED*** return 'get string'; ***REMOVED***\n     |       ^\n  63 |   set #\\u2118(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-accessor-name/inst-private-escape-sequence-u6F.js-strict:true": "test/language/statements/class/elements/private-accessor-name/inst-private-escape-sequence-u6F.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/inst-private-escape-sequence-u6F.js: Unexpected character '#' (62:6)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   get #\\u***REMOVED***6F***REMOVED***() ***REMOVED*** return 'get string'; ***REMOVED***\n     |       ^\n  63 |   set #\\u***REMOVED***6F***REMOVED***(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-accessor-name/inst-private-name-ZWJ.js-strict:true": "test/language/statements/class/elements/private-accessor-name/inst-private-name-ZWJ.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/inst-private-name-ZWJ.js: Unexpected character '#' (62:6)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   get #ZW_‍_J() ***REMOVED*** return 'get string'; ***REMOVED***\n     |       ^\n  63 |   set #ZW_‍_J(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-accessor-name/inst-private-name-ZWNJ.js-strict:true": "test/language/statements/class/elements/private-accessor-name/inst-private-name-ZWNJ.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/inst-private-name-ZWNJ.js: Unexpected character '#' (62:6)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   get #ZW_‌_NJ() ***REMOVED*** return 'get string'; ***REMOVED***\n     |       ^\n  63 |   set #ZW_‌_NJ(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-accessor-name/inst-private-name-common.js-strict:true": "test/language/statements/class/elements/private-accessor-name/inst-private-name-common.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/inst-private-name-common.js: Unexpected character '#' (62:6)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   get #test262() ***REMOVED*** return 'get string'; ***REMOVED***\n     |       ^\n  63 |   set #test262(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-accessor-name/inst-private-name-dollar.js-strict:true": "test/language/statements/class/elements/private-accessor-name/inst-private-name-dollar.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/inst-private-name-dollar.js: Unexpected character '#' (62:6)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   get #$() ***REMOVED*** return 'get string'; ***REMOVED***\n     |       ^\n  63 |   set #$(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-accessor-name/inst-private-name-u2118.js-strict:true": "test/language/statements/class/elements/private-accessor-name/inst-private-name-u2118.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/inst-private-name-u2118.js: Unexpected character '#' (62:6)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   get #℘() ***REMOVED*** return 'get string'; ***REMOVED***\n     |       ^\n  63 |   set #℘(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-accessor-name/inst-private-name-underscore.js-strict:true": "test/language/statements/class/elements/private-accessor-name/inst-private-name-underscore.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/inst-private-name-underscore.js: Unexpected character '#' (62:6)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   get #_() ***REMOVED*** return 'get string'; ***REMOVED***\n     |       ^\n  63 |   set #_(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-accessor-name/static-private-escape-sequence-ZWJ.js-strict:true": "test/language/statements/class/elements/private-accessor-name/static-private-escape-sequence-ZWJ.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/static-private-escape-sequence-ZWJ.js: Unexpected character '#' (62:13)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   static get #ZW_\\u200D_J() ***REMOVED*** return 'get string'; ***REMOVED***\n     |              ^\n  63 |   static set #ZW_\\u200D_J(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   static getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-accessor-name/static-private-escape-sequence-ZWNJ.js-strict:true": "test/language/statements/class/elements/private-accessor-name/static-private-escape-sequence-ZWNJ.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/static-private-escape-sequence-ZWNJ.js: Unexpected character '#' (62:13)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   static get #ZW_\\u200C_NJ() ***REMOVED*** return 'get string'; ***REMOVED***\n     |              ^\n  63 |   static set #ZW_\\u200C_NJ(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   static getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-accessor-name/static-private-escape-sequence-u2118.js-strict:true": "test/language/statements/class/elements/private-accessor-name/static-private-escape-sequence-u2118.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/static-private-escape-sequence-u2118.js: Unexpected character '#' (62:13)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   static get #\\u2118() ***REMOVED*** return 'get string'; ***REMOVED***\n     |              ^\n  63 |   static set #\\u2118(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   static getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-accessor-name/static-private-escape-sequence-u6F.js-strict:true": "test/language/statements/class/elements/private-accessor-name/static-private-escape-sequence-u6F.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/static-private-escape-sequence-u6F.js: Unexpected character '#' (62:13)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   static get #\\u***REMOVED***6F***REMOVED***() ***REMOVED*** return 'get string'; ***REMOVED***\n     |              ^\n  63 |   static set #\\u***REMOVED***6F***REMOVED***(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   static getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-accessor-name/static-private-name-ZWJ.js-strict:true": "test/language/statements/class/elements/private-accessor-name/static-private-name-ZWJ.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/static-private-name-ZWJ.js: Unexpected character '#' (62:13)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   static get #ZW_‍_J() ***REMOVED*** return 'get string'; ***REMOVED***\n     |              ^\n  63 |   static set #ZW_‍_J(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   static getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-accessor-name/static-private-name-ZWNJ.js-strict:true": "test/language/statements/class/elements/private-accessor-name/static-private-name-ZWNJ.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/static-private-name-ZWNJ.js: Unexpected character '#' (62:13)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   static get #ZW_‌_NJ() ***REMOVED*** return 'get string'; ***REMOVED***\n     |              ^\n  63 |   static set #ZW_‌_NJ(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   static getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-accessor-name/static-private-name-common.js-strict:true": "test/language/statements/class/elements/private-accessor-name/static-private-name-common.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/static-private-name-common.js: Unexpected character '#' (62:13)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   static get #test262() ***REMOVED*** return 'get string'; ***REMOVED***\n     |              ^\n  63 |   static set #test262(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   static getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-accessor-name/static-private-name-dollar.js-strict:true": "test/language/statements/class/elements/private-accessor-name/static-private-name-dollar.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/static-private-name-dollar.js: Unexpected character '#' (62:13)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   static get #$() ***REMOVED*** return 'get string'; ***REMOVED***\n     |              ^\n  63 |   static set #$(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   static getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-accessor-name/static-private-name-u2118.js-strict:true": "test/language/statements/class/elements/private-accessor-name/static-private-name-u2118.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/static-private-name-u2118.js: Unexpected character '#' (62:13)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   static get #℘() ***REMOVED*** return 'get string'; ***REMOVED***\n     |              ^\n  63 |   static set #℘(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   static getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-accessor-name/static-private-name-underscore.js-strict:true": "test/language/statements/class/elements/private-accessor-name/static-private-name-underscore.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/static-private-name-underscore.js: Unexpected character '#' (62:13)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   static get #_() ***REMOVED*** return 'get string'; ***REMOVED***\n     |              ^\n  63 |   static set #_(param) ***REMOVED*** stringSet = param; ***REMOVED***\n  64 | \n  65 |   static getPrivateReference() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-async-method-name.js-strict:true": "test/language/statements/class/elements/private-async-method-name.js: SyntaxError: test/language/statements/class/elements/private-async-method-name.js: Unexpected character '#' (52:8)\n  50 | \n  51 | class C ***REMOVED***\n> 52 |   async #method() ***REMOVED******REMOVED***;\n     |         ^\n  53 | \n  54 |   getPrivateMethod() ***REMOVED***\n  55 |     return this.#method; <at omitted>",
  "test/language/statements/class/elements/private-getter-access-on-inner-arrow-function.js-strict:true": "test/language/statements/class/elements/private-getter-access-on-inner-arrow-function.js: SyntaxError: test/language/statements/class/elements/private-getter-access-on-inner-arrow-function.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   get #m() ***REMOVED*** return 'Test262'; ***REMOVED***\n     |       ^\n  27 | \n  28 |   method() ***REMOVED***\n  29 |     let arrowFunction = () => ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-getter-access-on-inner-function.js-strict:true": "test/language/statements/class/elements/private-getter-access-on-inner-function.js: SyntaxError: test/language/statements/class/elements/private-getter-access-on-inner-function.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   get #m() ***REMOVED*** return 'Test262'; ***REMOVED***\n     |       ^\n  27 | \n  28 |   method() ***REMOVED***\n  29 |     let self = this; <at omitted>",
  "test/language/statements/class/elements/private-getter-brand-check-multiple-evaluations-of-class.js-strict:true": "test/language/statements/class/elements/private-getter-brand-check-multiple-evaluations-of-class.js: SyntaxError: test/language/statements/class/elements/private-getter-brand-check-multiple-evaluations-of-class.js: Unexpected character '#' (25:8)\n  23 | let createAndInstantiateClass = function () ***REMOVED***\n  24 |   class C ***REMOVED***\n> 25 |     get #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |         ^\n  26 | \n  27 |     access(o) ***REMOVED***\n  28 |       return o.#m; <at omitted>",
  "test/language/statements/class/elements/private-getter-brand-check-super-class.js-strict:true": "test/language/statements/class/elements/private-getter-brand-check-super-class.js: SyntaxError: test/language/statements/class/elements/private-getter-brand-check-super-class.js: Unexpected character '#' (27:6)\n  25 | \n  26 | class S ***REMOVED***\n> 27 |   get #m() ***REMOVED*** return 'super class'; ***REMOVED***\n     |       ^\n  28 |   \n  29 |   superAccess() ***REMOVED*** return this.#m; ***REMOVED***\n  30 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-getter-brand-check.js-strict:true": "test/language/statements/class/elements/private-getter-brand-check.js: SyntaxError: test/language/statements/class/elements/private-getter-brand-check.js: Unexpected character '#' (32:6)\n  30 | \n  31 | class C ***REMOVED***\n> 32 |   get #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |       ^\n  33 |   \n  34 |   access(o) ***REMOVED***\n  35 |     return o.#m; <at omitted>",
  "test/language/statements/class/elements/private-getter-is-not-a-own-property.js-strict:true": "test/language/statements/class/elements/private-getter-is-not-a-own-property.js: SyntaxError: test/language/statements/class/elements/private-getter-is-not-a-own-property.js: Unexpected character '#' (31:6)\n  29 | \n  30 | class C ***REMOVED***\n> 31 |   get #m() ***REMOVED*** return \"Test262\"; ***REMOVED***\n     |       ^\n  32 | \n  33 |   checkPrivateGetter() ***REMOVED***\n  34 |     assert.sameValue(this.hasOwnProperty(\"#m\"), false); <at omitted>",
  "test/language/statements/class/elements/private-getter-is-not-clobbered-by-computed-property.js-strict:true": "test/language/statements/class/elements/private-getter-is-not-clobbered-by-computed-property.js: SyntaxError: test/language/statements/class/elements/private-getter-is-not-clobbered-by-computed-property.js: Unexpected character '#' (28:6)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   get #m() ***REMOVED*** return \"Test262\"; ***REMOVED***\n     |       ^\n  29 |   [\"#m\"] = 0;\n  30 |   \n  31 |   checkPrivateGetter() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-getter-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-getter-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-getter-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   get #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |       ^\n  27 | \n  28 |   B = class ***REMOVED***\n  29 |     method(o) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-getter-shadowed-by-getter-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-getter-shadowed-by-getter-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-getter-shadowed-by-getter-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   get #m() ***REMOVED*** return 'outer class'; ***REMOVED***\n     |       ^\n  27 | \n  28 |   method() ***REMOVED*** return this.#m; ***REMOVED***\n  29 |  <at omitted>",
  "test/language/statements/class/elements/private-getter-shadowed-by-method-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-getter-shadowed-by-method-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-getter-shadowed-by-method-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   get #m() ***REMOVED*** throw new Test262Error(); ***REMOVED***\n     |       ^\n  27 | \n  28 |   B = class ***REMOVED***\n  29 |     method(o) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-getter-shadowed-by-setter-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-getter-shadowed-by-setter-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-getter-shadowed-by-setter-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   get #m() ***REMOVED*** return 'outer class'; ***REMOVED***\n     |       ^\n  27 | \n  28 |   method() ***REMOVED*** return this.#m; ***REMOVED***\n  29 |  <at omitted>",
  "test/language/statements/class/elements/private-getter-visible-to-direct-eval-on-initializer.js-strict:true": "test/language/statements/class/elements/private-getter-visible-to-direct-eval-on-initializer.js: SyntaxError: test/language/statements/class/elements/private-getter-visible-to-direct-eval-on-initializer.js: Unexpected character '#' (43:6)\n  41 | \n  42 | class C ***REMOVED***\n> 43 |   get #m() ***REMOVED*** return \"Test262\"; ***REMOVED***;\n     |       ^\n  44 |   v = eval(\"this.#m\");\n  45 | ***REMOVED***\n  46 |  <at omitted>",
  "test/language/statements/class/elements/private-getter-visible-to-direct-eval.js-strict:true": "test/language/statements/class/elements/private-getter-visible-to-direct-eval.js: SyntaxError: test/language/statements/class/elements/private-getter-visible-to-direct-eval.js: Unexpected character '#' (43:6)\n  41 | \n  42 | class C ***REMOVED***\n> 43 |   get #m() ***REMOVED*** return \"Test262\"; ***REMOVED***;\n     |       ^\n  44 | \n  45 |   getWithEval() ***REMOVED***\n  46 |     return eval(\"this.#m\"); <at omitted>",
  "test/language/statements/class/elements/private-method-access-on-inner-arrow-function.js-strict:true": "test/language/statements/class/elements/private-method-access-on-inner-arrow-function.js: SyntaxError: test/language/statements/class/elements/private-method-access-on-inner-arrow-function.js: Unexpected character '#' (26:2)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   #m() ***REMOVED*** return 'Test262'; ***REMOVED***\n     |   ^\n  27 | \n  28 |   method() ***REMOVED***\n  29 |     let arrowFunction = () => ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-method-access-on-inner-function.js-strict:true": "test/language/statements/class/elements/private-method-access-on-inner-function.js: SyntaxError: test/language/statements/class/elements/private-method-access-on-inner-function.js: Unexpected character '#' (26:2)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   #m() ***REMOVED*** return 'Test262'; ***REMOVED***\n     |   ^\n  27 | \n  28 |   method() ***REMOVED***\n  29 |     let self = this; <at omitted>",
  "test/language/statements/class/elements/private-method-brand-check-multiple-evaluations-of-class.js-strict:true": "test/language/statements/class/elements/private-method-brand-check-multiple-evaluations-of-class.js: SyntaxError: test/language/statements/class/elements/private-method-brand-check-multiple-evaluations-of-class.js: Unexpected character '#' (25:4)\n  23 | let createAndInstantiateClass = function () ***REMOVED***\n  24 |   class C ***REMOVED***\n> 25 |     #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |     ^\n  26 |     \n  27 |     access(o) ***REMOVED***\n  28 |       return o.#m(); <at omitted>",
  "test/language/statements/class/elements/private-method-brand-check-super-class.js-strict:true": "test/language/statements/class/elements/private-method-brand-check-super-class.js: SyntaxError: test/language/statements/class/elements/private-method-brand-check-super-class.js: Unexpected character '#' (27:2)\n  25 | \n  26 | class S ***REMOVED***\n> 27 |   #method() ***REMOVED*** return 'super class'; ***REMOVED***\n     |   ^\n  28 |   \n  29 |   superAccess() ***REMOVED*** return this.#method(); ***REMOVED***\n  30 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-method-brand-check.js-strict:true": "test/language/statements/class/elements/private-method-brand-check.js: SyntaxError: test/language/statements/class/elements/private-method-brand-check.js: Unexpected character '#' (32:2)\n  30 | \n  31 | class C ***REMOVED***\n> 32 |   #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |   ^\n  33 |   \n  34 |   access(o) ***REMOVED***\n  35 |     return o.#m(); <at omitted>",
  "test/language/statements/class/elements/private-method-comparison-multiple-evaluations-of-class.js-strict:true": "test/language/statements/class/elements/private-method-comparison-multiple-evaluations-of-class.js: SyntaxError: test/language/statements/class/elements/private-method-comparison-multiple-evaluations-of-class.js: Unexpected character '#' (33:4)\n  31 | let createAndInstantiateClass = function () ***REMOVED***\n  32 |   class C ***REMOVED***\n> 33 |     #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |     ^\n  34 |     \n  35 |     getPrivateMethod() ***REMOVED***\n  36 |       return this.#m; <at omitted>",
  "test/language/statements/class/elements/private-method-comparison.js-strict:true": "test/language/statements/class/elements/private-method-comparison.js: SyntaxError: test/language/statements/class/elements/private-method-comparison.js: Unexpected character '#' (35:2)\n  33 | \n  34 | class C ***REMOVED***\n> 35 |   #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |   ^\n  36 |     \n  37 |   getPrivateMethod() ***REMOVED***\n  38 |       return this.#m; <at omitted>",
  "test/language/statements/class/elements/private-method-double-initialisation-get-and-set.js-strict:true": "test/language/statements/class/elements/private-method-double-initialisation-get-and-set.js: SyntaxError: test/language/statements/class/elements/private-method-double-initialisation-get-and-set.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C extends Base ***REMOVED***\n> 26 |   get #p() ***REMOVED******REMOVED***\n     |       ^\n  27 |   set #p(x) ***REMOVED******REMOVED***\n  28 | ***REMOVED***\n  29 |  <at omitted>",
  "test/language/statements/class/elements/private-method-double-initialisation-get.js-strict:true": "test/language/statements/class/elements/private-method-double-initialisation-get.js: SyntaxError: test/language/statements/class/elements/private-method-double-initialisation-get.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C extends Base ***REMOVED***\n> 26 |   get #p() ***REMOVED******REMOVED***\n     |       ^\n  27 | ***REMOVED***\n  28 | \n  29 | var obj = ***REMOVED******REMOVED***; <at omitted>",
  "test/language/statements/class/elements/private-method-double-initialisation-set.js-strict:true": "test/language/statements/class/elements/private-method-double-initialisation-set.js: SyntaxError: test/language/statements/class/elements/private-method-double-initialisation-set.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C extends Base ***REMOVED***\n> 26 |   set #p(x) ***REMOVED******REMOVED***\n     |       ^\n  27 | ***REMOVED***\n  28 | \n  29 | var obj = ***REMOVED******REMOVED***; <at omitted>",
  "test/language/statements/class/elements/private-method-double-initialisation.js-strict:true": "test/language/statements/class/elements/private-method-double-initialisation.js: SyntaxError: test/language/statements/class/elements/private-method-double-initialisation.js: Unexpected character '#' (26:2)\n  24 | \n  25 | class C extends Base ***REMOVED***\n> 26 |   #m() ***REMOVED******REMOVED***\n     |   ^\n  27 | ***REMOVED***\n  28 | \n  29 | var obj = ***REMOVED******REMOVED***; <at omitted>",
  "test/language/statements/class/elements/private-method-get-and-call.js-strict:true": "test/language/statements/class/elements/private-method-get-and-call.js: SyntaxError: test/language/statements/class/elements/private-method-get-and-call.js: Unexpected character '#' (35:2)\n  33 | \n  34 | class C ***REMOVED***\n> 35 |   #m() ***REMOVED*** return this._v; ***REMOVED***\n     |   ^\n  36 |     \n  37 |   getPrivateMethod() ***REMOVED***\n  38 |       return this.#m; <at omitted>",
  "test/language/statements/class/elements/private-method-is-not-a-own-property.js-strict:true": "test/language/statements/class/elements/private-method-is-not-a-own-property.js: SyntaxError: test/language/statements/class/elements/private-method-is-not-a-own-property.js: Unexpected character '#' (31:2)\n  29 | \n  30 | class C ***REMOVED***\n> 31 |   #m() ***REMOVED*** return \"Test262\"; ***REMOVED***\n     |   ^\n  32 | \n  33 |   checkPrivateMethod() ***REMOVED***\n  34 |     assert.sameValue(this.hasOwnProperty(\"#m\"), false); <at omitted>",
  "test/language/statements/class/elements/private-method-is-not-clobbered-by-computed-property.js-strict:true": "test/language/statements/class/elements/private-method-is-not-clobbered-by-computed-property.js: SyntaxError: test/language/statements/class/elements/private-method-is-not-clobbered-by-computed-property.js: Unexpected character '#' (28:2)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   #m() ***REMOVED*** return \"Test262\"; ***REMOVED***\n     |   ^\n  29 |   [\"#m\"] = 0;\n  30 |   \n  31 |   checkPrivateMethod() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-method-is-visible-in-computed-properties.js-strict:true": "test/language/statements/class/elements/private-method-is-visible-in-computed-properties.js: SyntaxError: test/language/statements/class/elements/private-method-is-visible-in-computed-properties.js: Unexpected character '#' (26:4)\n  24 | assert.throws(TypeError, function() ***REMOVED***\n  25 |   class C ***REMOVED***\n> 26 |     #m() ***REMOVED***\n     |     ^\n  27 |       throw new Test262Error();\n  28 |     ***REMOVED***\n  29 |  <at omitted>",
  "test/language/statements/class/elements/private-method-length.js-strict:true": "test/language/statements/class/elements/private-method-length.js: SyntaxError: test/language/statements/class/elements/private-method-length.js: Unexpected character '#' (39:2)\n  37 | \n  38 | class C ***REMOVED***\n> 39 |   #method(a) ***REMOVED******REMOVED***;\n     |   ^\n  40 | \n  41 |   getPrivateMethod() ***REMOVED***\n  42 |     return this.#method; <at omitted>",
  "test/language/statements/class/elements/private-method-not-writable.js-strict:true": "test/language/statements/class/elements/private-method-not-writable.js: SyntaxError: test/language/statements/class/elements/private-method-not-writable.js: Unexpected character '#' (23:2)\n  21 | \n  22 | class C ***REMOVED***\n> 23 |   #m() ***REMOVED******REMOVED***\n     |   ^\n  24 | \n  25 |   assign() ***REMOVED***\n  26 |     this.#m = 0; <at omitted>",
  "test/language/statements/class/elements/private-method-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-method-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-method-on-nested-class.js: Unexpected character '#' (26:2)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |   ^\n  27 | \n  28 |   B = class ***REMOVED***\n  29 |     method(o) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-method-referenced-from-static-method.js-strict:true": "test/language/statements/class/elements/private-method-referenced-from-static-method.js: SyntaxError: test/language/statements/class/elements/private-method-referenced-from-static-method.js: Unexpected character '#' (29:2)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   #f() ***REMOVED*** return 42; ***REMOVED***\n     |   ^\n  30 |   static g() ***REMOVED***\n  31 |     return this.#f();\n  32 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-method-shadowed-by-getter-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-method-shadowed-by-getter-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-method-shadowed-by-getter-on-nested-class.js: Unexpected character '#' (26:2)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   #m() ***REMOVED*** return 'outer class'; ***REMOVED***\n     |   ^\n  27 | \n  28 |   method() ***REMOVED*** return this.#m(); ***REMOVED***\n  29 |  <at omitted>",
  "test/language/statements/class/elements/private-method-shadowed-by-setter-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-method-shadowed-by-setter-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-method-shadowed-by-setter-on-nested-class.js: Unexpected character '#' (26:2)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   #m() ***REMOVED*** return 'outer class'; ***REMOVED***\n     |   ^\n  27 | \n  28 |   method() ***REMOVED*** return this.#m(); ***REMOVED***\n  29 |  <at omitted>",
  "test/language/statements/class/elements/private-method-shadowed-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-method-shadowed-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-method-shadowed-on-nested-class.js: Unexpected character '#' (26:2)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   #m() ***REMOVED*** throw new Test262Error(); ***REMOVED***\n     |   ^\n  27 | \n  28 |   B = class ***REMOVED***\n  29 |     method() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-method-visible-to-direct-eval-on-initializer.js-strict:true": "test/language/statements/class/elements/private-method-visible-to-direct-eval-on-initializer.js: SyntaxError: test/language/statements/class/elements/private-method-visible-to-direct-eval-on-initializer.js: Unexpected character '#' (43:2)\n  41 | \n  42 | class C ***REMOVED***\n> 43 |   #m() ***REMOVED*** return \"Test262\"; ***REMOVED***;\n     |   ^\n  44 |   v = eval(\"this.#m()\");\n  45 | ***REMOVED***\n  46 |  <at omitted>",
  "test/language/statements/class/elements/private-method-visible-to-direct-eval.js-strict:true": "test/language/statements/class/elements/private-method-visible-to-direct-eval.js: SyntaxError: test/language/statements/class/elements/private-method-visible-to-direct-eval.js: Unexpected character '#' (43:2)\n  41 | \n  42 | class C ***REMOVED***\n> 43 |   #m() ***REMOVED*** return \"Test262\"; ***REMOVED***;\n     |   ^\n  44 | \n  45 |   getWithEval() ***REMOVED***\n  46 |     return eval(\"this.#m()\"); <at omitted>",
  "test/language/statements/class/elements/private-methods/prod-private-method.js-strict:true": "test/language/statements/class/elements/private-methods/prod-private-method.js: SyntaxError: test/language/statements/class/elements/private-methods/prod-private-method.js: Unexpected character '#' (87:2)\n  85 | \n  86 | class C ***REMOVED***\n> 87 |   #m() ***REMOVED*** return 42; ***REMOVED***\n     |   ^\n  88 | \n  89 | \n  90 |   get ref() ***REMOVED*** return this.#m; ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-setter-access-on-inner-arrow-function.js-strict:true": "test/language/statements/class/elements/private-setter-access-on-inner-arrow-function.js: SyntaxError: test/language/statements/class/elements/private-setter-access-on-inner-arrow-function.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   set #m(v) ***REMOVED*** this._v = v; ***REMOVED***\n     |       ^\n  27 | \n  28 |   method() ***REMOVED***\n  29 |     let arrowFunction = () => ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-setter-access-on-inner-function.js-strict:true": "test/language/statements/class/elements/private-setter-access-on-inner-function.js: SyntaxError: test/language/statements/class/elements/private-setter-access-on-inner-function.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   set #m(v) ***REMOVED*** this._v = v; ***REMOVED***\n     |       ^\n  27 | \n  28 |   method() ***REMOVED***\n  29 |     let self = this; <at omitted>",
  "test/language/statements/class/elements/private-setter-brand-check-multiple-evaluations-of-class.js-strict:true": "test/language/statements/class/elements/private-setter-brand-check-multiple-evaluations-of-class.js: SyntaxError: test/language/statements/class/elements/private-setter-brand-check-multiple-evaluations-of-class.js: Unexpected character '#' (25:8)\n  23 | let createAndInstantiateClass = function () ***REMOVED***\n  24 |   class C ***REMOVED***\n> 25 |     set #m(v) ***REMOVED*** this._v = v; ***REMOVED***\n     |         ^\n  26 |     \n  27 |     access(o, v) ***REMOVED***\n  28 |       o.#m = v; <at omitted>",
  "test/language/statements/class/elements/private-setter-brand-check-super-class.js-strict:true": "test/language/statements/class/elements/private-setter-brand-check-super-class.js: SyntaxError: test/language/statements/class/elements/private-setter-brand-check-super-class.js: Unexpected character '#' (27:6)\n  25 | \n  26 | class S ***REMOVED***\n> 27 |   set #m(v) ***REMOVED*** this._v = v ***REMOVED***\n     |       ^\n  28 |   \n  29 |   superAccess(v) ***REMOVED*** this.#m = v; ***REMOVED***\n  30 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-setter-brand-check.js-strict:true": "test/language/statements/class/elements/private-setter-brand-check.js: SyntaxError: test/language/statements/class/elements/private-setter-brand-check.js: Unexpected character '#' (32:6)\n  30 | \n  31 | class C ***REMOVED***\n> 32 |   set #m(v) ***REMOVED*** this._v = v; ***REMOVED***\n     |       ^\n  33 |   \n  34 |   access(o, v) ***REMOVED***\n  35 |     return o.#m = v; <at omitted>",
  "test/language/statements/class/elements/private-setter-is-not-a-own-property.js-strict:true": "test/language/statements/class/elements/private-setter-is-not-a-own-property.js: SyntaxError: test/language/statements/class/elements/private-setter-is-not-a-own-property.js: Unexpected character '#' (31:6)\n  29 | \n  30 | class C ***REMOVED***\n> 31 |   set #m(v) ***REMOVED*** this._v = v; ***REMOVED***\n     |       ^\n  32 | \n  33 |   checkPrivateSetter() ***REMOVED***\n  34 |     assert.sameValue(this.hasOwnProperty(\"#m\"), false); <at omitted>",
  "test/language/statements/class/elements/private-setter-is-not-clobbered-by-computed-property.js-strict:true": "test/language/statements/class/elements/private-setter-is-not-clobbered-by-computed-property.js: SyntaxError: test/language/statements/class/elements/private-setter-is-not-clobbered-by-computed-property.js: Unexpected character '#' (28:6)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   set #m(v) ***REMOVED*** this._v = v; ***REMOVED***\n     |       ^\n  29 |   [\"#m\"] = 0;\n  30 |   \n  31 |   checkPrivateSetter() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-setter-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-setter-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-setter-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   set #m(v) ***REMOVED*** this._v = v; ***REMOVED***\n     |       ^\n  27 | \n  28 |   B = class ***REMOVED***\n  29 |     method(o, v) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-setter-shadowed-by-getter-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-setter-shadowed-by-getter-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-setter-shadowed-by-getter-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   set #m(v) ***REMOVED*** this._v = v; ***REMOVED***\n     |       ^\n  27 | \n  28 |   method(v) ***REMOVED*** this.#m = v; ***REMOVED***\n  29 |  <at omitted>",
  "test/language/statements/class/elements/private-setter-shadowed-by-method-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-setter-shadowed-by-method-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-setter-shadowed-by-method-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   set #m(v) ***REMOVED*** this._v = v; ***REMOVED***\n     |       ^\n  27 | \n  28 |   method(v) ***REMOVED*** this.#m = v; ***REMOVED***\n  29 |  <at omitted>",
  "test/language/statements/class/elements/private-setter-shadowed-by-setter-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-setter-shadowed-by-setter-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-setter-shadowed-by-setter-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   set #m(v) ***REMOVED*** this._v = v; ***REMOVED***\n     |       ^\n  27 | \n  28 |   method(v) ***REMOVED*** this.#m = v; ***REMOVED***\n  29 |  <at omitted>",
  "test/language/statements/class/elements/private-setter-visible-to-direct-eval-on-initializer.js-strict:true": "test/language/statements/class/elements/private-setter-visible-to-direct-eval-on-initializer.js: SyntaxError: test/language/statements/class/elements/private-setter-visible-to-direct-eval-on-initializer.js: Unexpected character '#' (44:6)\n  42 | \n  43 | class C ***REMOVED***\n> 44 |   set #m(v) ***REMOVED*** this._v = v; ***REMOVED***;\n     |       ^\n  45 |   v = (eval(\"this.#m = 53\"), this._v);\n  46 | ***REMOVED***\n  47 |  <at omitted>",
  "test/language/statements/class/elements/private-setter-visible-to-direct-eval.js-strict:true": "test/language/statements/class/elements/private-setter-visible-to-direct-eval.js: SyntaxError: test/language/statements/class/elements/private-setter-visible-to-direct-eval.js: Unexpected character '#' (44:6)\n  42 | \n  43 | class C ***REMOVED***\n> 44 |   set #m(v) ***REMOVED*** this._v = v; ***REMOVED***;\n     |       ^\n  45 | \n  46 |   setWithEval(v) ***REMOVED***\n  47 |     eval(\"this.#m = v\"); <at omitted>",
  "test/language/statements/class/elements/private-static-async-method-name.js-strict:true": "test/language/statements/class/elements/private-static-async-method-name.js: SyntaxError: test/language/statements/class/elements/private-static-async-method-name.js: Unexpected character '#' (54:15)\n  52 | \n  53 | class C ***REMOVED***\n> 54 |   static async #method() ***REMOVED******REMOVED***;\n     |                ^\n  55 | \n  56 |   static getPrivateMethod() ***REMOVED***\n  57 |     return this.#method; <at omitted>",
  "test/language/statements/class/elements/private-static-field-shadowed-by-getter-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-static-field-shadowed-by-getter-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-static-field-shadowed-by-getter-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | class C ***REMOVED***\n> 68 |   static #m = 'outer class';\n     |          ^\n  69 | \n  70 |   static fieldAccess() ***REMOVED***\n  71 |     return this.#m; <at omitted>",
  "test/language/statements/class/elements/private-static-field-shadowed-by-method-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-static-field-shadowed-by-method-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-static-field-shadowed-by-method-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | class C ***REMOVED***\n> 68 |   static #m = () => 'outer class';\n     |          ^\n  69 | \n  70 |   static fieldAccess() ***REMOVED***\n  71 |     return this.#m(); <at omitted>",
  "test/language/statements/class/elements/private-static-field-shadowed-by-setter-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-static-field-shadowed-by-setter-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-static-field-shadowed-by-setter-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | class C ***REMOVED***\n> 68 |   static #m = 'outer class';\n     |          ^\n  69 | \n  70 |   static fieldAccess() ***REMOVED***\n  71 |     return this.#m; <at omitted>",
  "test/language/statements/class/elements/private-static-field-usage-inside-nested-class.js-strict:true": "test/language/statements/class/elements/private-static-field-usage-inside-nested-class.js: SyntaxError: test/language/statements/class/elements/private-static-field-usage-inside-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | class C ***REMOVED***\n> 68 |   static #m = 'outer class';\n     |          ^\n  69 | \n  70 |   static B = class ***REMOVED***\n  71 |     static fieldAccess(o) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/private-static-field-visible-to-direct-eval.js-strict:true": "test/language/statements/class/elements/private-static-field-visible-to-direct-eval.js: SyntaxError: test/language/statements/class/elements/private-static-field-visible-to-direct-eval.js: Unexpected character '#' (43:9)\n  41 | \n  42 | class C ***REMOVED***\n> 43 |   static #m = 44;\n     |          ^\n  44 | \n  45 |   static getWithEval() ***REMOVED***\n  46 |     return eval(\"this.#m\"); <at omitted>",
  "test/language/statements/class/elements/private-static-getter-abrupt-completition.js-strict:true": "test/language/statements/class/elements/private-static-getter-abrupt-completition.js: SyntaxError: test/language/statements/class/elements/private-static-getter-abrupt-completition.js: Unexpected character '#' (28:6)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   get #m() ***REMOVED***\n     |       ^\n  29 |     throw new Test262Error();\n  30 |   ***REMOVED***\n  31 |  <at omitted>",
  "test/language/statements/class/elements/private-static-getter-visible-to-direct-eval.js-strict:true": "test/language/statements/class/elements/private-static-getter-visible-to-direct-eval.js: SyntaxError: test/language/statements/class/elements/private-static-getter-visible-to-direct-eval.js: Unexpected character '#' (43:13)\n  41 | \n  42 | class C ***REMOVED***\n> 43 |   static get #m() ***REMOVED***\n     |              ^\n  44 |     return 'Test262';\n  45 |   ***REMOVED***\n  46 |  <at omitted>",
  "test/language/statements/class/elements/private-static-method-length.js-strict:true": "test/language/statements/class/elements/private-static-method-length.js: SyntaxError: test/language/statements/class/elements/private-static-method-length.js: Unexpected character '#' (39:9)\n  37 | \n  38 | class C ***REMOVED***\n> 39 |   static #method(a, b, c) ***REMOVED******REMOVED***;\n     |          ^\n  40 | \n  41 |   static getPrivateMethod() ***REMOVED***\n  42 |     return this.#method; <at omitted>",
  "test/language/statements/class/elements/private-static-method-name.js-strict:true": "test/language/statements/class/elements/private-static-method-name.js: SyntaxError: test/language/statements/class/elements/private-static-method-name.js: Unexpected character '#' (62:9)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   static #method() ***REMOVED***\n     |          ^\n  63 |     return 'Test262';\n  64 |   ***REMOVED***;\n  65 |  <at omitted>",
  "test/language/statements/class/elements/private-static-method-not-writable.js-strict:true": "test/language/statements/class/elements/private-static-method-not-writable.js: SyntaxError: test/language/statements/class/elements/private-static-method-not-writable.js: Unexpected character '#' (23:9)\n  21 | \n  22 | class C ***REMOVED***\n> 23 |   static #m() ***REMOVED******REMOVED***\n     |          ^\n  24 | \n  25 |   static assign() ***REMOVED***\n  26 |     this.#m = 0; <at omitted>",
  "test/language/statements/class/elements/private-static-method-shadowed-by-getter-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-static-method-shadowed-by-getter-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-static-method-shadowed-by-getter-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | class C ***REMOVED***\n> 68 |   static #m() ***REMOVED*** return 'outer class'; ***REMOVED***\n     |          ^\n  69 | \n  70 |   static methodAccess() ***REMOVED***\n  71 |     return this.#m(); <at omitted>",
  "test/language/statements/class/elements/private-static-method-shadowed-by-method-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-static-method-shadowed-by-method-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-static-method-shadowed-by-method-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | class C ***REMOVED***\n> 68 |   static #m() ***REMOVED*** return 'outer class'; ***REMOVED***\n     |          ^\n  69 | \n  70 |   static methodAccess() ***REMOVED***\n  71 |     return this.#m(); <at omitted>",
  "test/language/statements/class/elements/private-static-method-shadowed-by-setter-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-static-method-shadowed-by-setter-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-static-method-shadowed-by-setter-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | class C ***REMOVED***\n> 68 |   static #m() ***REMOVED*** return 'outer class'; ***REMOVED***\n     |          ^\n  69 | \n  70 |   static methodAccess() ***REMOVED***\n  71 |     return this.#m(); <at omitted>",
  "test/language/statements/class/elements/private-static-method-usage-inside-nested-class.js-strict:true": "test/language/statements/class/elements/private-static-method-usage-inside-nested-class.js: SyntaxError: test/language/statements/class/elements/private-static-method-usage-inside-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | class C ***REMOVED***\n> 68 |   static #m() ***REMOVED***\n     |          ^\n  69 |     return 'outer class';\n  70 |   ***REMOVED***\n  71 |  <at omitted>",
  "test/language/statements/class/elements/private-static-method-visible-to-direct-eval.js-strict:true": "test/language/statements/class/elements/private-static-method-visible-to-direct-eval.js: SyntaxError: test/language/statements/class/elements/private-static-method-visible-to-direct-eval.js: Unexpected character '#' (43:9)\n  41 | \n  42 | class C ***REMOVED***\n> 43 |   static #m() ***REMOVED***\n     |          ^\n  44 |     return \"Test262\";\n  45 |   ***REMOVED***\n  46 |  <at omitted>",
  "test/language/statements/class/elements/private-static-setter-abrupt-completition.js-strict:true": "test/language/statements/class/elements/private-static-setter-abrupt-completition.js: SyntaxError: test/language/statements/class/elements/private-static-setter-abrupt-completition.js: Unexpected character '#' (29:6)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   set #m(_) ***REMOVED***\n     |       ^\n  30 |     throw new Test262Error();\n  31 |   ***REMOVED***\n  32 |  <at omitted>",
  "test/language/statements/class/elements/private-static-setter-visible-to-direct-eval.js-strict:true": "test/language/statements/class/elements/private-static-setter-visible-to-direct-eval.js: SyntaxError: test/language/statements/class/elements/private-static-setter-visible-to-direct-eval.js: Unexpected character '#' (43:13)\n  41 | \n  42 | class C ***REMOVED***\n> 43 |   static set #m(v) ***REMOVED***\n     |              ^\n  44 |     this._v = v;\n  45 |   ***REMOVED***\n  46 |  <at omitted>",
  "test/language/statements/class/elements/privategetter-on-proxy.js-strict:true": "test/language/statements/class/elements/privategetter-on-proxy.js: SyntaxError: test/language/statements/class/elements/privategetter-on-proxy.js: Unexpected character '#' (47:6)\n  45 | \n  46 | class Test extends ProxyBase ***REMOVED***\n> 47 |   get #f() ***REMOVED***\n     |       ^\n  48 |     return 3;\n  49 |   ***REMOVED***\n  50 |   method() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/privatemethods-on-proxy.js-strict:true": "test/language/statements/class/elements/privatemethods-on-proxy.js: SyntaxError: test/language/statements/class/elements/privatemethods-on-proxy.js: Unexpected character '#' (43:2)\n  41 | \n  42 | class Test extends ProxyBase ***REMOVED***\n> 43 |   #f() ***REMOVED***\n     |   ^\n  44 |     return 3;\n  45 |   ***REMOVED***\n  46 |   method() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/prod-private-getter-before-super-return-in-constructor.js-strict:true": "test/language/statements/class/elements/prod-private-getter-before-super-return-in-constructor.js: SyntaxError: test/language/statements/class/elements/prod-private-getter-before-super-return-in-constructor.js: Unexpected character '#' (40:15)\n  38 | \n  39 | class D extends C ***REMOVED***\n> 40 |     f() ***REMOVED*** this.#m; ***REMOVED***\n     |                ^\n  41 |     get #m() ***REMOVED*** return 42; ***REMOVED***\n  42 | ***REMOVED***\n  43 |  <at omitted>",
  "test/language/statements/class/elements/prod-private-getter-before-super-return-in-field-initializer.js-strict:true": "test/language/statements/class/elements/prod-private-getter-before-super-return-in-field-initializer.js: SyntaxError: test/language/statements/class/elements/prod-private-getter-before-super-return-in-field-initializer.js: Unexpected token (33:4)\n  31 | \n  32 | class C ***REMOVED***\n> 33 |   f = this.g();\n     |     ^\n  34 | \n  35 | ***REMOVED***\n  36 |  <at omitted>",
  "test/language/statements/class/elements/prod-private-method-before-super-return-in-constructor.js-strict:true": "test/language/statements/class/elements/prod-private-method-before-super-return-in-constructor.js: SyntaxError: test/language/statements/class/elements/prod-private-method-before-super-return-in-constructor.js: Unexpected character '#' (40:15)\n  38 | \n  39 | class D extends C ***REMOVED***\n> 40 |     f() ***REMOVED*** this.#m(); ***REMOVED***\n     |                ^\n  41 |     #m() ***REMOVED*** return 42; ***REMOVED***\n  42 | ***REMOVED***\n  43 |  <at omitted>",
  "test/language/statements/class/elements/prod-private-method-before-super-return-in-field-initializer.js-strict:true": "test/language/statements/class/elements/prod-private-method-before-super-return-in-field-initializer.js: SyntaxError: test/language/statements/class/elements/prod-private-method-before-super-return-in-field-initializer.js: Unexpected token (33:4)\n  31 | \n  32 | class C ***REMOVED***\n> 33 |   f = this.g();\n     |     ^\n  34 | \n  35 | ***REMOVED***\n  36 |  <at omitted>",
  "test/language/statements/class/elements/prod-private-setter-before-super-return-in-constructor.js-strict:true": "test/language/statements/class/elements/prod-private-setter-before-super-return-in-constructor.js: SyntaxError: test/language/statements/class/elements/prod-private-setter-before-super-return-in-constructor.js: Unexpected character '#' (40:15)\n  38 | \n  39 | class D extends C ***REMOVED***\n> 40 |     f() ***REMOVED*** this.#m = 42; ***REMOVED***\n     |                ^\n  41 |     set #m(val) ***REMOVED******REMOVED***\n  42 | ***REMOVED***\n  43 |  <at omitted>",
  "test/language/statements/class/elements/prod-private-setter-before-super-return-in-field-initializer.js-strict:true": "test/language/statements/class/elements/prod-private-setter-before-super-return-in-field-initializer.js: SyntaxError: test/language/statements/class/elements/prod-private-setter-before-super-return-in-field-initializer.js: Unexpected token (33:4)\n  31 | \n  32 | class C ***REMOVED***\n> 33 |   f = this.g();\n     |     ^\n  34 | \n  35 | ***REMOVED***\n  36 |  <at omitted>",
  "test/language/statements/class/elements/public-class-field-initialization-is-visible-to-proxy.js-strict:true": "test/language/statements/class/elements/public-class-field-initialization-is-visible-to-proxy.js: SyntaxError: test/language/statements/class/elements/public-class-field-initialization-is-visible-to-proxy.js: Unexpected token (29:4)\n  27 | \n  28 | class Base extends ProxyBase ***REMOVED***\n> 29 |   f = \"Test262\";\n     |     ^\n  30 | ***REMOVED***\n  31 | \n  32 | assert.throws(Test262Error, () => ***REMOVED*** new Base(); ***REMOVED***); <at omitted>",
  "test/language/statements/class/elements/public-class-field-initialization-on-super-class-with-setter.js-strict:true": "test/language/statements/class/elements/public-class-field-initialization-on-super-class-with-setter.js: SyntaxError: test/language/statements/class/elements/public-class-field-initialization-on-super-class-with-setter.js: Unexpected token (28:4)\n  26 | \n  27 | class Base extends Super ***REMOVED***\n> 28 |   f = \"Test262\";\n     |     ^\n  29 | ***REMOVED***\n  30 | \n  31 | let o = new Base(); <at omitted>",
  "test/language/statements/class/elements/redeclaration-symbol.js-strict:true": "test/language/statements/class/elements/redeclaration-symbol.js: SyntaxError: test/language/statements/class/elements/redeclaration-symbol.js: Unexpected token (39:6)\n  37 | \n  38 | class C ***REMOVED***\n> 39 |   [y] = (x.push(\"a\"), \"old_value\");\n     |       ^\n  40 |   [y] = (x.push(\"b\"), \"same_value\");\n  41 |   [y] = (x.push(\"c\"), \"same_value\");\n  42 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/redeclaration.js-strict:true": "test/language/statements/class/elements/redeclaration.js: SyntaxError: test/language/statements/class/elements/redeclaration.js: Unexpected token (38:4)\n  36 | \n  37 | class C ***REMOVED***\n> 38 |   y = (x.push(\"a\"), \"old_value\");\n     |     ^\n  39 |   [\"y\"] = (x.push(\"b\"), \"another_value\");\n  40 |   \"y\" = (x.push(\"c\"), \"same_value\");\n  41 |   y = (x.push(\"d\"), \"same_value\"); <at omitted>",
  "test/language/statements/class/elements/regular-definitions-computed-names.js-strict:true": "test/language/statements/class/elements/regular-definitions-computed-names.js: SyntaxError: test/language/statements/class/elements/regular-definitions-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"]\n     |       ^\n  29 |   \n  30 | ***REMOVED***\n  31 |  <at omitted>",
  "test/language/statements/class/elements/regular-definitions-computed-symbol-names.js-strict:true": "test/language/statements/class/elements/regular-definitions-computed-symbol-names.js: SyntaxError: test/language/statements/class/elements/regular-definitions-computed-symbol-names.js: Unexpected token (29:11)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   [x]; [y] = 42\n     |            ^\n  30 |   \n  31 | ***REMOVED***\n  32 |  <at omitted>",
  "test/language/statements/class/elements/regular-definitions-literal-names-asi.js-strict:true": "test/language/statements/class/elements/regular-definitions-literal-names-asi.js: SyntaxError: test/language/statements/class/elements/regular-definitions-literal-names-asi.js: Unexpected token (27:4)\n  25 | class C ***REMOVED***\n  26 |   a\n> 27 |   b = 42;\n     |     ^\n  28 |   \n  29 | ***REMOVED***\n  30 |  <at omitted>",
  "test/language/statements/class/elements/regular-definitions-literal-names.js-strict:true": "test/language/statements/class/elements/regular-definitions-literal-names.js: SyntaxError: test/language/statements/class/elements/regular-definitions-literal-names.js: Unexpected token (28:7)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   a; b = 42;\n     |        ^\n  29 |   c = fn\n  30 |   \n  31 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/regular-definitions-private-method-getter-usage.js-strict:true": "test/language/statements/class/elements/regular-definitions-private-method-getter-usage.js: SyntaxError: test/language/statements/class/elements/regular-definitions-private-method-getter-usage.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   get #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |       ^\n  27 |   method() ***REMOVED***\n  28 |     return this.#m;\n  29 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/regular-definitions-private-method-usage.js-strict:true": "test/language/statements/class/elements/regular-definitions-private-method-usage.js: SyntaxError: test/language/statements/class/elements/regular-definitions-private-method-usage.js: Unexpected character '#' (26:2)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   #m() ***REMOVED*** return 'test262'; ***REMOVED***\n     |   ^\n  27 |   method() ***REMOVED***\n  28 |     return this.#m();\n  29 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/regular-definitions-rs-field-identifier-initializer.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-field-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-field-identifier-initializer.js: Unexpected token (61:4)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   $ = 1; _ = 1; \\u***REMOVED***6F***REMOVED*** = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1\n     |     ^\n  62 |   \n  63 | ***REMOVED***\n  64 |  <at omitted>",
  "test/language/statements/class/elements/regular-definitions-rs-field-identifier.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-field-identifier.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-field-identifier.js: Missing class properties transform.\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   $; _; \\u***REMOVED***6F***REMOVED***; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J\n     |   ^\n  62 |   \n  63 | ***REMOVED***\n  64 |  <at omitted>",
  "test/language/statements/class/elements/regular-definitions-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (63:15)\n  61 | \n  62 | class C ***REMOVED***\n> 63 |   static async #$(value) ***REMOVED***\n     |                ^\n  64 |     return await value;\n  65 |   ***REMOVED***\n  66 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/regular-definitions-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (63:15)\n  61 | \n  62 | class C ***REMOVED***\n> 63 |   static async #$(value) ***REMOVED***\n     |                ^\n  64 |     return await value;\n  65 |   ***REMOVED***\n  66 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/regular-definitions-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (60:9)\n  58 | \n  59 | class C ***REMOVED***\n> 60 |   static #$(value) ***REMOVED***\n     |          ^\n  61 |     return value;\n  62 |   ***REMOVED***\n  63 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/regular-definitions-rs-static-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-method-privatename-identifier.js: Unexpected character '#' (60:9)\n  58 | \n  59 | class C ***REMOVED***\n> 60 |   static #$(value) ***REMOVED***\n     |          ^\n  61 |     return value;\n  62 |   ***REMOVED***\n  63 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (60:9)\n  58 | \n  59 | class C ***REMOVED***\n> 60 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n     |          ^\n  61 |   static $(value) ***REMOVED***\n  62 |     C.#$ = value;\n  63 |     return C.#$; <at omitted>",
  "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-alt.js: Unexpected character '#' (60:9)\n  58 | \n  59 | class C ***REMOVED***\n> 60 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n     |          ^\n  61 |   static $(value) ***REMOVED***\n  62 |     this.#$ = value;\n  63 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (60:9)\n  58 | \n  59 | class C ***REMOVED***\n> 60 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n     |          ^\n  61 |   static $(value) ***REMOVED***\n  62 |     C.#$ = value;\n  63 |     return C.#$; <at omitted>",
  "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (60:9)\n  58 | \n  59 | class C ***REMOVED***\n> 60 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n     |          ^\n  61 |   static $() ***REMOVED***\n  62 |     return C.#$;\n  63 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:9)\n  58 | \n  59 | class C ***REMOVED***\n> 60 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n     |          ^\n  61 |   static $() ***REMOVED***\n  62 |     return this.#$;\n  63 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (60:9)\n  58 | \n  59 | class C ***REMOVED***\n> 60 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1\n     |          ^\n  61 |   static $() ***REMOVED***\n  62 |     return this.#$;\n  63 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier.js: Unexpected character '#' (60:9)\n  58 | \n  59 | class C ***REMOVED***\n> 60 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n     |          ^\n  61 |   static $(value) ***REMOVED***\n  62 |     this.#$ = value;\n  63 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/regular-definitions-static-private-fields.js-strict:true": "test/language/statements/class/elements/regular-definitions-static-private-fields.js: SyntaxError: test/language/statements/class/elements/regular-definitions-static-private-fields.js: Unexpected character '#' (28:9)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   static #x; static #y\n     |          ^\n  29 |   static x() ***REMOVED***\n  30 |     this.#x = 42;\n  31 |     return this.#x; <at omitted>",
  "test/language/statements/class/elements/regular-definitions-static-private-methods-with-fields.js-strict:true": "test/language/statements/class/elements/regular-definitions-static-private-methods-with-fields.js: SyntaxError: test/language/statements/class/elements/regular-definitions-static-private-methods-with-fields.js: Unexpected character '#' (28:9)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   static #xVal; static #yVal\n     |          ^\n  29 |   static #x(value) ***REMOVED***\n  30 |     this.#xVal = value;\n  31 |     return this.#xVal; <at omitted>",
  "test/language/statements/class/elements/regular-definitions-static-private-methods.js-strict:true": "test/language/statements/class/elements/regular-definitions-static-private-methods.js: SyntaxError: test/language/statements/class/elements/regular-definitions-static-private-methods.js: Unexpected character '#' (29:9)\n  27 | class C ***REMOVED***\n  28 |   \n> 29 |   static #x(value) ***REMOVED***\n     |          ^\n  30 |     return value / 2;\n  31 |   ***REMOVED***\n  32 |   static #y(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/regular-definitions-string-literal-names.js-strict:true": "test/language/statements/class/elements/regular-definitions-string-literal-names.js: SyntaxError: test/language/statements/class/elements/regular-definitions-string-literal-names.js: Unexpected token (26:16)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   'a'; \"b\"; 'c' = 39;\n     |                 ^\n  27 |   \"d\" = 42\n  28 |   \n  29 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/same-line-method-computed-names.js-strict:true": "test/language/statements/class/elements/same-line-method-computed-names.js: SyntaxError: test/language/statements/class/elements/same-line-method-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"]; m() ***REMOVED*** return 42; ***REMOVED***\n     |       ^\n  29 |   \n  30 | ***REMOVED***\n  31 |  <at omitted>",
  "test/language/statements/class/elements/same-line-method-computed-symbol-names.js-strict:true": "test/language/statements/class/elements/same-line-method-computed-symbol-names.js: SyntaxError: test/language/statements/class/elements/same-line-method-computed-symbol-names.js: Unexpected token (29:11)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   [x]; [y] = 42; m() ***REMOVED*** return 42; ***REMOVED***\n     |            ^\n  30 |   \n  31 | ***REMOVED***\n  32 |  <at omitted>",
  "test/language/statements/class/elements/same-line-method-literal-names-asi.js-strict:true": "test/language/statements/class/elements/same-line-method-literal-names-asi.js: SyntaxError: test/language/statements/class/elements/same-line-method-literal-names-asi.js: Unexpected token (27:4)\n  25 | class C ***REMOVED***\n  26 |   a\n> 27 |   b = 42;; m() ***REMOVED*** return 42; ***REMOVED***\n     |     ^\n  28 |   \n  29 | ***REMOVED***\n  30 |  <at omitted>",
  "test/language/statements/class/elements/same-line-method-literal-names.js-strict:true": "test/language/statements/class/elements/same-line-method-literal-names.js: SyntaxError: test/language/statements/class/elements/same-line-method-literal-names.js: Unexpected token (28:7)\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   a; b = 42;\n     |        ^\n  29 |   c = fn; m() ***REMOVED*** return 42; ***REMOVED***\n  30 |   \n  31 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/same-line-method-private-method-getter-usage.js-strict:true": "test/language/statements/class/elements/same-line-method-private-method-getter-usage.js: SyntaxError: test/language/statements/class/elements/same-line-method-private-method-getter-usage.js: Unexpected character '#' (27:6)\n  25 | \n  26 | class C ***REMOVED***\n> 27 |   get #m() ***REMOVED*** return 'test262'; ***REMOVED***; m() ***REMOVED*** return 42; ***REMOVED***\n     |       ^\n  28 |   method() ***REMOVED***\n  29 |     return this.#m;\n  30 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/same-line-method-private-method-usage.js-strict:true": "test/language/statements/class/elements/same-line-method-private-method-usage.js: SyntaxError: test/language/statements/class/elements/same-line-method-private-method-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | class C ***REMOVED***\n> 27 |   #m() ***REMOVED*** return 'test262'; ***REMOVED***; m() ***REMOVED*** return 42; ***REMOVED***\n     |   ^\n  28 |   method() ***REMOVED***\n  29 |     return this.#m();\n  30 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/same-line-method-rs-field-identifier-initializer.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-field-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-field-identifier-initializer.js: Unexpected token (62:4)\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   $ = 1; _ = 1; \\u***REMOVED***6F***REMOVED*** = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1; m() ***REMOVED*** return 42; ***REMOVED***\n     |     ^\n  63 |   \n  64 | ***REMOVED***\n  65 |  <at omitted>",
  "test/language/statements/class/elements/same-line-method-rs-field-identifier.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-field-identifier.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-field-identifier.js: Missing class properties transform.\n  60 | \n  61 | class C ***REMOVED***\n> 62 |   $; _; \\u***REMOVED***6F***REMOVED***; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J; m() ***REMOVED*** return 42; ***REMOVED***\n     |   ^\n  63 |   \n  64 | ***REMOVED***\n  65 |  <at omitted>",
  "test/language/statements/class/elements/same-line-method-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:15)\n  62 | \n  63 | class C ***REMOVED***\n> 64 |   static async #$(value) ***REMOVED***\n     |                ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/same-line-method-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:15)\n  62 | \n  63 | class C ***REMOVED***\n> 64 |   static async #$(value) ***REMOVED***\n     |                ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/same-line-method-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$(value) ***REMOVED***\n     |          ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/same-line-method-rs-static-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$(value) ***REMOVED***\n     |          ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J; m() ***REMOVED*** return 42; ***REMOVED***\n     |          ^\n  62 |   static $(value) ***REMOVED***\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J; m() ***REMOVED*** return 42; ***REMOVED***\n     |          ^\n  62 |   static $(value) ***REMOVED***\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J; m() ***REMOVED*** return 42; ***REMOVED***\n     |          ^\n  62 |   static $(value) ***REMOVED***\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1; m() ***REMOVED*** return 42; ***REMOVED***\n     |          ^\n  62 |   static $() ***REMOVED***\n  63 |     return C.#$;\n  64 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1; m() ***REMOVED*** return 42; ***REMOVED***\n     |          ^\n  62 |   static $() ***REMOVED***\n  63 |     return this.#$;\n  64 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1; m() ***REMOVED*** return 42; ***REMOVED***\n     |          ^\n  62 |   static $() ***REMOVED***\n  63 |     return this.#$;\n  64 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J; m() ***REMOVED*** return 42; ***REMOVED***\n     |          ^\n  62 |   static $(value) ***REMOVED***\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/same-line-method-static-private-fields.js-strict:true": "test/language/statements/class/elements/same-line-method-static-private-fields.js: SyntaxError: test/language/statements/class/elements/same-line-method-static-private-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   static #x; static #y; m() ***REMOVED*** return 42; ***REMOVED***\n     |          ^\n  30 |   static x() ***REMOVED***\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/statements/class/elements/same-line-method-static-private-methods-with-fields.js-strict:true": "test/language/statements/class/elements/same-line-method-static-private-methods-with-fields.js: SyntaxError: test/language/statements/class/elements/same-line-method-static-private-methods-with-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   static #xVal; static #yVal; m() ***REMOVED*** return 42; ***REMOVED***\n     |          ^\n  30 |   static #x(value) ***REMOVED***\n  31 |     this.#xVal = value;\n  32 |     return this.#xVal; <at omitted>",
  "test/language/statements/class/elements/same-line-method-static-private-methods.js-strict:true": "test/language/statements/class/elements/same-line-method-static-private-methods.js: SyntaxError: test/language/statements/class/elements/same-line-method-static-private-methods.js: Unexpected character '#' (30:9)\n  28 | class C ***REMOVED***\n  29 |   ; m() ***REMOVED*** return 42; ***REMOVED***\n> 30 |   static #x(value) ***REMOVED***\n     |          ^\n  31 |     return value / 2;\n  32 |   ***REMOVED***\n  33 |   static #y(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/same-line-method-string-literal-names.js-strict:true": "test/language/statements/class/elements/same-line-method-string-literal-names.js: SyntaxError: test/language/statements/class/elements/same-line-method-string-literal-names.js: Unexpected token (26:16)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   'a'; \"b\"; 'c' = 39;\n     |                 ^\n  27 |   \"d\" = 42; m() ***REMOVED*** return 42; ***REMOVED***\n  28 |   \n  29 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/set-access-of-missing-private-setter.js-strict:true": "test/language/statements/class/elements/set-access-of-missing-private-setter.js: SyntaxError: test/language/statements/class/elements/set-access-of-missing-private-setter.js: Unexpected character '#' (29:6)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   get #f() ***REMOVED***\n     |       ^\n  30 |     throw new Test262Error();\n  31 |   ***REMOVED***\n  32 |  <at omitted>",
  "test/language/statements/class/elements/set-access-of-missing-private-static-setter.js-strict:true": "test/language/statements/class/elements/set-access-of-missing-private-static-setter.js: SyntaxError: test/language/statements/class/elements/set-access-of-missing-private-static-setter.js: Unexpected character '#' (29:13)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   static get #f() ***REMOVED***\n     |              ^\n  30 |     throw new Test262Error();\n  31 |   ***REMOVED***\n  32 |  <at omitted>",
  "test/language/statements/class/elements/set-access-of-missing-shadowed-private-setter.js-strict:true": "test/language/statements/class/elements/set-access-of-missing-shadowed-private-setter.js: SyntaxError: test/language/statements/class/elements/set-access-of-missing-shadowed-private-setter.js: Unexpected character '#' (29:6)\n  27 | \n  28 | class A ***REMOVED***\n> 29 |   set #f(v) ***REMOVED***\n     |       ^\n  30 |     throw new Test262Error();\n  31 |   ***REMOVED***\n  32 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/set-access-of-private-method.js-strict:true": "test/language/statements/class/elements/set-access-of-private-method.js: SyntaxError: test/language/statements/class/elements/set-access-of-private-method.js: Unexpected character '#' (29:2)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   #f() ***REMOVED***\n     |   ^\n  30 |     throw new Test262Error();\n  31 |   ***REMOVED***\n  32 |  <at omitted>",
  "test/language/statements/class/elements/set-access-of-shadowed-private-method.js-strict:true": "test/language/statements/class/elements/set-access-of-shadowed-private-method.js: SyntaxError: test/language/statements/class/elements/set-access-of-shadowed-private-method.js: Unexpected character '#' (29:6)\n  27 | \n  28 | class A ***REMOVED***\n> 29 |   set #f(v) ***REMOVED***\n     |       ^\n  30 |     throw new Test262Error();\n  31 |   ***REMOVED***\n  32 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/static-as-valid-instance-field-assigned.js-strict:true": "test/language/statements/class/elements/static-as-valid-instance-field-assigned.js: SyntaxError: test/language/statements/class/elements/static-as-valid-instance-field-assigned.js: Unexpected token (26:9)\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   static = \"foo\";\n     |          ^\n  27 | ***REMOVED***\n  28 | \n  29 | let c = new C(); <at omitted>",
  "test/language/statements/class/elements/static-as-valid-instance-field.js-strict:true": "test/language/statements/class/elements/static-as-valid-instance-field.js: SyntaxError: test/language/statements/class/elements/static-as-valid-instance-field.js: Missing class properties transform.\n  24 | \n  25 | class C ***REMOVED***\n> 26 |   static;\n     |   ^\n  27 | ***REMOVED***\n  28 | \n  29 | let c = new C(); <at omitted>",
  "test/language/statements/class/elements/static-as-valid-static-field-assigned.js-strict:true": "test/language/statements/class/elements/static-as-valid-static-field-assigned.js: SyntaxError: test/language/statements/class/elements/static-as-valid-static-field-assigned.js: Unexpected token (20:16)\n  18 | \n  19 | class C ***REMOVED***\n> 20 |   static static = \"test262\";\n     |                 ^\n  21 | ***REMOVED***\n  22 | \n  23 | verifyProperty(C, \"static\", ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/static-as-valid-static-field.js-strict:true": "test/language/statements/class/elements/static-as-valid-static-field.js: SyntaxError: test/language/statements/class/elements/static-as-valid-static-field.js: Missing class properties transform.\n  18 | \n  19 | class C ***REMOVED***\n> 20 |   static static;\n     |   ^\n  21 | ***REMOVED***\n  22 | \n  23 | verifyProperty(C, \"static\", ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/static-field-anonymous-function-length.js-strict:true": "test/language/statements/class/elements/static-field-anonymous-function-length.js: SyntaxError: test/language/statements/class/elements/static-field-anonymous-function-length.js: Unexpected character '#' (52:9)\n  50 | \n  51 | class C ***REMOVED***\n> 52 |   static #field = (a, b) => undefined;\n     |          ^\n  53 |   static field = function() ***REMOVED******REMOVED***;\n  54 | \n  55 |   static accessPrivateField() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/static-field-anonymous-function-name.js-strict:true": "test/language/statements/class/elements/static-field-anonymous-function-name.js: SyntaxError: test/language/statements/class/elements/static-field-anonymous-function-name.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static #field = () => 'Test262';\n     |          ^\n  62 |   static field = function() ***REMOVED*** return 42; ***REMOVED***;\n  63 | \n  64 |   static accessPrivateField() ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/static-field-declaration.js-strict:true": "test/language/statements/class/elements/static-field-declaration.js: SyntaxError: test/language/statements/class/elements/static-field-declaration.js: Unexpected token (75:11)\n  73 | \n  74 | class C ***REMOVED***\n> 75 |   static f = 'test262';\n     |            ^\n  76 |   static 'g';\n  77 |   static 0 = 'bar';\n  78 |   static [computed]; <at omitted>",
  "test/language/statements/class/elements/static-field-init-this-inside-arrow-function.js-strict:true": "test/language/statements/class/elements/static-field-init-this-inside-arrow-function.js: SyntaxError: test/language/statements/class/elements/static-field-init-this-inside-arrow-function.js: Unexpected token (61:11)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static f = () => this;\n     |            ^\n  62 | ***REMOVED***\n  63 | \n  64 | assert.sameValue(C.f(), C); <at omitted>",
  "test/language/statements/class/elements/static-field-init-with-this.js-strict:true": "test/language/statements/class/elements/static-field-init-with-this.js: SyntaxError: test/language/statements/class/elements/static-field-init-with-this.js: Unexpected token (61:11)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static f = 'test';\n     |            ^\n  62 |   static g = this.f + '262';\n  63 |   static h = eval('this.g') + 'test';\n  64 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/static-field-initializer-error.js-strict:true": "test/language/statements/class/elements/static-field-initializer-error.js: SyntaxError: test/language/statements/class/elements/static-field-initializer-error.js: Unexpected token (54:13)\n  52 | assert.throws(Test262Error, function() ***REMOVED***\n  53 |   class C ***REMOVED***\n> 54 |     static f = initThrows();\n     |              ^\n  55 |     static g;\n  56 |   ***REMOVED***;\n  57 |  <at omitted>",
  "test/language/statements/class/elements/static-field-redeclaration.js-strict:true": "test/language/statements/class/elements/static-field-redeclaration.js: SyntaxError: test/language/statements/class/elements/static-field-redeclaration.js: Unexpected token (61:11)\n  59 | \n  60 | class C ***REMOVED***\n> 61 |   static f = 'test';\n     |            ^\n  62 |   static f = this.f + '262';\n  63 |   static g() ***REMOVED***\n  64 |     return 45; <at omitted>",
  "test/language/statements/class/elements/static-fielddefinition-initializer-abrupt-completion.js-strict:true": "test/language/statements/class/elements/static-fielddefinition-initializer-abrupt-completion.js: SyntaxError: test/language/statements/class/elements/static-fielddefinition-initializer-abrupt-completion.js: Unexpected token (32:13)\n  30 | assert.throws(Test262Error, function() ***REMOVED***\n  31 |   class C ***REMOVED***\n> 32 |     static x = f();\n     |              ^\n  33 |   ***REMOVED***\n  34 | ***REMOVED***);\n  35 |  <at omitted>",
  "test/language/statements/class/elements/static-private-fields-proxy-default-handler-throws.js-strict:true": "test/language/statements/class/elements/static-private-fields-proxy-default-handler-throws.js: SyntaxError: test/language/statements/class/elements/static-private-fields-proxy-default-handler-throws.js: Unexpected character '#' (18:9)\n  16 | \n  17 | class C ***REMOVED***\n> 18 |   static #x = 1;\n     |          ^\n  19 |   static x() ***REMOVED***\n  20 |     return this.#x;\n  21 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/static-private-getter-access-on-inner-arrow-function.js-strict:true": "test/language/statements/class/elements/static-private-getter-access-on-inner-arrow-function.js: SyntaxError: test/language/statements/class/elements/static-private-getter-access-on-inner-arrow-function.js: Unexpected character '#' (29:13)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   static get #f() ***REMOVED***\n     |              ^\n  30 |     return 'Test262';\n  31 |   ***REMOVED***\n  32 |  <at omitted>",
  "test/language/statements/class/elements/static-private-getter-access-on-inner-class.js-strict:true": "test/language/statements/class/elements/static-private-getter-access-on-inner-class.js: SyntaxError: test/language/statements/class/elements/static-private-getter-access-on-inner-class.js: Unexpected character '#' (29:13)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   static get #f() ***REMOVED***\n     |              ^\n  30 |     return 'Test262';\n  31 |   ***REMOVED***\n  32 |  <at omitted>",
  "test/language/statements/class/elements/static-private-getter-access-on-inner-function.js-strict:true": "test/language/statements/class/elements/static-private-getter-access-on-inner-function.js: SyntaxError: test/language/statements/class/elements/static-private-getter-access-on-inner-function.js: Unexpected character '#' (29:13)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   static get #f() ***REMOVED***\n     |              ^\n  30 |     return 'Test262';\n  31 |   ***REMOVED***\n  32 |  <at omitted>",
  "test/language/statements/class/elements/static-private-getter.js-strict:true": "test/language/statements/class/elements/static-private-getter.js: SyntaxError: test/language/statements/class/elements/static-private-getter.js: Unexpected character '#' (44:13)\n  42 | \n  43 | class C ***REMOVED***\n> 44 |   static get #f() ***REMOVED***\n     |              ^\n  45 |     return 'Test262';\n  46 |   ***REMOVED***\n  47 |  <at omitted>",
  "test/language/statements/class/elements/static-private-method-access-on-inner-arrow-function.js-strict:true": "test/language/statements/class/elements/static-private-method-access-on-inner-arrow-function.js: SyntaxError: test/language/statements/class/elements/static-private-method-access-on-inner-arrow-function.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   static #f() ***REMOVED*** return 42; ***REMOVED***\n     |          ^\n  30 |   static g() ***REMOVED***\n  31 |     const arrowFunction = () => ***REMOVED***\n  32 |       return this.#f(); <at omitted>",
  "test/language/statements/class/elements/static-private-method-access-on-inner-function.js-strict:true": "test/language/statements/class/elements/static-private-method-access-on-inner-function.js: SyntaxError: test/language/statements/class/elements/static-private-method-access-on-inner-function.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   static #f() ***REMOVED*** return 42; ***REMOVED***\n     |          ^\n  30 |   static g() ***REMOVED***\n  31 |     const self = this;\n  32 |  <at omitted>",
  "test/language/statements/class/elements/static-private-method-and-instance-method-brand-check.js-strict:true": "test/language/statements/class/elements/static-private-method-and-instance-method-brand-check.js: SyntaxError: test/language/statements/class/elements/static-private-method-and-instance-method-brand-check.js: Unexpected character '#' (37:9)\n  35 | \n  36 | class C ***REMOVED***\n> 37 |   static #f() ***REMOVED***\n     |          ^\n  38 |     return 'static';\n  39 |   ***REMOVED***\n  40 |  <at omitted>",
  "test/language/statements/class/elements/static-private-method-referenced-from-instance-method.js-strict:true": "test/language/statements/class/elements/static-private-method-referenced-from-instance-method.js: SyntaxError: test/language/statements/class/elements/static-private-method-referenced-from-instance-method.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   static #f() ***REMOVED*** return 42; ***REMOVED***\n     |          ^\n  30 |   g() ***REMOVED***\n  31 |     return this.#f();\n  32 |   ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/static-private-method-subclass-receiver.js-strict:true": "test/language/statements/class/elements/static-private-method-subclass-receiver.js: SyntaxError: test/language/statements/class/elements/static-private-method-subclass-receiver.js: Unexpected character '#' (29:27)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   static f() ***REMOVED*** return this.#g(); ***REMOVED***\n     |                            ^\n  30 |   static #g() ***REMOVED*** return 42; ***REMOVED***\n  31 | \n  32 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/static-private-setter-access-on-inner-arrow-function.js-strict:true": "test/language/statements/class/elements/static-private-setter-access-on-inner-arrow-function.js: SyntaxError: test/language/statements/class/elements/static-private-setter-access-on-inner-arrow-function.js: Unexpected character '#' (29:13)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   static set #f(v) ***REMOVED***\n     |              ^\n  30 |     this._v = v;\n  31 |   ***REMOVED***\n  32 |  <at omitted>",
  "test/language/statements/class/elements/static-private-setter-access-on-inner-class.js-strict:true": "test/language/statements/class/elements/static-private-setter-access-on-inner-class.js: SyntaxError: test/language/statements/class/elements/static-private-setter-access-on-inner-class.js: Unexpected character '#' (29:13)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   static set #f(v) ***REMOVED***\n     |              ^\n  30 |     return this._v = v;\n  31 |   ***REMOVED***\n  32 |  <at omitted>",
  "test/language/statements/class/elements/static-private-setter-access-on-inner-function.js-strict:true": "test/language/statements/class/elements/static-private-setter-access-on-inner-function.js: SyntaxError: test/language/statements/class/elements/static-private-setter-access-on-inner-function.js: Unexpected character '#' (29:13)\n  27 | \n  28 | class C ***REMOVED***\n> 29 |   static set #f(v) ***REMOVED***\n     |              ^\n  30 |     this._v = v;\n  31 |   ***REMOVED***\n  32 |  <at omitted>",
  "test/language/statements/class/elements/static-private-setter.js-strict:true": "test/language/statements/class/elements/static-private-setter.js: SyntaxError: test/language/statements/class/elements/static-private-setter.js: Unexpected character '#' (44:13)\n  42 | \n  43 | class C ***REMOVED***\n> 44 |   static set #f(v) ***REMOVED***\n     |              ^\n  45 |     this._v = v;\n  46 |   ***REMOVED***\n  47 |  <at omitted>",
  "test/language/statements/class/elements/super-access-from-arrow-func-on-field.js-strict:true": "test/language/statements/class/elements/super-access-from-arrow-func-on-field.js: SyntaxError: test/language/statements/class/elements/super-access-from-arrow-func-on-field.js: Unexpected token (23:7)\n  21 | \n  22 | class C ***REMOVED***\n> 23 |   func = () => ***REMOVED***\n     |        ^\n  24 |       super.prop = 'test262';\n  25 |   ***REMOVED***\n  26 |  <at omitted>",
  "test/language/statements/class/elements/super-access-inside-a-private-getter.js-strict:true": "test/language/statements/class/elements/super-access-inside-a-private-getter.js: SyntaxError: test/language/statements/class/elements/super-access-inside-a-private-getter.js: Unexpected character '#' (41:6)\n  39 | \n  40 | class C extends A ***REMOVED***\n> 41 |   get #m() ***REMOVED***\n     |       ^\n  42 |     return super.method();\n  43 |   ***REMOVED***\n  44 |  <at omitted>",
  "test/language/statements/class/elements/super-access-inside-a-private-method.js-strict:true": "test/language/statements/class/elements/super-access-inside-a-private-method.js: SyntaxError: test/language/statements/class/elements/super-access-inside-a-private-method.js: Unexpected character '#' (38:2)\n  36 | \n  37 | class C extends A ***REMOVED***\n> 38 |   #m() ***REMOVED***\n     |   ^\n  39 |     return super.method();\n  40 |   ***REMOVED***\n  41 |  <at omitted>",
  "test/language/statements/class/elements/super-access-inside-a-private-setter.js-strict:true": "test/language/statements/class/elements/super-access-inside-a-private-setter.js: SyntaxError: test/language/statements/class/elements/super-access-inside-a-private-setter.js: Unexpected character '#' (40:6)\n  38 | \n  39 | class C extends A ***REMOVED***\n> 40 |   set #m(v) ***REMOVED***\n     |       ^\n  41 |     this._v = super.method(v);\n  42 |   ***REMOVED***\n  43 |  <at omitted>",
  "test/language/statements/class/elements/super-fielddefinition-initializer-abrupt-completion.js-strict:true": "test/language/statements/class/elements/super-fielddefinition-initializer-abrupt-completion.js: SyntaxError: test/language/statements/class/elements/super-fielddefinition-initializer-abrupt-completion.js: Unexpected token (46:4)\n  44 | \n  45 | class A ***REMOVED***\n> 46 |   x = f();\n     |     ^\n  47 | ***REMOVED***\n  48 | \n  49 | class C extends A ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/syntax/early-errors/grammar-static-get-meth-prototype.js-strict:true": "test/language/statements/class/elements/syntax/early-errors/grammar-static-get-meth-prototype.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/class/elements/syntax/early-errors/grammar-static-set-meth-prototype.js-strict:true": "test/language/statements/class/elements/syntax/early-errors/grammar-static-set-meth-prototype.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/class/elements/syntax/valid/grammar-field-classelementname-initializer-alt.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-field-classelementname-initializer-alt.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-field-classelementname-initializer-alt.js: Unexpected token (65:4)\n  63 | \n  64 | class C ***REMOVED***\n> 65 |   $ = 1;\n     |     ^\n  66 |   _ = 2;\n  67 |   \\u***REMOVED***6F***REMOVED*** = 3;\n  68 |   ℘ = 4;      // DO NOT CHANGE THE NAME OF THIS FIELD <at omitted>",
  "test/language/statements/class/elements/syntax/valid/grammar-field-classelementname-initializer.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-field-classelementname-initializer.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-field-classelementname-initializer.js: Unexpected token (65:4)\n  63 | \n  64 | class C ***REMOVED***\n> 65 |   $ = 1;\n     |     ^\n  66 |   _ = 2;\n  67 |   \\u***REMOVED***6F***REMOVED*** = 3;\n  68 |   \\u2118 = 4; <at omitted>",
  "test/language/statements/class/elements/syntax/valid/grammar-field-identifier-alt.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-field-identifier-alt.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-field-identifier-alt.js: Missing class properties transform.\n  63 | \n  64 | class C ***REMOVED***\n> 65 |   $;\n     |   ^\n  66 |   _;\n  67 |   \\u***REMOVED***6F***REMOVED***;\n  68 |   ℘;      // DO NOT CHANGE THE NAME OF THIS FIELD <at omitted>",
  "test/language/statements/class/elements/syntax/valid/grammar-field-identifier.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-field-identifier.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-field-identifier.js: Missing class properties transform.\n  63 | \n  64 | class C ***REMOVED***\n> 65 |   $;\n     |   ^\n  66 |   _;\n  67 |   \\u***REMOVED***6F***REMOVED***;\n  68 |   \\u2118; <at omitted>",
  "test/language/statements/class/elements/syntax/valid/grammar-fields-multi-line.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-fields-multi-line.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-fields-multi-line.js: Missing class properties transform.\n  26 | \n  27 | class C ***REMOVED***\n> 28 |   x\n     |   ^\n  29 |   y\n  30 | ***REMOVED***\n  31 |  <at omitted>",
  "test/language/statements/class/elements/syntax/valid/grammar-privatemeth-duplicate-get-set.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-privatemeth-duplicate-get-set.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-privatemeth-duplicate-get-set.js: Unexpected character '#' (20:6)\n  18 | \n  19 | class C ***REMOVED***\n> 20 |   get #m() ***REMOVED******REMOVED***\n     |       ^\n  21 |   set #m(_) ***REMOVED******REMOVED***\n  22 | ***REMOVED***\n  23 |  <at omitted>",
  "test/language/statements/class/elements/syntax/valid/grammar-privatemeth-duplicate-meth-nestedclassmeth.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-privatemeth-duplicate-meth-nestedclassmeth.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-privatemeth-duplicate-meth-nestedclassmeth.js: Unexpected character '#' (22:6)\n  20 |   constructor() ***REMOVED***\n  21 |     class B ***REMOVED***\n> 22 |       #m() ***REMOVED******REMOVED***\n     |       ^\n  23 |     ***REMOVED***\n  24 |   ***REMOVED***\n  25 |  <at omitted>",
  "test/language/statements/class/elements/syntax/valid/grammar-static-private-meth-prototype.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-static-private-meth-prototype.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-static-private-meth-prototype.js: Unexpected character '#' (20:9)\n  18 | \n  19 | class C ***REMOVED***\n> 20 |   static #prototype() ***REMOVED******REMOVED***\n     |          ^\n  21 | ***REMOVED***\n  22 |  <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-computed-names.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-computed-names.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-computed-names.js: Unexpected token (29:12)\n  27 | class C ***REMOVED***\n  28 |   ;;;;\n> 29 |   ;;;;;;[x] = 42; [10] = \"meep\"; [\"not initialized\"];;;;;;;\n     |             ^\n  30 |   ;;;;\n  31 |   \n  32 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-computed-symbol-names.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-computed-symbol-names.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-computed-symbol-names.js: Unexpected token (30:17)\n  28 | class C ***REMOVED***\n  29 |   ;;;;\n> 30 |   ;;;;;;[x]; [y] = 42;;;;;;;\n     |                  ^\n  31 |   ;;;;\n  32 |   \n  33 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-literal-names-asi.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-literal-names-asi.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-literal-names-asi.js: Unexpected token (28:4)\n  26 |   ;;;;\n  27 |   ;;;;;;a\n> 28 |   b = 42;;;;;;;;\n     |     ^\n  29 |   ;;;;\n  30 |   \n  31 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-literal-names.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-literal-names.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-literal-names.js: Unexpected token (29:13)\n  27 | class C ***REMOVED***\n  28 |   ;;;;\n> 29 |   ;;;;;;a; b = 42;\n     |              ^\n  30 |   c = fn;;;;;;;\n  31 |   ;;;;\n  32 |    <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-private-method-getter-usage.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-private-method-getter-usage.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-private-method-getter-usage.js: Unexpected character '#' (27:12)\n  25 | class C ***REMOVED***\n  26 |   ;;;;\n> 27 |   ;;;;;;get #m() ***REMOVED*** return 'test262'; ***REMOVED***;;;;;;;\n     |             ^\n  28 |   ;;;;\n  29 |   method() ***REMOVED***\n  30 |     return this.#m; <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-private-method-usage.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-private-method-usage.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-private-method-usage.js: Unexpected character '#' (27:8)\n  25 | class C ***REMOVED***\n  26 |   ;;;;\n> 27 |   ;;;;;;#m() ***REMOVED*** return 'test262'; ***REMOVED***;;;;;;;\n     |         ^\n  28 |   ;;;;\n  29 |   method() ***REMOVED***\n  30 |     return this.#m(); <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-rs-field-identifier-initializer.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-field-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-field-identifier-initializer.js: Unexpected token (62:10)\n  60 | class C ***REMOVED***\n  61 |   ;;;;\n> 62 |   ;;;;;;$ = 1; _ = 1; \\u***REMOVED***6F***REMOVED*** = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;;;;;;;\n     |           ^\n  63 |   ;;;;\n  64 |   \n  65 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-rs-field-identifier.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-field-identifier.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-field-identifier.js: Missing class properties transform.\n  60 | class C ***REMOVED***\n  61 |   ;;;;\n> 62 |   ;;;;;;$; _; \\u***REMOVED***6F***REMOVED***; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J;;;;;;;\n     |         ^\n  63 |   ;;;;\n  64 |   \n  65 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:21)\n  62 | class C ***REMOVED***\n  63 |   ;;;;\n> 64 |   ;;;;;;static async #$(value) ***REMOVED***\n     |                      ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:21)\n  62 | class C ***REMOVED***\n  63 |   ;;;;\n> 64 |   ;;;;;;static async #$(value) ***REMOVED***\n     |                      ^\n  65 |     return await value;\n  66 |   ***REMOVED***\n  67 |   static async #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:15)\n  59 | class C ***REMOVED***\n  60 |   ;;;;\n> 61 |   ;;;;;;static #$(value) ***REMOVED***\n     |                ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:15)\n  59 | class C ***REMOVED***\n  60 |   ;;;;\n> 61 |   ;;;;;;static #$(value) ***REMOVED***\n     |                ^\n  62 |     return value;\n  63 |   ***REMOVED***\n  64 |   static #_(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:15)\n  59 | class C ***REMOVED***\n  60 |   ;;;;\n> 61 |   ;;;;;;static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $(value) ***REMOVED***\n  64 |     C.#$ = value; <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:15)\n  59 | class C ***REMOVED***\n  60 |   ;;;;\n> 61 |   ;;;;;;static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $(value) ***REMOVED***\n  64 |     this.#$ = value; <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:15)\n  59 | class C ***REMOVED***\n  60 |   ;;;;\n> 61 |   ;;;;;;static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $(value) ***REMOVED***\n  64 |     C.#$ = value; <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:15)\n  59 | class C ***REMOVED***\n  60 |   ;;;;\n> 61 |   ;;;;;;static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $() ***REMOVED***\n  64 |     return C.#$; <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:15)\n  59 | class C ***REMOVED***\n  60 |   ;;;;\n> 61 |   ;;;;;;static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $() ***REMOVED***\n  64 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:15)\n  59 | class C ***REMOVED***\n  60 |   ;;;;\n> 61 |   ;;;;;;static #$ = 1; static #_ = 1; static #\\u***REMOVED***6F***REMOVED*** = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $() ***REMOVED***\n  64 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier.js: Unexpected character '#' (61:15)\n  59 | class C ***REMOVED***\n  60 |   ;;;;\n> 61 |   ;;;;;;static #$; static #_; static #\\u***REMOVED***6F***REMOVED***; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $(value) ***REMOVED***\n  64 |     this.#$ = value; <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-static-private-fields.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-static-private-fields.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-static-private-fields.js: Unexpected character '#' (29:15)\n  27 | class C ***REMOVED***\n  28 |   ;;;;\n> 29 |   ;;;;;;static #x; static #y;;;;;;;\n     |                ^\n  30 |   ;;;;\n  31 |   static x() ***REMOVED***\n  32 |     this.#x = 42; <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-static-private-methods-with-fields.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-static-private-methods-with-fields.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-static-private-methods-with-fields.js: Unexpected character '#' (29:15)\n  27 | class C ***REMOVED***\n  28 |   ;;;;\n> 29 |   ;;;;;;static #xVal; static #yVal;;;;;;;\n     |                ^\n  30 |   ;;;;\n  31 |   static #x(value) ***REMOVED***\n  32 |     this.#xVal = value; <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-static-private-methods.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-static-private-methods.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-static-private-methods.js: Unexpected character '#' (31:9)\n  29 |   ;;;;;;;;;;;;;\n  30 |   ;;;;\n> 31 |   static #x(value) ***REMOVED***\n     |          ^\n  32 |     return value / 2;\n  33 |   ***REMOVED***\n  34 |   static #y(value) ***REMOVED*** <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-string-literal-names.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-string-literal-names.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-string-literal-names.js: Unexpected token (27:22)\n  25 | class C ***REMOVED***\n  26 |   ;;;;\n> 27 |   ;;;;;;'a'; \"b\"; 'c' = 39;\n     |                       ^\n  28 |   \"d\" = 42;;;;;;;\n  29 |   ;;;;\n  30 |    <at omitted>",
  "test/language/statements/class/name-binding/const.js-strict:true": "test/language/statements/class/name-binding/const.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all <at omitted>",
  "test/language/statements/class/name-binding/in-extends-expression-assigned.js-strict:true": "test/language/statements/class/name-binding/in-extends-expression-assigned.js: Test262Error: Expected a ReferenceError but got a TypeError <at omitted>",
  "test/language/statements/class/scope-name-lex-open-heritage.js-strict:true": "test/language/statements/class/scope-name-lex-open-heritage.js: Test262Error: inner binding is independent Expected SameValue(«null», «function C() ***REMOVED***_classCallCheck(this, C);return _possibleConstructorReturn(this, (C.__proto__ || Object.getPrototypeOf(C)).apply(this, arguments));***REMOVED***») to be true <at omitted>",
  "test/language/statements/class/scope-name-lex-open-no-heritage.js-strict:true": "test/language/statements/class/scope-name-lex-open-no-heritage.js: Test262Error: inner binding rejects modification Expected a TypeError to be thrown but no exception was thrown at all <at omitted>",
  "test/language/statements/class/static-classelementname-abrupt-completion.js-strict:true": "test/language/statements/class/static-classelementname-abrupt-completion.js: SyntaxError: test/language/statements/class/static-classelementname-abrupt-completion.js: Missing class properties transform.\n  30 | assert.throws(Test262Error, function() ***REMOVED***\n  31 |   class C ***REMOVED***\n> 32 |     static [f()]\n     |     ^\n  33 |   ***REMOVED***\n  34 | ***REMOVED***);\n  35 |  <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-AggregateError.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-AggregateError.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-Array.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Array.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-ArrayBuffer.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-ArrayBuffer.js: TypeError: Constructor ArrayBuffer requires 'new' <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-DataView.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-DataView.js: TypeError: Constructor DataView requires 'new' <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-Error.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Error.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-EvalError.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-EvalError.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-Float32Array.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Float32Array.js: TypeError: Constructor TypedArray requires 'new' <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-Float64Array.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Float64Array.js: TypeError: Constructor TypedArray requires 'new' <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-Function.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Function.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-Int16Array.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Int16Array.js: TypeError: Constructor TypedArray requires 'new' <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-Int32Array.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Int32Array.js: TypeError: Constructor TypedArray requires 'new' <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-Int8Array.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Int8Array.js: TypeError: Constructor TypedArray requires 'new' <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-Map.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Map.js: TypeError: Constructor Map requires 'new' <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-Object.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Object.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-Promise.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Promise.js: TypeError: Constructor Promise requires 'new' <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-RangeError.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-RangeError.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-ReferenceError.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-ReferenceError.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-RegExp.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-RegExp.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-Set.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Set.js: TypeError: Constructor Set requires 'new' <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-SyntaxError.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-SyntaxError.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-TypeError.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-TypeError.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-URIError.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-URIError.js: Test262Error: Expected true but got false <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-Uint16Array.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Uint16Array.js: TypeError: Constructor TypedArray requires 'new' <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-Uint32Array.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Uint32Array.js: TypeError: Constructor TypedArray requires 'new' <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-Uint8Array.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Uint8Array.js: TypeError: Constructor TypedArray requires 'new' <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-Uint8ClampedArray.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Uint8ClampedArray.js: TypeError: Constructor TypedArray requires 'new' <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-WeakMap.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-WeakMap.js: TypeError: Constructor WeakMap requires 'new' <at omitted>",
  "test/language/statements/class/subclass-builtins/subclass-WeakSet.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-WeakSet.js: TypeError: Constructor WeakSet requires 'new' <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/Array/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Array/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/Array/super-must-be-called.js: missing super() call in constructor\n  18 | \n  19 | class A extends Array ***REMOVED***\n> 20 |   constructor() ***REMOVED******REMOVED***\n     |   ^\n  21 | ***REMOVED***\n  22 | \n  23 | assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/ArrayBuffer/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/ArrayBuffer/regular-subclassing.js: TypeError: Constructor ArrayBuffer requires 'new' <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/ArrayBuffer/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/ArrayBuffer/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/ArrayBuffer/super-must-be-called.js: missing super() call in constructor\n  19 | \n  20 | class AB1 extends ArrayBuffer ***REMOVED***\n> 21 |   constructor() ***REMOVED******REMOVED***\n     |   ^\n  22 | ***REMOVED***\n  23 | \n  24 | assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/Boolean/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Boolean/regular-subclassing.js: TypeError: Method Boolean.prototype.valueOf is called on incompatible receiver <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/Boolean/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Boolean/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/Boolean/super-must-be-called.js: missing super() call in constructor\n  15 | \n  16 | class Bln extends Boolean ***REMOVED***\n> 17 |   constructor() ***REMOVED******REMOVED***\n     |   ^\n  18 | ***REMOVED***\n  19 | \n  20 | // Boolean internals are not initialized <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/DataView/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/DataView/regular-subclassing.js: TypeError: Constructor DataView requires 'new' <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/DataView/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/DataView/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/DataView/super-must-be-called.js: missing super() call in constructor\n  19 | \n  20 | class DV1 extends DataView ***REMOVED***\n> 21 |   constructor() ***REMOVED******REMOVED***\n     |   ^\n  22 | ***REMOVED***\n  23 | \n  24 | var buffer = new ArrayBuffer(1); <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/Date/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Date/regular-subclassing.js: TypeError: Method Date.prototype.getFullYear is called on incompatible receiver <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/Date/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Date/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/Date/super-must-be-called.js: missing super() call in constructor\n  21 | \n  22 | class D extends Date ***REMOVED***\n> 23 |   constructor() ***REMOVED******REMOVED***\n     |   ^\n  24 | ***REMOVED***\n  25 | \n  26 | assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/Error/message-property-assignment.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Error/message-property-assignment.js: Test262Error: Expected SameValue(«», «custom-error») to be true <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/Error/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Error/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/Error/super-must-be-called.js: missing super() call in constructor\n  17 | \n  18 | class CustomError extends Error ***REMOVED***\n> 19 |   constructor() ***REMOVED******REMOVED***\n     |   ^\n  20 | ***REMOVED***\n  21 | \n  22 | assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/Function/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Function/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/Function/super-must-be-called.js: missing super() call in constructor\n  20 | \n  21 | class Fn extends Function ***REMOVED***\n> 22 |   constructor() ***REMOVED******REMOVED***\n     |   ^\n  23 | ***REMOVED***\n  24 | \n  25 | assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/Map/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Map/regular-subclassing.js: TypeError: Constructor Map requires 'new' <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/Map/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Map/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/Map/super-must-be-called.js: missing super() call in constructor\n  18 | \n  19 | class M1 extends Map ***REMOVED***\n> 20 |   constructor() ***REMOVED******REMOVED***\n     |   ^\n  21 | ***REMOVED***\n  22 | \n  23 | assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/NativeError/EvalError-message.js-strict:true": "test/language/statements/class/subclass/builtin-objects/NativeError/EvalError-message.js: Test262Error: Expected SameValue(«», «custom-eval-error») to be true <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/NativeError/EvalError-super.js-strict:true": "test/language/statements/class/subclass/builtin-objects/NativeError/EvalError-super.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/NativeError/EvalError-super.js: missing super() call in constructor\n  17 | \n  18 | class CustomError extends EvalError ***REMOVED***\n> 19 |   constructor() ***REMOVED******REMOVED***\n     |   ^\n  20 | ***REMOVED***\n  21 | \n  22 | assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/NativeError/RangeError-message.js-strict:true": "test/language/statements/class/subclass/builtin-objects/NativeError/RangeError-message.js: Test262Error: Expected SameValue(«», «custom-range-error») to be true <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/NativeError/RangeError-super.js-strict:true": "test/language/statements/class/subclass/builtin-objects/NativeError/RangeError-super.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/NativeError/RangeError-super.js: missing super() call in constructor\n  17 | \n  18 | class CustomError extends RangeError ***REMOVED***\n> 19 |   constructor() ***REMOVED******REMOVED***\n     |   ^\n  20 | ***REMOVED***\n  21 | \n  22 | assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/NativeError/ReferenceError-message.js-strict:true": "test/language/statements/class/subclass/builtin-objects/NativeError/ReferenceError-message.js: Test262Error: Expected SameValue(«», «custom-reference-error») to be true <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/NativeError/ReferenceError-super.js-strict:true": "test/language/statements/class/subclass/builtin-objects/NativeError/ReferenceError-super.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/NativeError/ReferenceError-super.js: missing super() call in constructor\n  17 | \n  18 | class CustomError extends ReferenceError ***REMOVED***\n> 19 |   constructor() ***REMOVED******REMOVED***\n     |   ^\n  20 | ***REMOVED***\n  21 | \n  22 | assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/NativeError/SyntaxError-message.js-strict:true": "test/language/statements/class/subclass/builtin-objects/NativeError/SyntaxError-message.js: Test262Error: Expected SameValue(«», «custom-syntax-error») to be true <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/NativeError/SyntaxError-super.js-strict:true": "test/language/statements/class/subclass/builtin-objects/NativeError/SyntaxError-super.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/NativeError/SyntaxError-super.js: missing super() call in constructor\n  17 | \n  18 | class CustomError extends SyntaxError ***REMOVED***\n> 19 |   constructor() ***REMOVED******REMOVED***\n     |   ^\n  20 | ***REMOVED***\n  21 | \n  22 | assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/NativeError/TypeError-message.js-strict:true": "test/language/statements/class/subclass/builtin-objects/NativeError/TypeError-message.js: Test262Error: Expected SameValue(«», «custom-type-error») to be true <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/NativeError/TypeError-super.js-strict:true": "test/language/statements/class/subclass/builtin-objects/NativeError/TypeError-super.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/NativeError/TypeError-super.js: missing super() call in constructor\n  17 | \n  18 | class CustomError extends TypeError ***REMOVED***\n> 19 |   constructor() ***REMOVED******REMOVED***\n     |   ^\n  20 | ***REMOVED***\n  21 | \n  22 | assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/NativeError/URIError-message.js-strict:true": "test/language/statements/class/subclass/builtin-objects/NativeError/URIError-message.js: Test262Error: Expected SameValue(«», «custom-uri-error») to be true <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/NativeError/URIError-super.js-strict:true": "test/language/statements/class/subclass/builtin-objects/NativeError/URIError-super.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/NativeError/URIError-super.js: missing super() call in constructor\n  17 | \n  18 | class CustomError extends URIError ***REMOVED***\n> 19 |   constructor() ***REMOVED******REMOVED***\n     |   ^\n  20 | ***REMOVED***\n  21 | \n  22 | assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/Number/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Number/regular-subclassing.js: TypeError: Value is not a number: %!s(PANIC=String method: TypeError: Value is not a number) <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/Number/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Number/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/Number/super-must-be-called.js: missing super() call in constructor\n  18 | \n  19 | class N extends Number ***REMOVED***\n> 20 |   constructor() ***REMOVED******REMOVED***\n     |   ^\n  21 | ***REMOVED***\n  22 | \n  23 | assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/Object/constructor-return-undefined-throws.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Object/constructor-return-undefined-throws.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/Object/constructor-return-undefined-throws.js: missing super() call in constructor\n  29 | \n  30 | class Obj extends Object ***REMOVED***\n> 31 |   constructor() ***REMOVED***\n     |   ^\n  32 |     return undefined;\n  33 |   ***REMOVED***\n  34 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/Object/constructor-returns-non-object.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Object/constructor-returns-non-object.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/Object/constructor-returns-non-object.js: missing super() call in constructor\n  32 | \n  33 | class Obj extends Object ***REMOVED***\n> 34 |   constructor() ***REMOVED***\n     |   ^\n  35 |     return 42;\n  36 |   ***REMOVED***\n  37 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/Object/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Object/regular-subclassing.js: Test262Error: returns the class prototype Expected SameValue(«[object Object]», «[object Object]») to be false <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/Object/replacing-prototype.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Object/replacing-prototype.js: Test262Error: Replaces prototype Expected SameValue(«[object Object]», «42») to be true <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/Promise/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Promise/regular-subclassing.js: TypeError: Constructor Promise requires 'new' <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/Promise/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Promise/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/Promise/super-must-be-called.js: missing super() call in constructor\n  19 | \n  20 | class Prom1 extends Promise ***REMOVED***\n> 21 |   constructor() ***REMOVED******REMOVED***\n     |   ^\n  22 | ***REMOVED***\n  23 | \n  24 | assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/RegExp/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/RegExp/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/RegExp/super-must-be-called.js: missing super() call in constructor\n  18 | \n  19 | class RE1 extends RegExp ***REMOVED***\n> 20 |   constructor() ***REMOVED******REMOVED***\n     |   ^\n  21 | ***REMOVED***\n  22 | \n  23 | assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/Set/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Set/regular-subclassing.js: TypeError: Constructor Set requires 'new' <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/Set/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Set/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/Set/super-must-be-called.js: missing super() call in constructor\n  18 | \n  19 | class S1 extends Set ***REMOVED***\n> 20 |   constructor() ***REMOVED******REMOVED***\n     |   ^\n  21 | ***REMOVED***\n  22 | \n  23 | assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/String/length.js-strict:true": "test/language/statements/class/subclass/builtin-objects/String/length.js: TypeError: Cannot read property 'writable' of undefined <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/String/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/String/regular-subclassing.js: TypeError: String.prototype.toString is called on incompatible receiver <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/String/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/String/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/String/super-must-be-called.js: missing super() call in constructor\n  17 | \n  18 | class S1 extends String ***REMOVED***\n> 19 |   constructor() ***REMOVED******REMOVED***\n     |   ^\n  20 | ***REMOVED***\n  21 | \n  22 | assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/Symbol/new-symbol-with-super-throws.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Symbol/new-symbol-with-super-throws.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/TypedArray/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/TypedArray/regular-subclassing.js: TypeError: Constructor TypedArray requires 'new' <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/TypedArray/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/TypedArray/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/TypedArray/super-must-be-called.js: missing super() call in constructor\n  30 | ].forEach(function(Constructor) ***REMOVED***\n  31 |   class Typed extends Constructor ***REMOVED***\n> 32 |     constructor() ***REMOVED******REMOVED***\n     |     ^\n  33 |   ***REMOVED***\n  34 | \n  35 |   assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/WeakMap/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/WeakMap/regular-subclassing.js: TypeError: Constructor WeakMap requires 'new' <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/WeakMap/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/WeakMap/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/WeakMap/super-must-be-called.js: missing super() call in constructor\n  20 | \n  21 | class M1 extends WeakMap ***REMOVED***\n> 22 |   constructor() ***REMOVED******REMOVED***\n     |   ^\n  23 | ***REMOVED***\n  24 | \n  25 | assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/WeakSet/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/WeakSet/regular-subclassing.js: TypeError: Constructor WeakSet requires 'new' <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/WeakSet/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/WeakSet/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/WeakSet/super-must-be-called.js: missing super() call in constructor\n  20 | \n  21 | class WS1 extends WeakSet ***REMOVED***\n> 22 |   constructor() ***REMOVED******REMOVED***\n     |   ^\n  23 | ***REMOVED***\n  24 | \n  25 | assert.throws(ReferenceError, function() ***REMOVED*** <at omitted>",
  "test/language/statements/class/subclass/builtins.js-strict:true": "test/language/statements/class/subclass/builtins.js: TypeError: Constructor TypedArray requires 'new' <at omitted>",
  "test/language/statements/class/subclass/class-definition-null-proto-contains-return-override.js-strict:true": "test/language/statements/class/subclass/class-definition-null-proto-contains-return-override.js: SyntaxError: test/language/statements/class/subclass/class-definition-null-proto-contains-return-override.js: missing super() call in constructor\n  24 | \n  25 | class Foo extends null ***REMOVED***\n> 26 |   constructor() ***REMOVED***\n     |   ^\n  27 |     return obj = ***REMOVED******REMOVED***;\n  28 |   ***REMOVED***\n  29 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/subclass/class-definition-null-proto-missing-return-override.js-strict:true": "test/language/statements/class/subclass/class-definition-null-proto-missing-return-override.js: SyntaxError: test/language/statements/class/subclass/class-definition-null-proto-missing-return-override.js: missing super() call in constructor\n  32 | \n  33 | class Foo extends null ***REMOVED***\n> 34 |   constructor() ***REMOVED***\n     |   ^\n  35 |   ***REMOVED***\n  36 | ***REMOVED***\n  37 |  <at omitted>",
  "test/language/statements/class/subclass/class-definition-null-proto-super.js-strict:true": "test/language/statements/class/subclass/class-definition-null-proto-super.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all <at omitted>",
  "test/language/statements/class/subclass/class-definition-null-proto-this.js-strict:true": "test/language/statements/class/subclass/class-definition-null-proto-this.js: SyntaxError: test/language/statements/class/subclass/class-definition-null-proto-this.js: missing super() call in constructor\n  28 | \n  29 | class C extends null ***REMOVED***\n> 30 |   constructor() ***REMOVED***\n     |   ^\n  31 |     // Use an arrow function to access the `this` binding of the class constructor.\n  32 |     assert.throws(ReferenceError, () => ***REMOVED***\n  33 |       this; <at omitted>",
  "test/language/statements/class/subclass/derived-class-return-override-catch-finally-arrow.js-strict:true": "test/language/statements/class/subclass/derived-class-return-override-catch-finally-arrow.js: ReferenceError: _this is not defined <at omitted>",
  "test/language/statements/class/subclass/derived-class-return-override-catch-finally.js-strict:true": "test/language/statements/class/subclass/derived-class-return-override-catch-finally.js: ReferenceError: this hasn't been initialised - super() hasn't been called <at omitted>",
  "test/language/statements/class/subclass/derived-class-return-override-catch-super-arrow.js-strict:true": "test/language/statements/class/subclass/derived-class-return-override-catch-super-arrow.js: Test262Error: Expected a TypeError but got a ReferenceError <at omitted>",
  "test/language/statements/class/subclass/derived-class-return-override-catch-super.js-strict:true": "test/language/statements/class/subclass/derived-class-return-override-catch-super.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all <at omitted>",
  "test/language/statements/class/subclass/derived-class-return-override-catch.js-strict:true": "test/language/statements/class/subclass/derived-class-return-override-catch.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all <at omitted>",
  "test/language/statements/class/subclass/derived-class-return-override-finally-super-arrow.js-strict:true": "test/language/statements/class/subclass/derived-class-return-override-finally-super-arrow.js: ReferenceError: _this is not defined <at omitted>",
  "test/language/statements/class/subclass/derived-class-return-override-finally-super.js-strict:true": "test/language/statements/class/subclass/derived-class-return-override-finally-super.js: ReferenceError: this hasn't been initialised - super() hasn't been called <at omitted>",
  "test/language/statements/class/subclass/derived-class-return-override-for-of-arrow.js-strict:true": "test/language/statements/class/subclass/derived-class-return-override-for-of-arrow.js: ReferenceError: _this is not defined <at omitted>",
  "test/language/statements/class/subclass/derived-class-return-override-with-boolean.js-strict:true": "test/language/statements/class/subclass/derived-class-return-override-with-boolean.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all <at omitted>",
  "test/language/statements/class/subclass/derived-class-return-override-with-null.js-strict:true": "test/language/statements/class/subclass/derived-class-return-override-with-null.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all <at omitted>",
  "test/language/statements/class/subclass/derived-class-return-override-with-number.js-strict:true": "test/language/statements/class/subclass/derived-class-return-override-with-number.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all <at omitted>",
  "test/language/statements/class/subclass/derived-class-return-override-with-string.js-strict:true": "test/language/statements/class/subclass/derived-class-return-override-with-string.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all <at omitted>",
  "test/language/statements/class/subclass/derived-class-return-override-with-symbol.js-strict:true": "test/language/statements/class/subclass/derived-class-return-override-with-symbol.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all <at omitted>",
  "test/language/statements/class/subclass/superclass-arrow-function.js-strict:true": "test/language/statements/class/subclass/superclass-arrow-function.js: Test262Error: Expected a TypeError but got a Test262Error <at omitted>",
  "test/language/statements/class/super/in-constructor-superproperty-evaluation.js-strict:true": "test/language/statements/class/super/in-constructor-superproperty-evaluation.js: SyntaxError: test/language/statements/class/super/in-constructor-superproperty-evaluation.js: 'super.*' is not allowed before super()\n   9 | class Derived extends Object ***REMOVED***\n  10 |   constructor() ***REMOVED***\n> 11 |     super[super()];\n     |     ^\n  12 |     throw new Test262Error();\n  13 |   ***REMOVED***\n  14 | ***REMOVED*** <at omitted>",
  "test/language/statements/class/syntax/class-body-method-definition-super-property.js-strict:true": "test/language/statements/class/syntax/class-body-method-definition-super-property.js: Test262Error: Expected SameValue(«undefined», «1») to be true <at omitted>",
  "test/language/statements/class/syntax/escaped-static.js-strict:true": "test/language/statements/class/syntax/escaped-static.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/const/dstr/ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/const/dstr/ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/const/dstr/obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/const/dstr/obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/for-in/dstr/array-rest-before-elision.js-strict:true": "test/language/statements/for-in/dstr/array-rest-before-elision.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-in/dstr/array-rest-elision-invalid.js-strict:true": "test/language/statements/for-in/dstr/array-rest-elision-invalid.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/dstr/array-elem-init-fn-name-class.js-strict:true": "test/language/statements/for-of/dstr/array-elem-init-fn-name-class.js: Test262Error: descriptor value should be cls <at omitted>",
  "test/language/statements/for-of/dstr/array-rest-before-elision.js-strict:true": "test/language/statements/for-of/dstr/array-rest-before-elision.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/dstr/array-rest-elision-invalid.js-strict:true": "test/language/statements/for-of/dstr/array-rest-elision-invalid.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/dstr/const-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/for-of/dstr/const-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/for-of/dstr/const-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/for-of/dstr/const-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/for-of/dstr/let-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/for-of/dstr/let-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/for-of/dstr/let-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/for-of/dstr/let-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/for-of/dstr/obj-id-init-fn-name-class.js-strict:true": "test/language/statements/for-of/dstr/obj-id-init-fn-name-class.js: Test262Error: descriptor value should be cls <at omitted>",
  "test/language/statements/for-of/dstr/obj-prop-elem-init-fn-name-class.js-strict:true": "test/language/statements/for-of/dstr/obj-prop-elem-init-fn-name-class.js: Test262Error: descriptor value should be cls <at omitted>",
  "test/language/statements/for-of/dstr/var-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/for-of/dstr/var-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/for-of/dstr/var-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/for-of/dstr/var-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/for-of/escaped-of.js-strict:true": "test/language/statements/for-of/escaped-of.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/head-decl-no-expr.js-strict:true": "test/language/statements/for-of/head-decl-no-expr.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/head-expr-no-expr.js-strict:true": "test/language/statements/for-of/head-expr-no-expr.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/head-lhs-async-invalid.js-strict:true": "test/language/statements/for-of/head-lhs-async-invalid.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/head-var-no-expr.js-strict:true": "test/language/statements/for-of/head-var-no-expr.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/for/dstr/const-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/for/dstr/const-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/for/dstr/let-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/for/dstr/let-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/for/dstr/var-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/for/dstr/var-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/for/dstr/var-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/for/dstr/var-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/for/head-init-async-of.js-strict:true": "test/language/statements/for/head-init-async-of.js: test/language/statements/for/head-init-async-of.js: Line 14:15 Unexpected token => (and 2 more errors)",
  "test/language/statements/function/dstr/ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/function/dstr/ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/function/dstr/dflt-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/function/dstr/dflt-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/function/dstr/obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/function/dstr/obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/labeled/value-await-module-escaped.js-strict:true": "test/language/statements/labeled/value-await-module-escaped.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/labeled/value-await-module.js-strict:true": "test/language/statements/labeled/value-await-module.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/let/dstr/ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/let/dstr/ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/let/dstr/obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/let/dstr/obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/switch/scope-lex-async-function.js-strict:true": "test/language/statements/switch/scope-lex-async-function.js: error test/language/statements/switch/scope-lex-async-function.js: Line 22:27 Unexpected token function (and 2 more errors) happened <at omitted>",
  "test/language/statements/try/dstr/ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/try/dstr/ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/try/dstr/obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/try/dstr/obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/variable/dstr/ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/variable/dstr/ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/statements/variable/dstr/obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/variable/dstr/obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true <at omitted>",
  "test/language/white-space/mongolian-vowel-separator.js-strict:true": "test/language/white-space/mongolian-vowel-separator.js: error is not an object (Test262: This statement should not be evaluated.)"
***REMOVED***
