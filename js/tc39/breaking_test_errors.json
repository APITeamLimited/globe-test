{
  "test/annexB/built-ins/Function/createdynfn-html-close-comment-body.js-strict:true": "test/annexB/built-ins/Function/createdynfn-html-close-comment-body.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 2:3 Unexpected token \u003e (and 3 more errors) at Function (native)",
  "test/annexB/built-ins/Function/createdynfn-html-close-comment-params.js-strict:true": "test/annexB/built-ins/Function/createdynfn-html-close-comment-params.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 2:1 Unexpected token -- (and 1 more errors) at Function (native)",
  "test/annexB/built-ins/Function/createdynfn-html-open-comment-body.js-strict:true": "test/annexB/built-ins/Function/createdynfn-html-open-comment-body.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:23 Unexpected token \u003c (and 2 more errors) at Function (native)",
  "test/annexB/built-ins/Function/createdynfn-html-open-comment-params.js-strict:true": "test/annexB/built-ins/Function/createdynfn-html-open-comment-params.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:21 Unexpected token \u003c (and 2 more errors) at Function (native)",
  "test/annexB/built-ins/Function/createdynfn-no-line-terminator-html-close-comment-body.js-strict:true": "test/annexB/built-ins/Function/createdynfn-no-line-terminator-html-close-comment-body.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:25 Unexpected token \u003e (and 3 more errors) at Function (native)",
  "test/annexB/built-ins/RegExp/RegExp-leading-escape-BMP.js-strict:true": "test/annexB/built-ins/RegExp/RegExp-leading-escape-BMP.js: Test262Error: Code unit: d800 Expected SameValue(«\\\\\\ud800», «\\�») to be true at harness/sta.js:22:9(49)",
  "test/annexB/built-ins/RegExp/RegExp-trailing-escape-BMP.js-strict:true": "test/annexB/built-ins/RegExp/RegExp-trailing-escape-BMP.js: Test262Error: Code unit: d800 Expected SameValue(«a\\\\\\ud800», «a\\�») to be true at harness/sta.js:22:9(49)",
  "test/annexB/built-ins/RegExp/named-groups/non-unicode-malformed.js-strict:true": "test/annexB/built-ins/RegExp/named-groups/non-unicode-malformed.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/annexB/built-ins/RegExp/prototype/compile/pattern-string-invalid-u.js-strict:true": "test/annexB/built-ins/RegExp/prototype/compile/pattern-string-invalid-u.js: Test262Error: invalid pattern: { Expected a SyntaxError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/annexB/built-ins/RegExp/prototype/compile/this-subclass-instance.js-strict:true": "test/annexB/built-ins/RegExp/prototype/compile/this-subclass-instance.js: Test262Error: `subclass_regexp.compile()` throws TypeError Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/annexB/built-ins/RegExp/prototype/flags/order-after-compile.js-strict:true": "test/annexB/built-ins/RegExp/prototype/flags/order-after-compile.js: SyntaxError: Invalid flags supplied to RegExp constructor 'imsuyg' at compile (native)",
  "test/annexB/built-ins/escape/escape-above-astral.js-strict:true": "test/annexB/built-ins/escape/escape-above-astral.js: Test262Error: \\u{10401} =\u003e \\uD801\\uDC01 (surrogate pairs encoded in string) Expected SameValue(«%uFFFD%uFFFD», «%uD801%uDC01») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Array/length/define-own-prop-length-coercion-order-set.js-strict:true": "test/built-ins/Array/length/define-own-prop-length-coercion-order-set.js: Test262Error: Expected [number] and [number, number] to have the same contents.  at harness/sta.js:22:9(49)",
  "test/built-ins/Array/length/define-own-prop-length-coercion-order.js-strict:true": "test/built-ins/Array/length/define-own-prop-length-coercion-order.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/Array/length/define-own-prop-length-overflow-order.js-strict:true": "test/built-ins/Array/length/define-own-prop-length-overflow-order.js: Test262Error: Expected a RangeError but got a TypeError at harness/sta.js:22:9(49)",
  "test/built-ins/Array/prototype/flatMap/this-value-ctor-object-species-bad-throws.js-strict:true": "test/built-ins/Array/prototype/flatMap/this-value-ctor-object-species-bad-throws.js: Test262Error: throw TypeError if @@species is a number Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/Array/prototype/flatMap/this-value-ctor-object-species-custom-ctor-poisoned-throws.js-strict:true": "test/built-ins/Array/prototype/flatMap/this-value-ctor-object-species-custom-ctor-poisoned-throws.js: Test262Error: Return abrupt completion from species custom ctor Expected a Test262Error to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/Array/prototype/flatMap/this-value-ctor-object-species-custom-ctor.js-strict:true": "test/built-ins/Array/prototype/flatMap/this-value-ctor-object-species-custom-ctor.js: Test262Error: returned value is an instance of custom ctor at harness/sta.js:22:9(49)",
  "test/built-ins/Array/prototype/flatMap/this-value-ctor-object-species.js-strict:true": "test/built-ins/Array/prototype/flatMap/this-value-ctor-object-species.js: Test262Error: got species once Expected SameValue(«0», «1») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Array/prototype/reverse/length-exceeding-integer-limit-with-proxy.js-strict:true": "test/built-ins/Array/prototype/reverse/length-exceeding-integer-limit-with-proxy.js: Test262Error: Expected [Get:length, Get:0, Get:9007199254740990, Set:0, GetOwnPropertyDescriptor:0, DefineProperty:0, Set:9007199254740990, GetOwnPropertyDescriptor:9007199254740990, DefineProperty:9007199254740990, Get:1, Get:9007199254740989, Set:1, GetOwnPropertyDescriptor:1, DefineProperty:1, Set:9007199254740989, GetOwnPropertyDescriptor:9007199254740989, DefineProperty:9007199254740989, Get:2, Get:9007199254740988, Set:2, GetOwnPropertyDescriptor:2, DefineProperty:2, Set:9007199254740988, GetOwnPropertyDescriptor:9007199254740988, DefineProperty:9007199254740988, Get:3, Get:9007199254740987, Set:3, GetOwnPropertyDescriptor:3, DefineProperty:3, Set:9007199254740987, GetOwnPropertyDescriptor:9007199254740987, DefineProperty:9007199254740987, Get:4] and [Get:length, Has:0, Get:0, Has:9007199254740990, Get:9007199254740990, Set:0, GetOwnPropertyDescriptor:0, DefineProperty:0, Set:9007199254740990, GetOwnPropertyDescriptor:9007199254740990, DefineProperty:9007199254740990, Has:1, Has:9007199254740989, Has:2, Get:2, Has:9007199254740988, Delete:2, Set:9007199254740988, GetOwnPropertyDescriptor:9007199254740988, DefineProperty:9007199254740988, Has:3, Has:9007199254740987, Get:9007199254740987, Set:3, GetOwnPropertyDescriptor:3, DefineProperty:3, Delete:9007199254740987, Has:4, Get:4] to have the same contents.  at harness/sta.js:22:9(49)",
  "test/built-ins/Array/prototype/splice/property-traps-order-with-species.js-strict:true": "test/built-ins/Array/prototype/splice/property-traps-order-with-species.js: Test262Error: Expected [defineProperty, defineProperty, set, getOwnPropertyDescriptor, defineProperty] and [defineProperty, defineProperty] to have the same contents.  at harness/sta.js:22:9(49)",
  "test/built-ins/ArrayBuffer/isView/arg-is-dataview-subclass-instance.js-strict:true": "test/built-ins/ArrayBuffer/isView/arg-is-dataview-subclass-instance.js: TypeError: Constructor DataView requires 'new' at apply (native)",
  "test/built-ins/ArrayBuffer/isView/arg-is-typedarray-subclass-instance.js-strict:true": "test/built-ins/ArrayBuffer/isView/arg-is-typedarray-subclass-instance.js: TypeError: Constructor TypedArray requires 'new' (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/ArrayBuffer/prototype/byteLength/detached-buffer.js-strict:true": "test/built-ins/ArrayBuffer/prototype/byteLength/detached-buffer.js: TypeError: ArrayBuffer is detached at test/built-ins/ArrayBuffer/prototype/byteLength/detached-buffer.js:20:18(15)",
  "test/built-ins/ArrayBuffer/prototype/slice/this-is-sharedarraybuffer.js-strict:true": "test/built-ins/ArrayBuffer/prototype/slice/this-is-sharedarraybuffer.js: Test262Error: `this` value cannot be a SharedArrayBuffer Expected a TypeError but got a GoError at harness/sta.js:22:9(49)",
  "test/built-ins/ArrayIteratorPrototype/next/args-mapped-expansion-after-exhaustion.js-strict:false": "test/built-ins/ArrayIteratorPrototype/next/args-mapped-expansion-after-exhaustion.js: TypeError: Object has no member 'Symbol.iterator' at test/built-ins/ArrayIteratorPrototype/next/args-mapped-expansion-after-exhaustion.js:13:44(14)",
  "test/built-ins/ArrayIteratorPrototype/next/args-mapped-expansion-before-exhaustion.js-strict:false": "test/built-ins/ArrayIteratorPrototype/next/args-mapped-expansion-before-exhaustion.js: TypeError: Object has no member 'Symbol.iterator' at test/built-ins/ArrayIteratorPrototype/next/args-mapped-expansion-before-exhaustion.js:13:44(14)",
  "test/built-ins/ArrayIteratorPrototype/next/args-mapped-iteration.js-strict:false": "test/built-ins/ArrayIteratorPrototype/next/args-mapped-iteration.js: TypeError: Object has no member 'Symbol.iterator' at test/built-ins/ArrayIteratorPrototype/next/args-mapped-iteration.js:13:44(14)",
  "test/built-ins/ArrayIteratorPrototype/next/args-mapped-truncation-before-exhaustion.js-strict:false": "test/built-ins/ArrayIteratorPrototype/next/args-mapped-truncation-before-exhaustion.js: TypeError: Object has no member 'Symbol.iterator' at test/built-ins/ArrayIteratorPrototype/next/args-mapped-truncation-before-exhaustion.js:13:44(14)",
  "test/built-ins/ArrayIteratorPrototype/next/args-unmapped-expansion-after-exhaustion.js-strict:false": "test/built-ins/ArrayIteratorPrototype/next/args-unmapped-expansion-after-exhaustion.js: TypeError: Object has no member 'Symbol.iterator' at test/built-ins/ArrayIteratorPrototype/next/args-unmapped-expansion-after-exhaustion.js:14:44(14)",
  "test/built-ins/ArrayIteratorPrototype/next/args-unmapped-expansion-before-exhaustion.js-strict:false": "test/built-ins/ArrayIteratorPrototype/next/args-unmapped-expansion-before-exhaustion.js: TypeError: Object has no member 'Symbol.iterator' at test/built-ins/ArrayIteratorPrototype/next/args-unmapped-expansion-before-exhaustion.js:14:44(14)",
  "test/built-ins/ArrayIteratorPrototype/next/args-unmapped-iteration.js-strict:false": "test/built-ins/ArrayIteratorPrototype/next/args-unmapped-iteration.js: TypeError: Object has no member 'Symbol.iterator' at test/built-ins/ArrayIteratorPrototype/next/args-unmapped-iteration.js:14:44(14)",
  "test/built-ins/ArrayIteratorPrototype/next/args-unmapped-truncation-before-exhaustion.js-strict:false": "test/built-ins/ArrayIteratorPrototype/next/args-unmapped-truncation-before-exhaustion.js: TypeError: Object has no member 'Symbol.iterator' at test/built-ins/ArrayIteratorPrototype/next/args-unmapped-truncation-before-exhaustion.js:14:44(14)",
  "test/built-ins/ArrayIteratorPrototype/next/detach-typedarray-in-progress.js-strict:true": "test/built-ins/ArrayIteratorPrototype/next/detach-typedarray-in-progress.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/DataView/length.js-strict:true": "test/built-ins/DataView/length.js: Test262Error: descriptor value should be 1 at harness/sta.js:22:9(49)",
  "test/built-ins/DataView/prototype/setFloat32/index-check-before-value-conversion.js-strict:true": "test/built-ins/DataView/prototype/setFloat32/index-check-before-value-conversion.js: Test262Error: setFloat32(-1.5, poisoned) Expected a RangeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/built-ins/DataView/prototype/setFloat64/index-check-before-value-conversion.js-strict:true": "test/built-ins/DataView/prototype/setFloat64/index-check-before-value-conversion.js: Test262Error: setFloat64(-1.5, poisoned) Expected a RangeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/built-ins/DataView/prototype/setInt16/index-check-before-value-conversion.js-strict:true": "test/built-ins/DataView/prototype/setInt16/index-check-before-value-conversion.js: Test262Error: setInt16(-1.5, poisoned) Expected a RangeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/built-ins/DataView/prototype/setInt32/index-check-before-value-conversion.js-strict:true": "test/built-ins/DataView/prototype/setInt32/index-check-before-value-conversion.js: Test262Error: setInt32(-1.5, poisoned) Expected a RangeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/built-ins/DataView/prototype/setInt8/index-check-before-value-conversion.js-strict:true": "test/built-ins/DataView/prototype/setInt8/index-check-before-value-conversion.js: Test262Error: setInt8(-1.5, poisoned) Expected a RangeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/built-ins/DataView/prototype/setUint16/index-check-before-value-conversion.js-strict:true": "test/built-ins/DataView/prototype/setUint16/index-check-before-value-conversion.js: Test262Error: setUint16(-1.5, poisoned) Expected a RangeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/built-ins/DataView/prototype/setUint32/index-check-before-value-conversion.js-strict:true": "test/built-ins/DataView/prototype/setUint32/index-check-before-value-conversion.js: Test262Error: setUint32(-1.5, poisoned) Expected a RangeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/built-ins/DataView/prototype/setUint8/index-check-before-value-conversion.js-strict:true": "test/built-ins/DataView/prototype/setUint8/index-check-before-value-conversion.js: Test262Error: setUint8(-1.5, poisoned) Expected a RangeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/built-ins/Date/UTC/fp-evaluation-order.js-strict:true": "test/built-ins/Date/UTC/fp-evaluation-order.js: Test262Error: order of operations / precision in MakeTime Expected SameValue(«29256», «29312») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Error/prototype/toString/invalid-receiver.js-strict:true": "test/built-ins/Error/prototype/toString/invalid-receiver.js: Test262Error: Error.prototype.toString.call(1) Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/Function/StrictFunction_restricted-properties.js-strict:true": "test/built-ins/Function/StrictFunction_restricted-properties.js: Test262Error: strict Functions created using Function constructor do not have own property \"caller\" Expected SameValue(«true», «false») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Function/internals/Construct/base-ctor-revoked-proxy.js-strict:true": "test/built-ins/Function/internals/Construct/base-ctor-revoked-proxy.js: Test262Error: Expected SameValue(«object», «function») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Function/internals/Construct/derived-return-val.js-strict:true": "test/built-ins/Function/internals/Construct/derived-return-val.js: SyntaxError: test/built-ins/Function/internals/Construct/derived-return-val.js: missing super() call in constructor\n  17 | \n  18 | class C extends Object {\n\u003e 19 |   constructor() {\n     |   ^\n  20 |     return null;\n  21 |   }\n  22 | } at \u003ceval\u003e:2:28542(114)",
  "test/built-ins/Function/internals/Construct/derived-this-uninitialized.js-strict:true": "test/built-ins/Function/internals/Construct/derived-this-uninitialized.js: SyntaxError: test/built-ins/Function/internals/Construct/derived-this-uninitialized.js: missing super() call in constructor\n  19 | \n  20 | class C extends Object {\n\u003e 21 |   constructor() {}\n     |   ^\n  22 | }\n  23 | \n  24 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/built-ins/Function/prototype/bind/instance-length-default-value.js-strict:true": "test/built-ins/Function/prototype/bind/instance-length-default-value.js: TypeError: Cannot convert a Symbol value to a number at bind (native)",
  "test/built-ins/Function/prototype/bind/instance-length-exceeds-int32.js-strict:true": "test/built-ins/Function/prototype/bind/instance-length-exceeds-int32.js: Test262Error: Expected SameValue(«2147483649», «2147483648») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/bind/instance-length-tointeger.js-strict:true": "test/built-ins/Function/prototype/bind/instance-length-tointeger.js: Test262Error: Expected SameValue(«1», «0») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/restricted-property-arguments.js-strict:true": "test/built-ins/Function/prototype/restricted-property-arguments.js: Test262Error: The result of %FunctionPrototype%.hasOwnProperty(\"arguments\") is true Expected SameValue(«false», «true») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/restricted-property-caller.js-strict:true": "test/built-ins/Function/prototype/restricted-property-caller.js: Test262Error: The result of %FunctionPrototype%.hasOwnProperty(\"caller\") is true Expected SameValue(«false», «true») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/AsyncGenerator.js-strict:true": "test/built-ins/Function/prototype/toString/AsyncGenerator.js: SyntaxError: test/built-ins/Function/prototype/toString/AsyncGenerator.js: Unexpected token (14:14)\n  12 | ---*/\n  13 | \n\u003e 14 | async function* f() {}\n     |               ^\n  15 | var AsyncGenerator = f.constructor;\n  16 | \n  17 | var g = /* before */AsyncGenerator(\"a\", \" /* a */ b, c /* b */ //\", \"/* c */ ; /* d */ //\")/* after */; at \u003ceval\u003e:2:28542(114)",
  "test/built-ins/Function/prototype/toString/Function.js-strict:true": "test/built-ins/Function/prototype/toString/Function.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:71 Unexpected end of input (and 4 more errors) at Function (native)",
  "test/built-ins/Function/prototype/toString/arrow-function.js-strict:true": "test/built-ins/Function/prototype/toString/arrow-function.js: Test262Error: Conforms to NativeFunction Syntax: \"function f( /* a */a /* b */, /* c */b /* d */) /* e */ /* f */{/* g */; /* h */}\" (( /* a */ a /* b */ , /* c */ b /* d */ ) /* e */ =\u003e /* f */ { /* g */ ; /* h */ }) at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/class-declaration-complex-heritage.js-strict:true": "test/built-ins/Function/prototype/toString/class-declaration-complex-heritage.js: Test262Error: Conforms to NativeFunction Syntax: \"function A() {_classCallCheck(this, A);return _possibleConstructorReturn(this, (A.__proto__ || Object.getPrototypeOf(A)).apply(this, arguments));}\" (class /* a */ A /* b */ extends /* c */ class /* d */ B /* e */ { /* f */ } /* g */ { /* h */ }) at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/class-declaration-explicit-ctor.js-strict:true": "test/built-ins/Function/prototype/toString/class-declaration-explicit-ctor.js: SyntaxError: test/built-ins/Function/prototype/toString/class-declaration-explicit-ctor.js: missing super() call in constructor\n   9 | ---*/\n  10 | \n\u003e 11 | /* before */class /* a */ A /* b */ extends /* c */ B /* d */ { /* e */ constructor /* f */ ( /* g */ ) /* h */ { /* i */ ; /* j */ } /* k */ m /* l */ ( /* m */ ) /* n */ { /* o */ } /* p */ }/* after */\n     |                                                                         ^\n  12 | \n  13 | assertToStringOrNativeFunction(A, \"class /* a */ A /* b */ extends /* c */ B /* d */ { /* e */ constructor /* f */ ( /* g */ ) /* h */ { /* i */ ; /* j */ } /* k */ m /* l */ ( /* m */ ) /* n */ { /* o */ } /* p */ }\");\n  14 |  at \u003ceval\u003e:2:28542(114)",
  "test/built-ins/Function/prototype/toString/class-declaration-implicit-ctor.js-strict:true": "test/built-ins/Function/prototype/toString/class-declaration-implicit-ctor.js: Test262Error: Conforms to NativeFunction Syntax: \"function A() {_classCallCheck(this, A);}\" (class /* a */ A /* b */ { /* c */ }) at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/class-expression-explicit-ctor.js-strict:true": "test/built-ins/Function/prototype/toString/class-expression-explicit-ctor.js: SyntaxError: test/built-ins/Function/prototype/toString/class-expression-explicit-ctor.js: missing super() call in constructor\n   9 | ---*/\n  10 | \n\u003e 11 | let A = /* before */class /* a */ A /* b */ extends /* c */ B /* d */ { /* e */ constructor /* f */ ( /* g */ ) /* h */ { /* i */ ; /* j */ } /* k */ m /* l */ ( /* m */ ) /* n */ { /* o */ } /* p */ }/* after */;\n     |                                                                                 ^\n  12 | \n  13 | assertToStringOrNativeFunction(A, \"class /* a */ A /* b */ extends /* c */ B /* d */ { /* e */ constructor /* f */ ( /* g */ ) /* h */ { /* i */ ; /* j */ } /* k */ m /* l */ ( /* m */ ) /* n */ { /* o */ } /* p */ }\");\n  14 |  at \u003ceval\u003e:2:28542(114)",
  "test/built-ins/Function/prototype/toString/class-expression-implicit-ctor.js-strict:true": "test/built-ins/Function/prototype/toString/class-expression-implicit-ctor.js: Test262Error: Conforms to NativeFunction Syntax: \"function A() {_classCallCheck(this, A);}\" (class /* a */ A /* b */ { /* c */ }) at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/function-declaration-non-simple-parameter-list.js-strict:true": "test/built-ins/Function/prototype/toString/function-declaration-non-simple-parameter-list.js: Test262Error: Conforms to NativeFunction Syntax: \"function /* a */f /* b */() /* m */{var a /* d */ = arguments.length \u003e 0 \u0026\u0026 arguments[0] !== undefined ? arguments[0] : /* c */ /* e */0;var /* f */ /* g */_ref /* l */ = arguments[1];var _ref$b = _ref.b /* i */,b = _ref$b === undefined ? /* h */ /* j */0 : _ref$b;}\" (function /* a */ f /* b */ ( /* c */ a /* d */ = /* e */ 0 /* f */ , /* g */ { /* h */ b /* i */ = /* j */ 0 /* k */ } /* l */ ) /* m */ { /* n */ }) at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/function-expression.js-strict:true": "test/built-ins/Function/prototype/toString/function-expression.js: Test262Error: Conforms to NativeFunction Syntax: \"function /* a */F /* b */( /* c */x /* d */, /* e */y /* f */) /* g */{/* h */; /* i */; /* j */}\" (function /* a */ F /* b */ ( /* c */ x /* d */ , /* e */ y /* f */ ) /* g */ { /* h */ ; /* i */ ; /* j */ }) at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/getter-class-expression-static.js-strict:true": "test/built-ins/Function/prototype/toString/getter-class-expression-static.js: Test262Error: Conforms to NativeFunction Syntax: \"function get() /* before */ /* a */ /* b */ /* c */ /* d */{}\" (get /* a */ f /* b */ ( /* c */ ) /* d */ { /* e */ }) at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/getter-class-expression.js-strict:true": "test/built-ins/Function/prototype/toString/getter-class-expression.js: Test262Error: Conforms to NativeFunction Syntax: \"function get() /* a */ /* b */ /* c */ /* d */{}\" (get /* a */ f /* b */ ( /* c */ ) /* d */ { /* e */ }) at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/getter-class-statement-static.js-strict:true": "test/built-ins/Function/prototype/toString/getter-class-statement-static.js: Test262Error: Conforms to NativeFunction Syntax: \"function get() /* before */ /* a */ /* b */ /* c */ /* d */{}\" (get /* a */ f /* b */ ( /* c */ ) /* d */ { /* e */ }) at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/getter-class-statement.js-strict:true": "test/built-ins/Function/prototype/toString/getter-class-statement.js: Test262Error: Conforms to NativeFunction Syntax: \"function get() /* a */ /* b */ /* c */ /* d */{}\" (get /* a */ f /* b */ ( /* c */ ) /* d */ { /* e */ }) at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/getter-object.js-strict:true": "test/built-ins/Function/prototype/toString/getter-object.js: Test262Error: Conforms to NativeFunction Syntax: \"f /* b */() /* c */ /* d */{}\" (get /* a */ f /* b */ ( /* c */ ) /* d */ { /* e */ }) at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/method-class-expression-static.js-strict:true": "test/built-ins/Function/prototype/toString/method-class-expression-static.js: Test262Error: Conforms to NativeFunction Syntax: \"function f() /* before */ /* a */ /* b */ /* c */{}\" (f /* a */ ( /* b */ ) /* c */ { /* d */ }) at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/method-class-expression.js-strict:true": "test/built-ins/Function/prototype/toString/method-class-expression.js: Test262Error: Conforms to NativeFunction Syntax: \"function f() /* a */ /* b */ /* c */{}\" (f /* a */ ( /* b */ ) /* c */ { /* d */ }) at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/method-class-statement-static.js-strict:true": "test/built-ins/Function/prototype/toString/method-class-statement-static.js: Test262Error: Conforms to NativeFunction Syntax: \"function f() /* before */ /* a */ /* b */ /* c */{}\" (f /* a */ ( /* b */ ) /* c */ { /* d */ }) at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/method-class-statement.js-strict:true": "test/built-ins/Function/prototype/toString/method-class-statement.js: Test262Error: Conforms to NativeFunction Syntax: \"function f() /* a */ /* b */ /* c */{}\" (f /* a */ ( /* b */ ) /* c */ { /* d */ }) at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/method-computed-property-name.js-strict:true": "test/built-ins/Function/prototype/toString/method-computed-property-name.js: Test262Error: Conforms to NativeFunction Syntax: \"function () /* before */ /* c */ /* d */ /* e */{}\" ([ /* a */ \"f\" /* b */ ] /* c */ ( /* d */ ) /* e */ { /* f */ }) at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/method-object.js-strict:true": "test/built-ins/Function/prototype/toString/method-object.js: Test262Error: Conforms to NativeFunction Syntax: \"() /* b */ /* c */{}\" (f /* a */ ( /* b */ ) /* c */ { /* d */ }) at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/private-method-class-expression.js-strict:true": "test/built-ins/Function/prototype/toString/private-method-class-expression.js: SyntaxError: test/built-ins/Function/prototype/toString/private-method-class-expression.js: Unexpected character '#' (12:14)\n  10 | \n  11 | let c = new (class {\n\u003e 12 |   /* before */#f /* a */ ( /* b */ ) /* c */ { /* d */ }/* after */\n     |               ^\n  13 |   assert(expected) {\n  14 |     assertToStringOrNativeFunction(this.#f, expected);\n  15 |   } at \u003ceval\u003e:2:28542(114)",
  "test/built-ins/Function/prototype/toString/private-method-class-statement.js-strict:true": "test/built-ins/Function/prototype/toString/private-method-class-statement.js: SyntaxError: test/built-ins/Function/prototype/toString/private-method-class-statement.js: Unexpected character '#' (12:14)\n  10 | \n  11 | class C {\n\u003e 12 |   /* before */#f /* a */ ( /* b */ ) /* c */ { /* d */ }/* after */\n     |               ^\n  13 |   assert(expected) {\n  14 |     assertToStringOrNativeFunction(this.#f, expected);\n  15 |   } at \u003ceval\u003e:2:28542(114)",
  "test/built-ins/Function/prototype/toString/private-static-method-class-expression.js-strict:true": "test/built-ins/Function/prototype/toString/private-static-method-class-expression.js: SyntaxError: test/built-ins/Function/prototype/toString/private-static-method-class-expression.js: Unexpected character '#' (12:21)\n  10 | \n  11 | let C = class {\n\u003e 12 |   /* before */static #f /* a */ ( /* b */ ) /* c */ { /* d */ }/* after */\n     |                      ^\n  13 |   static assert(expected) {\n  14 |     assertToStringOrNativeFunction(this.#f, expected);\n  15 |   } at \u003ceval\u003e:2:28542(114)",
  "test/built-ins/Function/prototype/toString/private-static-method-class-statement.js-strict:true": "test/built-ins/Function/prototype/toString/private-static-method-class-statement.js: SyntaxError: test/built-ins/Function/prototype/toString/private-static-method-class-statement.js: Unexpected character '#' (12:21)\n  10 | \n  11 | class C {\n\u003e 12 |   /* before */static #f /* a */ ( /* b */ ) /* c */ { /* d */ }/* after */\n     |                      ^\n  13 |   static assert(expected) {\n  14 |     assertToStringOrNativeFunction(this.#f, expected);\n  15 |   } at \u003ceval\u003e:2:28542(114)",
  "test/built-ins/Function/prototype/toString/proxy-arrow-function.js-strict:true": "test/built-ins/Function/prototype/toString/proxy-arrow-function.js: Test262Error: Conforms to NativeFunction Syntax: \"function proxy() { [function () {}] }\" at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/proxy-bound-function.js-strict:true": "test/built-ins/Function/prototype/toString/proxy-bound-function.js: Test262Error: Conforms to NativeFunction Syntax: \"function proxy() { [bound ] }\" at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/proxy-class.js-strict:true": "test/built-ins/Function/prototype/toString/proxy-class.js: Test262Error: Conforms to NativeFunction Syntax: \"function proxy() { [function _class() {_classCallCheck(this, _class);}] }\" at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/proxy-function-expression.js-strict:true": "test/built-ins/Function/prototype/toString/proxy-function-expression.js: Test262Error: Conforms to NativeFunction Syntax: \"function proxy() { [function() {}] }\" at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/proxy-method-definition.js-strict:true": "test/built-ins/Function/prototype/toString/proxy-method-definition.js: Test262Error: Conforms to NativeFunction Syntax: \"function proxy() { [() {}] }\" at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/proxy-non-callable-throws.js-strict:true": "test/built-ins/Function/prototype/toString/proxy-non-callable-throws.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/setter-class-expression-static.js-strict:true": "test/built-ins/Function/prototype/toString/setter-class-expression-static.js: Test262Error: Conforms to NativeFunction Syntax: \"function set( /* before */ /* a */ /* b */ /* c */a /* d */) /* e */{}\" (set /* a */ f /* b */ ( /* c */ a /* d */ ) /* e */ { /* f */ }) at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/setter-class-expression.js-strict:true": "test/built-ins/Function/prototype/toString/setter-class-expression.js: Test262Error: Conforms to NativeFunction Syntax: \"function set( /* a */ /* b */ /* c */a /* d */) /* e */{}\" (set /* a */ f /* b */ ( /* c */ a /* d */ ) /* e */ { /* f */ }) at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/setter-class-statement-static.js-strict:true": "test/built-ins/Function/prototype/toString/setter-class-statement-static.js: Test262Error: Conforms to NativeFunction Syntax: \"function set( /* before */ /* a */ /* b */ /* c */a /* d */) /* e */{}\" (set /* a */ f /* b */ ( /* c */ a /* d */ ) /* e */ { /* f */ }) at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/setter-class-statement.js-strict:true": "test/built-ins/Function/prototype/toString/setter-class-statement.js: Test262Error: Conforms to NativeFunction Syntax: \"function set( /* a */ /* b */ /* c */a /* d */) /* e */{}\" (set /* a */ f /* b */ ( /* c */ a /* d */ ) /* e */ { /* f */ }) at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/setter-object.js-strict:true": "test/built-ins/Function/prototype/toString/setter-object.js: Test262Error: Conforms to NativeFunction Syntax: \"f /* b */( /* c */a /* d */) /* e */{}\" (set /* a */ f /* b */ ( /* c */ a /* d */ ) /* e */ { /* f */ }) at harness/sta.js:22:9(49)",
  "test/built-ins/Function/prototype/toString/unicode.js-strict:true": "test/built-ins/Function/prototype/toString/unicode.js: Test262Error: Conforms to NativeFunction Syntax: \"function a(b, c) {b = c;return b;}\" (function \\u0061(\\u{62}, \\u0063) { \\u0062 = \\u{00063}; return b; }) at harness/sta.js:22:9(49)",
  "test/built-ins/GeneratorFunction/is-a-constructor.js-strict:true": "test/built-ins/GeneratorFunction/is-a-constructor.js: SyntaxError: harness/hidden-constructors.js: Unexpected token (16:65)\n  14 | var AsyncArrowFunction = Object.getPrototypeOf(async () =\u003e {}).constructor;\n  15 | var AsyncFunction = Object.getPrototypeOf(async function () {}).constructor;\n\u003e 16 | var AsyncGeneratorFunction = Object.getPrototypeOf(async function* () {}).constructor;\n     |                                                                  ^\n  17 | var GeneratorFunction = Object.getPrototypeOf(function* () {}).constructor;\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/built-ins/JSON/parse/reviver-array-get-prop-from-prototype.js-strict:true": "test/built-ins/JSON/parse/reviver-array-get-prop-from-prototype.js: Test262Error: Expected SameValue(«2», «3») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/JSON/parse/reviver-object-get-prop-from-prototype.js-strict:true": "test/built-ins/JSON/parse/reviver-object-get-prop-from-prototype.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/built-ins/JSON/parse/reviver-object-non-configurable-prop-create.js-strict:true": "test/built-ins/JSON/parse/reviver-object-non-configurable-prop-create.js: Test262Error: Expected SameValue(«22», «2») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/JSON/parse/reviver-wrapper.js-strict:true": "test/built-ins/JSON/parse/reviver-wrapper.js: Test262Error: [[Set]] should not be called. at set (test/built-ins/JSON/parse/reviver-wrapper.js:21:11(4))",
  "test/built-ins/JSON/stringify/replacer-array-wrong-type.js-strict:true": "test/built-ins/JSON/stringify/replacer-array-wrong-type.js: Test262Error:  at get (test/built-ins/JSON/stringify/replacer-array-wrong-type.js:25:13(7))",
  "test/built-ins/JSON/stringify/replacer-function-arguments.js-strict:true": "test/built-ins/JSON/stringify/replacer-function-arguments.js: Test262Error: Expected [1,2, 0, 1] and [1,2, 0, 1] to have the same contents.  at harness/sta.js:22:9(49)",
  "test/built-ins/JSON/stringify/replacer-function-result.js-strict:true": "test/built-ins/JSON/stringify/replacer-function-result.js: Test262Error: unreachable at replacer (test/built-ins/JSON/stringify/replacer-function-result.js:49:9(100))",
  "test/built-ins/JSON/stringify/replacer-function-wrapper.js-strict:true": "test/built-ins/JSON/stringify/replacer-function-wrapper.js: Test262Error: [[Set]] should not be called. at set (test/built-ins/JSON/stringify/replacer-function-wrapper.js:19:11(4))",
  "test/built-ins/JSON/stringify/space-number-object.js-strict:true": "test/built-ins/JSON/stringify/space-number-object.js: Test262Error: Expected SameValue(«{\n \"a1\": {\n  \"b1\": [\n   1,\n   2,\n   3,\n   4\n  ],\n  \"b2\": {\n   \"c1\": 1,\n   \"c2\": 2\n  }\n },\n \"a2\": \"a2\"\n}», «{\n   \"a1\": {\n      \"b1\": [\n         1,\n         2,\n         3,\n         4\n      ],\n      \"b2\": {\n         \"c1\": 1,\n         \"c2\": 2\n      }\n   },\n   \"a2\": \"a2\"\n}») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/JSON/stringify/space-string-object.js-strict:true": "test/built-ins/JSON/stringify/space-string-object.js: Test262Error: Expected SameValue(«{\nxxx\"a1\": {\nxxxxxx\"b1\": [\nxxxxxxxxx1,\nxxxxxxxxx2,\nxxxxxxxxx3,\nxxxxxxxxx4\nxxxxxx],\nxxxxxx\"b2\": {\nxxxxxxxxx\"c1\": 1,\nxxxxxxxxx\"c2\": 2\nxxxxxx}\nxxx},\nxxx\"a2\": \"a2\"\n}», «{\n---\"a1\": {\n------\"b1\": [\n---------1,\n---------2,\n---------3,\n---------4\n------],\n------\"b2\": {\n---------\"c1\": 1,\n---------\"c2\": 2\n------}\n---},\n---\"a2\": \"a2\"\n}») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/JSON/stringify/value-number-object.js-strict:true": "test/built-ins/JSON/stringify/value-number-object.js: Test262Error: Expected SameValue(«[42]», «[2]») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/JSON/stringify/value-string-object.js-strict:true": "test/built-ins/JSON/stringify/value-string-object.js: Test262Error: Expected SameValue(«{\"key\":\"str\"}», «{\"key\":\"toString\"}») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/JSON/stringify/value-tojson-arguments.js-strict:true": "test/built-ins/JSON/stringify/value-tojson-arguments.js: Test262Error: Expected SameValue(«1», «1») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Math/pow/applying-the-exp-operator_A7.js-strict:true": "test/built-ins/Math/pow/applying-the-exp-operator_A7.js: Test262Error: (-1, Infinity) Expected SameValue(«1», «NaN») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Math/pow/applying-the-exp-operator_A8.js-strict:true": "test/built-ins/Math/pow/applying-the-exp-operator_A8.js: Test262Error: (-1, -Infinity) Expected SameValue(«1», «NaN») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Number/string-numeric-separator-literal-dd-dot-dd-ep-sign-minus-dd-nsl-dd.js-strict:true": "test/built-ins/Number/string-numeric-separator-literal-dd-dot-dd-ep-sign-minus-dd-nsl-dd.js: Test262Error: 1.0e-1_0 Expected SameValue(«1e-10», «NaN») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Number/string-numeric-separator-literal-dd-dot-dd-ep-sign-minus-dds-nsl-dd.js-strict:true": "test/built-ins/Number/string-numeric-separator-literal-dd-dot-dd-ep-sign-minus-dds-nsl-dd.js: Test262Error: 1.0e-10_0 Expected SameValue(«1e-100», «NaN») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Number/string-numeric-separator-literal-dd-dot-dd-ep-sign-plus-dd-nsl-dd.js-strict:true": "test/built-ins/Number/string-numeric-separator-literal-dd-dot-dd-ep-sign-plus-dd-nsl-dd.js: Test262Error: 1.0e+1_0 Expected SameValue(«10000000000», «NaN») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Number/string-numeric-separator-literal-dd-dot-dd-ep-sign-plus-dds-nsl-dd.js-strict:true": "test/built-ins/Number/string-numeric-separator-literal-dd-dot-dd-ep-sign-plus-dds-nsl-dd.js: Test262Error: 1.0e+10_0 Expected SameValue(«1e+100», «NaN») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Number/string-numeric-separator-literal-dd-nsl-dd-one-of.js-strict:true": "test/built-ins/Number/string-numeric-separator-literal-dd-nsl-dd-one-of.js: Test262Error: 1_0 Expected SameValue(«10», «NaN») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Number/string-numeric-separator-literal-dds-dot-dd-nsl-dd-ep-dd.js-strict:true": "test/built-ins/Number/string-numeric-separator-literal-dds-dot-dd-nsl-dd-ep-dd.js: Test262Error: 10.00_01e2 Expected SameValue(«1000.01», «NaN») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Number/string-numeric-separator-literal-dds-nsl-dd.js-strict:true": "test/built-ins/Number/string-numeric-separator-literal-dds-nsl-dd.js: Test262Error: 123456789_0 Expected SameValue(«1234567890», «NaN») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Number/string-numeric-separator-literal-dot-dd-nsl-dd-ep.js-strict:true": "test/built-ins/Number/string-numeric-separator-literal-dot-dd-nsl-dd-ep.js: Test262Error: .0_1e2 Expected SameValue(«1», «NaN») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Number/string-numeric-separator-literal-dot-dd-nsl-dds-ep.js-strict:true": "test/built-ins/Number/string-numeric-separator-literal-dot-dd-nsl-dds-ep.js: Test262Error: .1_01e2 Expected SameValue(«10.1», «NaN») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Number/string-numeric-separator-literal-dot-dds-nsl-dd-ep.js-strict:true": "test/built-ins/Number/string-numeric-separator-literal-dot-dds-nsl-dd-ep.js: Test262Error: .10_1e2 Expected SameValue(«10.1», «NaN») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Number/string-numeric-separator-literal-dot-dds-nsl-dds-ep.js-strict:true": "test/built-ins/Number/string-numeric-separator-literal-dot-dds-nsl-dds-ep.js: Test262Error: .00_01e2 Expected SameValue(«0.01», «NaN») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Number/string-numeric-separator-literal-nzd-nsl-dd-one-of.js-strict:true": "test/built-ins/Number/string-numeric-separator-literal-nzd-nsl-dd-one-of.js: Test262Error: 1_0 Expected SameValue(«10», «NaN») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Number/string-numeric-separator-literal-nzd-nsl-dd.js-strict:true": "test/built-ins/Number/string-numeric-separator-literal-nzd-nsl-dd.js: Test262Error: 1_1 Expected SameValue(«11», «NaN») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Number/string-numeric-separator-literal-nzd-nsl-dds.js-strict:true": "test/built-ins/Number/string-numeric-separator-literal-nzd-nsl-dds.js: Test262Error: 1_0123456789 Expected SameValue(«10123456789», «NaN») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Number/string-numeric-separator-literal-sign-minus-dds-nsl-dd.js-strict:true": "test/built-ins/Number/string-numeric-separator-literal-sign-minus-dds-nsl-dd.js: Test262Error: -123456789_0 Expected SameValue(«-1234567890», «NaN») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Number/string-numeric-separator-literal-sign-plus-dds-nsl-dd.js-strict:true": "test/built-ins/Number/string-numeric-separator-literal-sign-plus-dds-nsl-dd.js: Test262Error: +123456789_0 Expected SameValue(«1234567890», «NaN») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Object/defineProperties/proxy-no-ownkeys-returned-keys-order.js-strict:true": "test/built-ins/Object/defineProperties/proxy-no-ownkeys-returned-keys-order.js: TypeError: Property description must be an object: 3 at defineProperties (native)",
  "test/built-ins/Object/freeze/throws-when-false.js-strict:true": "test/built-ins/Object/freeze/throws-when-false.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/Object/fromEntries/empty-iterable.js-strict:true": "test/built-ins/Object/fromEntries/empty-iterable.js: TypeError: Object has no member 'fromEntries' at test/built-ins/Object/fromEntries/empty-iterable.js:19:32(6)",
  "test/built-ins/Object/fromEntries/evaluation-order.js-strict:true": "test/built-ins/Object/fromEntries/evaluation-order.js: TypeError: Object has no member 'fromEntries' at test/built-ins/Object/fromEntries/evaluation-order.js:69:32(31)",
  "test/built-ins/Object/fromEntries/iterator-closed-for-null-entry.js-strict:true": "test/built-ins/Object/fromEntries/iterator-closed-for-null-entry.js: Test262Error: Expected SameValue(«undefined», «function») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Object/fromEntries/iterator-closed-for-string-entry.js-strict:true": "test/built-ins/Object/fromEntries/iterator-closed-for-string-entry.js: Test262Error: Expected SameValue(«undefined», «function») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Object/fromEntries/iterator-closed-for-throwing-entry-key-accessor.js-strict:true": "test/built-ins/Object/fromEntries/iterator-closed-for-throwing-entry-key-accessor.js: Test262Error: Expected a DummyError but got a TypeError at harness/sta.js:22:9(49)",
  "test/built-ins/Object/fromEntries/iterator-closed-for-throwing-entry-key-tostring.js-strict:true": "test/built-ins/Object/fromEntries/iterator-closed-for-throwing-entry-key-tostring.js: Test262Error: Expected a DummyError but got a TypeError at harness/sta.js:22:9(49)",
  "test/built-ins/Object/fromEntries/iterator-closed-for-throwing-entry-value-accessor.js-strict:true": "test/built-ins/Object/fromEntries/iterator-closed-for-throwing-entry-value-accessor.js: Test262Error: Expected a DummyError but got a TypeError at harness/sta.js:22:9(49)",
  "test/built-ins/Object/fromEntries/iterator-not-closed-for-next-returning-non-object.js-strict:true": "test/built-ins/Object/fromEntries/iterator-not-closed-for-next-returning-non-object.js: Test262Error: Expected SameValue(«undefined», «function») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Object/fromEntries/iterator-not-closed-for-throwing-done-accessor.js-strict:true": "test/built-ins/Object/fromEntries/iterator-not-closed-for-throwing-done-accessor.js: Test262Error: Expected a DummyError but got a TypeError at harness/sta.js:22:9(49)",
  "test/built-ins/Object/fromEntries/iterator-not-closed-for-throwing-next.js-strict:true": "test/built-ins/Object/fromEntries/iterator-not-closed-for-throwing-next.js: Test262Error: Expected a DummyError but got a TypeError at harness/sta.js:22:9(49)",
  "test/built-ins/Object/fromEntries/iterator-not-closed-for-uncallable-next.js-strict:true": "test/built-ins/Object/fromEntries/iterator-not-closed-for-uncallable-next.js: Test262Error: Expected SameValue(«undefined», «function») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Object/fromEntries/key-order.js-strict:true": "test/built-ins/Object/fromEntries/key-order.js: TypeError: Object has no member 'fromEntries' at test/built-ins/Object/fromEntries/key-order.js:19:32(23)",
  "test/built-ins/Object/fromEntries/length.js-strict:true": "test/built-ins/Object/fromEntries/length.js: TypeError: Cannot convert undefined or null to object at getOwnPropertyDescriptor (native)",
  "test/built-ins/Object/fromEntries/name.js-strict:true": "test/built-ins/Object/fromEntries/name.js: TypeError: Cannot convert undefined or null to object at getOwnPropertyDescriptor (native)",
  "test/built-ins/Object/fromEntries/prototype.js-strict:true": "test/built-ins/Object/fromEntries/prototype.js: TypeError: Object has no member 'fromEntries' at test/built-ins/Object/fromEntries/prototype.js:11:32(6)",
  "test/built-ins/Object/fromEntries/requires-argument.js-strict:true": "test/built-ins/Object/fromEntries/requires-argument.js: Test262Error: Expected SameValue(«undefined», «function») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Object/fromEntries/simple-properties.js-strict:true": "test/built-ins/Object/fromEntries/simple-properties.js: TypeError: Object has no member 'fromEntries' at test/built-ins/Object/fromEntries/simple-properties.js:12:32(9)",
  "test/built-ins/Object/fromEntries/string-entry-object-succeeds.js-strict:true": "test/built-ins/Object/fromEntries/string-entry-object-succeeds.js: TypeError: Object has no member 'fromEntries' at test/built-ins/Object/fromEntries/string-entry-object-succeeds.js:11:32(9)",
  "test/built-ins/Object/fromEntries/string-entry-primitive-throws.js-strict:true": "test/built-ins/Object/fromEntries/string-entry-primitive-throws.js: Test262Error: Expected SameValue(«undefined», «function») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Object/fromEntries/string-entry-string-object-succeeds.js-strict:true": "test/built-ins/Object/fromEntries/string-entry-string-object-succeeds.js: TypeError: Object has no member 'fromEntries' at test/built-ins/Object/fromEntries/string-entry-string-object-succeeds.js:11:32(9)",
  "test/built-ins/Object/fromEntries/supports-symbols.js-strict:true": "test/built-ins/Object/fromEntries/supports-symbols.js: TypeError: Object has no member 'fromEntries' at test/built-ins/Object/fromEntries/supports-symbols.js:12:32(15)",
  "test/built-ins/Object/fromEntries/to-property-key.js-strict:true": "test/built-ins/Object/fromEntries/to-property-key.js: TypeError: Object has no member 'fromEntries' at test/built-ins/Object/fromEntries/to-property-key.js:17:32(24)",
  "test/built-ins/Object/fromEntries/uses-define-semantics.js-strict:true": "test/built-ins/Object/fromEntries/uses-define-semantics.js: TypeError: Object has no member 'fromEntries' at test/built-ins/Object/fromEntries/uses-define-semantics.js:20:32(22)",
  "test/built-ins/Object/fromEntries/uses-keys-not-iterator.js-strict:true": "test/built-ins/Object/fromEntries/uses-keys-not-iterator.js: TypeError: Object has no member 'fromEntries' at test/built-ins/Object/fromEntries/uses-keys-not-iterator.js:47:32(26)",
  "test/built-ins/Object/keys/property-traps-order-with-proxied-array.js-strict:true": "test/built-ins/Object/keys/property-traps-order-with-proxied-array.js: Test262Error: Expected [ownKeys, getOwnPropertyDescriptor] and [ownKeys] to have the same contents.  at harness/sta.js:22:9(49)",
  "test/built-ins/Object/preventExtensions/throws-when-false.js-strict:true": "test/built-ins/Object/preventExtensions/throws-when-false.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/Object/prototype/__proto__/set-invalid-value.js-strict:true": "test/built-ins/Object/prototype/__proto__/set-invalid-value.js: TypeError: Object prototype may only be an Object or null: true at call (native)",
  "test/built-ins/Object/prototype/__proto__/set-non-object.js-strict:true": "test/built-ins/Object/prototype/__proto__/set-non-object.js: TypeError: Object prototype may only be an Object or null: undefined at call (native)",
  "test/built-ins/Object/prototype/toString/proxy-function-async.js-strict:true": "test/built-ins/Object/prototype/toString/proxy-function-async.js: test/built-ins/Object/prototype/toString/proxy-function-async.js: Line 21:34 Unexpected token function (and 3 more errors)",
  "test/built-ins/Object/seal/seal-aggregateerror.js-strict:true": "test/built-ins/Object/seal/seal-aggregateerror.js: ReferenceError: AggregateError is not defined at test/built-ins/Object/seal/seal-aggregateerror.js:37:17(3)",
  "test/built-ins/Object/seal/seal-asyncarrowfunction.js-strict:true": "test/built-ins/Object/seal/seal-asyncarrowfunction.js: test/built-ins/Object/seal/seal-asyncarrowfunction.js: Line 37:46 Unexpected token function (and 4 more errors)",
  "test/built-ins/Object/seal/seal-asyncfunction.js-strict:true": "test/built-ins/Object/seal/seal-asyncfunction.js: test/built-ins/Object/seal/seal-asyncfunction.js: Line 37:46 Unexpected token function (and 4 more errors)",
  "test/built-ins/Object/seal/seal-asyncgeneratorfunction.js-strict:true": "test/built-ins/Object/seal/seal-asyncgeneratorfunction.js: SyntaxError: test/built-ins/Object/seal/seal-asyncgeneratorfunction.js: Unexpected token (37:54)\n  35 | ---*/\n  36 | \n\u003e 37 | Object.seal(new (Object.getPrototypeOf(async function * () {}).constructor)());\n     |                                                       ^\n  38 |  at \u003ceval\u003e:2:28542(114)",
  "test/built-ins/Object/seal/seal-bigint64array.js-strict:true": "test/built-ins/Object/seal/seal-bigint64array.js: ReferenceError: BigInt64Array is not defined at test/built-ins/Object/seal/seal-bigint64array.js:37:17(3)",
  "test/built-ins/Object/seal/seal-biguint64array.js-strict:true": "test/built-ins/Object/seal/seal-biguint64array.js: ReferenceError: BigUint64Array is not defined at test/built-ins/Object/seal/seal-biguint64array.js:37:17(3)",
  "test/built-ins/Object/seal/seal-finalizationregistry.js-strict:true": "test/built-ins/Object/seal/seal-finalizationregistry.js: ReferenceError: FinalizationRegistry is not defined at test/built-ins/Object/seal/seal-finalizationregistry.js:37:17(3)",
  "test/built-ins/Object/seal/seal-promise.js-strict:true": "test/built-ins/Object/seal/seal-promise.js: ReferenceError: Promise is not defined at test/built-ins/Object/seal/seal-promise.js:37:17(3)",
  "test/built-ins/Object/seal/seal-weakref.js-strict:true": "test/built-ins/Object/seal/seal-weakref.js: ReferenceError: WeakRef is not defined at test/built-ins/Object/seal/seal-weakref.js:37:17(3)",
  "test/built-ins/Object/seal/throws-when-false.js-strict:true": "test/built-ins/Object/seal/throws-when-false.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/Object/subclass-object-arg.js-strict:true": "test/built-ins/Object/subclass-object-arg.js: Test262Error: Expected SameValue(«1», «undefined») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Proxy/construct/trap-is-undefined-target-is-proxy.js-strict:true": "test/built-ins/Proxy/construct/trap-is-undefined-target-is-proxy.js: TypeError: Cannot call a class as a function at _classCallCheck (test/built-ins/Proxy/construct/trap-is-undefined-target-is-proxy.js:20:1374(9))",
  "test/built-ins/Proxy/create-handler-is-revoked-proxy.js-strict:true": "test/built-ins/Proxy/create-handler-is-revoked-proxy.js: TypeError: Cannot create proxy with a revoked proxy as handler at test/built-ins/Proxy/create-handler-is-revoked-proxy.js:22:13(21)",
  "test/built-ins/Proxy/create-target-is-not-callable.js-strict:true": "panic while running test/built-ins/Proxy/create-target-is-not-callable.js: runtime error: invalid memory address or nil pointer dereference",
  "test/built-ins/Proxy/create-target-is-revoked-function-proxy.js-strict:true": "test/built-ins/Proxy/create-target-is-revoked-function-proxy.js: TypeError: Cannot create proxy with a revoked proxy as target at test/built-ins/Proxy/create-target-is-revoked-function-proxy.js:23:13(21)",
  "test/built-ins/Proxy/create-target-is-revoked-proxy.js-strict:true": "test/built-ins/Proxy/create-target-is-revoked-proxy.js: TypeError: Cannot create proxy with a revoked proxy as target at test/built-ins/Proxy/create-target-is-revoked-proxy.js:23:13(21)",
  "test/built-ins/Proxy/defineProperty/trap-is-missing-target-is-proxy.js-strict:true": "test/built-ins/Proxy/defineProperty/trap-is-missing-target-is-proxy.js: Test262Error: Expected SameValue(«undefined», «4») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Proxy/deleteProperty/trap-is-undefined-target-is-proxy.js-strict:true": "test/built-ins/Proxy/deleteProperty/trap-is-undefined-target-is-proxy.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/Proxy/getOwnPropertyDescriptor/trap-is-null-target-is-proxy.js-strict:true": "test/built-ins/Proxy/getOwnPropertyDescriptor/trap-is-null-target-is-proxy.js: TypeError: setter must be a function at getOwnPropertyDescriptor (native)",
  "test/built-ins/Proxy/preventExtensions/trap-is-missing-target-is-proxy.js-strict:true": "test/built-ins/Proxy/preventExtensions/trap-is-missing-target-is-proxy.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/Proxy/preventExtensions/trap-is-undefined-target-is-proxy.js-strict:true": "test/built-ins/Proxy/preventExtensions/trap-is-undefined-target-is-proxy.js: ReferenceError: require is not defined at test/built-ins/Proxy/preventExtensions/trap-is-undefined-target-is-proxy.js:26:44(12)",
  "test/built-ins/Proxy/revocable/handler-is-revoked-proxy.js-strict:true": "test/built-ins/Proxy/revocable/handler-is-revoked-proxy.js: TypeError: Cannot create proxy with a revoked proxy as handler at revocable (native)",
  "test/built-ins/Proxy/revocable/revocation-function-name.js-strict:true": "test/built-ins/Proxy/revocable/revocation-function-name.js: Test262Error: obj should have an own property name at harness/sta.js:22:9(49)",
  "test/built-ins/Proxy/revocable/target-is-revoked-function-proxy.js-strict:true": "test/built-ins/Proxy/revocable/target-is-revoked-function-proxy.js: TypeError: Cannot create proxy with a revoked proxy as target at revocable (native)",
  "test/built-ins/Proxy/revocable/target-is-revoked-proxy.js-strict:true": "test/built-ins/Proxy/revocable/target-is-revoked-proxy.js: TypeError: Cannot create proxy with a revoked proxy as target at revocable (native)",
  "test/built-ins/Proxy/set/trap-is-null-target-is-proxy.js-strict:true": "test/built-ins/Proxy/set/trap-is-null-target-is-proxy.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/built-ins/Reflect/Symbol.toStringTag.js-strict:true": "test/built-ins/Reflect/Symbol.toStringTag.js: Test262Error: obj should have an own property Symbol(Symbol.toStringTag) at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/dotall/with-dotall-unicode.js-strict:true": "test/built-ins/RegExp/dotall/with-dotall-unicode.js: SyntaxError: Invalid flags supplied to RegExp constructor 'su' at test/built-ins/RegExp/dotall/with-dotall-unicode.js:20:17",
  "test/built-ins/RegExp/dotall/with-dotall.js-strict:true": "test/built-ins/RegExp/dotall/with-dotall.js: SyntaxError: Invalid flags supplied to RegExp constructor 's' at test/built-ins/RegExp/dotall/with-dotall.js:20:17",
  "test/built-ins/RegExp/dotall/without-dotall-unicode.js-strict:true": "test/built-ins/RegExp/dotall/without-dotall-unicode.js: Test262Error: Supplementary plane matched by a single . at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/dotall/without-dotall.js-strict:true": "test/built-ins/RegExp/dotall/without-dotall.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/duplicate-flags.js-strict:true": "test/built-ins/RegExp/duplicate-flags.js: SyntaxError: Invalid flags supplied to RegExp constructor 's' at test/built-ins/RegExp/duplicate-flags.js:23:1(42)",
  "test/built-ins/RegExp/lookBehind/back-references-to-captures.js-strict:true": "test/built-ins/RegExp/lookBehind/back-references-to-captures.js: Test262Error: Expected [d, undefined] and [d, C] to have the same contents. #1 at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/lookBehind/back-references.js-strict:true": "test/built-ins/RegExp/lookBehind/back-references.js: Test262Error: Expected [b, b, undefined] and [b, b, bb] to have the same contents. #1 at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/lookBehind/captures.js-strict:true": "test/built-ins/RegExp/lookBehind/captures.js: Test262Error: Expected [def, undefined] and [def, c] to have the same contents. #1 at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/lookBehind/greedy-loop.js-strict:true": "test/built-ins/RegExp/lookBehind/greedy-loop.js: Test262Error: Expected [c, undefined] and [c, bbbbbb] to have the same contents. #1 at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/lookBehind/mutual-recursive.js-strict:true": "test/built-ins/RegExp/lookBehind/mutual-recursive.js: Test262Error: Expected [cacb, undefined, ] and [cacb, a, ] to have the same contents. #1 at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/lookBehind/nested-lookaround.js-strict:true": "test/built-ins/RegExp/lookBehind/nested-lookaround.js: Test262Error: Expected [ef, undefined] and [ef, bc] to have the same contents. #2 at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/lookBehind/sticky.js-strict:true": "test/built-ins/RegExp/lookBehind/sticky.js: Test262Error: Expected [def, undefined] and [def, abc] to have the same contents. #1 at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/match-indices/indices-array-element.js-strict:true": "test/built-ins/RegExp/match-indices/indices-array-element.js: TypeError: Cannot read property '0' of undefined at test/built-ins/RegExp/match-indices/indices-array-element.js:19:40(28)",
  "test/built-ins/RegExp/match-indices/indices-array-matched.js-strict:true": "test/built-ins/RegExp/match-indices/indices-array-matched.js: TypeError: Cannot read property 'length' of undefined at test/built-ins/RegExp/match-indices/indices-array-matched.js:31:18(24)",
  "test/built-ins/RegExp/match-indices/indices-array-non-unicode-match.js-strict:true": "test/built-ins/RegExp/match-indices/indices-array-non-unicode-match.js: Test262Error: Expected [[1, 2], [1, 2]] to be structurally equal to undefined.  at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/match-indices/indices-array-properties.js-strict:true": "test/built-ins/RegExp/match-indices/indices-array-properties.js: TypeError: Cannot convert undefined or null to object at getOwnPropertyDescriptor (native)",
  "test/built-ins/RegExp/match-indices/indices-array-unicode-match.js-strict:true": "test/built-ins/RegExp/match-indices/indices-array-unicode-match.js: Test262Error: Expected [[1, 2], [1, 2]] to be structurally equal to undefined.  at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/match-indices/indices-array-unicode-property-names.js-strict:true": "test/built-ins/RegExp/match-indices/indices-array-unicode-property-names.js: test/built-ins/RegExp/match-indices/indices-array-unicode-property-names.js: Line 19:74 Unexpected token ILLEGAL (and 5 more errors)",
  "test/built-ins/RegExp/match-indices/indices-array-unmatched.js-strict:true": "test/built-ins/RegExp/match-indices/indices-array-unmatched.js: TypeError: Cannot read property 'length' of undefined at test/built-ins/RegExp/match-indices/indices-array-unmatched.js:30:18(24)",
  "test/built-ins/RegExp/match-indices/indices-array.js-strict:true": "test/built-ins/RegExp/match-indices/indices-array.js: TypeError: Cannot convert undefined or null to object at getPrototypeOf (native)",
  "test/built-ins/RegExp/match-indices/indices-groups-object-undefined.js-strict:true": "test/built-ins/RegExp/match-indices/indices-groups-object-undefined.js: TypeError: Cannot convert undefined or null to object at getOwnPropertyDescriptor (native)",
  "test/built-ins/RegExp/match-indices/indices-groups-object-unmatched.js-strict:true": "test/built-ins/RegExp/match-indices/indices-groups-object-unmatched.js: TypeError: Cannot read property 'groups' of undefined at test/built-ins/RegExp/match-indices/indices-groups-object-unmatched.js:20:29(22)",
  "test/built-ins/RegExp/match-indices/indices-groups-object.js-strict:true": "test/built-ins/RegExp/match-indices/indices-groups-object.js: TypeError: Cannot convert undefined or null to object at getOwnPropertyDescriptor (native)",
  "test/built-ins/RegExp/match-indices/indices-groups-properties.js-strict:true": "test/built-ins/RegExp/match-indices/indices-groups-properties.js: TypeError: Cannot read property 'groups' of undefined at test/built-ins/RegExp/match-indices/indices-groups-properties.js:19:45(13)",
  "test/built-ins/RegExp/match-indices/indices-property.js-strict:true": "test/built-ins/RegExp/match-indices/indices-property.js: Test262Error: obj should have an own property indices at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/named-groups/functional-replace-global.js-strict:true": "test/built-ins/RegExp/named-groups/functional-replace-global.js: TypeError: Cannot read property 'fst' of undefined at test/built-ins/RegExp/named-groups/functional-replace-global.js:29:29(17)",
  "test/built-ins/RegExp/named-groups/functional-replace-non-global.js-strict:true": "test/built-ins/RegExp/named-groups/functional-replace-non-global.js: TypeError: Cannot read property 'fst' of undefined at test/built-ins/RegExp/named-groups/functional-replace-non-global.js:29:27(26)",
  "test/built-ins/RegExp/named-groups/groups-object-subclass-sans.js-strict:true": "test/built-ins/RegExp/named-groups/groups-object-subclass-sans.js: Test262Error: Expected SameValue(«b», «$\u003ca\u003eab») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/named-groups/groups-object-subclass.js-strict:true": "test/built-ins/RegExp/named-groups/groups-object-subclass.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/named-groups/groups-object-undefined.js-strict:true": "test/built-ins/RegExp/named-groups/groups-object-undefined.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/named-groups/groups-object-unmatched.js-strict:true": "test/built-ins/RegExp/named-groups/groups-object-unmatched.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/named-groups/groups-object.js-strict:true": "test/built-ins/RegExp/named-groups/groups-object.js: Test262Error: obj should have an own property groups at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/named-groups/groups-properties.js-strict:true": "test/built-ins/RegExp/named-groups/groups-properties.js: TypeError: Cannot convert undefined or null to object at getOwnPropertyNames (native)",
  "test/built-ins/RegExp/named-groups/lookbehind.js-strict:true": "test/built-ins/RegExp/named-groups/lookbehind.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/named-groups/non-unicode-match.js-strict:true": "test/built-ins/RegExp/named-groups/non-unicode-match.js: SyntaxError: Invalid regular expression (regexp2): (?\u003c$\u003ea) (Invalid regular expression (regexp2): (?\u003c$\u003ea) (error parsing regexp: invalid group name: group names must begin with a word character and have a matching terminator in `(?\u003c$\u003ea)`)) at test/built-ins/RegExp/named-groups/non-unicode-match.js:15:45",
  "test/built-ins/RegExp/named-groups/non-unicode-property-names-valid.js-strict:true": "test/built-ins/RegExp/named-groups/non-unicode-property-names-valid.js: SyntaxError: Invalid regular expression (regexp2): (?\u003c\\ud835\\udc53\\ud835\\udc5c\\ud835\\udc65\u003efox).*(?\u003c\\ud835\\udcd3\\ud835\\udcf8\\ud835\\udcf0\u003edog) (Invalid regular expression (regexp2): (?\u003c\\ud835\\udc53\\ud835\\udc5c\\ud835\\udc65\u003efox).*(?\u003c\\ud835\\udcd3\\ud835\\udcf8\\ud835\\udcf0\u003edog) (error parsing regexp: invalid group name: group names must begin with a word character and have a matching terminator in `(?\u003c\\ud835\\udc53\\ud835\\udc5c\\ud835\\udc65\u003efox).*(?\u003c\\ud835\\udcd3\\ud835\\udcf8\\ud835\\udcf0\u003edog)`)) at test/built-ins/RegExp/named-groups/non-unicode-property-names-valid.js:47:22",
  "test/built-ins/RegExp/named-groups/non-unicode-property-names.js-strict:true": "test/built-ins/RegExp/named-groups/non-unicode-property-names.js: test/built-ins/RegExp/named-groups/non-unicode-property-names.js: Line 15:59 Unexpected token ILLEGAL (and 5 more errors)",
  "test/built-ins/RegExp/named-groups/non-unicode-references.js-strict:true": "test/built-ins/RegExp/named-groups/non-unicode-references.js: TypeError: Cannot read property 'a' of undefined at test/built-ins/RegExp/named-groups/non-unicode-references.js:18:23(50)",
  "test/built-ins/RegExp/named-groups/string-replace-get.js-strict:true": "test/built-ins/RegExp/named-groups/string-replace-get.js: Test262Error: Expected SameValue(«badc», «$\u003csnd\u003e$\u003cfst\u003e$\u003csnd\u003e$\u003cfst\u003e») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/named-groups/string-replace-missing.js-strict:true": "test/built-ins/RegExp/named-groups/string-replace-missing.js: Test262Error: Expected SameValue(«cd», «$\u003c42a\u003ecd») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/named-groups/string-replace-undefined.js-strict:true": "test/built-ins/RegExp/named-groups/string-replace-undefined.js: Test262Error: Expected SameValue(«», «$\u003cthd\u003e$\u003cthd\u003e») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/named-groups/unicode-match.js-strict:true": "test/built-ins/RegExp/named-groups/unicode-match.js: SyntaxError: Invalid regular expression (regexp2): (?\u003c$\u003ea) (Invalid regular expression (regexp2): (?\u003c$\u003ea) (error parsing regexp: invalid group name: group names must begin with a word character and have a matching terminator in `(?\u003c$\u003ea)`)) at test/built-ins/RegExp/named-groups/unicode-match.js:15:45",
  "test/built-ins/RegExp/named-groups/unicode-property-names-invalid.js-strict:true": "test/built-ins/RegExp/named-groups/unicode-property-names-invalid.js: Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/named-groups/unicode-property-names-valid.js-strict:true": "test/built-ins/RegExp/named-groups/unicode-property-names-valid.js: SyntaxError: Invalid regular expression (regexp2): (?\u003c\\u{1d4d1}\\u{1d4fb}\\u{1d4f8}\\u{1d500}\\u{1d4f7}\u003ebrown) (Invalid regular expression (regexp2): (?\u003c\\u{1d4d1}\\u{1d4fb}\\u{1d4f8}\\u{1d500}\\u{1d4f7}\u003ebrown) (error parsing regexp: invalid group name: group names must begin with a word character and have a matching terminator in `(?\u003c\\u{1d4d1}\\u{1d4fb}\\u{1d4f8}\\u{1d500}\\u{1d4f7}\u003ebrown)`)) at test/built-ins/RegExp/named-groups/unicode-property-names-valid.js:67:31",
  "test/built-ins/RegExp/named-groups/unicode-property-names.js-strict:true": "test/built-ins/RegExp/named-groups/unicode-property-names.js: test/built-ins/RegExp/named-groups/unicode-property-names.js: Line 18:60 Unexpected token ILLEGAL (and 5 more errors)",
  "test/built-ins/RegExp/named-groups/unicode-references.js-strict:true": "test/built-ins/RegExp/named-groups/unicode-references.js: TypeError: Cannot read property 'a' of undefined at test/built-ins/RegExp/named-groups/unicode-references.js:31:23(50)",
  "test/built-ins/RegExp/prototype/Symbol.matchAll/isregexp-called-once.js-strict:true": "test/built-ins/RegExp/prototype/Symbol.matchAll/isregexp-called-once.js: Test262Error: Expected SameValue(«3», «4») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/prototype/Symbol.matchAll/isregexp-this-throws.js-strict:true": "test/built-ins/RegExp/prototype/Symbol.matchAll/isregexp-this-throws.js: Test262Error: Expected a Test262Error but got a SyntaxError at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/prototype/Symbol.matchAll/species-constructor-get-species-throws.js-strict:true": "test/built-ins/RegExp/prototype/Symbol.matchAll/species-constructor-get-species-throws.js: Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/prototype/Symbol.replace/named-groups-fn.js-strict:true": "test/built-ins/RegExp/prototype/Symbol.replace/named-groups-fn.js: Test262Error: Expected SameValue(«a», «null») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/prototype/Symbol.replace/named-groups.js-strict:true": "test/built-ins/RegExp/prototype/Symbol.replace/named-groups.js: SyntaxError: Invalid regular expression (regexp2): (?\u003c$𐒤\u003eb) (Invalid regular expression (regexp2): (?\u003c$𐒤\u003eb) (error parsing regexp: invalid group name: group names must begin with a word character and have a matching terminator in `(?\u003c$𐒤\u003eb)`)) at test/built-ins/RegExp/prototype/Symbol.replace/named-groups.js:45:18",
  "test/built-ins/RegExp/prototype/Symbol.replace/poisoned-stdlib.js-strict:true": "test/built-ins/RegExp/prototype/Symbol.replace/poisoned-stdlib.js: Test262Error: 0 setter should be unreachable. at set (test/built-ins/RegExp/prototype/Symbol.replace/poisoned-stdlib.js:27:19(8))",
  "test/built-ins/RegExp/prototype/Symbol.replace/result-coerce-groups-err.js-strict:true": "test/built-ins/RegExp/prototype/Symbol.replace/result-coerce-groups-err.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/prototype/Symbol.replace/result-coerce-groups-prop-err.js-strict:true": "test/built-ins/RegExp/prototype/Symbol.replace/result-coerce-groups-prop-err.js: Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/prototype/Symbol.replace/result-coerce-groups-prop.js-strict:true": "test/built-ins/RegExp/prototype/Symbol.replace/result-coerce-groups-prop.js: Test262Error: Expected SameValue(«[$\u003cfoo\u003e]b», «[toString value]b») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/prototype/Symbol.replace/result-coerce-groups.js-strict:true": "test/built-ins/RegExp/prototype/Symbol.replace/result-coerce-groups.js: Test262Error: Expected SameValue(«a[$\u003clength\u003e]», «a[3]») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/prototype/Symbol.replace/result-get-groups-err.js-strict:true": "test/built-ins/RegExp/prototype/Symbol.replace/result-get-groups-err.js: Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/prototype/Symbol.replace/result-get-groups-prop-err.js-strict:true": "test/built-ins/RegExp/prototype/Symbol.replace/result-get-groups-prop-err.js: Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/prototype/dotAll/cross-realm.js-strict:true": "test/built-ins/RegExp/prototype/dotAll/cross-realm.js: TypeError: Cannot read property 'get' of undefined at test/built-ins/RegExp/prototype/dotAll/cross-realm.js:19:14(12)",
  "test/built-ins/RegExp/prototype/dotAll/length.js-strict:true": "test/built-ins/RegExp/prototype/dotAll/length.js: TypeError: Cannot read property 'get' of undefined at test/built-ins/RegExp/prototype/dotAll/length.js:29:18(15)",
  "test/built-ins/RegExp/prototype/dotAll/name.js-strict:true": "test/built-ins/RegExp/prototype/dotAll/name.js: TypeError: Cannot read property 'get' of undefined at test/built-ins/RegExp/prototype/dotAll/name.js:20:3(15)",
  "test/built-ins/RegExp/prototype/dotAll/prop-desc.js-strict:true": "test/built-ins/RegExp/prototype/dotAll/prop-desc.js: TypeError: Cannot read property 'set' of undefined at test/built-ins/RegExp/prototype/dotAll/prop-desc.js:24:18(15)",
  "test/built-ins/RegExp/prototype/dotAll/this-val-invalid-obj.js-strict:true": "test/built-ins/RegExp/prototype/dotAll/this-val-invalid-obj.js: TypeError: Cannot read property 'get' of undefined at test/built-ins/RegExp/prototype/dotAll/this-val-invalid-obj.js:19:14(9)",
  "test/built-ins/RegExp/prototype/dotAll/this-val-non-obj.js-strict:true": "test/built-ins/RegExp/prototype/dotAll/this-val-non-obj.js: TypeError: Cannot read property 'get' of undefined at test/built-ins/RegExp/prototype/dotAll/this-val-non-obj.js:17:14(9)",
  "test/built-ins/RegExp/prototype/dotAll/this-val-regexp-prototype.js-strict:true": "test/built-ins/RegExp/prototype/dotAll/this-val-regexp-prototype.js: TypeError: Cannot read property 'get' of undefined at test/built-ins/RegExp/prototype/dotAll/this-val-regexp-prototype.js:18:11(9)",
  "test/built-ins/RegExp/prototype/dotAll/this-val-regexp.js-strict:true": "test/built-ins/RegExp/prototype/dotAll/this-val-regexp.js: SyntaxError: Invalid flags supplied to RegExp constructor 's' at test/built-ins/RegExp/prototype/dotAll/this-val-regexp.js:24:18",
  "test/built-ins/RegExp/prototype/flags/coercion-dotall.js-strict:true": "test/built-ins/RegExp/prototype/flags/coercion-dotall.js: Test262Error: dotAll: string Expected SameValue(«», «s») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/prototype/flags/get-order.js-strict:true": "test/built-ins/RegExp/prototype/flags/get-order.js: Test262Error: Expected SameValue(«gimyu», «gimsuy») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/prototype/flags/rethrow.js-strict:true": "test/built-ins/RegExp/prototype/flags/rethrow.js: Test262Error: Let dotAll be ToBoolean(? Get(R, \"dotAll\")) Expected a Test262Error to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/prototype/flags/return-order.js-strict:true": "test/built-ins/RegExp/prototype/flags/return-order.js: SyntaxError: Invalid flags supplied to RegExp constructor 'gimsuy' at test/built-ins/RegExp/prototype/flags/return-order.js:25:18(6)",
  "test/built-ins/RegExp/prototype/flags/this-val-regexp-prototype.js-strict:true": "test/built-ins/RegExp/prototype/flags/this-val-regexp-prototype.js: TypeError: Method RegExp.prototype.source getter called on incompatible receiver at call (native)",
  "test/built-ins/RegExp/prototype/flags/this-val-regexp.js-strict:true": "test/built-ins/RegExp/prototype/flags/this-val-regexp.js: SyntaxError: Invalid flags supplied to RegExp constructor 's' at test/built-ins/RegExp/prototype/flags/this-val-regexp.js:31:18",
  "test/built-ins/RegExp/prototype/global/this-val-regexp-prototype.js-strict:true": "test/built-ins/RegExp/prototype/global/this-val-regexp-prototype.js: TypeError: Method RegExp.prototype.source getter called on incompatible receiver at call (native)",
  "test/built-ins/RegExp/prototype/ignoreCase/this-val-regexp-prototype.js-strict:true": "test/built-ins/RegExp/prototype/ignoreCase/this-val-regexp-prototype.js: TypeError: Method RegExp.prototype.source getter called on incompatible receiver at call (native)",
  "test/built-ins/RegExp/prototype/multiline/this-val-regexp-prototype.js-strict:true": "test/built-ins/RegExp/prototype/multiline/this-val-regexp-prototype.js: TypeError: Method RegExp.prototype.source getter called on incompatible receiver at call (native)",
  "test/built-ins/RegExp/prototype/source/this-val-regexp-prototype.js-strict:true": "test/built-ins/RegExp/prototype/source/this-val-regexp-prototype.js: TypeError: Method RegExp.prototype.source getter called on incompatible receiver at call (native)",
  "test/built-ins/RegExp/prototype/source/value-u.js-strict:true": "test/built-ins/RegExp/prototype/source/value-u.js: Test262Error: Expected SameValue(«false», «true») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/prototype/sticky/this-val-regexp-prototype.js-strict:true": "test/built-ins/RegExp/prototype/sticky/this-val-regexp-prototype.js: TypeError: Method RegExp.prototype.source getter called on incompatible receiver at call (native)",
  "test/built-ins/RegExp/prototype/unicode/this-val-regexp-prototype.js-strict:true": "test/built-ins/RegExp/prototype/unicode/this-val-regexp-prototype.js: TypeError: Method RegExp.prototype.source getter called on incompatible receiver at call (native)",
  "test/built-ins/RegExp/quantifier-integer-limit.js-strict:true": "test/built-ins/RegExp/quantifier-integer-limit.js: SyntaxError: Invalid regular expression (re2): b{9007199254740991} (error parsing regexp: invalid repeat count: `{9007199254740991}`) at test/built-ins/RegExp/quantifier-integer-limit.js:30:11(12)",
  "test/built-ins/RegExp/unicode_restricted_brackets.js-strict:true": "test/built-ins/RegExp/unicode_restricted_brackets.js: Test262Error: RegExp(\"]\", \"u\"):  Expected a SyntaxError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/unicode_restricted_character_class_escape.js-strict:true": "test/built-ins/RegExp/unicode_restricted_character_class_escape.js: Test262Error: RegExp(\"[\\d-a]\", \"u\"):  Expected a SyntaxError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/unicode_restricted_identity_escape.js-strict:true": "test/built-ins/RegExp/unicode_restricted_identity_escape.js: Test262Error: Invalid IdentityEscape in AtomEscape: '\\\u0000' Expected a SyntaxError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/unicode_restricted_identity_escape_alpha.js-strict:true": "test/built-ins/RegExp/unicode_restricted_identity_escape_alpha.js: Test262Error: IdentityEscape in AtomEscape: 'A' Expected a SyntaxError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/unicode_restricted_identity_escape_c.js-strict:true": "test/built-ins/RegExp/unicode_restricted_identity_escape_c.js: Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/unicode_restricted_identity_escape_u.js-strict:true": "test/built-ins/RegExp/unicode_restricted_identity_escape_u.js: Test262Error: RegExp(\"\\u\", \"u\"):  Expected a SyntaxError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/unicode_restricted_identity_escape_x.js-strict:true": "test/built-ins/RegExp/unicode_restricted_identity_escape_x.js: Test262Error: RegExp(\"\\x\", \"u\"):  Expected a SyntaxError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/unicode_restricted_incomplete_quantifier.js-strict:true": "test/built-ins/RegExp/unicode_restricted_incomplete_quantifier.js: Test262Error: RegExp(\"a{\", \"u\"):  Expected a SyntaxError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/unicode_restricted_octal_escape.js-strict:true": "test/built-ins/RegExp/unicode_restricted_octal_escape.js: Test262Error: RegExp(\"\\1\", \"u\"):  Expected a SyntaxError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/RegExp/unicode_restricted_quantifiable_assertion.js-strict:true": "test/built-ins/RegExp/unicode_restricted_quantifiable_assertion.js: Test262Error: RegExp(\"(?=.)*\", \"u\"):  Expected a SyntaxError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/String/prototype/item/index-argument-tointeger.js-strict:true": "test/built-ins/String/prototype/item/index-argument-tointeger.js: Test262Error: Expected SameValue(«undefined», «function») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/String/prototype/item/index-non-numeric-argument-tointeger-invalid.js-strict:true": "test/built-ins/String/prototype/item/index-non-numeric-argument-tointeger-invalid.js: Test262Error: Expected SameValue(«undefined», «function») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/String/prototype/item/index-non-numeric-argument-tointeger.js-strict:true": "test/built-ins/String/prototype/item/index-non-numeric-argument-tointeger.js: Test262Error: Expected SameValue(«undefined», «function») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/String/prototype/item/length.js-strict:true": "test/built-ins/String/prototype/item/length.js: Test262Error: Expected SameValue(«undefined», «function») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/String/prototype/item/name.js-strict:true": "test/built-ins/String/prototype/item/name.js: Test262Error: Expected SameValue(«undefined», «function») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/String/prototype/item/prop-desc.js-strict:true": "test/built-ins/String/prototype/item/prop-desc.js: Test262Error: Expected SameValue(«undefined», «function») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/String/prototype/item/return-abrupt-from-this.js-strict:true": "test/built-ins/String/prototype/item/return-abrupt-from-this.js: Test262Error: Expected SameValue(«undefined», «function») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/String/prototype/item/returns-code-unit.js-strict:true": "test/built-ins/String/prototype/item/returns-code-unit.js: Test262Error: Expected SameValue(«undefined», «function») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/String/prototype/item/returns-item-relative-index.js-strict:true": "test/built-ins/String/prototype/item/returns-item-relative-index.js: Test262Error: Expected SameValue(«undefined», «function») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/String/prototype/item/returns-item.js-strict:true": "test/built-ins/String/prototype/item/returns-item.js: Test262Error: Expected SameValue(«undefined», «function») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/String/prototype/item/returns-undefined-for-out-of-range-index.js-strict:true": "test/built-ins/String/prototype/item/returns-undefined-for-out-of-range-index.js: Test262Error: Expected SameValue(«undefined», «function») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/String/prototype/trimEnd/this-value-object-toprimitive-call-err.js-strict:true": "test/built-ins/String/prototype/trimEnd/this-value-object-toprimitive-call-err.js: Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/String/prototype/trimEnd/this-value-object-toprimitive-meth-priority.js-strict:true": "test/built-ins/String/prototype/trimEnd/this-value-object-toprimitive-meth-priority.js: Test262Error: thisVal[Symbol.toPrimitive] expected to have been accessed. Expected SameValue(«0», «1») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/String/prototype/trimEnd/this-value-object-tostring-meth-priority.js-strict:true": "test/built-ins/String/prototype/trimEnd/this-value-object-tostring-meth-priority.js: Test262Error: thisVal.toString expected to have been accessed. Expected SameValue(«0», «1») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/String/prototype/trimEnd/this-value-object-valueof-meth-priority.js-strict:true": "test/built-ins/String/prototype/trimEnd/this-value-object-valueof-meth-priority.js: Test262Error: thisVal[Symbol.toPrimitive should have been accessed. Expected SameValue(«0», «1») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/String/prototype/trimStart/this-value-object-toprimitive-call-err.js-strict:true": "test/built-ins/String/prototype/trimStart/this-value-object-toprimitive-call-err.js: Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/built-ins/String/prototype/trimStart/this-value-object-toprimitive-meth-priority.js-strict:true": "test/built-ins/String/prototype/trimStart/this-value-object-toprimitive-meth-priority.js: Test262Error: thisVal[Symbol.toPrimitive] expected to have been accessed. Expected SameValue(«0», «1») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/String/prototype/trimStart/this-value-object-tostring-meth-priority.js-strict:true": "test/built-ins/String/prototype/trimStart/this-value-object-tostring-meth-priority.js: Test262Error: thisVal.toString expected to have been accessed. Expected SameValue(«0», «1») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/String/prototype/trimStart/this-value-object-valueof-meth-priority.js-strict:true": "test/built-ins/String/prototype/trimStart/this-value-object-valueof-meth-priority.js: Test262Error: thisVal[Symbol.toPrimitive should have been accessed. Expected SameValue(«0», «1») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Symbol/asyncIterator/prop-desc.js-strict:true": "test/built-ins/Symbol/asyncIterator/prop-desc.js: Test262Error: Expected SameValue(«undefined», «symbol») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Symbol/is-constructor.js-strict:true": "test/built-ins/Symbol/is-constructor.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/built-ins/Symbol/prototype/description/description-symboldescriptivestring.js-strict:true": "test/built-ins/Symbol/prototype/description/description-symboldescriptivestring.js: Test262Error: The value of symbol.description is \"foo\" Expected SameValue(«undefined», «foo») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Symbol/prototype/description/descriptor.js-strict:true": "test/built-ins/Symbol/prototype/description/descriptor.js: TypeError: Cannot read property 'set' of undefined at test/built-ins/Symbol/prototype/description/descriptor.js:20:3(15)",
  "test/built-ins/Symbol/prototype/description/get.js-strict:true": "test/built-ins/Symbol/prototype/description/get.js: Test262Error: The value of symbol.description is \"test\" Expected SameValue(«undefined», «test») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Symbol/prototype/description/this-val-non-symbol.js-strict:true": "test/built-ins/Symbol/prototype/description/this-val-non-symbol.js: TypeError: Cannot read property 'get' of undefined at test/built-ins/Symbol/prototype/description/this-val-non-symbol.js:17:14(9)",
  "test/built-ins/Symbol/prototype/description/this-val-symbol.js-strict:true": "test/built-ins/Symbol/prototype/description/this-val-symbol.js: TypeError: Cannot read property 'get' of undefined at test/built-ins/Symbol/prototype/description/this-val-symbol.js:16:14(13)",
  "test/built-ins/Symbol/prototype/description/wrapper.js-strict:true": "test/built-ins/Symbol/prototype/description/wrapper.js: Test262Error: The value of symbol.description is \"test\" Expected SameValue(«undefined», «test») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/Symbol/species/builtin-getter-name.js-strict:true": "test/built-ins/Symbol/species/builtin-getter-name.js: ReferenceError: Promise is not defined at test/built-ins/Symbol/species/builtin-getter-name.js:21:32(31)",
  "test/built-ins/ThrowTypeError/extensible.js-strict:true": "test/built-ins/ThrowTypeError/extensible.js: Test262Error: Expected SameValue(«true», «false») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/ThrowTypeError/frozen.js-strict:true": "test/built-ins/ThrowTypeError/frozen.js: Test262Error: Expected SameValue(«false», «true») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/ThrowTypeError/length.js-strict:true": "test/built-ins/ThrowTypeError/length.js: Test262Error: Expected obj[length] to have configurable:false. at harness/sta.js:22:9(49)",
  "test/built-ins/ThrowTypeError/name.js-strict:true": "test/built-ins/ThrowTypeError/name.js: Test262Error: descriptor value should be ; descriptor should not be configurable at harness/sta.js:22:9(49)",
  "test/built-ins/ThrowTypeError/unique-per-realm-function-proto.js-strict:true": "test/built-ins/ThrowTypeError/unique-per-realm-function-proto.js: TypeError: Cannot read property 'get' of undefined at test/built-ins/ThrowTypeError/unique-per-realm-function-proto.js:25:34(40)",
  "test/built-ins/TypedArray/prototype/slice/detached-buffer-custom-ctor-other-targettype.js-strict:true": "test/built-ins/TypedArray/prototype/slice/detached-buffer-custom-ctor-other-targettype.js: Test262Error: Expected obj[0] to have configurable:true. (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/BigUint64Array/is-a-constructor.js-strict:true": "test/built-ins/TypedArrayConstructors/BigUint64Array/is-a-constructor.js: ReferenceError: BigUint64Array is not defined at test/built-ins/TypedArrayConstructors/BigUint64Array/is-a-constructor.js:23:32(4)",
  "test/built-ins/TypedArrayConstructors/ctors/buffer-arg/excessive-offset-throws.js-strict:true": "test/built-ins/TypedArrayConstructors/ctors/buffer-arg/excessive-offset-throws.js: Test262Error: Expected a RangeError to be thrown but no exception was thrown at all (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/ctors/buffer-arg/length-to-number-detachbuffer.js-strict:true": "test/built-ins/TypedArrayConstructors/ctors/buffer-arg/length-to-number-detachbuffer.js: Test262Error: Expected a TypeError but got a RangeError (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/ctors/buffer-arg/use-default-proto-if-custom-proto-is-not-object.js-strict:true": "test/built-ins/TypedArrayConstructors/ctors/buffer-arg/use-default-proto-if-custom-proto-is-not-object.js: Test262Error: Expected SameValue(«function TypedArray() { [native code] }», «function Float64Array() { [native code] }») to be true (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/ctors/length-arg/use-default-proto-if-custom-proto-is-not-object.js-strict:true": "test/built-ins/TypedArrayConstructors/ctors/length-arg/use-default-proto-if-custom-proto-is-not-object.js: Test262Error: Expected SameValue(«function TypedArray() { [native code] }», «function Float64Array() { [native code] }») to be true (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/ctors/no-args/use-default-proto-if-custom-proto-is-not-object.js-strict:true": "test/built-ins/TypedArrayConstructors/ctors/no-args/use-default-proto-if-custom-proto-is-not-object.js: Test262Error: Expected SameValue(«function TypedArray() { [native code] }», «function Float64Array() { [native code] }») to be true (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/ctors/object-arg/as-generator-iterable-returns.js-strict:true": "test/built-ins/TypedArrayConstructors/ctors/object-arg/as-generator-iterable-returns.js: test/built-ins/TypedArrayConstructors/ctors/object-arg/as-generator-iterable-returns.js: Line 21:21 Unexpected token * (and 3 more errors)",
  "test/built-ins/TypedArrayConstructors/ctors/object-arg/use-default-proto-if-custom-proto-is-not-object.js-strict:true": "test/built-ins/TypedArrayConstructors/ctors/object-arg/use-default-proto-if-custom-proto-is-not-object.js: TypeError: Invalid TypedArray: [object Object] (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/detached-when-species-retrieved-different-type.js-strict:true": "test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/detached-when-species-retrieved-different-type.js: Test262Error: TypeError thrown for detached source buffer Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/detached-when-species-retrieved-same-type.js-strict:true": "test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/detached-when-species-retrieved-same-type.js: Test262Error: TypeError thrown for detached source buffer Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/other-ctor-buffer-ctor-custom-species.js-strict:true": "test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/other-ctor-buffer-ctor-custom-species.js: Test262Error: Expected SameValue(«[object ArrayBuffer]», «[object Object]») to be true (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/other-ctor-buffer-ctor-species-access-throws.js-strict:true": "test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/other-ctor-buffer-ctor-species-access-throws.js: Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/other-ctor-buffer-ctor-species-not-ctor-throws.js-strict:true": "test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/other-ctor-buffer-ctor-species-not-ctor-throws.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/other-ctor-buffer-ctor-species-prototype-throws.js-strict:true": "test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/other-ctor-buffer-ctor-species-prototype-throws.js: Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/same-ctor-buffer-ctor-species-custom.js-strict:true": "test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/same-ctor-buffer-ctor-species-custom.js: Test262Error: Expected SameValue(«[object ArrayBuffer]», «[object Object]») to be true (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/same-ctor-buffer-ctor-species-not-ctor.js-strict:true": "test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/same-ctor-buffer-ctor-species-not-ctor.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/same-ctor-buffer-ctor-species-prototype-throws.js-strict:true": "test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/same-ctor-buffer-ctor-species-prototype-throws.js: Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/same-ctor-buffer-ctor-species-throws.js-strict:true": "test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/same-ctor-buffer-ctor-species-throws.js: Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/use-custom-proto-if-object.js-strict:true": "test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/use-custom-proto-if-object.js: TypeError: Invalid TypedArray: [object Object] (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/use-default-proto-if-custom-proto-is-not-object.js-strict:true": "test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/use-default-proto-if-custom-proto-is-not-object.js: TypeError: Invalid TypedArray: [object Object] (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/conversion-operation-consistent-nan.js-strict:true": "panic while running test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/conversion-operation-consistent-nan.js: runtime error: invalid memory address or nil pointer dereference",
  "test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/conversion-operation.js-strict:true": "panic while running test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/conversion-operation.js: runtime error: invalid memory address or nil pointer dereference",
  "test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/desc-value-throws.js-strict:true": "panic while running test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/desc-value-throws.js: runtime error: invalid memory address or nil pointer dereference",
  "test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/detached-buffer.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/detached-buffer.js: TypeError: ArrayBuffer is detached (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/key-is-minus-zero.js-strict:true": "panic while running test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/key-is-minus-zero.js: runtime error: invalid memory address or nil pointer dereference",
  "test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/key-is-not-canonical-index.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/key-is-not-canonical-index.js: Test262Error: return true after defining data property [+1] Expected SameValue(«false», «true») to be true (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/key-is-not-integer.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/key-is-not-integer.js: Test262Error: 0.1 Expected SameValue(«true», «false») to be true (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/key-is-numericindex-desc-not-writable.js-strict:true": "panic while running test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/key-is-numericindex-desc-not-writable.js: runtime error: invalid memory address or nil pointer dereference",
  "test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/key-is-numericindex.js-strict:true": "panic while running test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/key-is-numericindex.js: runtime error: invalid memory address or nil pointer dereference",
  "test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/set-value.js-strict:true": "panic while running test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/set-value.js: runtime error: invalid memory address or nil pointer dereference",
  "test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/tonumber-value-detached-buffer.js-strict:true": "panic while running test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/tonumber-value-detached-buffer.js: runtime error: invalid memory address or nil pointer dereference",
  "test/built-ins/TypedArrayConstructors/internals/Delete/detached-buffer.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/Delete/detached-buffer.js: TypeError: ArrayBuffer is detached (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/Delete/indexed-value-ab-non-strict.js-strict:false": "test/built-ins/TypedArrayConstructors/internals/Delete/indexed-value-ab-non-strict.js: TypeError: Cannot delete property '0' of 0,0 (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/Delete/key-is-not-canonical-index-non-strict.js-strict:false": "test/built-ins/TypedArrayConstructors/internals/Delete/key-is-not-canonical-index-non-strict.js: TypeError: Cannot delete property '1.0' of  (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/Delete/key-is-not-canonical-index-strict.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/Delete/key-is-not-canonical-index-strict.js: Test262Error: `delete sample[key]` throws TypeError Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/Delete/key-is-not-minus-zero-non-strict.js-strict:false": "test/built-ins/TypedArrayConstructors/internals/Delete/key-is-not-minus-zero-non-strict.js: TypeError: Cannot delete property '0' of 0 (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/Delete/key-is-not-minus-zero-strict.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/Delete/key-is-not-minus-zero-strict.js: TypeError: Cannot delete property '0' of 0 (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/Delete/key-is-not-numeric-index-non-strict.js-strict:false": "test/built-ins/TypedArrayConstructors/internals/Delete/key-is-not-numeric-index-non-strict.js: TypeError: Cannot delete property 'bar' of 0 (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/Delete/key-is-out-of-bounds-non-strict.js-strict:false": "test/built-ins/TypedArrayConstructors/internals/Delete/key-is-out-of-bounds-non-strict.js: TypeError: Cannot delete property '-1' of 0 (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/Delete/key-is-out-of-bounds-strict.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/Delete/key-is-out-of-bounds-strict.js: TypeError: Cannot delete property '-1' of 0 (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/Get/detached-buffer.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/Get/detached-buffer.js: TypeError: ArrayBuffer is detached (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/Get/key-is-not-canonical-index.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/Get/key-is-not-canonical-index.js: Test262Error: return value from own key [+1] Expected SameValue(«test262», «bar») to be true (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/Get/key-is-not-integer.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/Get/key-is-not-integer.js: Test262Error: OrdinaryGet was called! Ref: 9.1.8.1 3.c (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/Get/key-is-not-minus-zero.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/Get/key-is-not-minus-zero.js: Test262Error: Expected SameValue(«42», «undefined») to be true (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/Get/key-is-out-of-bounds.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/Get/key-is-out-of-bounds.js: Test262Error: OrdinaryGet was called! Ref: 9.1.8.1 3.c (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/GetOwnProperty/detached-buffer.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/GetOwnProperty/detached-buffer.js: TypeError: ArrayBuffer is detached (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/GetOwnProperty/enumerate-detached-buffer.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/GetOwnProperty/enumerate-detached-buffer.js: TypeError: ArrayBuffer is detached (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/GetOwnProperty/index-prop-desc.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/GetOwnProperty/index-prop-desc.js: Test262Error: Expected obj[0] to have configurable:true. (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/GetOwnProperty/key-is-minus-zero.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/GetOwnProperty/key-is-minus-zero.js: Test262Error: Expected SameValue(«[object Object]», «undefined») to be true (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/GetOwnProperty/key-is-not-canonical-index.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/GetOwnProperty/key-is-not-canonical-index.js: Test262Error: undefined property [+1] Expected SameValue(«[object Object]», «undefined») to be true (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/HasProperty/abrupt-from-ordinary-has-parent-hasproperty.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/HasProperty/abrupt-from-ordinary-has-parent-hasproperty.js: Test262Error:  (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/HasProperty/detached-buffer.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/HasProperty/detached-buffer.js: TypeError: ArrayBuffer is detached (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/HasProperty/infinity-with-detached-buffer.js-strict:false": "test/built-ins/TypedArrayConstructors/internals/HasProperty/infinity-with-detached-buffer.js: SyntaxError: test/built-ins/TypedArrayConstructors/internals/HasProperty/infinity-with-detached-buffer.js: 'with' in strict mode (46:2)\n  44 |   $DETACHBUFFER(ta.buffer);\n  45 | \n\u003e 46 |   with (ta) {\n     |   ^\n  47 |     Infinity;\n  48 |     assert.sameValue(counter, 1, 'The value of `counter` is 1');\n  49 |   } at \u003ceval\u003e:2:28542(114)",
  "test/built-ins/TypedArrayConstructors/internals/HasProperty/inherited-property.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/HasProperty/inherited-property.js: Test262Error: 42 Expected SameValue(«true», «false») to be true (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/HasProperty/key-is-greater-than-last-index.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/HasProperty/key-is-greater-than-last-index.js: Test262Error: Reflect.has(sample, \"1\") must return false Expected SameValue(«true», «false») to be true (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/HasProperty/key-is-lower-than-zero.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/HasProperty/key-is-lower-than-zero.js: Test262Error: Reflect.has(sample, \"-1\") must return false Expected SameValue(«true», «false») to be true (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/HasProperty/key-is-minus-zero.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/HasProperty/key-is-minus-zero.js: Test262Error: Reflect.has(sample, \"-0\") must return false Expected SameValue(«true», «false») to be true (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/HasProperty/key-is-not-canonical-index.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/HasProperty/key-is-not-canonical-index.js: Test262Error: returns true with own key [+1] Expected SameValue(«false», «true») to be true (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/HasProperty/key-is-not-integer.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/HasProperty/key-is-not-integer.js: Test262Error: 1.1 Expected SameValue(«true», «false») to be true (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/Set/detached-buffer.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/Set/detached-buffer.js: TypeError: ArrayBuffer is detached (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/Set/key-is-minus-zero.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/Set/key-is-minus-zero.js: Test262Error: Reflect.set(sample, \"-0\", 1) must return false Expected SameValue(«true», «false») to be true (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/Set/key-is-not-canonical-index.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/Set/key-is-not-canonical-index.js: Test262Error: Reflect.set(sample, key, \"ecma262\") must return true Expected SameValue(«false», «true») to be true (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/Set/key-is-not-integer.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/Set/key-is-not-integer.js: Test262Error: Reflect.set(sample, \"1.1\", 1) must return false Expected SameValue(«true», «false») to be true (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/Set/key-is-out-of-bounds.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/Set/key-is-out-of-bounds.js: Test262Error: sample.hasOwnProperty(\"-1\") must return false Expected SameValue(«true», «false») to be true (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/Set/tonumber-value-detached-buffer.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/Set/tonumber-value-detached-buffer.js: TypeError: ArrayBuffer is detached (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/TypedArrayConstructors/internals/Set/tonumber-value-throws.js-strict:true": "test/built-ins/TypedArrayConstructors/internals/Set/tonumber-value-throws.js: Test262Error: `sample[\"1.1\"] = obj` throws Test262Error Expected a Test262Error to be thrown but no exception was thrown at all (Testing with Float64Array.) at testWithTypedArrayConstructors (harness/testTypedArray.js:61:13(43))",
  "test/built-ins/WeakRef/constructor.js-strict:true": "test/built-ins/WeakRef/constructor.js: Test262Error: typeof WeakRef is function Expected SameValue(«undefined», «function») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/WeakRef/instance-extensible.js-strict:true": "test/built-ins/WeakRef/instance-extensible.js: ReferenceError: WeakRef is not defined at test/built-ins/WeakRef/instance-extensible.js:31:14(2)",
  "test/built-ins/WeakRef/is-a-constructor.js-strict:true": "test/built-ins/WeakRef/is-a-constructor.js: ReferenceError: WeakRef is not defined at test/built-ins/WeakRef/is-a-constructor.js:23:32(4)",
  "test/built-ins/WeakRef/length.js-strict:true": "test/built-ins/WeakRef/length.js: ReferenceError: WeakRef is not defined at test/built-ins/WeakRef/length.js:28:16(1)",
  "test/built-ins/WeakRef/name.js-strict:true": "test/built-ins/WeakRef/name.js: ReferenceError: WeakRef is not defined at test/built-ins/WeakRef/name.js:27:16(1)",
  "test/built-ins/WeakRef/newtarget-prototype-is-not-object.js-strict:true": "test/built-ins/WeakRef/newtarget-prototype-is-not-object.js: ReferenceError: WeakRef is not defined at test/built-ins/WeakRef/newtarget-prototype-is-not-object.js:38:24(14)",
  "test/built-ins/WeakRef/prop-desc.js-strict:true": "test/built-ins/WeakRef/prop-desc.js: Test262Error: obj should have an own property WeakRef at harness/sta.js:22:9(49)",
  "test/built-ins/WeakRef/proto.js-strict:true": "test/built-ins/WeakRef/proto.js: ReferenceError: WeakRef is not defined at test/built-ins/WeakRef/proto.js:16:25(6)",
  "test/built-ins/WeakRef/prototype-from-newtarget-abrupt.js-strict:true": "test/built-ins/WeakRef/prototype-from-newtarget-abrupt.js: Test262Error: Expected a Test262Error but got a ReferenceError at harness/sta.js:22:9(49)",
  "test/built-ins/WeakRef/prototype-from-newtarget-custom.js-strict:true": "test/built-ins/WeakRef/prototype-from-newtarget-custom.js: ReferenceError: WeakRef is not defined at test/built-ins/WeakRef/prototype-from-newtarget-custom.js:36:24(6)",
  "test/built-ins/WeakRef/prototype-from-newtarget.js-strict:true": "test/built-ins/WeakRef/prototype-from-newtarget.js: ReferenceError: WeakRef is not defined at test/built-ins/WeakRef/prototype-from-newtarget.js:34:14(2)",
  "test/built-ins/WeakRef/prototype/Symbol.toStringTag.js-strict:true": "test/built-ins/WeakRef/prototype/Symbol.toStringTag.js: ReferenceError: WeakRef is not defined at test/built-ins/WeakRef/prototype/Symbol.toStringTag.js:19:16(1)",
  "test/built-ins/WeakRef/prototype/constructor.js-strict:true": "test/built-ins/WeakRef/prototype/constructor.js: ReferenceError: WeakRef is not defined at test/built-ins/WeakRef/prototype/constructor.js:22:14(2)",
  "test/built-ins/WeakRef/prototype/deref/custom-this.js-strict:true": "test/built-ins/WeakRef/prototype/deref/custom-this.js: ReferenceError: WeakRef is not defined at test/built-ins/WeakRef/prototype/deref/custom-this.js:22:13(8)",
  "test/built-ins/WeakRef/prototype/deref/length.js-strict:true": "test/built-ins/WeakRef/prototype/deref/length.js: ReferenceError: WeakRef is not defined at test/built-ins/WeakRef/prototype/deref/length.js:28:16(1)",
  "test/built-ins/WeakRef/prototype/deref/name.js-strict:true": "test/built-ins/WeakRef/prototype/deref/name.js: ReferenceError: WeakRef is not defined at test/built-ins/WeakRef/prototype/deref/name.js:27:16(1)",
  "test/built-ins/WeakRef/prototype/deref/not-a-constructor.js-strict:true": "test/built-ins/WeakRef/prototype/deref/not-a-constructor.js: ReferenceError: WeakRef is not defined at test/built-ins/WeakRef/prototype/deref/not-a-constructor.js:26:15(4)",
  "test/built-ins/WeakRef/prototype/deref/prop-desc.js-strict:true": "test/built-ins/WeakRef/prototype/deref/prop-desc.js: ReferenceError: WeakRef is not defined at test/built-ins/WeakRef/prototype/deref/prop-desc.js:19:25(3)",
  "test/built-ins/WeakRef/prototype/deref/return-target.js-strict:true": "test/built-ins/WeakRef/prototype/deref/return-target.js: ReferenceError: WeakRef is not defined at test/built-ins/WeakRef/prototype/deref/return-target.js:21:16(7)",
  "test/built-ins/WeakRef/prototype/deref/this-does-not-have-internal-target-throws.js-strict:true": "test/built-ins/WeakRef/prototype/deref/this-does-not-have-internal-target-throws.js: ReferenceError: WeakRef is not defined at test/built-ins/WeakRef/prototype/deref/this-does-not-have-internal-target-throws.js:22:25(12)",
  "test/built-ins/WeakRef/prototype/deref/this-not-object-throws.js-strict:true": "test/built-ins/WeakRef/prototype/deref/this-not-object-throws.js: ReferenceError: WeakRef is not defined at test/built-ins/WeakRef/prototype/deref/this-not-object-throws.js:22:25(5)",
  "test/built-ins/WeakRef/prototype/prop-desc.js-strict:true": "test/built-ins/WeakRef/prototype/prop-desc.js: ReferenceError: WeakRef is not defined at test/built-ins/WeakRef/prototype/prop-desc.js:15:16(1)",
  "test/built-ins/WeakRef/prototype/proto.js-strict:true": "test/built-ins/WeakRef/prototype/proto.js: ReferenceError: WeakRef is not defined at test/built-ins/WeakRef/prototype/proto.js:14:35(5)",
  "test/built-ins/WeakRef/returns-new-object-from-constructor.js-strict:true": "test/built-ins/WeakRef/returns-new-object-from-constructor.js: ReferenceError: WeakRef is not defined at test/built-ins/WeakRef/returns-new-object-from-constructor.js:35:14(9)",
  "test/built-ins/WeakRef/target-not-object-throws.js-strict:true": "test/built-ins/WeakRef/target-not-object-throws.js: Test262Error: typeof WeakRef is function Expected SameValue(«undefined», «function») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/WeakRef/undefined-newtarget-throws.js-strict:true": "test/built-ins/WeakRef/undefined-newtarget-throws.js: Test262Error: typeof WeakRef is function Expected SameValue(«undefined», «function») to be true at harness/sta.js:22:9(49)",
  "test/built-ins/global/global-object.js-strict:true": "test/built-ins/global/global-object.js: ReferenceError: globalThis is not defined at test/built-ins/global/global-object.js:12:24(5)",
  "test/built-ins/global/property-descriptor.js-strict:true": "test/built-ins/global/property-descriptor.js: Test262Error: obj should have an own property globalThis at harness/sta.js:22:9(49)",
  "test/harness/assert-notsamevalue-tostring.js-strict:true": "test/harness/assert-notsamevalue-tostring.js: test/harness/assert-notsamevalue-tostring.js: Line 12:49 Unexpected token function (and 7 more errors)",
  "test/harness/assert-samevalue-tostring.js-strict:true": "test/harness/assert-samevalue-tostring.js: test/harness/assert-samevalue-tostring.js: Line 12:49 Unexpected token function (and 7 more errors)",
  "test/harness/assert-tostring.js-strict:true": "test/harness/assert-tostring.js: test/harness/assert-tostring.js: Line 12:49 Unexpected token function (and 7 more errors)",
  "test/harness/timer.js-strict:true": "test/harness/timer.js: ReferenceError: Promise is not defined at harness/timer.js:9:5(0)",
  "test/language/arguments-object/arguments-caller.js-strict:true": "test/language/arguments-object/arguments-caller.js: Test262Error: arguments.caller does not exist Expected SameValue(«[object Object]», «undefined») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-multiple.js-strict:true": "test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-multiple.js: SyntaxError: test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-multiple.js: Unexpected character '#' (37:2)\n  35 | var callCount = 0;\n  36 | class C {\n\u003e 37 |   #method() {\n     |   ^\n  38 |     assert.sameValue(arguments.length, 2);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     assert.sameValue(arguments[1], 'TC39'); at \u003ceval\u003e:2:28542(114)",
  "test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-null.js-strict:true": "test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-null.js: SyntaxError: test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-null.js: Unexpected character '#' (37:2)\n  35 | var callCount = 0;\n  36 | class C {\n\u003e 37 |   #method() {\n     |   ^\n  38 |     assert.sameValue(arguments.length, 2);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     assert.sameValue(arguments[1], null); at \u003ceval\u003e:2:28542(114)",
  "test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-single-args.js-strict:true": "test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-single-args.js: SyntaxError: test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-single-args.js: Unexpected character '#' (37:2)\n  35 | var callCount = 0;\n  36 | class C {\n\u003e 37 |   #method() {\n     |   ^\n  38 |     assert.sameValue(arguments.length, 1);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-spread-operator.js-strict:true": "test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-spread-operator.js: SyntaxError: test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-spread-operator.js: Unexpected character '#' (39:2)\n  37 | var callCount = 0;\n  38 | class C {\n\u003e 39 |   #method() {\n     |   ^\n  40 |     assert.sameValue(arguments.length, 4);\n  41 |     assert.sameValue(arguments[0], 42);\n  42 |     assert.sameValue(arguments[1], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-undefined.js-strict:true": "test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-undefined.js: SyntaxError: test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-undefined.js: Unexpected character '#' (37:2)\n  35 | var callCount = 0;\n  36 | class C {\n\u003e 37 |   #method() {\n     |   ^\n  38 |     assert.sameValue(arguments.length, 2);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     assert.sameValue(arguments[1], undefined); at \u003ceval\u003e:2:28542(114)",
  "test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-multiple.js-strict:true": "test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-multiple.js: SyntaxError: test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-multiple.js: Unexpected character '#' (37:9)\n  35 | var callCount = 0;\n  36 | class C {\n\u003e 37 |   static #method() {\n     |          ^\n  38 |     assert.sameValue(arguments.length, 2);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     assert.sameValue(arguments[1], 'TC39'); at \u003ceval\u003e:2:28542(114)",
  "test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-null.js-strict:true": "test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-null.js: SyntaxError: test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-null.js: Unexpected character '#' (37:9)\n  35 | var callCount = 0;\n  36 | class C {\n\u003e 37 |   static #method() {\n     |          ^\n  38 |     assert.sameValue(arguments.length, 2);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     assert.sameValue(arguments[1], null); at \u003ceval\u003e:2:28542(114)",
  "test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-single-args.js-strict:true": "test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-single-args.js: SyntaxError: test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-single-args.js: Unexpected character '#' (37:9)\n  35 | var callCount = 0;\n  36 | class C {\n\u003e 37 |   static #method() {\n     |          ^\n  38 |     assert.sameValue(arguments.length, 1);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-spread-operator.js-strict:true": "test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-spread-operator.js: SyntaxError: test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-spread-operator.js: Unexpected character '#' (39:9)\n  37 | var callCount = 0;\n  38 | class C {\n\u003e 39 |   static #method() {\n     |          ^\n  40 |     assert.sameValue(arguments.length, 4);\n  41 |     assert.sameValue(arguments[0], 42);\n  42 |     assert.sameValue(arguments[1], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-undefined.js-strict:true": "test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-undefined.js: SyntaxError: test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-undefined.js: Unexpected character '#' (37:9)\n  35 | var callCount = 0;\n  36 | class C {\n\u003e 37 |   static #method() {\n     |          ^\n  38 |     assert.sameValue(arguments.length, 2);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     assert.sameValue(arguments[1], undefined); at \u003ceval\u003e:2:28542(114)",
  "test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-multiple.js-strict:true": "test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-multiple.js: SyntaxError: test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-multiple.js: Unexpected character '#' (37:2)\n  35 | var callCount = 0;\n  36 | var C = class {\n\u003e 37 |   #method() {\n     |   ^\n  38 |     assert.sameValue(arguments.length, 2);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     assert.sameValue(arguments[1], 'TC39'); at \u003ceval\u003e:2:28542(114)",
  "test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-null.js-strict:true": "test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-null.js: SyntaxError: test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-null.js: Unexpected character '#' (37:2)\n  35 | var callCount = 0;\n  36 | var C = class {\n\u003e 37 |   #method() {\n     |   ^\n  38 |     assert.sameValue(arguments.length, 2);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     assert.sameValue(arguments[1], null); at \u003ceval\u003e:2:28542(114)",
  "test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-single-args.js-strict:true": "test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-single-args.js: SyntaxError: test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-single-args.js: Unexpected character '#' (37:2)\n  35 | var callCount = 0;\n  36 | var C = class {\n\u003e 37 |   #method() {\n     |   ^\n  38 |     assert.sameValue(arguments.length, 1);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-spread-operator.js-strict:true": "test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-spread-operator.js: SyntaxError: test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-spread-operator.js: Unexpected character '#' (39:2)\n  37 | var callCount = 0;\n  38 | var C = class {\n\u003e 39 |   #method() {\n     |   ^\n  40 |     assert.sameValue(arguments.length, 4);\n  41 |     assert.sameValue(arguments[0], 42);\n  42 |     assert.sameValue(arguments[1], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-undefined.js-strict:true": "test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-undefined.js: SyntaxError: test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-undefined.js: Unexpected character '#' (37:2)\n  35 | var callCount = 0;\n  36 | var C = class {\n\u003e 37 |   #method() {\n     |   ^\n  38 |     assert.sameValue(arguments.length, 2);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     assert.sameValue(arguments[1], undefined); at \u003ceval\u003e:2:28542(114)",
  "test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-multiple.js-strict:true": "test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-multiple.js: SyntaxError: test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-multiple.js: Unexpected character '#' (37:9)\n  35 | var callCount = 0;\n  36 | var C = class {\n\u003e 37 |   static #method() {\n     |          ^\n  38 |     assert.sameValue(arguments.length, 2);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     assert.sameValue(arguments[1], 'TC39'); at \u003ceval\u003e:2:28542(114)",
  "test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-null.js-strict:true": "test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-null.js: SyntaxError: test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-null.js: Unexpected character '#' (37:9)\n  35 | var callCount = 0;\n  36 | var C = class {\n\u003e 37 |   static #method() {\n     |          ^\n  38 |     assert.sameValue(arguments.length, 2);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     assert.sameValue(arguments[1], null); at \u003ceval\u003e:2:28542(114)",
  "test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-single-args.js-strict:true": "test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-single-args.js: SyntaxError: test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-single-args.js: Unexpected character '#' (37:9)\n  35 | var callCount = 0;\n  36 | var C = class {\n\u003e 37 |   static #method() {\n     |          ^\n  38 |     assert.sameValue(arguments.length, 1);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-spread-operator.js-strict:true": "test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-spread-operator.js: SyntaxError: test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-spread-operator.js: Unexpected character '#' (39:9)\n  37 | var callCount = 0;\n  38 | var C = class {\n\u003e 39 |   static #method() {\n     |          ^\n  40 |     assert.sameValue(arguments.length, 4);\n  41 |     assert.sameValue(arguments[0], 42);\n  42 |     assert.sameValue(arguments[1], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-undefined.js-strict:true": "test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-undefined.js: SyntaxError: test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-undefined.js: Unexpected character '#' (37:9)\n  35 | var callCount = 0;\n  36 | var C = class {\n\u003e 37 |   static #method() {\n     |          ^\n  38 |     assert.sameValue(arguments.length, 2);\n  39 |     assert.sameValue(arguments[0], 42);\n  40 |     assert.sameValue(arguments[1], undefined); at \u003ceval\u003e:2:28542(114)",
  "test/language/arguments-object/mapped/Symbol.iterator.js-strict:false": "test/language/arguments-object/mapped/Symbol.iterator.js: Test262Error: Expected SameValue(«undefined», «function values() { [native code] }») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-1.js-strict:false": "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-1.js: Test262Error: Expected SameValue(«undefined», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-delete-1.js-strict:false": "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-delete-1.js: Test262Error: Expected SameValue(«undefined», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-delete-2.js-strict:false": "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-delete-2.js: Test262Error: Expected SameValue(«undefined», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-delete-3.js-strict:false": "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-delete-3.js: Test262Error: Expected SameValue(«undefined», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-delete-4.js-strict:false": "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-delete-4.js: Test262Error: Expected SameValue(«undefined», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-nonwritable-1.js-strict:false": "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-nonwritable-1.js: Test262Error: Expected SameValue(«undefined», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-nonwritable-2.js-strict:false": "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-nonwritable-2.js: Test262Error: Expected SameValue(«undefined», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-nonwritable-3.js-strict:false": "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-nonwritable-3.js: Test262Error: Expected SameValue(«undefined», «2») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-nonwritable-4.js-strict:false": "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-nonwritable-4.js: Test262Error: Expected SameValue(«undefined», «2») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-nonwritable-5.js-strict:false": "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-nonwritable-5.js: Test262Error: Expected SameValue(«undefined», «2») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-strict-delete-1.js-strict:false": "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-strict-delete-1.js: Test262Error: Expected SameValue(«undefined», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-strict-delete-2.js-strict:false": "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-strict-delete-2.js: Test262Error: Expected SameValue(«undefined», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-strict-delete-3.js-strict:false": "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-strict-delete-3.js: Test262Error: Expected SameValue(«undefined», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-strict-delete-4.js-strict:false": "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-strict-delete-4.js: Test262Error: Expected SameValue(«undefined», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/mapped-arguments-nonwritable-nonconfigurable-1.js-strict:false": "test/language/arguments-object/mapped/mapped-arguments-nonwritable-nonconfigurable-1.js: Test262Error: Expected SameValue(«undefined», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/mapped-arguments-nonwritable-nonconfigurable-2.js-strict:false": "test/language/arguments-object/mapped/mapped-arguments-nonwritable-nonconfigurable-2.js: Test262Error: Expected SameValue(«undefined», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/mapped-arguments-nonwritable-nonconfigurable-3.js-strict:false": "test/language/arguments-object/mapped/mapped-arguments-nonwritable-nonconfigurable-3.js: Test262Error: Expected SameValue(«undefined», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/mapped-arguments-nonwritable-nonconfigurable-4.js-strict:false": "test/language/arguments-object/mapped/mapped-arguments-nonwritable-nonconfigurable-4.js: Test262Error: Expected SameValue(«undefined», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/nonconfigurable-descriptors-set-value-by-arguments.js-strict:false": "test/language/arguments-object/mapped/nonconfigurable-descriptors-set-value-by-arguments.js: Test262Error: Expected SameValue(«1», «2») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/nonconfigurable-descriptors-set-value-with-define-property.js-strict:false": "test/language/arguments-object/mapped/nonconfigurable-descriptors-set-value-with-define-property.js: Test262Error: Expected SameValue(«1», «2») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/nonconfigurable-descriptors-with-param-assign.js-strict:false": "test/language/arguments-object/mapped/nonconfigurable-descriptors-with-param-assign.js: Test262Error: Expected SameValue(«1», «2») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/nonconfigurable-nonenumerable-nonwritable-descriptors-set-by-arguments.js-strict:false": "test/language/arguments-object/mapped/nonconfigurable-nonenumerable-nonwritable-descriptors-set-by-arguments.js: Test262Error: Expected SameValue(«1», «2») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/nonconfigurable-nonenumerable-nonwritable-descriptors-set-by-param.js-strict:false": "test/language/arguments-object/mapped/nonconfigurable-nonenumerable-nonwritable-descriptors-set-by-param.js: Test262Error: Expected SameValue(«1», «2») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/nonconfigurable-nonwritable-descriptors-set-by-arguments.js-strict:false": "test/language/arguments-object/mapped/nonconfigurable-nonwritable-descriptors-set-by-arguments.js: Test262Error: Expected SameValue(«1», «2») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/nonconfigurable-nonwritable-descriptors-set-by-param.js-strict:false": "test/language/arguments-object/mapped/nonconfigurable-nonwritable-descriptors-set-by-param.js: Test262Error: Expected SameValue(«1», «2») to be true at harness/sta.js:22:9(49)",
  "test/language/arguments-object/mapped/nonwritable-nonconfigurable-descriptors-set-by-arguments.js-strict:false": "test/language/arguments-object/mapped/nonwritable-nonconfigurable-descriptors-set-by-arguments.js: TypeError: Cannot assign to read only property '0' at fn (test/language/arguments-object/mapped/nonwritable-nonconfigurable-descriptors-set-by-arguments.js:19:18(19))",
  "test/language/arguments-object/mapped/nonwritable-nonenumerable-nonconfigurable-descriptors-set-by-arguments.js-strict:false": "test/language/arguments-object/mapped/nonwritable-nonenumerable-nonconfigurable-descriptors-set-by-arguments.js: TypeError: Cannot assign to read only property '0' at fn (test/language/arguments-object/mapped/nonwritable-nonenumerable-nonconfigurable-descriptors-set-by-arguments.js:17:18(21))",
  "test/language/arguments-object/unmapped/Symbol.iterator.js-strict:false": "test/language/arguments-object/unmapped/Symbol.iterator.js: Test262Error: Expected SameValue(«undefined», «function values() { [native code] }») to be true at harness/sta.js:22:9(49)",
  "test/language/block-scope/syntax/function-declarations/in-statement-position-do-statement-while-expression.js-strict:true": "test/language/block-scope/syntax/function-declarations/in-statement-position-do-statement-while-expression.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/function-declarations/in-statement-position-for-statement.js-strict:true": "test/language/block-scope/syntax/function-declarations/in-statement-position-for-statement.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/function-declarations/in-statement-position-if-expression-statement-else-statement.js-strict:true": "test/language/block-scope/syntax/function-declarations/in-statement-position-if-expression-statement-else-statement.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/function-declarations/in-statement-position-if-expression-statement.js-strict:true": "test/language/block-scope/syntax/function-declarations/in-statement-position-if-expression-statement.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/function-declarations/in-statement-position-while-expression-statement.js-strict:true": "test/language/block-scope/syntax/function-declarations/in-statement-position-while-expression-statement.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/async-function-name-redeclaration-attempt-with-class.js-strict:true": "test/language/block-scope/syntax/redeclaration/async-function-name-redeclaration-attempt-with-class.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/block-scope/syntax/redeclaration/async-function-name-redeclaration-attempt-with-let.js-strict:true": "test/language/block-scope/syntax/redeclaration/async-function-name-redeclaration-attempt-with-let.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-async-function.js-strict:true": "test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-async-function.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-class.js-strict:true": "test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-class.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-const.js-strict:true": "test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-const.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-function.js-strict:true": "test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-function.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-let.js-strict:true": "test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-let.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-var.js-strict:true": "test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-var.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-async-function.js-strict:true": "test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-async-function.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-class.js-strict:true": "test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-class.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-const.js-strict:true": "test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-const.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-function.js-strict:true": "test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-function.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-let.js-strict:true": "test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-let.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-var.js-strict:true": "test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-var.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/fn-scope-var-name-redeclaration-attempt-with-class.js-strict:true": "test/language/block-scope/syntax/redeclaration/fn-scope-var-name-redeclaration-attempt-with-class.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/fn-scope-var-name-redeclaration-attempt-with-const.js-strict:true": "test/language/block-scope/syntax/redeclaration/fn-scope-var-name-redeclaration-attempt-with-const.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/fn-scope-var-name-redeclaration-attempt-with-function.js-strict:true": "test/language/block-scope/syntax/redeclaration/fn-scope-var-name-redeclaration-attempt-with-function.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/fn-scope-var-name-redeclaration-attempt-with-let.js-strict:true": "test/language/block-scope/syntax/redeclaration/fn-scope-var-name-redeclaration-attempt-with-let.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/function-declaration-attempt-to-redeclare-with-var-declaration-nested-in-function.js-strict:true": "test/language/block-scope/syntax/redeclaration/function-declaration-attempt-to-redeclare-with-var-declaration-nested-in-function.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/function-name-redeclaration-attempt-with-class.js-strict:true": "test/language/block-scope/syntax/redeclaration/function-name-redeclaration-attempt-with-class.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/block-scope/syntax/redeclaration/function-name-redeclaration-attempt-with-function.js-strict:true": "test/language/block-scope/syntax/redeclaration/function-name-redeclaration-attempt-with-function.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/function-name-redeclaration-attempt-with-let.js-strict:true": "test/language/block-scope/syntax/redeclaration/function-name-redeclaration-attempt-with-let.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/block-scope/syntax/redeclaration/function-name-redeclaration-attempt-with-var.js-strict:true": "test/language/block-scope/syntax/redeclaration/function-name-redeclaration-attempt-with-var.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/inner-block-var-name-redeclaration-attempt-with-class.js-strict:true": "test/language/block-scope/syntax/redeclaration/inner-block-var-name-redeclaration-attempt-with-class.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/inner-block-var-name-redeclaration-attempt-with-const.js-strict:true": "test/language/block-scope/syntax/redeclaration/inner-block-var-name-redeclaration-attempt-with-const.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/inner-block-var-name-redeclaration-attempt-with-function.js-strict:true": "test/language/block-scope/syntax/redeclaration/inner-block-var-name-redeclaration-attempt-with-function.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/inner-block-var-name-redeclaration-attempt-with-let.js-strict:true": "test/language/block-scope/syntax/redeclaration/inner-block-var-name-redeclaration-attempt-with-let.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/inner-block-var-redeclaration-attempt-after-class.js-strict:true": "test/language/block-scope/syntax/redeclaration/inner-block-var-redeclaration-attempt-after-class.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/inner-block-var-redeclaration-attempt-after-const.js-strict:true": "test/language/block-scope/syntax/redeclaration/inner-block-var-redeclaration-attempt-after-const.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/inner-block-var-redeclaration-attempt-after-function.js-strict:true": "test/language/block-scope/syntax/redeclaration/inner-block-var-redeclaration-attempt-after-function.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/inner-block-var-redeclaration-attempt-after-let.js-strict:true": "test/language/block-scope/syntax/redeclaration/inner-block-var-redeclaration-attempt-after-let.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-async-function.js-strict:true": "test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-async-function.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-class.js-strict:true": "test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-class.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-const.js-strict:true": "test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-const.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-function.js-strict:true": "test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-function.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-let.js-strict:true": "test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-let.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-var.js-strict:true": "test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-var.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/var-name-redeclaration-attempt-with-class.js-strict:true": "test/language/block-scope/syntax/redeclaration/var-name-redeclaration-attempt-with-class.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/var-name-redeclaration-attempt-with-const.js-strict:true": "test/language/block-scope/syntax/redeclaration/var-name-redeclaration-attempt-with-const.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/var-name-redeclaration-attempt-with-function.js-strict:true": "test/language/block-scope/syntax/redeclaration/var-name-redeclaration-attempt-with-function.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/var-name-redeclaration-attempt-with-let.js-strict:true": "test/language/block-scope/syntax/redeclaration/var-name-redeclaration-attempt-with-let.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/var-redeclaration-attempt-after-class.js-strict:true": "test/language/block-scope/syntax/redeclaration/var-redeclaration-attempt-after-class.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/var-redeclaration-attempt-after-const.js-strict:true": "test/language/block-scope/syntax/redeclaration/var-redeclaration-attempt-after-const.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/var-redeclaration-attempt-after-function.js-strict:true": "test/language/block-scope/syntax/redeclaration/var-redeclaration-attempt-after-function.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/block-scope/syntax/redeclaration/var-redeclaration-attempt-after-let.js-strict:true": "test/language/block-scope/syntax/redeclaration/var-redeclaration-attempt-after-let.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/comments/hashbang/eval-indirect.js-strict:true": "test/language/comments/hashbang/eval-indirect.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected token ILLEGAL (and 1 more errors) at eval (native)",
  "test/language/comments/hashbang/eval.js-strict:true": "test/language/comments/hashbang/eval.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected token ILLEGAL (and 1 more errors) at test/language/comments/hashbang/eval.js:15:22(5)",
  "test/language/comments/hashbang/function-constructor.js-strict:true": "test/language/comments/hashbang/function-constructor.js: SyntaxError: test/language/comments/hashbang/function-constructor.js: Unexpected token (17:47)\n  15 | const AsyncFunction = (async function (){}).constructor;\n  16 | const GeneratorFunction = (function *(){}).constructor;\n\u003e 17 | const AsyncGeneratorFunction = (async function *(){}).constructor;\n     |                                                ^\n  18 | for (const ctor of [\n  19 |   Function,\n  20 |   AsyncFunction, at \u003ceval\u003e:2:28542(114)",
  "test/language/comments/hashbang/line-terminator-carriage-return.js-strict:false": "test/language/comments/hashbang/line-terminator-carriage-return.js: test/language/comments/hashbang/line-terminator-carriage-return.js: Line 1:1 Unexpected token ILLEGAL (and 5 more errors)",
  "test/language/comments/hashbang/line-terminator-line-separator.js-strict:false": "test/language/comments/hashbang/line-terminator-line-separator.js: SyntaxError: test/language/comments/hashbang/line-terminator-line-separator.js: Unexpected token (2:0)\n  1 | #! this comment ends with a Line Separator (U+2028)\n\u003e 2 | {\n    | ^\n  3 | }\n  4 | \n  5 | // Copyright (C) 2019 Mike Pennisi. All rights reserved. at \u003ceval\u003e:2:28542(114)",
  "test/language/comments/hashbang/line-terminator-paragraph-separator.js-strict:false": "test/language/comments/hashbang/line-terminator-paragraph-separator.js: SyntaxError: test/language/comments/hashbang/line-terminator-paragraph-separator.js: Unexpected token (2:0)\n  1 | #! this comment ends with a Paragraph Separator (U+2029)\n\u003e 2 | {\n    | ^\n  3 | }\n  4 | \n  5 | // Copyright (C) 2019 Mike Pennisi. All rights reserved. at \u003ceval\u003e:2:28542(114)",
  "test/language/comments/hashbang/module.js-strict:false": "test/language/comments/hashbang/module.js: test/language/comments/hashbang/module.js: Line 1:1 Unexpected token ILLEGAL (and 1 more errors)",
  "test/language/comments/hashbang/no-line-separator.js-strict:true": "test/language/comments/hashbang/no-line-separator.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected token ILLEGAL (and 1 more errors) at test/language/comments/hashbang/no-line-separator.js:15:22(5)",
  "test/language/comments/hashbang/not-empty.js-strict:false": "test/language/comments/hashbang/not-empty.js: test/language/comments/hashbang/not-empty.js: Line 1:1 Unexpected token ILLEGAL (and 1 more errors)",
  "test/language/comments/hashbang/use-strict.js-strict:false": "test/language/comments/hashbang/use-strict.js: SyntaxError: test/language/comments/hashbang/use-strict.js: 'with' in strict mode (17:0)\n  15 | ---*/\n  16 | \n\u003e 17 | with ({}) {}\n     | ^\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/computed-property-names/class/accessor/getter-duplicates.js-strict:true": "test/language/computed-property-names/class/accessor/getter-duplicates.js: TypeError: test/language/computed-property-names/class/accessor/getter-duplicates.js: Cannot read property '_inherits' of undefined at \u003ceval\u003e:2:28542(114)",
  "test/language/computed-property-names/class/accessor/setter-duplicates.js-strict:true": "test/language/computed-property-names/class/accessor/setter-duplicates.js: TypeError: test/language/computed-property-names/class/accessor/setter-duplicates.js: Cannot read property '_inherits' of undefined at \u003ceval\u003e:2:28542(114)",
  "test/language/computed-property-names/class/method/constructor-can-be-generator.js-strict:true": "test/language/computed-property-names/class/method/constructor-can-be-generator.js: test/language/computed-property-names/class/method/constructor-can-be-generator.js: Line 10:35 Unexpected token * (and 1 more errors)",
  "test/language/computed-property-names/class/method/generator.js-strict:true": "test/language/computed-property-names/class/method/generator.js: test/language/computed-property-names/class/method/generator.js: Line 11:25 Unexpected token * (and 3 more errors)",
  "test/language/computed-property-names/class/static/generator-constructor.js-strict:true": "test/language/computed-property-names/class/static/generator-constructor.js: test/language/computed-property-names/class/static/generator-constructor.js: Line 11:39 Unexpected token * (and 1 more errors)",
  "test/language/computed-property-names/class/static/generator-prototype.js-strict:true": "test/language/computed-property-names/class/static/generator-prototype.js: test/language/computed-property-names/class/static/generator-prototype.js: Line 12:35 Unexpected token * (and 1 more errors)",
  "test/language/computed-property-names/class/static/getter-prototype.js-strict:true": "test/language/computed-property-names/class/static/getter-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/computed-property-names/class/static/method-number.js-strict:true": "test/language/computed-property-names/class/static/method-number.js: Test262Error: Expected [prototype, 1, 2, name, length, caller, arguments, a, c] and [1, 2, length, name, prototype, a, c] to have the same contents.  at harness/sta.js:22:9(49)",
  "test/language/computed-property-names/class/static/method-prototype.js-strict:true": "test/language/computed-property-names/class/static/method-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/computed-property-names/class/static/method-string.js-strict:true": "test/language/computed-property-names/class/static/method-string.js: Test262Error: Expected [prototype, name, length, caller, arguments, a, b, c, d] and [length, name, prototype, a, b, c, d] to have the same contents.  at harness/sta.js:22:9(49)",
  "test/language/computed-property-names/class/static/method-symbol.js-strict:true": "test/language/computed-property-names/class/static/method-symbol.js: Test262Error: Expected [prototype, name, length, caller, arguments, a, c] and [length, name, prototype, a, c] to have the same contents.  at harness/sta.js:22:9(49)",
  "test/language/computed-property-names/class/static/setter-prototype.js-strict:true": "test/language/computed-property-names/class/static/setter-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/computed-property-names/object/method/generator.js-strict:true": "test/language/computed-property-names/object/method/generator.js: test/language/computed-property-names/object/method/generator.js: Line 11:14 Unexpected token * (and 3 more errors)",
  "test/language/computed-property-names/to-name-side-effects/numbers-object.js-strict:true": "test/language/computed-property-names/to-name-side-effects/numbers-object.js: Test262Error: The result of `counter++` is `0` Expected SameValue(«1», «0») to be true at harness/sta.js:22:9(49)",
  "test/language/computed-property-names/to-name-side-effects/object.js-strict:true": "test/language/computed-property-names/to-name-side-effects/object.js: Test262Error: The result of `counter++` is `0` Expected SameValue(«1», «0») to be true at harness/sta.js:22:9(49)",
  "test/language/eval-code/direct/arrow-fn-a-following-parameter-is-named-arguments-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js-strict:false": "test/language/eval-code/direct/arrow-fn-a-following-parameter-is-named-arguments-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js: SyntaxError: test/language/eval-code/direct/arrow-fn-a-following-parameter-is-named-arguments-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js: arguments is a reserved word in strict mode (11:69)\n   9 | \n  10 | const oldArguments = globalThis.arguments;\n\u003e 11 | const f = (p = eval(\"var arguments = 'param'\"), q = () =\u003e arguments, arguments) =\u003e {}\n     |                                                                      ^\n  12 | assert.throws(SyntaxError, f);\n  13 | assert.sameValue(globalThis.arguments, oldArguments, \"globalThis.arguments unchanged\");\n  14 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/arrow-fn-a-following-parameter-is-named-arguments-arrow-func-declare-arguments-assign.js-strict:false": "test/language/eval-code/direct/arrow-fn-a-following-parameter-is-named-arguments-arrow-func-declare-arguments-assign.js: SyntaxError: test/language/eval-code/direct/arrow-fn-a-following-parameter-is-named-arguments-arrow-func-declare-arguments-assign.js: arguments is a reserved word in strict mode (11:48)\n   9 | \n  10 | const oldArguments = globalThis.arguments;\n\u003e 11 | const f = (p = eval(\"var arguments = 'param'\"), arguments) =\u003e {}\n     |                                                 ^\n  12 | assert.throws(SyntaxError, f);\n  13 | assert.sameValue(globalThis.arguments, oldArguments, \"globalThis.arguments unchanged\");\n  14 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/arrow-fn-a-preceding-parameter-is-named-arguments-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js-strict:false": "test/language/eval-code/direct/arrow-fn-a-preceding-parameter-is-named-arguments-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js: SyntaxError: test/language/eval-code/direct/arrow-fn-a-preceding-parameter-is-named-arguments-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js: arguments is a reserved word in strict mode (11:11)\n   9 | \n  10 | const oldArguments = globalThis.arguments;\n\u003e 11 | const f = (arguments, p = eval(\"var arguments = 'param'\"), q = () =\u003e arguments) =\u003e {}\n     |            ^\n  12 | assert.throws(SyntaxError, f);\n  13 | assert.sameValue(globalThis.arguments, oldArguments, \"globalThis.arguments unchanged\");\n  14 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/arrow-fn-a-preceding-parameter-is-named-arguments-arrow-func-declare-arguments-assign.js-strict:false": "test/language/eval-code/direct/arrow-fn-a-preceding-parameter-is-named-arguments-arrow-func-declare-arguments-assign.js: SyntaxError: test/language/eval-code/direct/arrow-fn-a-preceding-parameter-is-named-arguments-arrow-func-declare-arguments-assign.js: arguments is a reserved word in strict mode (11:11)\n   9 | \n  10 | const oldArguments = globalThis.arguments;\n\u003e 11 | const f = (arguments, p = eval(\"var arguments = 'param'\")) =\u003e {}\n     |            ^\n  12 | assert.throws(SyntaxError, f);\n  13 | assert.sameValue(globalThis.arguments, oldArguments, \"globalThis.arguments unchanged\");\n  14 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/arrow-fn-body-cntns-arguments-fn-decl-params-cntns-dflt-assignment-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js-strict:false": "test/language/eval-code/direct/arrow-fn-body-cntns-arguments-fn-decl-params-cntns-dflt-assignment-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js: SyntaxError: test/language/eval-code/direct/arrow-fn-body-cntns-arguments-fn-decl-params-cntns-dflt-assignment-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js: arguments is a reserved word in strict mode (13:11)\n  11 | let count = 0;\n  12 | const f = (p = eval(\"var arguments = 'param'\"), q = () =\u003e arguments) =\u003e {\n\u003e 13 |   function arguments() {}\n     |            ^\n  14 |   assert.sameValue(typeof arguments, \"function\");\n  15 |   assert.sameValue(q(), \"param\");\n  16 |   count++; at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/arrow-fn-body-cntns-arguments-fn-decl-params-cntns-dflt-assignment-arrow-func-declare-arguments-assign.js-strict:false": "test/language/eval-code/direct/arrow-fn-body-cntns-arguments-fn-decl-params-cntns-dflt-assignment-arrow-func-declare-arguments-assign.js: SyntaxError: test/language/eval-code/direct/arrow-fn-body-cntns-arguments-fn-decl-params-cntns-dflt-assignment-arrow-func-declare-arguments-assign.js: arguments is a reserved word in strict mode (13:11)\n  11 | let count = 0;\n  12 | const f = (p = eval(\"var arguments = 'param'\")) =\u003e {\n\u003e 13 |   function arguments() {}\n     |            ^\n  14 |   assert.sameValue(typeof arguments, \"function\");\n  15 |   \n  16 |   count++; at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/arrow-fn-body-cntns-arguments-func-decl-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js-strict:false": "test/language/eval-code/direct/arrow-fn-body-cntns-arguments-func-decl-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js: SyntaxError: test/language/eval-code/direct/arrow-fn-body-cntns-arguments-func-decl-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js: arguments is a reserved word in strict mode (13:11)\n  11 | let count = 0;\n  12 | const f = (p = eval(\"var arguments = 'param'\"), q = () =\u003e arguments) =\u003e {\n\u003e 13 |   function arguments() {}\n     |            ^\n  14 |   assert.sameValue(typeof arguments, \"function\");\n  15 |   assert.sameValue(q(), \"param\");\n  16 |   count++; at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/arrow-fn-body-cntns-arguments-func-decl-arrow-func-declare-arguments-assign.js-strict:false": "test/language/eval-code/direct/arrow-fn-body-cntns-arguments-func-decl-arrow-func-declare-arguments-assign.js: SyntaxError: test/language/eval-code/direct/arrow-fn-body-cntns-arguments-func-decl-arrow-func-declare-arguments-assign.js: arguments is a reserved word in strict mode (13:11)\n  11 | let count = 0;\n  12 | const f = (p = eval(\"var arguments = 'param'\")) =\u003e {\n\u003e 13 |   function arguments() {}\n     |            ^\n  14 |   assert.sameValue(typeof arguments, \"function\");\n  15 |   \n  16 |   count++; at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/arrow-fn-body-cntns-arguments-lex-bind-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js-strict:false": "test/language/eval-code/direct/arrow-fn-body-cntns-arguments-lex-bind-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js: SyntaxError: test/language/eval-code/direct/arrow-fn-body-cntns-arguments-lex-bind-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js: arguments is a reserved word in strict mode (13:6)\n  11 | let count = 0;\n  12 | const f = (p = eval(\"var arguments = 'param'\"), q = () =\u003e arguments) =\u003e {\n\u003e 13 |   let arguments = \"local\";\n     |       ^\n  14 |   assert.sameValue(arguments, \"local\");\n  15 |   assert.sameValue(q(), \"param\");\n  16 |   count++; at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/arrow-fn-body-cntns-arguments-lex-bind-arrow-func-declare-arguments-assign.js-strict:false": "test/language/eval-code/direct/arrow-fn-body-cntns-arguments-lex-bind-arrow-func-declare-arguments-assign.js: SyntaxError: test/language/eval-code/direct/arrow-fn-body-cntns-arguments-lex-bind-arrow-func-declare-arguments-assign.js: arguments is a reserved word in strict mode (13:6)\n  11 | let count = 0;\n  12 | const f = (p = eval(\"var arguments = 'param'\")) =\u003e {\n\u003e 13 |   let arguments = \"local\";\n     |       ^\n  14 |   assert.sameValue(arguments, \"local\");\n  15 |   \n  16 |   count++; at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/arrow-fn-body-cntns-arguments-var-bind-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js-strict:false": "test/language/eval-code/direct/arrow-fn-body-cntns-arguments-var-bind-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js: SyntaxError: test/language/eval-code/direct/arrow-fn-body-cntns-arguments-var-bind-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js: arguments is a reserved word in strict mode (13:6)\n  11 | let count = 0;\n  12 | const f = (p = eval(\"var arguments = 'param'\"), q = () =\u003e arguments) =\u003e {\n\u003e 13 |   var arguments = \"local\";\n     |       ^\n  14 |   assert.sameValue(arguments, \"local\");\n  15 |   assert.sameValue(q(), \"param\");\n  16 |   count++; at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/arrow-fn-body-cntns-arguments-var-bind-arrow-func-declare-arguments-assign.js-strict:false": "test/language/eval-code/direct/arrow-fn-body-cntns-arguments-var-bind-arrow-func-declare-arguments-assign.js: SyntaxError: test/language/eval-code/direct/arrow-fn-body-cntns-arguments-var-bind-arrow-func-declare-arguments-assign.js: arguments is a reserved word in strict mode (13:6)\n  11 | let count = 0;\n  12 | const f = (p = eval(\"var arguments = 'param'\")) =\u003e {\n\u003e 13 |   var arguments = \"local\";\n     |       ^\n  14 |   assert.sameValue(arguments, \"local\");\n  15 |   \n  16 |   count++; at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/arrow-fn-no-pre-existing-arguments-bindings-are-present-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js-strict:false": "test/language/eval-code/direct/arrow-fn-no-pre-existing-arguments-bindings-are-present-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js: ReferenceError: arguments is not defined at test/language/eval-code/direct/arrow-fn-no-pre-existing-arguments-bindings-are-present-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js:1:31(5)",
  "test/language/eval-code/direct/arrow-fn-no-pre-existing-arguments-bindings-are-present-arrow-func-declare-arguments-assign.js-strict:false": "test/language/eval-code/direct/arrow-fn-no-pre-existing-arguments-bindings-are-present-arrow-func-declare-arguments-assign.js: ReferenceError: arguments is not defined at test/language/eval-code/direct/arrow-fn-no-pre-existing-arguments-bindings-are-present-arrow-func-declare-arguments-assign.js:1:31(5)",
  "test/language/eval-code/direct/func-decl-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/func-decl-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/func-decl-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:48)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | function f(p = eval(\"var arguments = 'param'\"), arguments) {\n     |                                                 ^\n  15 |   \n  16 | }\n  17 | assert.throws(SyntaxError, f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/func-decl-a-following-parameter-is-named-arguments-declare-arguments.js-strict:false": "test/language/eval-code/direct/func-decl-a-following-parameter-is-named-arguments-declare-arguments.js: SyntaxError: test/language/eval-code/direct/func-decl-a-following-parameter-is-named-arguments-declare-arguments.js: arguments is a reserved word in strict mode (14:38)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | function f(p = eval(\"var arguments\"), arguments) {\n     |                                       ^\n  15 |   \n  16 | }\n  17 | assert.throws(SyntaxError, f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/func-decl-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/func-decl-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/func-decl-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:11)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | function f(arguments, p = eval(\"var arguments = 'param'\")) {\n     |            ^\n  15 |   \n  16 | }\n  17 | assert.throws(SyntaxError, f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/func-decl-a-preceding-parameter-is-named-arguments-declare-arguments.js-strict:false": "test/language/eval-code/direct/func-decl-a-preceding-parameter-is-named-arguments-declare-arguments.js: SyntaxError: test/language/eval-code/direct/func-decl-a-preceding-parameter-is-named-arguments-declare-arguments.js: arguments is a reserved word in strict mode (14:11)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | function f(arguments, p = eval(\"var arguments\")) {\n     |            ^\n  15 |   \n  16 | }\n  17 | assert.throws(SyntaxError, f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/func-decl-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/func-decl-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/func-decl-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:11)\n  12 | \n  13 | function f(p = eval(\"var arguments = 'param'\")) {\n\u003e 14 |   function arguments() {}\n     |            ^\n  15 | }\n  16 | assert.throws(SyntaxError, f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/func-decl-fn-body-cntns-arguments-func-decl-declare-arguments.js-strict:false": "test/language/eval-code/direct/func-decl-fn-body-cntns-arguments-func-decl-declare-arguments.js: SyntaxError: test/language/eval-code/direct/func-decl-fn-body-cntns-arguments-func-decl-declare-arguments.js: arguments is a reserved word in strict mode (14:11)\n  12 | \n  13 | function f(p = eval(\"var arguments\")) {\n\u003e 14 |   function arguments() {}\n     |            ^\n  15 | }\n  16 | assert.throws(SyntaxError, f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/func-decl-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/func-decl-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/func-decl-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (15:6)\n  13 | \n  14 | function f(p = eval(\"var arguments = 'param'\")) {\n\u003e 15 |   let arguments;\n     |       ^\n  16 | }\n  17 | assert.throws(SyntaxError, f);\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/func-decl-fn-body-cntns-arguments-lex-bind-declare-arguments.js-strict:false": "test/language/eval-code/direct/func-decl-fn-body-cntns-arguments-lex-bind-declare-arguments.js: SyntaxError: test/language/eval-code/direct/func-decl-fn-body-cntns-arguments-lex-bind-declare-arguments.js: arguments is a reserved word in strict mode (15:6)\n  13 | \n  14 | function f(p = eval(\"var arguments\")) {\n\u003e 15 |   let arguments;\n     |       ^\n  16 | }\n  17 | assert.throws(SyntaxError, f);\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/func-decl-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/func-decl-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/func-decl-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:6)\n  12 | \n  13 | function f(p = eval(\"var arguments = 'param'\")) {\n\u003e 14 |   var arguments;\n     |       ^\n  15 | }\n  16 | assert.throws(SyntaxError, f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/func-decl-fn-body-cntns-arguments-var-bind-declare-arguments.js-strict:false": "test/language/eval-code/direct/func-decl-fn-body-cntns-arguments-var-bind-declare-arguments.js: SyntaxError: test/language/eval-code/direct/func-decl-fn-body-cntns-arguments-var-bind-declare-arguments.js: arguments is a reserved word in strict mode (14:6)\n  12 | \n  13 | function f(p = eval(\"var arguments\")) {\n\u003e 14 |   var arguments;\n     |       ^\n  15 | }\n  16 | assert.throws(SyntaxError, f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/func-decl-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/func-decl-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js: TypeError: Value is not an object: undefined at test/language/eval-code/direct/func-decl-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js:11:18(10)",
  "test/language/eval-code/direct/func-decl-no-pre-existing-arguments-bindings-are-present-declare-arguments.js-strict:false": "test/language/eval-code/direct/func-decl-no-pre-existing-arguments-bindings-are-present-declare-arguments.js: TypeError: Value is not an object: undefined at test/language/eval-code/direct/func-decl-no-pre-existing-arguments-bindings-are-present-declare-arguments.js:11:18(10)",
  "test/language/eval-code/direct/func-expr-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/func-expr-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/func-expr-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:54)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | let f = function(p = eval(\"var arguments = 'param'\"), arguments) {\n     |                                                       ^\n  15 |   \n  16 | }\n  17 | assert.throws(SyntaxError, f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/func-expr-a-following-parameter-is-named-arguments-declare-arguments.js-strict:false": "test/language/eval-code/direct/func-expr-a-following-parameter-is-named-arguments-declare-arguments.js: SyntaxError: test/language/eval-code/direct/func-expr-a-following-parameter-is-named-arguments-declare-arguments.js: arguments is a reserved word in strict mode (14:44)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | let f = function(p = eval(\"var arguments\"), arguments) {\n     |                                             ^\n  15 |   \n  16 | }\n  17 | assert.throws(SyntaxError, f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/func-expr-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/func-expr-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/func-expr-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:17)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | let f = function(arguments, p = eval(\"var arguments = 'param'\")) {\n     |                  ^\n  15 |   \n  16 | }\n  17 | assert.throws(SyntaxError, f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/func-expr-a-preceding-parameter-is-named-arguments-declare-arguments.js-strict:false": "test/language/eval-code/direct/func-expr-a-preceding-parameter-is-named-arguments-declare-arguments.js: SyntaxError: test/language/eval-code/direct/func-expr-a-preceding-parameter-is-named-arguments-declare-arguments.js: arguments is a reserved word in strict mode (14:17)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | let f = function(arguments, p = eval(\"var arguments\")) {\n     |                  ^\n  15 |   \n  16 | }\n  17 | assert.throws(SyntaxError, f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/func-expr-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/func-expr-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/func-expr-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:11)\n  12 | \n  13 | let f = function(p = eval(\"var arguments = 'param'\")) {\n\u003e 14 |   function arguments() {}\n     |            ^\n  15 | }\n  16 | assert.throws(SyntaxError, f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/func-expr-fn-body-cntns-arguments-func-decl-declare-arguments.js-strict:false": "test/language/eval-code/direct/func-expr-fn-body-cntns-arguments-func-decl-declare-arguments.js: SyntaxError: test/language/eval-code/direct/func-expr-fn-body-cntns-arguments-func-decl-declare-arguments.js: arguments is a reserved word in strict mode (14:11)\n  12 | \n  13 | let f = function(p = eval(\"var arguments\")) {\n\u003e 14 |   function arguments() {}\n     |            ^\n  15 | }\n  16 | assert.throws(SyntaxError, f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/func-expr-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/func-expr-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/func-expr-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (15:6)\n  13 | \n  14 | let f = function(p = eval(\"var arguments = 'param'\")) {\n\u003e 15 |   let arguments;\n     |       ^\n  16 | }\n  17 | assert.throws(SyntaxError, f);\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/func-expr-fn-body-cntns-arguments-lex-bind-declare-arguments.js-strict:false": "test/language/eval-code/direct/func-expr-fn-body-cntns-arguments-lex-bind-declare-arguments.js: SyntaxError: test/language/eval-code/direct/func-expr-fn-body-cntns-arguments-lex-bind-declare-arguments.js: arguments is a reserved word in strict mode (15:6)\n  13 | \n  14 | let f = function(p = eval(\"var arguments\")) {\n\u003e 15 |   let arguments;\n     |       ^\n  16 | }\n  17 | assert.throws(SyntaxError, f);\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/func-expr-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/func-expr-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/func-expr-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:6)\n  12 | \n  13 | let f = function(p = eval(\"var arguments = 'param'\")) {\n\u003e 14 |   var arguments;\n     |       ^\n  15 | }\n  16 | assert.throws(SyntaxError, f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/func-expr-fn-body-cntns-arguments-var-bind-declare-arguments.js-strict:false": "test/language/eval-code/direct/func-expr-fn-body-cntns-arguments-var-bind-declare-arguments.js: SyntaxError: test/language/eval-code/direct/func-expr-fn-body-cntns-arguments-var-bind-declare-arguments.js: arguments is a reserved word in strict mode (14:6)\n  12 | \n  13 | let f = function(p = eval(\"var arguments\")) {\n\u003e 14 |   var arguments;\n     |       ^\n  15 | }\n  16 | assert.throws(SyntaxError, f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/func-expr-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/func-expr-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js: TypeError: Value is not an object: undefined at test/language/eval-code/direct/func-expr-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js:11:18(6)",
  "test/language/eval-code/direct/func-expr-no-pre-existing-arguments-bindings-are-present-declare-arguments.js-strict:false": "test/language/eval-code/direct/func-expr-no-pre-existing-arguments-bindings-are-present-declare-arguments.js: TypeError: Value is not an object: undefined at test/language/eval-code/direct/func-expr-no-pre-existing-arguments-bindings-are-present-declare-arguments.js:11:18(6)",
  "test/language/eval-code/direct/gen-func-decl-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-decl-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-decl-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:50)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | function * f(p = eval(\"var arguments = 'param'\"), arguments) {\n     |                                                   ^\n  15 |   \n  16 | }\n  17 | assert.throws(SyntaxError, f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-decl-a-following-parameter-is-named-arguments-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-decl-a-following-parameter-is-named-arguments-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-decl-a-following-parameter-is-named-arguments-declare-arguments.js: arguments is a reserved word in strict mode (14:40)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | function * f(p = eval(\"var arguments\"), arguments) {\n     |                                         ^\n  15 |   \n  16 | }\n  17 | assert.throws(SyntaxError, f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-decl-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-decl-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-decl-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:13)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | function * f(arguments, p = eval(\"var arguments = 'param'\")) {\n     |              ^\n  15 |   \n  16 | }\n  17 | assert.throws(SyntaxError, f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-decl-a-preceding-parameter-is-named-arguments-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-decl-a-preceding-parameter-is-named-arguments-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-decl-a-preceding-parameter-is-named-arguments-declare-arguments.js: arguments is a reserved word in strict mode (14:13)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | function * f(arguments, p = eval(\"var arguments\")) {\n     |              ^\n  15 |   \n  16 | }\n  17 | assert.throws(SyntaxError, f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:11)\n  12 | \n  13 | function * f(p = eval(\"var arguments = 'param'\")) {\n\u003e 14 |   function arguments() {}\n     |            ^\n  15 | }\n  16 | assert.throws(SyntaxError, f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-func-decl-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-func-decl-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-func-decl-declare-arguments.js: arguments is a reserved word in strict mode (14:11)\n  12 | \n  13 | function * f(p = eval(\"var arguments\")) {\n\u003e 14 |   function arguments() {}\n     |            ^\n  15 | }\n  16 | assert.throws(SyntaxError, f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (15:6)\n  13 | \n  14 | function * f(p = eval(\"var arguments = 'param'\")) {\n\u003e 15 |   let arguments;\n     |       ^\n  16 | }\n  17 | assert.throws(SyntaxError, f);\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-lex-bind-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-lex-bind-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-lex-bind-declare-arguments.js: arguments is a reserved word in strict mode (15:6)\n  13 | \n  14 | function * f(p = eval(\"var arguments\")) {\n\u003e 15 |   let arguments;\n     |       ^\n  16 | }\n  17 | assert.throws(SyntaxError, f);\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:6)\n  12 | \n  13 | function * f(p = eval(\"var arguments = 'param'\")) {\n\u003e 14 |   var arguments;\n     |       ^\n  15 | }\n  16 | assert.throws(SyntaxError, f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-var-bind-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-var-bind-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-decl-fn-body-cntns-arguments-var-bind-declare-arguments.js: arguments is a reserved word in strict mode (14:6)\n  12 | \n  13 | function * f(p = eval(\"var arguments\")) {\n\u003e 14 |   var arguments;\n     |       ^\n  15 | }\n  16 | assert.throws(SyntaxError, f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-decl-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-decl-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js: test/language/eval-code/direct/gen-func-decl-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js: Line 13:9 Unexpected token * (and 4 more errors)",
  "test/language/eval-code/direct/gen-func-decl-no-pre-existing-arguments-bindings-are-present-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-decl-no-pre-existing-arguments-bindings-are-present-declare-arguments.js: test/language/eval-code/direct/gen-func-decl-no-pre-existing-arguments-bindings-are-present-declare-arguments.js: Line 13:9 Unexpected token * (and 4 more errors)",
  "test/language/eval-code/direct/gen-func-expr-named-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-expr-named-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-named-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:58)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | let f = function * f(p = eval(\"var arguments = 'param'\"), arguments) {\n     |                                                           ^\n  15 |   \n  16 | }\n  17 | assert.throws(SyntaxError, f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-expr-named-a-following-parameter-is-named-arguments-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-expr-named-a-following-parameter-is-named-arguments-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-named-a-following-parameter-is-named-arguments-declare-arguments.js: arguments is a reserved word in strict mode (14:48)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | let f = function * f(p = eval(\"var arguments\"), arguments) {\n     |                                                 ^\n  15 |   \n  16 | }\n  17 | assert.throws(SyntaxError, f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-expr-named-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-expr-named-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-named-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:21)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | let f = function * f(arguments, p = eval(\"var arguments = 'param'\")) {\n     |                      ^\n  15 |   \n  16 | }\n  17 | assert.throws(SyntaxError, f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-expr-named-a-preceding-parameter-is-named-arguments-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-expr-named-a-preceding-parameter-is-named-arguments-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-named-a-preceding-parameter-is-named-arguments-declare-arguments.js: arguments is a reserved word in strict mode (14:21)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | let f = function * f(arguments, p = eval(\"var arguments\")) {\n     |                      ^\n  15 |   \n  16 | }\n  17 | assert.throws(SyntaxError, f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:11)\n  12 | \n  13 | let f = function * f(p = eval(\"var arguments = 'param'\")) {\n\u003e 14 |   function arguments() {}\n     |            ^\n  15 | }\n  16 | assert.throws(SyntaxError, f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-func-decl-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-func-decl-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-func-decl-declare-arguments.js: arguments is a reserved word in strict mode (14:11)\n  12 | \n  13 | let f = function * f(p = eval(\"var arguments\")) {\n\u003e 14 |   function arguments() {}\n     |            ^\n  15 | }\n  16 | assert.throws(SyntaxError, f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (15:6)\n  13 | \n  14 | let f = function * f(p = eval(\"var arguments = 'param'\")) {\n\u003e 15 |   let arguments;\n     |       ^\n  16 | }\n  17 | assert.throws(SyntaxError, f);\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-lex-bind-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-lex-bind-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-lex-bind-declare-arguments.js: arguments is a reserved word in strict mode (15:6)\n  13 | \n  14 | let f = function * f(p = eval(\"var arguments\")) {\n\u003e 15 |   let arguments;\n     |       ^\n  16 | }\n  17 | assert.throws(SyntaxError, f);\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:6)\n  12 | \n  13 | let f = function * f(p = eval(\"var arguments = 'param'\")) {\n\u003e 14 |   var arguments;\n     |       ^\n  15 | }\n  16 | assert.throws(SyntaxError, f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-var-bind-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-var-bind-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-named-fn-body-cntns-arguments-var-bind-declare-arguments.js: arguments is a reserved word in strict mode (14:6)\n  12 | \n  13 | let f = function * f(p = eval(\"var arguments\")) {\n\u003e 14 |   var arguments;\n     |       ^\n  15 | }\n  16 | assert.throws(SyntaxError, f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-expr-named-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-expr-named-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js: test/language/eval-code/direct/gen-func-expr-named-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js: Line 13:17 Unexpected token * (and 3 more errors)",
  "test/language/eval-code/direct/gen-func-expr-named-no-pre-existing-arguments-bindings-are-present-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-expr-named-no-pre-existing-arguments-bindings-are-present-declare-arguments.js: test/language/eval-code/direct/gen-func-expr-named-no-pre-existing-arguments-bindings-are-present-declare-arguments.js: Line 13:17 Unexpected token * (and 3 more errors)",
  "test/language/eval-code/direct/gen-func-expr-nameless-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-expr-nameless-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-nameless-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:57)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | let f = function * (p = eval(\"var arguments = 'param'\"), arguments) {\n     |                                                          ^\n  15 |   \n  16 | }\n  17 | assert.throws(SyntaxError, f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-expr-nameless-a-following-parameter-is-named-arguments-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-expr-nameless-a-following-parameter-is-named-arguments-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-nameless-a-following-parameter-is-named-arguments-declare-arguments.js: arguments is a reserved word in strict mode (14:47)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | let f = function * (p = eval(\"var arguments\"), arguments) {\n     |                                                ^\n  15 |   \n  16 | }\n  17 | assert.throws(SyntaxError, f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-expr-nameless-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-expr-nameless-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-nameless-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:20)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | let f = function * (arguments, p = eval(\"var arguments = 'param'\")) {\n     |                     ^\n  15 |   \n  16 | }\n  17 | assert.throws(SyntaxError, f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-expr-nameless-a-preceding-parameter-is-named-arguments-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-expr-nameless-a-preceding-parameter-is-named-arguments-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-nameless-a-preceding-parameter-is-named-arguments-declare-arguments.js: arguments is a reserved word in strict mode (14:20)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | let f = function * (arguments, p = eval(\"var arguments\")) {\n     |                     ^\n  15 |   \n  16 | }\n  17 | assert.throws(SyntaxError, f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:11)\n  12 | \n  13 | let f = function * (p = eval(\"var arguments = 'param'\")) {\n\u003e 14 |   function arguments() {}\n     |            ^\n  15 | }\n  16 | assert.throws(SyntaxError, f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-func-decl-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-func-decl-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-func-decl-declare-arguments.js: arguments is a reserved word in strict mode (14:11)\n  12 | \n  13 | let f = function * (p = eval(\"var arguments\")) {\n\u003e 14 |   function arguments() {}\n     |            ^\n  15 | }\n  16 | assert.throws(SyntaxError, f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (15:6)\n  13 | \n  14 | let f = function * (p = eval(\"var arguments = 'param'\")) {\n\u003e 15 |   let arguments;\n     |       ^\n  16 | }\n  17 | assert.throws(SyntaxError, f);\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-lex-bind-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-lex-bind-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-lex-bind-declare-arguments.js: arguments is a reserved word in strict mode (15:6)\n  13 | \n  14 | let f = function * (p = eval(\"var arguments\")) {\n\u003e 15 |   let arguments;\n     |       ^\n  16 | }\n  17 | assert.throws(SyntaxError, f);\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:6)\n  12 | \n  13 | let f = function * (p = eval(\"var arguments = 'param'\")) {\n\u003e 14 |   var arguments;\n     |       ^\n  15 | }\n  16 | assert.throws(SyntaxError, f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-var-bind-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-var-bind-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-func-expr-nameless-fn-body-cntns-arguments-var-bind-declare-arguments.js: arguments is a reserved word in strict mode (14:6)\n  12 | \n  13 | let f = function * (p = eval(\"var arguments\")) {\n\u003e 14 |   var arguments;\n     |       ^\n  15 | }\n  16 | assert.throws(SyntaxError, f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-func-expr-nameless-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-func-expr-nameless-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js: test/language/eval-code/direct/gen-func-expr-nameless-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js: Line 13:17 Unexpected token * (and 3 more errors)",
  "test/language/eval-code/direct/gen-func-expr-nameless-no-pre-existing-arguments-bindings-are-present-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-func-expr-nameless-no-pre-existing-arguments-bindings-are-present-declare-arguments.js: test/language/eval-code/direct/gen-func-expr-nameless-no-pre-existing-arguments-bindings-are-present-declare-arguments.js: Line 13:17 Unexpected token * (and 3 more errors)",
  "test/language/eval-code/direct/gen-meth-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-meth-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-meth-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:51)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | let o = { * f(p = eval(\"var arguments = 'param'\"), arguments) {\n     |                                                    ^\n  15 |   \n  16 | }};\n  17 | assert.throws(SyntaxError, o.f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-meth-a-following-parameter-is-named-arguments-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-meth-a-following-parameter-is-named-arguments-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-meth-a-following-parameter-is-named-arguments-declare-arguments.js: arguments is a reserved word in strict mode (14:41)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | let o = { * f(p = eval(\"var arguments\"), arguments) {\n     |                                          ^\n  15 |   \n  16 | }};\n  17 | assert.throws(SyntaxError, o.f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-meth-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-meth-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-meth-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:14)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | let o = { * f(arguments, p = eval(\"var arguments = 'param'\")) {\n     |               ^\n  15 |   \n  16 | }};\n  17 | assert.throws(SyntaxError, o.f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-meth-a-preceding-parameter-is-named-arguments-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-meth-a-preceding-parameter-is-named-arguments-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-meth-a-preceding-parameter-is-named-arguments-declare-arguments.js: arguments is a reserved word in strict mode (14:14)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | let o = { * f(arguments, p = eval(\"var arguments\")) {\n     |               ^\n  15 |   \n  16 | }};\n  17 | assert.throws(SyntaxError, o.f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:11)\n  12 | \n  13 | let o = { * f(p = eval(\"var arguments = 'param'\")) {\n\u003e 14 |   function arguments() {}\n     |            ^\n  15 | }};\n  16 | assert.throws(SyntaxError, o.f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-func-decl-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-func-decl-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-func-decl-declare-arguments.js: arguments is a reserved word in strict mode (14:11)\n  12 | \n  13 | let o = { * f(p = eval(\"var arguments\")) {\n\u003e 14 |   function arguments() {}\n     |            ^\n  15 | }};\n  16 | assert.throws(SyntaxError, o.f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (15:6)\n  13 | \n  14 | let o = { * f(p = eval(\"var arguments = 'param'\")) {\n\u003e 15 |   let arguments;\n     |       ^\n  16 | }};\n  17 | assert.throws(SyntaxError, o.f);\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-lex-bind-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-lex-bind-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-lex-bind-declare-arguments.js: arguments is a reserved word in strict mode (15:6)\n  13 | \n  14 | let o = { * f(p = eval(\"var arguments\")) {\n\u003e 15 |   let arguments;\n     |       ^\n  16 | }};\n  17 | assert.throws(SyntaxError, o.f);\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:6)\n  12 | \n  13 | let o = { * f(p = eval(\"var arguments = 'param'\")) {\n\u003e 14 |   var arguments;\n     |       ^\n  15 | }};\n  16 | assert.throws(SyntaxError, o.f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-var-bind-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-var-bind-declare-arguments.js: SyntaxError: test/language/eval-code/direct/gen-meth-fn-body-cntns-arguments-var-bind-declare-arguments.js: arguments is a reserved word in strict mode (14:6)\n  12 | \n  13 | let o = { * f(p = eval(\"var arguments\")) {\n\u003e 14 |   var arguments;\n     |       ^\n  15 | }};\n  16 | assert.throws(SyntaxError, o.f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/gen-meth-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/gen-meth-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js: test/language/eval-code/direct/gen-meth-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js: Line 13:12 Unexpected identifier (and 11 more errors)",
  "test/language/eval-code/direct/gen-meth-no-pre-existing-arguments-bindings-are-present-declare-arguments.js-strict:false": "test/language/eval-code/direct/gen-meth-no-pre-existing-arguments-bindings-are-present-declare-arguments.js: test/language/eval-code/direct/gen-meth-no-pre-existing-arguments-bindings-are-present-declare-arguments.js: Line 13:12 Unexpected identifier (and 11 more errors)",
  "test/language/eval-code/direct/lex-env-distinct-cls.js-strict:true": "test/language/eval-code/direct/lex-env-distinct-cls.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected reserved word at test/language/eval-code/direct/lex-env-distinct-cls.js:19:5(12)",
  "test/language/eval-code/direct/lex-env-distinct-const.js-strict:true": "test/language/eval-code/direct/lex-env-distinct-const.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected reserved word at test/language/eval-code/direct/lex-env-distinct-const.js:19:5(7)",
  "test/language/eval-code/direct/lex-env-distinct-let.js-strict:true": "test/language/eval-code/direct/lex-env-distinct-let.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:5 Unexpected identifier at test/language/eval-code/direct/lex-env-distinct-let.js:19:5(7)",
  "test/language/eval-code/direct/lex-env-heritage.js-strict:true": "test/language/eval-code/direct/lex-env-heritage.js: Test262Error: non strict mode Expected SameValue(«outside», «inside») to be true at harness/sta.js:22:9(49)",
  "test/language/eval-code/direct/lex-env-no-init-cls.js-strict:true": "test/language/eval-code/direct/lex-env-no-init-cls.js: Test262Error: Expected a ReferenceError but got a SyntaxError at harness/sta.js:22:9(49)",
  "test/language/eval-code/direct/lex-env-no-init-const.js-strict:true": "test/language/eval-code/direct/lex-env-no-init-const.js: Test262Error: Expected a ReferenceError but got a SyntaxError at harness/sta.js:22:9(49)",
  "test/language/eval-code/direct/lex-env-no-init-let.js-strict:true": "test/language/eval-code/direct/lex-env-no-init-let.js: Test262Error: Expected a ReferenceError but got a SyntaxError at harness/sta.js:22:9(49)",
  "test/language/eval-code/direct/meth-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/meth-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/meth-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:49)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | let o = { f(p = eval(\"var arguments = 'param'\"), arguments) {\n     |                                                  ^\n  15 |   \n  16 | }};\n  17 | assert.throws(SyntaxError, o.f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/meth-a-following-parameter-is-named-arguments-declare-arguments.js-strict:false": "test/language/eval-code/direct/meth-a-following-parameter-is-named-arguments-declare-arguments.js: SyntaxError: test/language/eval-code/direct/meth-a-following-parameter-is-named-arguments-declare-arguments.js: arguments is a reserved word in strict mode (14:39)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | let o = { f(p = eval(\"var arguments\"), arguments) {\n     |                                        ^\n  15 |   \n  16 | }};\n  17 | assert.throws(SyntaxError, o.f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/meth-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/meth-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/meth-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:12)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | let o = { f(arguments, p = eval(\"var arguments = 'param'\")) {\n     |             ^\n  15 |   \n  16 | }};\n  17 | assert.throws(SyntaxError, o.f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/meth-a-preceding-parameter-is-named-arguments-declare-arguments.js-strict:false": "test/language/eval-code/direct/meth-a-preceding-parameter-is-named-arguments-declare-arguments.js: SyntaxError: test/language/eval-code/direct/meth-a-preceding-parameter-is-named-arguments-declare-arguments.js: arguments is a reserved word in strict mode (14:12)\n  12 | assert.sameValue(\"arguments\" in this, false, \"No global 'arguments' binding\");\n  13 | \n\u003e 14 | let o = { f(arguments, p = eval(\"var arguments\")) {\n     |             ^\n  15 |   \n  16 | }};\n  17 | assert.throws(SyntaxError, o.f); at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/meth-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/meth-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/meth-fn-body-cntns-arguments-func-decl-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:11)\n  12 | \n  13 | let o = { f(p = eval(\"var arguments = 'param'\")) {\n\u003e 14 |   function arguments() {}\n     |            ^\n  15 | }};\n  16 | assert.throws(SyntaxError, o.f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/meth-fn-body-cntns-arguments-func-decl-declare-arguments.js-strict:false": "test/language/eval-code/direct/meth-fn-body-cntns-arguments-func-decl-declare-arguments.js: SyntaxError: test/language/eval-code/direct/meth-fn-body-cntns-arguments-func-decl-declare-arguments.js: arguments is a reserved word in strict mode (14:11)\n  12 | \n  13 | let o = { f(p = eval(\"var arguments\")) {\n\u003e 14 |   function arguments() {}\n     |            ^\n  15 | }};\n  16 | assert.throws(SyntaxError, o.f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/meth-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/meth-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/meth-fn-body-cntns-arguments-lex-bind-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (15:6)\n  13 | \n  14 | let o = { f(p = eval(\"var arguments = 'param'\")) {\n\u003e 15 |   let arguments;\n     |       ^\n  16 | }};\n  17 | assert.throws(SyntaxError, o.f);\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/meth-fn-body-cntns-arguments-lex-bind-declare-arguments.js-strict:false": "test/language/eval-code/direct/meth-fn-body-cntns-arguments-lex-bind-declare-arguments.js: SyntaxError: test/language/eval-code/direct/meth-fn-body-cntns-arguments-lex-bind-declare-arguments.js: arguments is a reserved word in strict mode (15:6)\n  13 | \n  14 | let o = { f(p = eval(\"var arguments\")) {\n\u003e 15 |   let arguments;\n     |       ^\n  16 | }};\n  17 | assert.throws(SyntaxError, o.f);\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/meth-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/meth-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js: SyntaxError: test/language/eval-code/direct/meth-fn-body-cntns-arguments-var-bind-declare-arguments-and-assign.js: arguments is a reserved word in strict mode (14:6)\n  12 | \n  13 | let o = { f(p = eval(\"var arguments = 'param'\")) {\n\u003e 14 |   var arguments;\n     |       ^\n  15 | }};\n  16 | assert.throws(SyntaxError, o.f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/meth-fn-body-cntns-arguments-var-bind-declare-arguments.js-strict:false": "test/language/eval-code/direct/meth-fn-body-cntns-arguments-var-bind-declare-arguments.js: SyntaxError: test/language/eval-code/direct/meth-fn-body-cntns-arguments-var-bind-declare-arguments.js: arguments is a reserved word in strict mode (14:6)\n  12 | \n  13 | let o = { f(p = eval(\"var arguments\")) {\n\u003e 14 |   var arguments;\n     |       ^\n  15 | }};\n  16 | assert.throws(SyntaxError, o.f);\n  17 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/eval-code/direct/meth-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js-strict:false": "test/language/eval-code/direct/meth-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js: TypeError: Value is not an object: undefined at test/language/eval-code/direct/meth-no-pre-existing-arguments-bindings-are-present-declare-arguments-and-assign.js:11:18(6)",
  "test/language/eval-code/direct/meth-no-pre-existing-arguments-bindings-are-present-declare-arguments.js-strict:false": "test/language/eval-code/direct/meth-no-pre-existing-arguments-bindings-are-present-declare-arguments.js: TypeError: Value is not an object: undefined at test/language/eval-code/direct/meth-no-pre-existing-arguments-bindings-are-present-declare-arguments.js:11:18(6)",
  "test/language/eval-code/direct/new.target-fn.js-strict:true": "test/language/eval-code/direct/new.target-fn.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 new.target expression is not allowed here at getNewTarget (test/language/eval-code/direct/new.target-fn.js:20:19(4))",
  "test/language/eval-code/direct/non-definable-function-with-function.js-strict:false": "test/language/eval-code/direct/non-definable-function-with-function.js: Test262Error: Expected SameValue(«[object Object]», «undefined») to be true at harness/sta.js:22:9(49)",
  "test/language/eval-code/direct/non-definable-function-with-variable.js-strict:false": "test/language/eval-code/direct/non-definable-function-with-variable.js: Test262Error: Expected SameValue(«[object Object]», «undefined») to be true at harness/sta.js:22:9(49)",
  "test/language/eval-code/direct/non-definable-global-function.js-strict:false": "test/language/eval-code/direct/non-definable-global-function.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/eval-code/direct/non-definable-global-var.js-strict:false": "test/language/eval-code/direct/non-definable-global-var.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/eval-code/direct/super-prop-method.js-strict:true": "test/language/eval-code/direct/super-prop-method.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected reserved word at method (test/language/eval-code/direct/super-prop-method.js:22:21(4))",
  "test/language/eval-code/direct/var-env-func-init-global-new.js-strict:false": "test/language/eval-code/direct/var-env-func-init-global-new.js: Test262Error: Expected obj[f] to have configurable:true. at harness/sta.js:22:9(49)",
  "test/language/eval-code/direct/var-env-func-init-global-update-configurable.js-strict:false": "test/language/eval-code/direct/var-env-func-init-global-update-configurable.js: Test262Error: Expected obj[f] to have configurable:true. at harness/sta.js:22:9(49)",
  "test/language/eval-code/direct/var-env-func-init-local-new-delete.js-strict:false": "test/language/eval-code/direct/var-env-func-init-local-new-delete.js: Test262Error: binding may be deleted Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/eval-code/direct/var-env-global-lex-non-strict.js-strict:false": "test/language/eval-code/direct/var-env-global-lex-non-strict.js: Expected error: \u003cnil\u003e",
  "test/language/eval-code/direct/var-env-lower-lex-non-strict.js-strict:false": "test/language/eval-code/direct/var-env-lower-lex-non-strict.js: Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/eval-code/direct/var-env-var-init-global-exstng.js-strict:false": "test/language/eval-code/direct/var-env-var-init-global-exstng.js: Test262Error: Expected SameValue(«undefined», «23») to be true at harness/sta.js:22:9(49)",
  "test/language/eval-code/direct/var-env-var-init-global-new.js-strict:false": "test/language/eval-code/direct/var-env-var-init-global-new.js: Test262Error: Expected obj[x] to have configurable:true. at harness/sta.js:22:9(49)",
  "test/language/eval-code/direct/var-env-var-init-local-new-delete.js-strict:false": "test/language/eval-code/direct/var-env-var-init-local-new-delete.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/eval-code/indirect/lex-env-distinct-cls.js-strict:true": "test/language/eval-code/indirect/lex-env-distinct-cls.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected reserved word at eval (native)",
  "test/language/eval-code/indirect/lex-env-distinct-const.js-strict:true": "test/language/eval-code/indirect/lex-env-distinct-const.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected reserved word at eval (native)",
  "test/language/eval-code/indirect/lex-env-distinct-let.js-strict:true": "test/language/eval-code/indirect/lex-env-distinct-let.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:5 Unexpected identifier at eval (native)",
  "test/language/eval-code/indirect/lex-env-no-init-cls.js-strict:true": "test/language/eval-code/indirect/lex-env-no-init-cls.js: Test262Error: Expected a ReferenceError but got a SyntaxError at harness/sta.js:22:9(49)",
  "test/language/eval-code/indirect/lex-env-no-init-const.js-strict:true": "test/language/eval-code/indirect/lex-env-no-init-const.js: Test262Error: Expected a ReferenceError but got a SyntaxError at harness/sta.js:22:9(49)",
  "test/language/eval-code/indirect/lex-env-no-init-let.js-strict:true": "test/language/eval-code/indirect/lex-env-no-init-let.js: Test262Error: Expected a ReferenceError but got a SyntaxError at harness/sta.js:22:9(49)",
  "test/language/eval-code/indirect/non-definable-function-with-function.js-strict:true": "test/language/eval-code/indirect/non-definable-function-with-function.js: Test262Error: declaration preceding Expected SameValue(«[object Object]», «undefined») to be true at harness/sta.js:22:9(49)",
  "test/language/eval-code/indirect/non-definable-function-with-variable.js-strict:true": "test/language/eval-code/indirect/non-definable-function-with-variable.js: Test262Error: declaration preceding Expected SameValue(«[object Object]», «undefined») to be true at harness/sta.js:22:9(49)",
  "test/language/eval-code/indirect/non-definable-global-function.js-strict:true": "test/language/eval-code/indirect/non-definable-global-function.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/eval-code/indirect/non-definable-global-var.js-strict:true": "test/language/eval-code/indirect/non-definable-global-var.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/eval-code/indirect/var-env-func-init-global-new.js-strict:true": "test/language/eval-code/indirect/var-env-func-init-global-new.js: Test262Error: Expected obj[f] to have configurable:true. at harness/sta.js:22:9(49)",
  "test/language/eval-code/indirect/var-env-func-init-global-update-configurable.js-strict:true": "test/language/eval-code/indirect/var-env-func-init-global-update-configurable.js: Test262Error: Expected obj[f] to have configurable:true. at harness/sta.js:22:9(49)",
  "test/language/eval-code/indirect/var-env-global-lex-non-strict.js-strict:true": "test/language/eval-code/indirect/var-env-global-lex-non-strict.js: Test262Error: Expected SameValue(«undefined», «undefined») to be false at harness/sta.js:22:9(49)",
  "test/language/eval-code/indirect/var-env-var-init-global-exstng.js-strict:true": "test/language/eval-code/indirect/var-env-var-init-global-exstng.js: Test262Error: Expected SameValue(«undefined», «23») to be true at harness/sta.js:22:9(49)",
  "test/language/eval-code/indirect/var-env-var-init-global-new.js-strict:true": "test/language/eval-code/indirect/var-env-var-init-global-new.js: Test262Error: Expected obj[x] to have configurable:true. at harness/sta.js:22:9(49)",
  "test/language/export/escaped-as-export-specifier.js-strict:true": "test/language/export/escaped-as-export-specifier.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/export/escaped-from.js-strict:true": "test/language/export/escaped-from.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/expressions/array/spread-err-mult-err-iter-get-value.js-strict:true": "test/language/expressions/array/spread-err-mult-err-iter-get-value.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/array/spread-err-mult-err-obj-unresolvable.js-strict:true": "test/language/expressions/array/spread-err-mult-err-obj-unresolvable.js: SyntaxError: test/language/expressions/array/spread-err-mult-err-obj-unresolvable.js: Unexpected token (38:10)\n  36 | \n  37 | assert.throws(ReferenceError, function() {\n\u003e 38 |   [{a: 0, ...unresolvableReference}];\n     |           ^\n  39 | });\n  40 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/array/spread-err-sngl-err-obj-unresolvable.js-strict:true": "test/language/expressions/array/spread-err-sngl-err-obj-unresolvable.js: SyntaxError: test/language/expressions/array/spread-err-sngl-err-obj-unresolvable.js: Unexpected token (38:4)\n  36 | \n  37 | assert.throws(ReferenceError, function() {\n\u003e 38 |   [{...unresolvableReference}];\n     |     ^\n  39 | });\n  40 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/array/spread-mult-obj-ident.js-strict:true": "test/language/expressions/array/spread-mult-obj-ident.js: SyntaxError: test/language/expressions/array/spread-mult-obj-ident.js: Unexpected token (73:28)\n  71 |   });\n  72 |   callCount += 1;\n\u003e 73 | }.apply(null, [{a: 1, b: 2, ...o}]));\n     |                             ^\n  74 | \n  75 | assert.sameValue(callCount, 1);\n  76 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/array/spread-mult-obj-null.js-strict:true": "test/language/expressions/array/spread-mult-obj-null.js: SyntaxError: test/language/expressions/array/spread-mult-obj-null.js: Unexpected token (44:28)\n  42 |   assert.sameValue(Object.keys(obj).length, 2);\n  43 |   callCount += 1;\n\u003e 44 | }.apply(null, [{a: 1, b: 2, ...null}]));\n     |                             ^\n  45 | \n  46 | assert.sameValue(callCount, 1);\n  47 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/array/spread-mult-obj-undefined.js-strict:true": "test/language/expressions/array/spread-mult-obj-undefined.js: SyntaxError: test/language/expressions/array/spread-mult-obj-undefined.js: Unexpected token (44:28)\n  42 |   assert.sameValue(Object.keys(obj).length, 2);\n  43 |   callCount += 1;\n\u003e 44 | }.apply(null, [{a: 1, b: 2, ...undefined}]));\n     |                             ^\n  45 | \n  46 | assert.sameValue(callCount, 1);\n  47 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/array/spread-obj-getter-descriptor.js-strict:true": "test/language/expressions/array/spread-obj-getter-descriptor.js: SyntaxError: test/language/expressions/array/spread-obj-getter-descriptor.js: Unexpected token (58:16)\n  56 |   });\n  57 |   callCount += 1;\n\u003e 58 | }.apply(null, [{...o, c: 4, d: 5}]));\n     |                 ^\n  59 | \n  60 | assert.sameValue(callCount, 1);\n  61 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/array/spread-obj-getter-init.js-strict:true": "test/language/expressions/array/spread-obj-getter-init.js: SyntaxError: test/language/expressions/array/spread-obj-getter-init.js: Unexpected token (38:16)\n  36 |   assert.sameValue(Object.keys(obj).length, 3);\n  37 |   callCount += 1;\n\u003e 38 | }.apply(null, [{...o, get c() { executedGetter = true; }}]));\n     |                 ^\n  39 | \n  40 | assert.sameValue(callCount, 1);\n  41 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/array/spread-obj-manipulate-outter-obj-in-getter.js-strict:true": "test/language/expressions/array/spread-obj-manipulate-outter-obj-in-getter.js: SyntaxError: test/language/expressions/array/spread-obj-manipulate-outter-obj-in-getter.js: Unexpected token (52:16)\n  50 |   assert.sameValue(Object.keys(obj).length, 3);\n  51 |   callCount += 1;\n\u003e 52 | }.apply(null, [{...cthulhu, ...o}]));\n     |                 ^\n  53 | \n  54 | assert.sameValue(callCount, 1);\n  55 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/array/spread-obj-mult-spread-getter.js-strict:true": "test/language/expressions/array/spread-obj-mult-spread-getter.js: SyntaxError: test/language/expressions/array/spread-obj-mult-spread-getter.js: Unexpected token (52:16)\n  50 |   assert.sameValue(Object.keys(obj).length, 3);\n  51 |   callCount += 1;\n\u003e 52 | }.apply(null, [{...o, c: 4, d: 5, a: 42, ...o}]));\n     |                 ^\n  53 | \n  54 | assert.sameValue(callCount, 1);\n  55 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/array/spread-obj-mult-spread.js-strict:true": "test/language/expressions/array/spread-obj-mult-spread.js: SyntaxError: test/language/expressions/array/spread-obj-mult-spread.js: Unexpected token (50:16)\n  48 |   assert.sameValue(Object.keys(obj).length, 4);\n  49 |   callCount += 1;\n\u003e 50 | }.apply(null, [{...o, ...o2}]));\n     |                 ^\n  51 | \n  52 | assert.sameValue(callCount, 1);\n  53 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/array/spread-obj-null.js-strict:true": "test/language/expressions/array/spread-obj-null.js: SyntaxError: test/language/expressions/array/spread-obj-null.js: Unexpected token (42:16)\n  40 |   assert.sameValue(Object.keys(obj).length, 0);\n  41 |   callCount += 1;\n\u003e 42 | }.apply(null, [{...null}]));\n     |                 ^\n  43 | \n  44 | assert.sameValue(callCount, 1);\n  45 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/array/spread-obj-override-immutable.js-strict:true": "test/language/expressions/array/spread-obj-override-immutable.js: SyntaxError: test/language/expressions/array/spread-obj-override-immutable.js: Unexpected token (51:16)\n  49 |   });\n  50 |   callCount += 1;\n\u003e 51 | }.apply(null, [{...o, a: 3}]));\n     |                 ^\n  52 | \n  53 | assert.sameValue(callCount, 1);\n  54 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/array/spread-obj-overrides-prev-properties.js-strict:true": "test/language/expressions/array/spread-obj-overrides-prev-properties.js: SyntaxError: test/language/expressions/array/spread-obj-overrides-prev-properties.js: Unexpected token (48:28)\n  46 |   assert.sameValue(o.b, 3);\n  47 |   callCount += 1;\n\u003e 48 | }.apply(null, [{a: 1, b: 7, ...o}]));\n     |                             ^\n  49 | \n  50 | assert.sameValue(callCount, 1);\n  51 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/array/spread-obj-skip-non-enumerable.js-strict:true": "test/language/expressions/array/spread-obj-skip-non-enumerable.js: SyntaxError: test/language/expressions/array/spread-obj-skip-non-enumerable.js: Unexpected token (36:16)\n  34 |   assert.sameValue(Object.keys(obj).length, 0);\n  35 |   callCount += 1;\n\u003e 36 | }.apply(null, [{...o}]));\n     |                 ^\n  37 | \n  38 | assert.sameValue(callCount, 1);\n  39 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/array/spread-obj-spread-order.js-strict:true": "test/language/expressions/array/spread-obj-spread-order.js: SyntaxError: test/language/expressions/array/spread-obj-spread-order.js: Unexpected token (49:16)\n  47 |   assert.sameValue(Object.keys(obj).length, 3);\n  48 |   callCount += 1;\n\u003e 49 | }.apply(null, [{...o}]));\n     |                 ^\n  50 | \n  51 | assert.sameValue(callCount, 1);\n  52 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/array/spread-obj-symbol-property.js-strict:true": "test/language/expressions/array/spread-obj-symbol-property.js: SyntaxError: test/language/expressions/array/spread-obj-symbol-property.js: Unexpected token (50:16)\n  48 |   assert.sameValue(Object.keys(obj).length, 2);\n  49 |   callCount += 1;\n\u003e 50 | }.apply(null, [{...o, c: 4, d: 5}]));\n     |                 ^\n  51 | \n  52 | assert.sameValue(callCount, 1);\n  53 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/array/spread-obj-undefined.js-strict:true": "test/language/expressions/array/spread-obj-undefined.js: SyntaxError: test/language/expressions/array/spread-obj-undefined.js: Unexpected token (42:16)\n  40 |   assert.sameValue(Object.keys(obj).length, 0);\n  41 |   callCount += 1;\n\u003e 42 | }.apply(null, [{...undefined}]));\n     |                 ^\n  43 | \n  44 | assert.sameValue(callCount, 1);\n  45 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/array/spread-obj-with-overrides.js-strict:true": "test/language/expressions/array/spread-obj-with-overrides.js: SyntaxError: test/language/expressions/array/spread-obj-with-overrides.js: Unexpected token (54:16)\n  52 |   assert.sameValue(Object.keys(obj).length, 10);\n  53 |   callCount += 1;\n\u003e 54 | }.apply(null, [{...o, a: 1, b: 7, d: 5, h: -0, i: Symbol(\"foo\"), j: o}]));\n     |                 ^\n  55 | \n  56 | assert.sameValue(callCount, 1);\n  57 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/array/spread-sngl-obj-ident.js-strict:true": "test/language/expressions/array/spread-sngl-obj-ident.js: SyntaxError: test/language/expressions/array/spread-sngl-obj-ident.js: Unexpected token (59:16)\n  57 |   });\n  58 |   callCount += 1;\n\u003e 59 | }.apply(null, [{...o}]));\n     |                 ^\n  60 | \n  61 | assert.sameValue(callCount, 1);\n  62 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/arrow-function/ArrowFunction_restricted-properties.js-strict:true": "test/language/expressions/arrow-function/ArrowFunction_restricted-properties.js: Test262Error: Functions created using ArrowFunction syntactic form do not have own property \"caller\" Expected SameValue(«true», «false») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/arrow/binding-tests-1.js-strict:false": "test/language/expressions/arrow-function/arrow/binding-tests-1.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:2 Unexpected token ) (and 1 more errors) at foo (test/language/expressions/arrow-function/arrow/binding-tests-1.js:11:16(4))",
  "test/language/expressions/arrow-function/arrow/binding-tests-2.js-strict:false": "test/language/expressions/arrow-function/arrow/binding-tests-2.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:2 Unexpected token ) (and 1 more errors) at foo (test/language/expressions/arrow-function/arrow/binding-tests-2.js:11:16(4))",
  "test/language/expressions/arrow-function/arrow/capturing-closure-variables-2.js-strict:false": "test/language/expressions/arrow-function/arrow/capturing-closure-variables-2.js: SyntaxError: test/language/expressions/arrow-function/arrow/capturing-closure-variables-2.js: 'with' in strict mode (12:4)\n  10 | function foo(){\n  11 |     var a = {a : 10};\n\u003e 12 |     with(a){\n     |     ^\n  13 |         return () =\u003e a;\n  14 |     }\n  15 |  } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/arrow-function/dflt-params-ref-later.js-strict:true": "test/language/expressions/arrow-function/dflt-params-ref-later.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/dflt-params-ref-self.js-strict:true": "test/language/expressions/arrow-function/dflt-params-ref-self.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/dstr/ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/expressions/arrow-function/dstr/ary-init-iter-get-err-array-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/dstr/ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/arrow-function/dstr/ary-ptrn-elem-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/dstr/ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/arrow-function/dstr/ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/dstr/ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/expressions/arrow-function/dstr/ary-ptrn-elem-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/dstr/ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/expressions/arrow-function/dstr/ary-ptrn-elem-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/dstr/ary-ptrn-rest-obj-id.js-strict:true": "test/language/expressions/arrow-function/dstr/ary-ptrn-rest-obj-id.js: SyntaxError: test/language/expressions/arrow-function/dstr/ary-ptrn-rest-obj-id.js: Unexpected token (56:9)\n  54 | var callCount = 0;\n  55 | var f;\n\u003e 56 | f = ([...{ length }]) =\u003e {\n     |          ^\n  57 |   assert.sameValue(length, 3);\n  58 |   callCount = callCount + 1;\n  59 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/arrow-function/dstr/ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/expressions/arrow-function/dstr/ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/expressions/arrow-function/dstr/ary-ptrn-rest-obj-prop-id.js: Unexpected token (57:9)\n  55 | var callCount = 0;\n  56 | var f;\n\u003e 57 | f = ([...{ 0: v, 1: w, 2: x, 3: y, length: z }]) =\u003e {\n     |          ^\n  58 |   assert.sameValue(v, 7);\n  59 |   assert.sameValue(w, 8);\n  60 |   assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/arrow-function/dstr/dflt-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/expressions/arrow-function/dstr/dflt-ary-init-iter-get-err-array-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/arrow-function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/arrow-function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/expressions/arrow-function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/expressions/arrow-function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/dstr/dflt-ary-ptrn-rest-obj-id.js-strict:true": "test/language/expressions/arrow-function/dstr/dflt-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/expressions/arrow-function/dstr/dflt-ary-ptrn-rest-obj-id.js: Unexpected token (56:9)\n  54 | var callCount = 0;\n  55 | var f;\n\u003e 56 | f = ([...{ length }] = [1, 2, 3]) =\u003e {\n     |          ^\n  57 |   assert.sameValue(length, 3);\n  58 |   callCount = callCount + 1;\n  59 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/arrow-function/dstr/dflt-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/expressions/arrow-function/dstr/dflt-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/expressions/arrow-function/dstr/dflt-ary-ptrn-rest-obj-prop-id.js: Unexpected token (57:9)\n  55 | var callCount = 0;\n  56 | var f;\n\u003e 57 | f = ([...{ 0: v, 1: w, 2: x, 3: y, length: z }] = [7, 8, 9]) =\u003e {\n     |          ^\n  58 |   assert.sameValue(v, 7);\n  59 |   assert.sameValue(w, 8);\n  60 |   assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/arrow-function/dstr/dflt-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/arrow-function/dstr/dflt-obj-ptrn-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/dstr/dflt-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/arrow-function/dstr/dflt-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/dstr/dflt-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/expressions/arrow-function/dstr/dflt-obj-ptrn-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/dstr/dflt-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/expressions/arrow-function/dstr/dflt-obj-ptrn-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/dstr/dflt-obj-ptrn-rest-getter.js-strict:true": "test/language/expressions/arrow-function/dstr/dflt-obj-ptrn-rest-getter.js: SyntaxError: test/language/expressions/arrow-function/dstr/dflt-obj-ptrn-rest-getter.js: Unexpected token (45:6)\n  43 | var callCount = 0;\n  44 | var f;\n\u003e 45 | f = ({...x} = { get v() { count++; return 2; } }) =\u003e {\n     |       ^\n  46 |   assert.sameValue(count, 1);\n  47 | \n  48 |   verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/arrow-function/dstr/dflt-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/arrow-function/dstr/dflt-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/arrow-function/dstr/dflt-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (46:6)\n  44 | var callCount = 0;\n  45 | var f;\n\u003e 46 | f = ({...rest} = o) =\u003e {\n     |       ^\n  47 |   assert.sameValue(rest.x, undefined);\n  48 | \n  49 |   verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/arrow-function/dstr/dflt-obj-ptrn-rest-val-obj.js-strict:true": "test/language/expressions/arrow-function/dstr/dflt-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/expressions/arrow-function/dstr/dflt-obj-ptrn-rest-val-obj.js: Unexpected token (44:12)\n  42 | var callCount = 0;\n  43 | var f;\n\u003e 44 | f = ({a, b, ...rest} = {x: 1, y: 2, a: 5, b: 3}) =\u003e {\n     |             ^\n  45 |   assert.sameValue(rest.a, undefined);\n  46 |   assert.sameValue(rest.b, undefined);\n  47 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/arrow-function/dstr/obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/arrow-function/dstr/obj-ptrn-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/dstr/obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/arrow-function/dstr/obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/dstr/obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/expressions/arrow-function/dstr/obj-ptrn-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/dstr/obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/expressions/arrow-function/dstr/obj-ptrn-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/dstr/obj-ptrn-rest-getter.js-strict:true": "test/language/expressions/arrow-function/dstr/obj-ptrn-rest-getter.js: SyntaxError: test/language/expressions/arrow-function/dstr/obj-ptrn-rest-getter.js: Unexpected token (45:6)\n  43 | var callCount = 0;\n  44 | var f;\n\u003e 45 | f = ({...x}) =\u003e {\n     |       ^\n  46 |   assert.sameValue(count, 1);\n  47 | \n  48 |   verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/arrow-function/dstr/obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/arrow-function/dstr/obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/arrow-function/dstr/obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (46:6)\n  44 | var callCount = 0;\n  45 | var f;\n\u003e 46 | f = ({...rest}) =\u003e {\n     |       ^\n  47 |   assert.sameValue(rest.x, undefined);\n  48 | \n  49 |   verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/arrow-function/dstr/obj-ptrn-rest-val-obj.js-strict:true": "test/language/expressions/arrow-function/dstr/obj-ptrn-rest-val-obj.js: SyntaxError: test/language/expressions/arrow-function/dstr/obj-ptrn-rest-val-obj.js: Unexpected token (44:12)\n  42 | var callCount = 0;\n  43 | var f;\n\u003e 44 | f = ({a, b, ...rest}) =\u003e {\n     |             ^\n  45 |   assert.sameValue(rest.a, undefined);\n  46 |   assert.sameValue(rest.b, undefined);\n  47 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/arrow-function/eval-var-scope-syntax-err.js-strict:false": "test/language/expressions/arrow-function/eval-var-scope-syntax-err.js: Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/lexical-bindings-overriden-by-formal-parameters-non-strict.js-strict:false": "test/language/expressions/arrow-function/lexical-bindings-overriden-by-formal-parameters-non-strict.js: SyntaxError: test/language/expressions/arrow-function/lexical-bindings-overriden-by-formal-parameters-non-strict.js: arguments is a reserved word in strict mode (11:10)\n   9 | ---*/\n  10 | function f() {\n\u003e 11 |   return (arguments) =\u003e arguments;\n     |           ^\n  12 | }\n  13 | \n  14 | assert.sameValue(f(1)(2), 2); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/arrow-function/lexical-super-call-from-within-constructor.js-strict:true": "test/language/expressions/arrow-function/lexical-super-call-from-within-constructor.js: test/language/expressions/arrow-function/lexical-super-call-from-within-constructor.js: Line 36:131 Unexpected token = (and 14 more errors)",
  "test/language/expressions/arrow-function/lexical-supercall-from-immediately-invoked-arrow.js-strict:true": "test/language/expressions/arrow-function/lexical-supercall-from-immediately-invoked-arrow.js: test/language/expressions/arrow-function/lexical-supercall-from-immediately-invoked-arrow.js: Line 30:22 Unexpected token = (and 14 more errors)",
  "test/language/expressions/arrow-function/name.js-strict:true": "test/language/expressions/arrow-function/name.js: Test262Error: obj should have an own property name at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/non-strict.js-strict:false": "test/language/expressions/arrow-function/non-strict.js: ReferenceError: foo is not defined at af (test/language/expressions/arrow-function/non-strict.js:15:3(5))",
  "test/language/expressions/arrow-function/param-dflt-yield-id-non-strict.js-strict:false": "test/language/expressions/arrow-function/param-dflt-yield-id-non-strict.js: SyntaxError: test/language/expressions/arrow-function/param-dflt-yield-id-non-strict.js: Unexpected token (17:4)\n  15 | ---*/\n  16 | \n\u003e 17 | var yield = 23;\n     |     ^\n  18 | var f, paramValue;\n  19 | \n  20 | f = (x = yield) =\u003e { paramValue = x; }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/arrow-function/prototype-rules.js-strict:true": "test/language/expressions/arrow-function/prototype-rules.js: Test262Error: Expected SameValue(«true», «false») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/scope-body-lex-distinct.js-strict:false": "test/language/expressions/arrow-function/scope-body-lex-distinct.js: Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/scope-param-elem-var-close.js-strict:false": "test/language/expressions/arrow-function/scope-param-elem-var-close.js: Test262Error: Expected SameValue(«outside», «inside») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/scope-param-elem-var-open.js-strict:false": "test/language/expressions/arrow-function/scope-param-elem-var-open.js: Test262Error: Expected SameValue(«outside», «inside») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/scope-param-rest-elem-var-close.js-strict:false": "test/language/expressions/arrow-function/scope-param-rest-elem-var-close.js: SyntaxError: test/language/expressions/arrow-function/scope-param-rest-elem-var-close.js: Unexpected token (22:7)\n  20 | \n  21 | ((\n\u003e 22 |     ...[_ = (eval('var x = \"inside\";'), probeParam = function() { return x; })]\n     |        ^\n  23 |   ) =\u003e {\n  24 |     probeBody = function() { return x; }\n  25 | })(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/arrow-function/scope-param-rest-elem-var-open.js-strict:false": "test/language/expressions/arrow-function/scope-param-rest-elem-var-open.js: SyntaxError: test/language/expressions/arrow-function/scope-param-rest-elem-var-open.js: Unexpected token (23:7)\n  21 | ((\n  22 |     _ = probe1 = function() { return x; },\n\u003e 23 |     ...[__ = (eval('var x = \"inside\";'), probe2 = function() { return x; })]\n     |        ^\n  24 |   ) =\u003e {\n  25 | })();\n  26 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/arrow-function/scope-paramsbody-var-open.js-strict:true": "test/language/expressions/arrow-function/scope-paramsbody-var-open.js: Test262Error: Expected SameValue(«inside», «outside») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/syntax/arrowparameters-bindingidentifier-arguments.js-strict:false": "test/language/expressions/arrow-function/syntax/arrowparameters-bindingidentifier-arguments.js: SyntaxError: test/language/expressions/arrow-function/syntax/arrowparameters-bindingidentifier-arguments.js: arguments is a reserved word in strict mode (14:9)\n  12 | flags: [noStrict]\n  13 | ---*/\n\u003e 14 | var af = arguments =\u003e arguments;\n     |          ^\n  15 | \n  16 | assert.sameValue(typeof af, \"function\");\n  17 | assert.sameValue(af(1), 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/arrow-function/syntax/arrowparameters-bindingidentifier-eval.js-strict:false": "test/language/expressions/arrow-function/syntax/arrowparameters-bindingidentifier-eval.js: SyntaxError: test/language/expressions/arrow-function/syntax/arrowparameters-bindingidentifier-eval.js: eval is a reserved word in strict mode (14:9)\n  12 | flags: [noStrict]\n  13 | ---*/\n\u003e 14 | var af = eval =\u003e eval;\n     |          ^\n  15 | \n  16 | \n  17 | assert.sameValue(typeof af, \"function\"); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/arrow-function/syntax/arrowparameters-bindingidentifier-yield.js-strict:false": "test/language/expressions/arrow-function/syntax/arrowparameters-bindingidentifier-yield.js: SyntaxError: test/language/expressions/arrow-function/syntax/arrowparameters-bindingidentifier-yield.js: yield is a reserved word (14:9)\n  12 | flags: [noStrict]\n  13 | ---*/\n\u003e 14 | var af = yield =\u003e 1;\n     |          ^\n  15 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/arrow-function/syntax/arrowparameters-cover-formalparameters-arguments.js-strict:false": "test/language/expressions/arrow-function/syntax/arrowparameters-cover-formalparameters-arguments.js: SyntaxError: test/language/expressions/arrow-function/syntax/arrowparameters-cover-formalparameters-arguments.js: arguments is a reserved word in strict mode (14:10)\n  12 | flags: [noStrict]\n  13 | ---*/\n\u003e 14 | var af = (arguments) =\u003e arguments;\n     |           ^\n  15 | \n  16 | assert.sameValue(typeof af, \"function\");\n  17 | assert.sameValue(af(1), 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/arrow-function/syntax/arrowparameters-cover-formalparameters-eval.js-strict:false": "test/language/expressions/arrow-function/syntax/arrowparameters-cover-formalparameters-eval.js: SyntaxError: test/language/expressions/arrow-function/syntax/arrowparameters-cover-formalparameters-eval.js: eval is a reserved word in strict mode (14:10)\n  12 | flags: [noStrict]\n  13 | ---*/\n\u003e 14 | var af = (eval) =\u003e eval;\n     |           ^\n  15 | \n  16 | assert.sameValue(typeof af, \"function\");\n  17 | assert.sameValue(af(1), 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/arrow-function/syntax/arrowparameters-cover-formalparameters-yield.js-strict:false": "test/language/expressions/arrow-function/syntax/arrowparameters-cover-formalparameters-yield.js: SyntaxError: test/language/expressions/arrow-function/syntax/arrowparameters-cover-formalparameters-yield.js: yield is a reserved word (14:10)\n  12 | flags: [noStrict]\n  13 | ---*/\n\u003e 14 | var af = (yield) =\u003e 1;\n     |           ^\n  15 | \n  16 | assert.sameValue(typeof af, \"function\");\n  17 | assert.sameValue(af(1), 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/arrow-function/throw-new.js-strict:true": "test/language/expressions/arrow-function/throw-new.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/arrow-function/unscopables-with-in-nested-fn.js-strict:false": "test/language/expressions/arrow-function/unscopables-with-in-nested-fn.js: SyntaxError: test/language/expressions/arrow-function/unscopables-with-in-nested-fn.js: 'with' in strict mode (74:4)\n  72 |   (function() {\n  73 |     count++;\n\u003e 74 |     with (globalThis) {\n     |     ^\n  75 |       count++;\n  76 |       assert.sameValue(v, 1, 'The value of `v` is 1');\n  77 |     } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/arrow-function/unscopables-with.js-strict:false": "test/language/expressions/arrow-function/unscopables-with.js: SyntaxError: test/language/expressions/arrow-function/unscopables-with.js: 'with' in strict mode (73:2)\n  71 | ref = (x) =\u003e {\n  72 |   count++;\n\u003e 73 |   with (globalThis) {\n     |   ^\n  74 |     count++;\n  75 |     assert.sameValue(v, undefined, 'The value of `v` is expected to equal `undefined`');\n  76 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/S11.13.1_A7_T1.js-strict:true": "test/language/expressions/assignment/S11.13.1_A7_T1.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/S11.13.1_A7_T2.js-strict:true": "test/language/expressions/assignment/S11.13.1_A7_T2.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/S11.13.1_A7_T3.js-strict:true": "test/language/expressions/assignment/S11.13.1_A7_T3.js: Test262Error: Expected a DummyError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/assignment-operator-calls-putvalue-lref--rval--1.js-strict:false": "test/language/expressions/assignment/assignment-operator-calls-putvalue-lref--rval--1.js: TypeError: Object.defineProperty called on non-object at defineProperty (native)",
  "test/language/expressions/assignment/assignment-operator-calls-putvalue-lref--rval-.js-strict:false": "test/language/expressions/assignment/assignment-operator-calls-putvalue-lref--rval-.js: SyntaxError: test/language/expressions/assignment/assignment-operator-calls-putvalue-lref--rval-.js: 'with' in strict mode (23:0)\n  21 | var scope = {x: 1};\n  22 | \n\u003e 23 | with (scope) {\n     | ^\n  24 |   (function() {\n  25 |     \"use strict\";\n  26 |     assert.throws(ReferenceError, () =\u003e { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/destructuring/iterator-destructuring-property-reference-target-evaluation-order.js-strict:true": "test/language/expressions/assignment/destructuring/iterator-destructuring-property-reference-target-evaluation-order.js: Test262Error: Expected [source, iterator, iterator-step, iterator-done, target, target-key, target-key-tostring, set] and [source, iterator, target, target-key, target-key-tostring, iterator-step, iterator-done, set] to have the same contents.  at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/destructuring/keyed-destructuring-property-reference-target-evaluation-order.js-strict:true": "test/language/expressions/assignment/destructuring/keyed-destructuring-property-reference-target-evaluation-order.js: Test262Error: Expected [source, target, target-key, source-key, source-key-tostring, get, target-key-tostring, set] and [source, source-key, source-key-tostring, target, target-key, target-key-tostring, get, set] to have the same contents.  at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/destructuring/obj-prop-__proto__dup.js-strict:true": "test/language/expressions/assignment/destructuring/obj-prop-__proto__dup.js: SyntaxError: test/language/expressions/assignment/destructuring/obj-prop-__proto__dup.js: Redefinition of __proto__ property (20:25)\n  18 | var result, x, y;\n  19 | \n\u003e 20 | result = { __proto__: x, __proto__: y } = value;\n     |                          ^\n  21 | \n  22 | assert.sameValue(result, value);\n  23 | assert.sameValue(x, 123, 'first AssignmentProperty'); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/array-elem-init-fn-name-arrow.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-init-fn-name-arrow.js: Test262Error: obj should have an own property name at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-elem-init-fn-name-class.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-init-fn-name-class.js: Test262Error: descriptor value should be cls at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-elem-init-fn-name-cover.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-init-fn-name-cover.js: Test262Error: obj should have an own property name at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-elem-init-fn-name-fn.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-init-fn-name-fn.js: Test262Error: obj should have an own property name at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-elem-init-let.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-init-let.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-elem-init-simple-no-strict.js-strict:false": "test/language/expressions/assignment/dstr/array-elem-init-simple-no-strict.js: SyntaxError: test/language/expressions/assignment/dstr/array-elem-init-simple-no-strict.js: eval is a reserved word in strict mode (18:14)\n  16 |        BindingPattern passing rval and undefined as arguments.\n  17 | ---*/\n\u003e 18 | var argument, eval;\n     |               ^\n  19 | \n  20 | var result;\n  21 | var vals = []; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/array-elem-init-yield-ident-valid.js-strict:false": "test/language/expressions/assignment/dstr/array-elem-init-yield-ident-valid.js: SyntaxError: test/language/expressions/assignment/dstr/array-elem-init-yield-ident-valid.js: Unexpected token (18:4)\n  16 |        BindingPattern passing rval and undefined as arguments.\n  17 | ---*/\n\u003e 18 | var yield = 4;\n     |     ^\n  19 | var x;\n  20 | \n  21 | var result; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/array-elem-iter-nrml-close-null.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-iter-nrml-close-null.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-elem-iter-thrw-close-err.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-iter-thrw-close-err.js: Test262Error: Expected SameValue(«1», «0») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-elem-iter-thrw-close.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-iter-thrw-close.js: Test262Error: Expected SameValue(«1», «0») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-elem-nested-array-yield-ident-valid.js-strict:false": "test/language/expressions/assignment/dstr/array-elem-nested-array-yield-ident-valid.js: SyntaxError: test/language/expressions/assignment/dstr/array-elem-nested-array-yield-ident-valid.js: Unexpected token (18:4)\n  16 |        BindingPattern passing rval and undefined as arguments.\n  17 | ---*/\n\u003e 18 | var yield = 'prop';\n     |     ^\n  19 | var x = {};\n  20 | \n  21 | var result; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/array-elem-nested-obj-yield-ident-valid.js-strict:false": "test/language/expressions/assignment/dstr/array-elem-nested-obj-yield-ident-valid.js: SyntaxError: test/language/expressions/assignment/dstr/array-elem-nested-obj-yield-ident-valid.js: Unexpected token (18:4)\n  16 |        BindingPattern passing rval and undefined as arguments.\n  17 | ---*/\n\u003e 18 | var yield = 2;\n     |     ^\n  19 | var x;\n  20 | \n  21 | var result; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/array-elem-put-const.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-put-const.js: SyntaxError: test/language/expressions/assignment/dstr/array-elem-put-const.js: \"c\" is read-only\n  20 | \n  21 | assert.throws(TypeError, function() {\n\u003e 22 |   0, [ c ] = [1];\n     |      ^\n  23 | });\n  24 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/array-elem-put-let.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-put-let.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-elem-put-unresolvable-no-strict.js-strict:false": "test/language/expressions/assignment/dstr/array-elem-put-unresolvable-no-strict.js: ReferenceError: unresolvable is not defined at test/language/expressions/assignment/dstr/array-elem-put-unresolvable-no-strict.js:23:79(31)",
  "test/language/expressions/assignment/dstr/array-elem-target-simple-no-strict.js-strict:false": "test/language/expressions/assignment/dstr/array-elem-target-simple-no-strict.js: SyntaxError: test/language/expressions/assignment/dstr/array-elem-target-simple-no-strict.js: eval is a reserved word in strict mode (18:14)\n  16 |        BindingPattern passing rval and undefined as arguments.\n  17 | ---*/\n\u003e 18 | var argument, eval;\n     |               ^\n  19 | \n  20 | var result;\n  21 | var vals = [2, 3]; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/array-elem-target-yield-valid.js-strict:false": "test/language/expressions/assignment/dstr/array-elem-target-yield-valid.js: SyntaxError: test/language/expressions/assignment/dstr/array-elem-target-yield-valid.js: Unexpected token (18:4)\n  16 |        BindingPattern passing rval and undefined as arguments.\n  17 | ---*/\n\u003e 18 | var yield = 'prop';\n     |     ^\n  19 | var x = {};\n  20 | \n  21 | var result; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/array-elem-trlg-iter-elision-iter-nrml-close-null.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-trlg-iter-elision-iter-nrml-close-null.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-nrml-close-null.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-nrml-close-null.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-thrw-close-err.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-thrw-close-err.js: Test262Error: Expected SameValue(«1», «0») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-thrw-close.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-thrw-close.js: Test262Error: Expected SameValue(«1», «0») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-elem-trlg-iter-rest-thrw-close-err.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-trlg-iter-rest-thrw-close-err.js: Test262Error: Expected SameValue(«11», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-elem-trlg-iter-rest-thrw-close.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-trlg-iter-rest-thrw-close.js: Test262Error: Expected SameValue(«11», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-elision-iter-nrml-close-null.js-strict:true": "test/language/expressions/assignment/dstr/array-elision-iter-nrml-close-null.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-empty-iter-close-err.js-strict:true": "test/language/expressions/assignment/dstr/array-empty-iter-close-err.js: Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-empty-iter-close-null.js-strict:true": "test/language/expressions/assignment/dstr/array-empty-iter-close-null.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-empty-iter-close.js-strict:true": "test/language/expressions/assignment/dstr/array-empty-iter-close.js: Test262Error: Expected SameValue(«1», «0») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-empty-val-bool.js-strict:true": "test/language/expressions/assignment/dstr/array-empty-val-bool.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-empty-val-num.js-strict:true": "test/language/expressions/assignment/dstr/array-empty-val-num.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-empty-val-symbol.js-strict:true": "test/language/expressions/assignment/dstr/array-empty-val-symbol.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-rest-before-elision.js-strict:true": "test/language/expressions/assignment/dstr/array-rest-before-elision.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/assignment/dstr/array-rest-elision-invalid.js-strict:true": "test/language/expressions/assignment/dstr/array-rest-elision-invalid.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/assignment/dstr/array-rest-iter-thrw-close-err.js-strict:true": "test/language/expressions/assignment/dstr/array-rest-iter-thrw-close-err.js: Test262Error: Expected SameValue(«11», «0») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-rest-iter-thrw-close.js-strict:true": "test/language/expressions/assignment/dstr/array-rest-iter-thrw-close.js: Test262Error: Expected SameValue(«11», «0») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-rest-lref-err.js-strict:true": "test/language/expressions/assignment/dstr/array-rest-lref-err.js: Test262Error: Expected SameValue(«1», «0») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-rest-nested-array-yield-ident-valid.js-strict:false": "test/language/expressions/assignment/dstr/array-rest-nested-array-yield-ident-valid.js: SyntaxError: test/language/expressions/assignment/dstr/array-rest-nested-array-yield-ident-valid.js: Unexpected token (18:4)\n  16 |        BindingPattern passing rval and undefined as arguments.\n  17 | ---*/\n\u003e 18 | var yield = 'prop';\n     |     ^\n  19 | var x = {};\n  20 | \n  21 | var result; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/array-rest-nested-obj-null.js-strict:true": "test/language/expressions/assignment/dstr/array-rest-nested-obj-null.js: SyntaxError: test/language/expressions/assignment/dstr/array-rest-nested-obj-null.js: Unexpected token (24:13)\n  22 | var vals = [null];\n  23 | \n\u003e 24 | result = [...{ 0: x, length }] = vals;\n     |              ^\n  25 | \n  26 | assert.sameValue(x, null);\n  27 | assert.sameValue(length, 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/array-rest-nested-obj-undefined-hole.js-strict:true": "test/language/expressions/assignment/dstr/array-rest-nested-obj-undefined-hole.js: SyntaxError: test/language/expressions/assignment/dstr/array-rest-nested-obj-undefined-hole.js: Unexpected token (27:13)\n  25 | var vals = [ , ];\n  26 | \n\u003e 27 | result = [...{ 0: x, length }] = vals;\n     |              ^\n  28 | \n  29 | assert.sameValue(x, undefined);\n  30 | assert.sameValue(length, 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/array-rest-nested-obj-undefined-own.js-strict:true": "test/language/expressions/assignment/dstr/array-rest-nested-obj-undefined-own.js: SyntaxError: test/language/expressions/assignment/dstr/array-rest-nested-obj-undefined-own.js: Unexpected token (27:13)\n  25 | var vals = [undefined];\n  26 | \n\u003e 27 | result = [...{ 0: x, length }] = vals;\n     |              ^\n  28 | \n  29 | assert.sameValue(x, undefined);\n  30 | assert.sameValue(length, 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/array-rest-nested-obj-undefined.js-strict:true": "test/language/expressions/assignment/dstr/array-rest-nested-obj-undefined.js: SyntaxError: test/language/expressions/assignment/dstr/array-rest-nested-obj-undefined.js: Unexpected token (27:13)\n  25 | var vals = [];\n  26 | \n\u003e 27 | result = [...{ 0: x, length }] = vals;\n     |              ^\n  28 | \n  29 | assert.sameValue(x, undefined);\n  30 | assert.sameValue(length, 0); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/array-rest-nested-obj-yield-ident-valid.js-strict:false": "test/language/expressions/assignment/dstr/array-rest-nested-obj-yield-ident-valid.js: SyntaxError: test/language/expressions/assignment/dstr/array-rest-nested-obj-yield-ident-valid.js: Unexpected token (18:4)\n  16 |        BindingPattern passing rval and undefined as arguments.\n  17 | ---*/\n\u003e 18 | var yield = 2;\n     |     ^\n  19 | var x;\n  20 | \n  21 | var result; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/array-rest-nested-obj.js-strict:true": "test/language/expressions/assignment/dstr/array-rest-nested-obj.js: SyntaxError: test/language/expressions/assignment/dstr/array-rest-nested-obj.js: Unexpected token (24:13)\n  22 | var vals = [1, 2, 3];\n  23 | \n\u003e 24 | result = [...{ 1: x }] = vals;\n     |              ^\n  25 | \n  26 | assert.sameValue(x, 2);\n  27 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/array-rest-put-const.js-strict:true": "test/language/expressions/assignment/dstr/array-rest-put-const.js: SyntaxError: test/language/expressions/assignment/dstr/array-rest-put-const.js: \"c\" is read-only\n  20 | \n  21 | assert.throws(TypeError, function() {\n\u003e 22 |   0, [ ...c ] = [1];\n     |      ^\n  23 | });\n  24 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/array-rest-put-let.js-strict:true": "test/language/expressions/assignment/dstr/array-rest-put-let.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/array-rest-put-unresolvable-no-strict.js-strict:false": "test/language/expressions/assignment/dstr/array-rest-put-unresolvable-no-strict.js: ReferenceError: unresolvable is not defined at test/language/expressions/assignment/dstr/array-rest-put-unresolvable-no-strict.js:23:82(30)",
  "test/language/expressions/assignment/dstr/array-rest-yield-ident-valid.js-strict:false": "test/language/expressions/assignment/dstr/array-rest-yield-ident-valid.js: SyntaxError: test/language/expressions/assignment/dstr/array-rest-yield-ident-valid.js: Unexpected token (18:4)\n  16 |        BindingPattern passing rval and undefined as arguments.\n  17 | ---*/\n\u003e 18 | var yield = 'prop';\n     |     ^\n  19 | var x = {};\n  20 | \n  21 | var result; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-break-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-break-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-break-escaped.js:39:38(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-case-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-case-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-case-escaped.js:39:36(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-catch-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-catch-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-catch-escaped.js:39:38(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-class-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-class-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-class-escaped.js:39:38(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-const-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-const-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-const-escaped.js:39:38(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-continue-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-continue-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-continue-escaped.js:39:44(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-debugger-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-debugger-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-debugger-escaped.js:39:44(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-default-escaped-ext.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-default-escaped-ext.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-default-escaped-ext.js:39:42(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-default-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-default-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-default-escaped.js:39:42(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-default.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-default.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-default.js:39:42(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-delete-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-delete-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-delete-escaped.js:39:40(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-do-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-do-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-do-escaped.js:39:32(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-else-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-else-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-else-escaped.js:39:36(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-enum-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-enum-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-enum-escaped.js:39:36(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-export-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-export-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-export-escaped.js:39:40(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-extends-escaped-ext.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-extends-escaped-ext.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-extends-escaped-ext.js:39:42(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-extends-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-extends-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-extends-escaped.js:39:42(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-extends.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-extends.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-extends.js:39:42(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-finally-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-finally-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-finally-escaped.js:39:42(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-for-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-for-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-for-escaped.js:39:34(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-function-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-function-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-function-escaped.js:39:44(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-if-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-if-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-if-escaped.js:39:32(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-implements-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-implements-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-implements-escaped.js:39:48(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-import-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-import-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-import-escaped.js:39:40(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-in-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-in-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-in-escaped.js:39:32(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-instanceof-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-instanceof-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-instanceof-escaped.js:39:48(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-interface-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-interface-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-interface-escaped.js:39:46(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-let-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-let-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-let-escaped.js:39:34(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-new-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-new-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-new-escaped.js:39:34(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-package-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-package-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-package-escaped.js:39:42(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-private-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-private-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-private-escaped.js:39:42(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-protected-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-protected-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-protected-escaped.js:39:46(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-public-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-public-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-public-escaped.js:39:40(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-return-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-return-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-return-escaped.js:39:40(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-static-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-static-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-static-escaped.js:39:40(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-super-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-super-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-super-escaped.js:39:38(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-switch-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-switch-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-switch-escaped.js:39:40(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-this-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-this-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-this-escaped.js:39:36(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-throw-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-throw-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-throw-escaped.js:39:38(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-try-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-try-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-try-escaped.js:39:34(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-typeof-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-typeof-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-typeof-escaped.js:39:40(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-var-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-var-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-var-escaped.js:39:34(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-void-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-void-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-void-escaped.js:39:36(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-while-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-while-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-while-escaped.js:39:38(12)",
  "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-with-escaped.js-strict:false": "test/language/expressions/assignment/dstr/ident-name-prop-name-literal-with-escaped.js: ReferenceError: x is not defined at test/language/expressions/assignment/dstr/ident-name-prop-name-literal-with-escaped.js:39:36(12)",
  "test/language/expressions/assignment/dstr/obj-id-identifier-yield-ident-valid.js-strict:false": "test/language/expressions/assignment/dstr/obj-id-identifier-yield-ident-valid.js: SyntaxError: test/language/expressions/assignment/dstr/obj-id-identifier-yield-ident-valid.js: Unexpected token (18:4)\n  16 |        BindingPattern passing rval and undefined as arguments.\n  17 | ---*/\n\u003e 18 | var yield;\n     |     ^\n  19 | \n  20 | var result;\n  21 | var vals = { yield: 3 }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/assignment/dstr/obj-id-init-fn-name-arrow.js: Test262Error: obj should have an own property name at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/obj-id-init-fn-name-class.js-strict:true": "test/language/expressions/assignment/dstr/obj-id-init-fn-name-class.js: Test262Error: descriptor value should be cls at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/obj-id-init-fn-name-cover.js-strict:true": "test/language/expressions/assignment/dstr/obj-id-init-fn-name-cover.js: Test262Error: obj should have an own property name at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/obj-id-init-fn-name-fn.js-strict:true": "test/language/expressions/assignment/dstr/obj-id-init-fn-name-fn.js: Test262Error: obj should have an own property name at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/obj-id-init-let.js-strict:true": "test/language/expressions/assignment/dstr/obj-id-init-let.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/obj-id-init-simple-no-strict.js-strict:false": "test/language/expressions/assignment/dstr/obj-id-init-simple-no-strict.js: SyntaxError: test/language/expressions/assignment/dstr/obj-id-init-simple-no-strict.js: eval is a reserved word in strict mode (18:4)\n  16 |        BindingPattern passing rval and undefined as arguments.\n  17 | ---*/\n\u003e 18 | var eval, arguments;\n     |     ^\n  19 | \n  20 | var result;\n  21 | var vals = {}; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-id-init-yield-ident-valid.js-strict:false": "test/language/expressions/assignment/dstr/obj-id-init-yield-ident-valid.js: SyntaxError: test/language/expressions/assignment/dstr/obj-id-init-yield-ident-valid.js: Unexpected token (18:4)\n  16 |        BindingPattern passing rval and undefined as arguments.\n  17 | ---*/\n\u003e 18 | var yield = 3;\n     |     ^\n  19 | var x;\n  20 | \n  21 | var result; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-id-put-const.js-strict:true": "test/language/expressions/assignment/dstr/obj-id-put-const.js: SyntaxError: test/language/expressions/assignment/dstr/obj-id-put-const.js: \"c\" is read-only\n  20 | \n  21 | assert.throws(TypeError, function() {\n\u003e 22 |   0, { c } = { c: 1 };\n     |      ^\n  23 | });\n  24 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-id-put-let.js-strict:true": "test/language/expressions/assignment/dstr/obj-id-put-let.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/obj-id-put-unresolvable-no-strict.js-strict:false": "test/language/expressions/assignment/dstr/obj-id-put-unresolvable-no-strict.js: ReferenceError: unresolvable is not defined at test/language/expressions/assignment/dstr/obj-id-put-unresolvable-no-strict.js:23:44(15)",
  "test/language/expressions/assignment/dstr/obj-id-simple-no-strict.js-strict:false": "test/language/expressions/assignment/dstr/obj-id-simple-no-strict.js: SyntaxError: test/language/expressions/assignment/dstr/obj-id-simple-no-strict.js: eval is a reserved word in strict mode (18:4)\n  16 |        BindingPattern passing rval and undefined as arguments.\n  17 | ---*/\n\u003e 18 | var eval, arguments;\n     |     ^\n  19 | \n  20 | var result;\n  21 | var vals = { eval: 1, arguments: 2 }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-prop-elem-init-fn-name-arrow.js-strict:true": "test/language/expressions/assignment/dstr/obj-prop-elem-init-fn-name-arrow.js: Test262Error: obj should have an own property name at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/obj-prop-elem-init-fn-name-class.js-strict:true": "test/language/expressions/assignment/dstr/obj-prop-elem-init-fn-name-class.js: Test262Error: descriptor value should be cls at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/obj-prop-elem-init-fn-name-cover.js-strict:true": "test/language/expressions/assignment/dstr/obj-prop-elem-init-fn-name-cover.js: Test262Error: obj should have an own property name at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/obj-prop-elem-init-fn-name-fn.js-strict:true": "test/language/expressions/assignment/dstr/obj-prop-elem-init-fn-name-fn.js: Test262Error: obj should have an own property name at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/obj-prop-elem-init-let.js-strict:true": "test/language/expressions/assignment/dstr/obj-prop-elem-init-let.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/obj-prop-elem-init-yield-ident-valid.js-strict:false": "test/language/expressions/assignment/dstr/obj-prop-elem-init-yield-ident-valid.js: SyntaxError: test/language/expressions/assignment/dstr/obj-prop-elem-init-yield-ident-valid.js: Unexpected token (18:4)\n  16 |        BindingPattern passing rval and undefined as arguments.\n  17 | ---*/\n\u003e 18 | var yield = 4;\n     |     ^\n  19 | var x;\n  20 | \n  21 | var result; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-prop-elem-target-yield-ident-valid.js-strict:false": "test/language/expressions/assignment/dstr/obj-prop-elem-target-yield-ident-valid.js: SyntaxError: test/language/expressions/assignment/dstr/obj-prop-elem-target-yield-ident-valid.js: Unexpected token (18:4)\n  16 |        BindingPattern passing rval and undefined as arguments.\n  17 | ---*/\n\u003e 18 | var yield = 'prop';\n     |     ^\n  19 | var x = {};\n  20 | \n  21 | var result; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-prop-nested-array-yield-ident-valid.js-strict:false": "test/language/expressions/assignment/dstr/obj-prop-nested-array-yield-ident-valid.js: SyntaxError: test/language/expressions/assignment/dstr/obj-prop-nested-array-yield-ident-valid.js: Unexpected token (18:4)\n  16 |        BindingPattern passing rval and undefined as arguments.\n  17 | ---*/\n\u003e 18 | var yield = 22;\n     |     ^\n  19 | var x;\n  20 | \n  21 | var result; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-prop-nested-obj-yield-ident-valid.js-strict:false": "test/language/expressions/assignment/dstr/obj-prop-nested-obj-yield-ident-valid.js: SyntaxError: test/language/expressions/assignment/dstr/obj-prop-nested-obj-yield-ident-valid.js: Unexpected token (18:4)\n  16 |        BindingPattern passing rval and undefined as arguments.\n  17 | ---*/\n\u003e 18 | var yield = 2;\n     |     ^\n  19 | var result, x;\n  20 | \n  21 | var result; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-prop-put-const.js-strict:true": "test/language/expressions/assignment/dstr/obj-prop-put-const.js: SyntaxError: test/language/expressions/assignment/dstr/obj-prop-put-const.js: \"c\" is read-only\n  20 | \n  21 | assert.throws(TypeError, function() {\n\u003e 22 |   0, { a: c } = { a: 2 };\n     |      ^\n  23 | });\n  24 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-prop-put-let.js-strict:true": "test/language/expressions/assignment/dstr/obj-prop-put-let.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/dstr/obj-prop-put-unresolvable-no-strict.js-strict:false": "test/language/expressions/assignment/dstr/obj-prop-put-unresolvable-no-strict.js: ReferenceError: unresolvable is not defined at test/language/expressions/assignment/dstr/obj-prop-put-unresolvable-no-strict.js:23:44(15)",
  "test/language/expressions/assignment/dstr/obj-rest-computed-property-no-strict.js-strict:false": "test/language/expressions/assignment/dstr/obj-rest-computed-property-no-strict.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-computed-property-no-strict.js: Unexpected token (24:17)\n  22 | var vals = { foo: 1, bar: 2, baz: 3 };\n  23 | \n\u003e 24 | result = {[a]:b, ...rest} = vals;\n     |                  ^\n  25 | \n  26 | assert.sameValue(b, 1);\n  27 | assert.sameValue(rest.bar, 2); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-rest-computed-property.js-strict:true": "test/language/expressions/assignment/dstr/obj-rest-computed-property.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-computed-property.js: Unexpected token (26:17)\n  24 | var vals = { foo: 1, bar: 2, baz: 3 };\n  25 | \n\u003e 26 | result = {[a]:b, ...rest} = vals;\n     |                  ^\n  27 | \n  28 | assert.sameValue(b, 1);\n  29 | assert.sameValue(rest.bar, 2); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-rest-descriptors.js-strict:true": "test/language/expressions/assignment/dstr/obj-rest-descriptors.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-descriptors.js: Unexpected token (28:10)\n  26 | var vals = obj;\n  27 | \n\u003e 28 | result = {...rest} = vals;\n     |           ^\n  29 | \n  30 | verifyProperty(rest, \"a\", {\n  31 |   enumerable: true, at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-rest-empty-obj.js-strict:true": "test/language/expressions/assignment/dstr/obj-rest-empty-obj.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-empty-obj.js: Unexpected token (25:10)\n  23 | var vals = {};\n  24 | \n\u003e 25 | result = {...rest} = vals;\n     |           ^\n  26 | \n  27 | assert.notSameValue(rest, undefined);\n  28 | assert.notSameValue(rest, null); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-rest-getter-abrupt-get-error.js-strict:true": "test/language/expressions/assignment/dstr/obj-rest-getter-abrupt-get-error.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-getter-abrupt-get-error.js: Unexpected token (23:6)\n  21 | \n  22 | assert.throws(Test262Error, function() {\n\u003e 23 |   0, {...x} = { get v() { count++; throw new Test262Error(); } };\n     |       ^\n  24 | });\n  25 | \n  26 | assert.sameValue(count, 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-rest-getter.js-strict:true": "test/language/expressions/assignment/dstr/obj-rest-getter.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-getter.js: Unexpected token (26:10)\n  24 | var vals = { get v() { count++; return 2; } };\n  25 | \n\u003e 26 | result = {...x} = vals;\n     |           ^\n  27 | \n  28 | assert.sameValue(count, 1);\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-rest-non-string-computed-property-1.js-strict:true": "test/language/expressions/assignment/dstr/obj-rest-non-string-computed-property-1.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-non-string-computed-property-1.js: Unexpected token (26:17)\n  24 | var vals = {[a]: 1, bar: 2 };\n  25 | \n\u003e 26 | result = {[a]:b, ...rest} = vals;\n     |                  ^\n  27 | \n  28 | assert.sameValue(b, 1);\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-rest-non-string-computed-property-1dot.js-strict:true": "test/language/expressions/assignment/dstr/obj-rest-non-string-computed-property-1dot.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-non-string-computed-property-1dot.js: Unexpected token (26:17)\n  24 | var vals = {[a]: [1], bar: 2 };\n  25 | \n\u003e 26 | result = {[a]:b, ...rest} = vals;\n     |                  ^\n  27 | \n  28 | assert.compareArray(b, [1]);\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-rest-non-string-computed-property-1dot0.js-strict:true": "test/language/expressions/assignment/dstr/obj-rest-non-string-computed-property-1dot0.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-non-string-computed-property-1dot0.js: Unexpected token (26:17)\n  24 | var vals = {[a]: 1.0, bar: 2 };\n  25 | \n\u003e 26 | result = {[a]:b, ...rest} = vals;\n     |                  ^\n  27 | \n  28 | assert.sameValue(b, 1);\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-rest-non-string-computed-property-1e0.js-strict:true": "test/language/expressions/assignment/dstr/obj-rest-non-string-computed-property-1e0.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-non-string-computed-property-1e0.js: Unexpected token (26:17)\n  24 | var vals = {[a]: 1e0, bar: 2 };\n  25 | \n\u003e 26 | result = {[a]:b, ...rest} = vals;\n     |                  ^\n  27 | \n  28 | assert.sameValue(b, 1);\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-rest-non-string-computed-property-array-1.js-strict:true": "test/language/expressions/assignment/dstr/obj-rest-non-string-computed-property-array-1.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-non-string-computed-property-array-1.js: Unexpected token (26:17)\n  24 | var vals = {[a]: [1], bar: 2 };\n  25 | \n\u003e 26 | result = {[a]:b, ...rest} = vals;\n     |                  ^\n  27 | \n  28 | assert.compareArray(b, [1]);\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-rest-non-string-computed-property-array-1e0.js-strict:true": "test/language/expressions/assignment/dstr/obj-rest-non-string-computed-property-array-1e0.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-non-string-computed-property-array-1e0.js: Unexpected token (26:17)\n  24 | var vals = {[a]: [1e0], bar: 2 };\n  25 | \n\u003e 26 | result = {[a]:b, ...rest} = vals;\n     |                  ^\n  27 | \n  28 | assert.compareArray(b, [1]);\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-rest-non-string-computed-property-string-1.js-strict:true": "test/language/expressions/assignment/dstr/obj-rest-non-string-computed-property-string-1.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-non-string-computed-property-string-1.js: Unexpected token (26:17)\n  24 | var vals = {[a]: \"1\", bar: 2 };\n  25 | \n\u003e 26 | result = {[a]:b, ...rest} = vals;\n     |                  ^\n  27 | \n  28 | assert.sameValue(b, \"1\");\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-rest-number.js-strict:true": "test/language/expressions/assignment/dstr/obj-rest-number.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-number.js: Unexpected token (25:10)\n  23 | var vals = 51;\n  24 | \n\u003e 25 | result = {...rest} = vals;\n     |           ^\n  26 | \n  27 | assert.notSameValue(rest, undefined);\n  28 | assert.notSameValue(rest, null); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-rest-order.js-strict:true": "test/language/expressions/assignment/dstr/obj-rest-order.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-order.js: Unexpected token (29:10)\n  27 | var vals = o;\n  28 | \n\u003e 29 | result = {...rest} = vals;\n     |           ^\n  30 | \n  31 | assert(compareArray(calls, [1, 'z', 'a', \"Symbol(foo)\"]));\n  32 | assert.sameValue(Object.keys(rest).length, 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-rest-put-const.js-strict:true": "test/language/expressions/assignment/dstr/obj-rest-put-const.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-put-const.js: Unexpected token (22:6)\n  20 | \n  21 | assert.throws(TypeError, function() {\n\u003e 22 |   0, {...rest} = {}\n     |       ^\n  23 | ;\n  24 | });\n  25 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-rest-same-name.js-strict:true": "test/language/expressions/assignment/dstr/obj-rest-same-name.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-same-name.js: Unexpected token (30:14)\n  28 | var vals = o;\n  29 | \n\u003e 30 | result = { x, ...z } = vals;\n     |               ^\n  31 | \n  32 | assert.sameValue(x, 42);\n  33 | assert.sameValue(y, undefined); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/assignment/dstr/obj-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-skip-non-enumerable.js: Unexpected token (27:10)\n  25 | var vals = obj;\n  26 | \n\u003e 27 | result = {...rest} = vals;\n     |           ^\n  28 | \n  29 | assert.sameValue(Object.getOwnPropertyDescriptor(rest, \"x\"), undefined);\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-rest-str-val.js-strict:true": "test/language/expressions/assignment/dstr/obj-rest-str-val.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-str-val.js: Unexpected token (25:10)\n  23 | var vals = \"foo\";\n  24 | \n\u003e 25 | result = {...rest} = vals;\n     |           ^\n  26 | \n  27 | assert.sameValue(rest[\"0\"], \"f\");\n  28 | assert.sameValue(rest[\"1\"], \"o\"); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-rest-symbol-val.js-strict:true": "test/language/expressions/assignment/dstr/obj-rest-symbol-val.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-symbol-val.js: Unexpected token (25:10)\n  23 | var vals = Symbol(\"foo\");\n  24 | \n\u003e 25 | result = {...rest} = vals;\n     |           ^\n  26 | \n  27 | assert.notSameValue(rest, undefined);\n  28 | assert.notSameValue(rest, null); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-rest-to-property-with-setter.js-strict:true": "test/language/expressions/assignment/dstr/obj-rest-to-property-with-setter.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-to-property-with-setter.js: Unexpected token (32:10)\n  30 | var vals = { x: 1, y: 2};\n  31 | \n\u003e 32 | result = {...src.y} = vals;\n     |           ^\n  33 | \n  34 | assert.sameValue(settedValue.x, 1);\n  35 | assert.sameValue(settedValue.y, 2); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-rest-to-property.js-strict:true": "test/language/expressions/assignment/dstr/obj-rest-to-property.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-to-property.js: Unexpected token (25:10)\n  23 | var vals = { x: 1, y: 2};\n  24 | \n\u003e 25 | result = {...src.y} = vals;\n     |           ^\n  26 | \n  27 | assert.sameValue(src.y.x, 1);\n  28 | assert.sameValue(src.y.y, 2); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-rest-val-null.js-strict:true": "test/language/expressions/assignment/dstr/obj-rest-val-null.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-val-null.js: Unexpected token (22:6)\n  20 | \n  21 | assert.throws(TypeError, function() {\n\u003e 22 |   0, {...rest} = null\n     |       ^\n  23 | ;\n  24 | });\n  25 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-rest-val-undefined.js-strict:true": "test/language/expressions/assignment/dstr/obj-rest-val-undefined.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-val-undefined.js: Unexpected token (22:6)\n  20 | \n  21 | assert.throws(TypeError, function() {\n\u003e 22 |   0, {...rest} = undefined\n     |       ^\n  23 | ;\n  24 | });\n  25 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/dstr/obj-rest-valid-object.js-strict:true": "test/language/expressions/assignment/dstr/obj-rest-valid-object.js: SyntaxError: test/language/expressions/assignment/dstr/obj-rest-valid-object.js: Unexpected token (26:16)\n  24 | var vals = {x: 1, y: 2, a: 5, b: 3};\n  25 | \n\u003e 26 | result = {a, b, ...rest} = vals;\n     |                 ^\n  27 | \n  28 | assert.sameValue(rest.a, undefined);\n  29 | assert.sameValue(rest.b, undefined); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/assignment/fn-name-lhs-cover.js-strict:true": "test/language/expressions/assignment/fn-name-lhs-cover.js: Test262Error: descriptor value should be  at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/fn-name-lhs-member.js-strict:true": "test/language/expressions/assignment/fn-name-lhs-member.js: Test262Error: obj should have an own property name at harness/sta.js:22:9(49)",
  "test/language/expressions/assignment/target-assignment-inside-function.js-strict:true": "test/language/expressions/assignment/target-assignment-inside-function.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/assignment/target-assignment.js-strict:true": "test/language/expressions/assignment/target-assignment.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/assignmenttargettype/direct-lefthandsideexpression-assignment-assignmentexpression-0.js-strict:true": "test/language/expressions/assignmenttargettype/direct-lefthandsideexpression-assignment-assignmentexpression-0.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/assignmenttargettype/direct-lefthandsideexpression-assignment-assignmentexpression-1.js-strict:true": "test/language/expressions/assignmenttargettype/direct-lefthandsideexpression-assignment-assignmentexpression-1.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/assignmenttargettype/direct-lefthandsideexpression-assignment-assignmentexpression-2.js-strict:true": "test/language/expressions/assignmenttargettype/direct-lefthandsideexpression-assignment-assignmentexpression-2.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/assignmenttargettype/parenthesized-lefthandsideexpression-assignment-assignmentexpression-0.js-strict:true": "test/language/expressions/assignmenttargettype/parenthesized-lefthandsideexpression-assignment-assignmentexpression-0.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/assignmenttargettype/parenthesized-lefthandsideexpression-assignment-assignmentexpression-1.js-strict:true": "test/language/expressions/assignmenttargettype/parenthesized-lefthandsideexpression-assignment-assignmentexpression-1.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/assignmenttargettype/parenthesized-lefthandsideexpression-assignment-assignmentexpression-2.js-strict:true": "test/language/expressions/assignmenttargettype/parenthesized-lefthandsideexpression-assignment-assignmentexpression-2.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/await/await-BindingIdentifier-in-global.js-strict:true": "test/language/expressions/await/await-BindingIdentifier-in-global.js: SyntaxError: test/language/expressions/await/await-BindingIdentifier-in-global.js: await is a reserved word (12:15)\n  10 | ---*/\n  11 | \n\u003e 12 | async function await() { return 1 }\n     |                ^\n  13 | assert(await instanceof Function);\n  14 | \n  15 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/await/await-in-nested-function.js-strict:true": "test/language/expressions/await/await-in-nested-function.js: SyntaxError: test/language/expressions/await/await-in-nested-function.js: await is a reserved word (12:4)\n  10 | ---*/\n  11 | \n\u003e 12 | var await;\n     |     ^\n  13 | async function foo() {\n  14 |   function bar() {\n  15 |     await = 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/await/await-throws-rejections.js-strict:true": "test/language/expressions/await/await-throws-rejections.js: test/language/expressions/await/await-throws-rejections.js: Line 12:7 Unexpected token function (and 7 more errors)",
  "test/language/expressions/call/eval-spread-empty-leading.js-strict:true": "test/language/expressions/call/eval-spread-empty-leading.js: Test262Error: Expected SameValue(«local», «0») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/call/eval-spread-empty-trailing.js-strict:true": "test/language/expressions/call/eval-spread-empty-trailing.js: Test262Error: Expected SameValue(«local», «0») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/call/eval-spread.js-strict:true": "test/language/expressions/call/eval-spread.js: Test262Error: Expected SameValue(«local», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/call/scope-lex-open.js-strict:true": "test/language/expressions/call/scope-lex-open.js: TypeError: test/language/expressions/call/scope-lex-open.js: Duplicate declaration \"n\"\n  31 | // function body (see sec-functiondeclarationinstantiation)\n  32 | var func = function n() {\n\u003e 33 |   let n = 'inside';\n     |       ^\n  34 |   probeInside = function() { return n; };\n  35 | };\n  36 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/call/spread-err-mult-err-iter-get-value.js-strict:true": "test/language/expressions/call/spread-err-mult-err-iter-get-value.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/call/spread-err-mult-err-obj-unresolvable.js-strict:true": "test/language/expressions/call/spread-err-mult-err-obj-unresolvable.js: SyntaxError: test/language/expressions/call/spread-err-mult-err-obj-unresolvable.js: Unexpected token (36:24)\n  34 | \n  35 | assert.throws(ReferenceError, function() {\n\u003e 36 |   (function() {}({a: 0, ...unresolvableReference}));\n     |                         ^\n  37 | });\n  38 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/call/spread-err-sngl-err-obj-unresolvable.js-strict:true": "test/language/expressions/call/spread-err-sngl-err-obj-unresolvable.js: SyntaxError: test/language/expressions/call/spread-err-sngl-err-obj-unresolvable.js: Unexpected token (36:18)\n  34 | \n  35 | assert.throws(ReferenceError, function() {\n\u003e 36 |   (function() {}({...unresolvableReference}));\n     |                   ^\n  37 | });\n  38 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/call/spread-mult-obj-ident.js-strict:true": "test/language/expressions/call/spread-mult-obj-ident.js: SyntaxError: test/language/expressions/call/spread-mult-obj-ident.js: Unexpected token (71:15)\n  69 |   });\n  70 |   callCount += 1;\n\u003e 71 | }({a: 1, b: 2, ...o}));\n     |                ^\n  72 | \n  73 | assert.sameValue(callCount, 1);\n  74 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/call/spread-mult-obj-null.js-strict:true": "test/language/expressions/call/spread-mult-obj-null.js: SyntaxError: test/language/expressions/call/spread-mult-obj-null.js: Unexpected token (42:15)\n  40 |   assert.sameValue(Object.keys(obj).length, 2);\n  41 |   callCount += 1;\n\u003e 42 | }({a: 1, b: 2, ...null}));\n     |                ^\n  43 | \n  44 | assert.sameValue(callCount, 1);\n  45 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/call/spread-mult-obj-undefined.js-strict:true": "test/language/expressions/call/spread-mult-obj-undefined.js: SyntaxError: test/language/expressions/call/spread-mult-obj-undefined.js: Unexpected token (42:15)\n  40 |   assert.sameValue(Object.keys(obj).length, 2);\n  41 |   callCount += 1;\n\u003e 42 | }({a: 1, b: 2, ...undefined}));\n     |                ^\n  43 | \n  44 | assert.sameValue(callCount, 1);\n  45 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/call/spread-obj-getter-descriptor.js-strict:true": "test/language/expressions/call/spread-obj-getter-descriptor.js: SyntaxError: test/language/expressions/call/spread-obj-getter-descriptor.js: Unexpected token (56:3)\n  54 |   });\n  55 |   callCount += 1;\n\u003e 56 | }({...o, c: 4, d: 5}));\n     |    ^\n  57 | \n  58 | assert.sameValue(callCount, 1);\n  59 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/call/spread-obj-getter-init.js-strict:true": "test/language/expressions/call/spread-obj-getter-init.js: SyntaxError: test/language/expressions/call/spread-obj-getter-init.js: Unexpected token (36:3)\n  34 |   assert.sameValue(Object.keys(obj).length, 3);\n  35 |   callCount += 1;\n\u003e 36 | }({...o, get c() { executedGetter = true; }}));\n     |    ^\n  37 | \n  38 | assert.sameValue(callCount, 1);\n  39 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/call/spread-obj-manipulate-outter-obj-in-getter.js-strict:true": "test/language/expressions/call/spread-obj-manipulate-outter-obj-in-getter.js: SyntaxError: test/language/expressions/call/spread-obj-manipulate-outter-obj-in-getter.js: Unexpected token (50:3)\n  48 |   assert.sameValue(Object.keys(obj).length, 3);\n  49 |   callCount += 1;\n\u003e 50 | }({...cthulhu, ...o}));\n     |    ^\n  51 | \n  52 | assert.sameValue(callCount, 1);\n  53 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/call/spread-obj-mult-spread-getter.js-strict:true": "test/language/expressions/call/spread-obj-mult-spread-getter.js: SyntaxError: test/language/expressions/call/spread-obj-mult-spread-getter.js: Unexpected token (50:3)\n  48 |   assert.sameValue(Object.keys(obj).length, 3);\n  49 |   callCount += 1;\n\u003e 50 | }({...o, c: 4, d: 5, a: 42, ...o}));\n     |    ^\n  51 | \n  52 | assert.sameValue(callCount, 1);\n  53 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/call/spread-obj-mult-spread.js-strict:true": "test/language/expressions/call/spread-obj-mult-spread.js: SyntaxError: test/language/expressions/call/spread-obj-mult-spread.js: Unexpected token (48:3)\n  46 |   assert.sameValue(Object.keys(obj).length, 4);\n  47 |   callCount += 1;\n\u003e 48 | }({...o, ...o2}));\n     |    ^\n  49 | \n  50 | assert.sameValue(callCount, 1);\n  51 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/call/spread-obj-null.js-strict:true": "test/language/expressions/call/spread-obj-null.js: SyntaxError: test/language/expressions/call/spread-obj-null.js: Unexpected token (40:3)\n  38 |   assert.sameValue(Object.keys(obj).length, 0);\n  39 |   callCount += 1;\n\u003e 40 | }({...null}));\n     |    ^\n  41 | \n  42 | assert.sameValue(callCount, 1);\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/call/spread-obj-override-immutable.js-strict:true": "test/language/expressions/call/spread-obj-override-immutable.js: SyntaxError: test/language/expressions/call/spread-obj-override-immutable.js: Unexpected token (49:3)\n  47 |   });\n  48 |   callCount += 1;\n\u003e 49 | }({...o, a: 3}));\n     |    ^\n  50 | \n  51 | assert.sameValue(callCount, 1);\n  52 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/call/spread-obj-overrides-prev-properties.js-strict:true": "test/language/expressions/call/spread-obj-overrides-prev-properties.js: SyntaxError: test/language/expressions/call/spread-obj-overrides-prev-properties.js: Unexpected token (46:15)\n  44 |   assert.sameValue(o.b, 3);\n  45 |   callCount += 1;\n\u003e 46 | }({a: 1, b: 7, ...o}));\n     |                ^\n  47 | \n  48 | assert.sameValue(callCount, 1);\n  49 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/call/spread-obj-skip-non-enumerable.js-strict:true": "test/language/expressions/call/spread-obj-skip-non-enumerable.js: SyntaxError: test/language/expressions/call/spread-obj-skip-non-enumerable.js: Unexpected token (34:3)\n  32 |   assert.sameValue(Object.keys(obj).length, 0);\n  33 |   callCount += 1;\n\u003e 34 | }({...o}));\n     |    ^\n  35 | \n  36 | assert.sameValue(callCount, 1);\n  37 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/call/spread-obj-spread-order.js-strict:true": "test/language/expressions/call/spread-obj-spread-order.js: SyntaxError: test/language/expressions/call/spread-obj-spread-order.js: Unexpected token (47:3)\n  45 |   assert.sameValue(Object.keys(obj).length, 3);\n  46 |   callCount += 1;\n\u003e 47 | }({...o}));\n     |    ^\n  48 | \n  49 | assert.sameValue(callCount, 1);\n  50 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/call/spread-obj-symbol-property.js-strict:true": "test/language/expressions/call/spread-obj-symbol-property.js: SyntaxError: test/language/expressions/call/spread-obj-symbol-property.js: Unexpected token (48:3)\n  46 |   assert.sameValue(Object.keys(obj).length, 2);\n  47 |   callCount += 1;\n\u003e 48 | }({...o, c: 4, d: 5}));\n     |    ^\n  49 | \n  50 | assert.sameValue(callCount, 1);\n  51 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/call/spread-obj-undefined.js-strict:true": "test/language/expressions/call/spread-obj-undefined.js: SyntaxError: test/language/expressions/call/spread-obj-undefined.js: Unexpected token (40:3)\n  38 |   assert.sameValue(Object.keys(obj).length, 0);\n  39 |   callCount += 1;\n\u003e 40 | }({...undefined}));\n     |    ^\n  41 | \n  42 | assert.sameValue(callCount, 1);\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/call/spread-obj-with-overrides.js-strict:true": "test/language/expressions/call/spread-obj-with-overrides.js: SyntaxError: test/language/expressions/call/spread-obj-with-overrides.js: Unexpected token (52:3)\n  50 |   assert.sameValue(Object.keys(obj).length, 10);\n  51 |   callCount += 1;\n\u003e 52 | }({...o, a: 1, b: 7, d: 5, h: -0, i: Symbol(\"foo\"), j: o}));\n     |    ^\n  53 | \n  54 | assert.sameValue(callCount, 1);\n  55 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/call/spread-sngl-obj-ident.js-strict:true": "test/language/expressions/call/spread-sngl-obj-ident.js: SyntaxError: test/language/expressions/call/spread-sngl-obj-ident.js: Unexpected token (57:3)\n  55 |   });\n  56 |   callCount += 1;\n\u003e 57 | }({...o}));\n     |    ^\n  58 | \n  59 | assert.sameValue(callCount, 1);\n  60 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/async-gen-method-static/dflt-params-abrupt.js-strict:true": "test/language/expressions/class/async-gen-method-static/dflt-params-abrupt.js: SyntaxError: test/language/expressions/class/async-gen-method-static/dflt-params-abrupt.js: Unexpected token (58:15)\n  56 | var callCount = 0;\n  57 | var C = class {\n\u003e 58 |   static async *method(_ = (function() { throw new Test262Error(); }())) {\n     |                ^\n  59 |     \n  60 |     callCount = callCount + 1;\n  61 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/async-gen-method-static/dflt-params-ref-later.js-strict:true": "test/language/expressions/class/async-gen-method-static/dflt-params-ref-later.js: SyntaxError: test/language/expressions/class/async-gen-method-static/dflt-params-ref-later.js: Unexpected token (59:15)\n  57 | var callCount = 0;\n  58 | var C = class {\n\u003e 59 |   static async *method(x = y, y) {\n     |                ^\n  60 |     \n  61 |     callCount = callCount + 1;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/async-gen-method-static/dflt-params-ref-self.js-strict:true": "test/language/expressions/class/async-gen-method-static/dflt-params-ref-self.js: SyntaxError: test/language/expressions/class/async-gen-method-static/dflt-params-ref-self.js: Unexpected token (59:15)\n  57 | var callCount = 0;\n  58 | var C = class {\n\u003e 59 |   static async *method(x = x) {\n     |                ^\n  60 |     \n  61 |     callCount = callCount + 1;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/async-gen-method/dflt-params-abrupt.js-strict:true": "test/language/expressions/class/async-gen-method/dflt-params-abrupt.js: SyntaxError: test/language/expressions/class/async-gen-method/dflt-params-abrupt.js: Unexpected token (79:8)\n  77 | var callCount = 0;\n  78 | var C = class {\n\u003e 79 |   async *method(_ = (function() { throw new Test262Error(); }())) {\n     |         ^\n  80 |     \n  81 |     callCount = callCount + 1;\n  82 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/async-gen-method/dflt-params-ref-later.js-strict:true": "test/language/expressions/class/async-gen-method/dflt-params-ref-later.js: SyntaxError: test/language/expressions/class/async-gen-method/dflt-params-ref-later.js: Unexpected token (80:8)\n  78 | var callCount = 0;\n  79 | var C = class {\n\u003e 80 |   async *method(x = y, y) {\n     |         ^\n  81 |     \n  82 |     callCount = callCount + 1;\n  83 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/async-gen-method/dflt-params-ref-self.js-strict:true": "test/language/expressions/class/async-gen-method/dflt-params-ref-self.js: SyntaxError: test/language/expressions/class/async-gen-method/dflt-params-ref-self.js: Unexpected token (80:8)\n  78 | var callCount = 0;\n  79 | var C = class {\n\u003e 80 |   async *method(x = x) {\n     |         ^\n  81 |     \n  82 |     callCount = callCount + 1;\n  83 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/class-name-ident-await-escaped.js-strict:true": "test/language/expressions/class/class-name-ident-await-escaped.js: SyntaxError: test/language/expressions/class/class-name-ident-await-escaped.js: await is a reserved word (18:14)\n  16 | ---*/\n  17 | \n\u003e 18 | var C = class aw\\u0061it {};\n     |               ^\n  19 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/class-name-ident-await.js-strict:true": "test/language/expressions/class/class-name-ident-await.js: SyntaxError: test/language/expressions/class/class-name-ident-await.js: await is a reserved word (17:14)\n  15 | ---*/\n  16 | \n\u003e 17 | var C = class await {};\n     |               ^\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/constructor-this-tdz-during-initializers.js-strict:true": "test/language/expressions/class/constructor-this-tdz-during-initializers.js: SyntaxError: test/language/expressions/class/constructor-this-tdz-during-initializers.js: Unexpected token (31:8)\n  29 | \n  30 | var C = class extends Base {\n\u003e 31 |   field = (thisDuringField = this, thisFromProbe = probeCtorThis());\n     |         ^\n  32 |   constructor() {\n  33 |     probeCtorThis = () =\u003e this;\n  34 |     assert.throws(ReferenceError, probeCtorThis); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-arrow-function-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-arrow-function-expression.js: Test262Error: Expected SameValue(«undefined», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-assignment-expression-coalesce.js-strict:true": "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-assignment-expression-coalesce.js: SyntaxError: test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-assignment-expression-coalesce.js: Unexpected token (41:10)\n  39 | \n  40 | let C = class {\n\u003e 41 |   get [x ??= 1]() {\n     |           ^\n  42 |     return 2;\n  43 |   }\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-assignment-expression-logical-and.js-strict:true": "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-assignment-expression-logical-and.js: SyntaxError: test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-assignment-expression-logical-and.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class {\n\u003e 41 |   get [x \u0026\u0026= 1]() {\n     |            ^\n  42 |     return 2;\n  43 |   }\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-assignment-expression-logical-or.js-strict:true": "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-assignment-expression-logical-or.js: SyntaxError: test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-assignment-expression-logical-or.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class {\n\u003e 41 |   get [x ||= 1]() {\n     |            ^\n  42 |     return 2;\n  43 |   }\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-async-arrow-function-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-async-arrow-function-expression.js: test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-async-arrow-function-expression.js: Line 44:11 Unexpected token function (and 4 more errors)",
  "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-expression-coalesce.js-strict:true": "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-expression-coalesce.js: SyntaxError: test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-expression-coalesce.js: Unexpected token (41:10)\n  39 | \n  40 | let C = class {\n\u003e 41 |   get [x ?? 1]() {\n     |           ^\n  42 |     return 2;\n  43 |   }\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-function-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-function-expression.js: Test262Error: Expected SameValue(«undefined», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-generator-function-declaration.js-strict:true": "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-generator-function-declaration.js: test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-generator-function-declaration.js: Line 37:9 Unexpected token * (and 2 more errors)",
  "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-integer-separators.js-strict:true": "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-integer-separators.js: SyntaxError: test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-integer-separators.js: Identifier directly after number (40:8)\n  38 | \n  39 | let C = class {\n\u003e 40 |   get [1_2_3_4_5_6_7_8]() {\n     |         ^\n  41 |     return 1_2_3_4_5_6_7_8;\n  42 |   }\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-yield-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-yield-expression.js: test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-yield-expression.js: Line 37:9 Unexpected token * (and 37 more errors)",
  "test/language/expressions/class/cpn-class-expr-computed-property-name-from-arrow-function-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-computed-property-name-from-arrow-function-expression.js: TypeError: Object has no member 'function () {}' at test/language/expressions/class/cpn-class-expr-computed-property-name-from-arrow-function-expression.js:51:18(32)",
  "test/language/expressions/class/cpn-class-expr-computed-property-name-from-assignment-expression-coalesce.js-strict:true": "test/language/expressions/class/cpn-class-expr-computed-property-name-from-assignment-expression-coalesce.js: SyntaxError: test/language/expressions/class/cpn-class-expr-computed-property-name-from-assignment-expression-coalesce.js: Unexpected token (41:6)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x ??= 1]() {\n     |       ^\n  42 |     return 2;\n  43 |   }\n  44 |   static [x ??= 1]() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-computed-property-name-from-assignment-expression-logical-and.js-strict:true": "test/language/expressions/class/cpn-class-expr-computed-property-name-from-assignment-expression-logical-and.js: SyntaxError: test/language/expressions/class/cpn-class-expr-computed-property-name-from-assignment-expression-logical-and.js: Unexpected token (41:7)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x \u0026\u0026= 1]() {\n     |        ^\n  42 |     return 2;\n  43 |   }\n  44 |   static [x \u0026\u0026= 1]() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-computed-property-name-from-assignment-expression-logical-or.js-strict:true": "test/language/expressions/class/cpn-class-expr-computed-property-name-from-assignment-expression-logical-or.js: SyntaxError: test/language/expressions/class/cpn-class-expr-computed-property-name-from-assignment-expression-logical-or.js: Unexpected token (41:7)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x ||= 1]() {\n     |        ^\n  42 |     return 2;\n  43 |   }\n  44 |   static [x ||= 1]() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-computed-property-name-from-async-arrow-function-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-computed-property-name-from-async-arrow-function-expression.js: test/language/expressions/class/cpn-class-expr-computed-property-name-from-async-arrow-function-expression.js: Line 40:11 Unexpected token function (and 4 more errors)",
  "test/language/expressions/class/cpn-class-expr-computed-property-name-from-expression-coalesce.js-strict:true": "test/language/expressions/class/cpn-class-expr-computed-property-name-from-expression-coalesce.js: SyntaxError: test/language/expressions/class/cpn-class-expr-computed-property-name-from-expression-coalesce.js: Unexpected token (41:6)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x ?? 1]() {\n     |       ^\n  42 |     return 2;\n  43 |   }\n  44 |   static [x ?? 1]() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-computed-property-name-from-function-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-computed-property-name-from-function-expression.js: TypeError: Object has no member 'function () {}' at test/language/expressions/class/cpn-class-expr-computed-property-name-from-function-expression.js:51:18(32)",
  "test/language/expressions/class/cpn-class-expr-computed-property-name-from-generator-function-declaration.js-strict:true": "test/language/expressions/class/cpn-class-expr-computed-property-name-from-generator-function-declaration.js: test/language/expressions/class/cpn-class-expr-computed-property-name-from-generator-function-declaration.js: Line 37:9 Unexpected token * (and 2 more errors)",
  "test/language/expressions/class/cpn-class-expr-computed-property-name-from-integer-separators.js-strict:true": "test/language/expressions/class/cpn-class-expr-computed-property-name-from-integer-separators.js: SyntaxError: test/language/expressions/class/cpn-class-expr-computed-property-name-from-integer-separators.js: Identifier directly after number (40:4)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1_2_3_4_5_6_7_8]() {\n     |     ^\n  41 |     return 1_2_3_4_5_6_7_8;\n  42 |   }\n  43 |   static [1_2_3_4_5_6_7_8]() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-computed-property-name-from-yield-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-computed-property-name-from-yield-expression.js: test/language/expressions/class/cpn-class-expr-computed-property-name-from-yield-expression.js: Line 37:9 Unexpected token * (and 31 more errors)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-additive-expression-add.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-additive-expression-add.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-additive-expression-add.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1 + 1] = 2;\n     |           ^\n  41 | \n  42 |   static [1 + 1] = 2;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-additive-expression-subtract.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-additive-expression-subtract.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-additive-expression-subtract.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1 - 1] = 0;\n     |           ^\n  41 | \n  42 |   static [1 - 1] = 0;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-arrow-function-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-arrow-function-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-arrow-function-expression.js: Unexpected token (40:14)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [() =\u003e { }] = 1;\n     |               ^\n  41 | \n  42 |   static [() =\u003e { }] = 1;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-assignment-expression-assignment.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-assignment-expression-assignment.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-assignment-expression-assignment.js: Unexpected token (41:10)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x = 1] = 2;\n     |           ^\n  42 | \n  43 |   static [x = 1] = 2;\n  44 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-assignment-expression-bitwise-or.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-assignment-expression-bitwise-or.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-assignment-expression-bitwise-or.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x |= 1] = 2;\n     |            ^\n  42 | \n  43 |   static [x |= 1] = 2;\n  44 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-assignment-expression-coalesce.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-assignment-expression-coalesce.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-assignment-expression-coalesce.js: Unexpected token (41:6)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x ??= 1] = 2;\n     |       ^\n  42 | \n  43 |   static [x ??= 1] = 2;\n  44 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-assignment-expression-logical-and.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-assignment-expression-logical-and.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-assignment-expression-logical-and.js: Unexpected token (41:7)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x \u0026\u0026= 1] = 2;\n     |        ^\n  42 | \n  43 |   static [x \u0026\u0026= 1] = 2;\n  44 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-assignment-expression-logical-or.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-assignment-expression-logical-or.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-assignment-expression-logical-or.js: Unexpected token (41:7)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x ||= 1] = 2;\n     |        ^\n  42 | \n  43 |   static [x ||= 1] = 2;\n  44 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-async-arrow-function-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-async-arrow-function-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-async-arrow-function-expression.js: Unexpected token (40:19)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [async () =\u003e {}] = 1;\n     |                    ^\n  41 | \n  42 |   static [async () =\u003e {}] = 1;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-condition-expression-false.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-condition-expression-false.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-condition-expression-false.js: Unexpected token (40:18)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [false ? 1 : 2] = 1;\n     |                   ^\n  41 | \n  42 |   static [false ? 1 : 2] = 1;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-condition-expression-true.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-condition-expression-true.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-condition-expression-true.js: Unexpected token (40:17)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [true ? 1 : 2] = 2;\n     |                  ^\n  41 | \n  42 |   static [true ? 1 : 2] = 2;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-decimal-e-notational-literal.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-decimal-e-notational-literal.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-decimal-e-notational-literal.js: Unexpected token (40:9)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1.e1] = 2;\n     |          ^\n  41 | \n  42 |   static [1.e1] = 2;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-decimal-literal.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-decimal-literal.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-decimal-literal.js: Unexpected token (40:8)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1.1] = 2;\n     |         ^\n  41 | \n  42 |   static [1.1] = 2;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-exponetiation-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-exponetiation-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-exponetiation-expression.js: Unexpected token (40:11)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [2 ** 2] = 4;\n     |            ^\n  41 | \n  42 |   static [2 ** 2] = 4;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-expression-coalesce.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-expression-coalesce.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-expression-coalesce.js: Unexpected token (41:6)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x ?? 1] = 2;\n     |       ^\n  42 | \n  43 |   static [x ?? 1] = 2;\n  44 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-expression-logical-and.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-expression-logical-and.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-expression-logical-and.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x \u0026\u0026 1] = 2;\n     |            ^\n  42 | \n  43 |   static [x \u0026\u0026 1] = 2;\n  44 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-expression-logical-or.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-expression-logical-or.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-expression-logical-or.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x || 1] = 2;\n     |            ^\n  42 | \n  43 |   static [x || 1] = 2;\n  44 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-function-declaration.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-function-declaration.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-function-declaration.js: Unexpected token (41:8)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [f()] = 1;\n     |         ^\n  42 | \n  43 |   static [f()] = 1;\n  44 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-function-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-function-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-function-expression.js: Unexpected token (40:19)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [function () {}] = 1;\n     |                    ^\n  41 | \n  42 |   static [function () {}] = 1;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-generator-function-declaration.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-generator-function-declaration.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-generator-function-declaration.js: Unexpected token (41:8)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [g()] = 1;\n     |         ^\n  42 | \n  43 |   static [g()] = 1;\n  44 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-identifier.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-identifier.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-identifier.js: Unexpected token (42:6)\n  40 | \n  41 | let C = class {\n\u003e 42 |   [x] = '2';\n     |       ^\n  43 | \n  44 |   static [x] = '2';\n  45 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-integer-e-notational-literal.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-integer-e-notational-literal.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-integer-e-notational-literal.js: Unexpected token (40:6)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1] = 2;\n     |       ^\n  41 | \n  42 |   static [1] = 2;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-integer-separators.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-integer-separators.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-integer-separators.js: Identifier directly after number (40:4)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1_2_3_4_5_6_7_8] = 1_2_3_4_5_6_7_8;\n     |     ^\n  41 | \n  42 |   static [1_2_3_4_5_6_7_8] = 1_2_3_4_5_6_7_8;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-math.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-math.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-math.js: Unexpected token (40:27)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1 + 2 - 3 * 4 / 5 ** 6] = 2.999232;\n     |                            ^\n  41 | \n  42 |   static [1 + 2 - 3 * 4 / 5 ** 6] = 2.999232;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-multiplicative-expression-div.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-multiplicative-expression-div.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-multiplicative-expression-div.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1 / 1] = 1;\n     |           ^\n  41 | \n  42 |   static [1 / 1] = 1;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-multiplicative-expression-mult.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-multiplicative-expression-mult.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-multiplicative-expression-mult.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1 * 1] = 1;\n     |           ^\n  41 | \n  42 |   static [1 * 1] = 1;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-null.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-null.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-null.js: Unexpected token (40:9)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [null] = null;\n     |          ^\n  41 | \n  42 |   static [null] = null;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-numeric-literal.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-numeric-literal.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-numeric-literal.js: Unexpected token (40:6)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1] = 2;\n     |       ^\n  41 | \n  42 |   static [1] = 2;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-string-literal.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-string-literal.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-string-literal.js: Unexpected token (40:8)\n  38 | \n  39 | let C = class {\n\u003e 40 |   ['1'] = '2';\n     |         ^\n  41 | \n  42 |   static ['1'] = '2';\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-yield-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-yield-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-yield-expression.js: Unexpected token (41:12)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [yield 9] = 9;\n     |             ^\n  42 | \n  43 |   static [yield 9] = 9;\n  44 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-additive-expression-add.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-additive-expression-add.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-additive-expression-add.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1 + 1] = () =\u003e {\n     |           ^\n  41 |     return 2;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-additive-expression-subtract.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-additive-expression-subtract.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-additive-expression-subtract.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1 - 1] = () =\u003e {\n     |           ^\n  41 |     return 0;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-arrow-function-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-arrow-function-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-arrow-function-expression.js: Unexpected token (40:14)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [() =\u003e { }] = () =\u003e {\n     |               ^\n  41 |     return 1;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-assignment-expression-assignment.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-assignment-expression-assignment.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-assignment-expression-assignment.js: Unexpected token (41:10)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x = 1] = () =\u003e {\n     |           ^\n  42 |     return 2;\n  43 |   };\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-assignment-expression-bitwise-or.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-assignment-expression-bitwise-or.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-assignment-expression-bitwise-or.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x |= 1] = () =\u003e {\n     |            ^\n  42 |     return 2;\n  43 |   };\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-assignment-expression-coalesce.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-assignment-expression-coalesce.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-assignment-expression-coalesce.js: Unexpected token (41:6)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x ??= 1] = () =\u003e {\n     |       ^\n  42 |     return 2;\n  43 |   };\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-assignment-expression-logical-and.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-assignment-expression-logical-and.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-assignment-expression-logical-and.js: Unexpected token (41:7)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x \u0026\u0026= 1] = () =\u003e {\n     |        ^\n  42 |     return 2;\n  43 |   };\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-assignment-expression-logical-or.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-assignment-expression-logical-or.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-assignment-expression-logical-or.js: Unexpected token (41:7)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x ||= 1] = () =\u003e {\n     |        ^\n  42 |     return 2;\n  43 |   };\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-async-arrow-function-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-async-arrow-function-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-async-arrow-function-expression.js: Unexpected token (40:19)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [async () =\u003e {}] = () =\u003e {\n     |                    ^\n  41 |     return 1;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-condition-expression-false.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-condition-expression-false.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-condition-expression-false.js: Unexpected token (40:18)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [false ? 1 : 2] = () =\u003e {\n     |                   ^\n  41 |     return 1;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-condition-expression-true.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-condition-expression-true.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-condition-expression-true.js: Unexpected token (40:17)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [true ? 1 : 2] = () =\u003e {\n     |                  ^\n  41 |     return 2;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-decimal-e-notational-literal.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-decimal-e-notational-literal.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-decimal-e-notational-literal.js: Unexpected token (40:9)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1.e1] = () =\u003e {\n     |          ^\n  41 |     return 2;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-decimal-literal.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-decimal-literal.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-decimal-literal.js: Unexpected token (40:8)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1.1] = () =\u003e {\n     |         ^\n  41 |     return 2;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-exponetiation-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-exponetiation-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-exponetiation-expression.js: Unexpected token (40:11)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [2 ** 2] = () =\u003e {\n     |            ^\n  41 |     return 4;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-expression-coalesce.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-expression-coalesce.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-expression-coalesce.js: Unexpected token (41:6)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x ?? 1] = () =\u003e {\n     |       ^\n  42 |     return 2;\n  43 |   };\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-expression-logical-and.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-expression-logical-and.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-expression-logical-and.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x \u0026\u0026 1] = () =\u003e {\n     |            ^\n  42 |     return 2;\n  43 |   };\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-expression-logical-or.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-expression-logical-or.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-expression-logical-or.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x || 1] = () =\u003e {\n     |            ^\n  42 |     return 2;\n  43 |   };\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-function-declaration.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-function-declaration.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-function-declaration.js: Unexpected token (41:8)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [f()] = () =\u003e {\n     |         ^\n  42 |     return 1;\n  43 |   };\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-function-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-function-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-function-expression.js: Unexpected token (40:19)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [function () {}] = () =\u003e {\n     |                    ^\n  41 |     return 1;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-generator-function-declaration.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-generator-function-declaration.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-generator-function-declaration.js: Unexpected token (41:8)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [g()] = () =\u003e {\n     |         ^\n  42 |     return 1;\n  43 |   };\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-identifier.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-identifier.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-identifier.js: Unexpected token (42:6)\n  40 | \n  41 | let C = class {\n\u003e 42 |   [x] = () =\u003e {\n     |       ^\n  43 |     return '2';\n  44 |   };\n  45 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-integer-e-notational-literal.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-integer-e-notational-literal.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-integer-e-notational-literal.js: Unexpected token (40:6)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1] = () =\u003e {\n     |       ^\n  41 |     return 2;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-integer-separators.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-integer-separators.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-integer-separators.js: Identifier directly after number (40:4)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1_2_3_4_5_6_7_8] = () =\u003e {\n     |     ^\n  41 |     return 1_2_3_4_5_6_7_8;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-math.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-math.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-math.js: Unexpected token (40:27)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1 + 2 - 3 * 4 / 5 ** 6] = () =\u003e {\n     |                            ^\n  41 |     return 2.999232;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-multiplicative-expression-div.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-multiplicative-expression-div.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-multiplicative-expression-div.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1 / 1] = () =\u003e {\n     |           ^\n  41 |     return 1;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-multiplicative-expression-mult.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-multiplicative-expression-mult.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-multiplicative-expression-mult.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1 * 1] = () =\u003e {\n     |           ^\n  41 |     return 1;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-null.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-null.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-null.js: Unexpected token (40:9)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [null] = () =\u003e {\n     |          ^\n  41 |     return null;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-numeric-literal.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-numeric-literal.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-numeric-literal.js: Unexpected token (40:6)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1] = () =\u003e {\n     |       ^\n  41 |     return 2;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-string-literal.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-string-literal.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-string-literal.js: Unexpected token (40:8)\n  38 | \n  39 | let C = class {\n\u003e 40 |   ['1'] = () =\u003e {\n     |         ^\n  41 |     return '2';\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-yield-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-yield-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-yield-expression.js: Unexpected token (41:12)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [yield 9] = () =\u003e {\n     |             ^\n  42 |     return 9;\n  43 |   };\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-ary-init-iter-get-err-array-prototype.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-ary-init-iter-get-err-array-prototype.js: Unexpected token (64:8)\n  62 | \n  63 | var C = class {\n\u003e 64 |   async *method([x, y, z]) {\n     |         ^\n  65 |     \n  66 |   }\n  67 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-ary-init-iter-get-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-ary-init-iter-get-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-ary-init-iter-get-err.js: Unexpected token (58:8)\n  56 | \n  57 | var C = class {\n\u003e 58 |   async *method([x]) {\n     |         ^\n  59 |     \n  60 |   }\n  61 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-elem-ary-val-null.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-elem-ary-val-null.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-elem-ary-val-null.js: Unexpected token (65:8)\n  63 | \n  64 | var C = class {\n\u003e 65 |   async *method([[x]]) {\n     |         ^\n  66 |     \n  67 |   }\n  68 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-elem-id-init-throws.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-elem-id-init-throws.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-elem-id-init-throws.js: Unexpected token (56:8)\n  54 | \n  55 | var C = class {\n\u003e 56 |   async *method([x = (function() { throw new Test262Error(); })()]) {\n     |         ^\n  57 |     \n  58 |   }\n  59 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-elem-id-init-unresolvable.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-elem-id-init-unresolvable.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-elem-id-init-unresolvable.js: Unexpected token (63:8)\n  61 | \n  62 | var C = class {\n\u003e 63 |   async *method([ x = unresolvableReference ]) {\n     |         ^\n  64 |     \n  65 |   }\n  66 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-elem-id-iter-step-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-elem-id-iter-step-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-elem-id-iter-step-err.js: Unexpected token (65:8)\n  63 | \n  64 | var C = class {\n\u003e 65 |   async *method([x]) {\n     |         ^\n  66 |     \n  67 |   }\n  68 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-elem-id-iter-val-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-elem-id-iter-val-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-elem-id-iter-val-err.js: Unexpected token (76:8)\n  74 | \n  75 | var C = class {\n\u003e 76 |   async *method([x]) {\n     |         ^\n  77 |     \n  78 |   }\n  79 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-elem-obj-val-null.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-elem-obj-val-null.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-elem-obj-val-null.js: Unexpected token (65:8)\n  63 | \n  64 | var C = class {\n\u003e 65 |   async *method([{ x }]) {\n     |         ^\n  66 |     \n  67 |   }\n  68 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-elem-obj-val-undef.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-elem-obj-val-undef.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-elem-obj-val-undef.js: Unexpected token (65:8)\n  63 | \n  64 | var C = class {\n\u003e 65 |   async *method([{ x }]) {\n     |         ^\n  66 |     \n  67 |   }\n  68 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-rest-id-iter-val-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-rest-id-iter-val-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-rest-id-iter-val-err.js: Unexpected token (71:8)\n  69 | \n  70 | var C = class {\n\u003e 71 |   async *method([...x]) {\n     |         ^\n  72 |     \n  73 |   }\n  74 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-dflt-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-dflt-ary-init-iter-get-err-array-prototype.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-dflt-ary-init-iter-get-err-array-prototype.js: Unexpected token (64:8)\n  62 | \n  63 | var C = class {\n\u003e 64 |   async *method([x, y, z] = [1, 2, 3]) {\n     |         ^\n  65 |     \n  66 |   }\n  67 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-dflt-ary-init-iter-get-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-dflt-ary-init-iter-get-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-dflt-ary-init-iter-get-err.js: Unexpected token (58:8)\n  56 | \n  57 | var C = class {\n\u003e 58 |   async *method([x] = iter) {\n     |         ^\n  59 |     \n  60 |   }\n  61 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-ary-val-null.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-ary-val-null.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-ary-val-null.js: Unexpected token (65:8)\n  63 | \n  64 | var C = class {\n\u003e 65 |   async *method([[x]] = [null]) {\n     |         ^\n  66 |     \n  67 |   }\n  68 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-id-init-throws.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-id-init-throws.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-id-init-throws.js: Unexpected token (56:8)\n  54 | \n  55 | var C = class {\n\u003e 56 |   async *method([x = (function() { throw new Test262Error(); })()] = [undefined]) {\n     |         ^\n  57 |     \n  58 |   }\n  59 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-id-init-unresolvable.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-id-init-unresolvable.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-id-init-unresolvable.js: Unexpected token (63:8)\n  61 | \n  62 | var C = class {\n\u003e 63 |   async *method([ x = unresolvableReference ] = []) {\n     |         ^\n  64 |     \n  65 |   }\n  66 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-id-iter-step-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-id-iter-step-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-id-iter-step-err.js: Unexpected token (65:8)\n  63 | \n  64 | var C = class {\n\u003e 65 |   async *method([x] = g) {\n     |         ^\n  66 |     \n  67 |   }\n  68 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-id-iter-val-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-id-iter-val-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-id-iter-val-err.js: Unexpected token (76:8)\n  74 | \n  75 | var C = class {\n\u003e 76 |   async *method([x] = g) {\n     |         ^\n  77 |     \n  78 |   }\n  79 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-obj-val-null.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-obj-val-null.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-obj-val-null.js: Unexpected token (65:8)\n  63 | \n  64 | var C = class {\n\u003e 65 |   async *method([{ x }] = [null]) {\n     |         ^\n  66 |     \n  67 |   }\n  68 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-obj-val-undef.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-obj-val-undef.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-obj-val-undef.js: Unexpected token (65:8)\n  63 | \n  64 | var C = class {\n\u003e 65 |   async *method([{ x }] = []) {\n     |         ^\n  66 |     \n  67 |   }\n  68 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-rest-id-iter-val-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-rest-id-iter-val-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-rest-id-iter-val-err.js: Unexpected token (71:8)\n  69 | \n  70 | var C = class {\n\u003e 71 |   async *method([...x] = iter) {\n     |         ^\n  72 |     \n  73 |   }\n  74 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-init-null.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-init-null.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-dflt-obj-init-null.js: Unexpected token (52:8)\n  50 | \n  51 | var C = class {\n\u003e 52 |   async *method({} = null) {\n     |         ^\n  53 |     \n  54 |   }\n  55 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-init-undefined.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-init-undefined.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-dflt-obj-init-undefined.js: Unexpected token (52:8)\n  50 | \n  51 | var C = class {\n\u003e 52 |   async *method({} = undefined) {\n     |         ^\n  53 |     \n  54 |   }\n  55 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-id-get-value-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-id-get-value-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-id-get-value-err.js: Unexpected token (59:8)\n  57 | \n  58 | var C = class {\n\u003e 59 |   async *method({ poisoned } = poisonedProperty) {\n     |         ^\n  60 |     \n  61 |   }\n  62 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-id-init-throws.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-id-init-throws.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-id-init-throws.js: Unexpected token (59:8)\n  57 | \n  58 | var C = class {\n\u003e 59 |   async *method({ x = thrower() } = {}) {\n     |         ^\n  60 |     \n  61 |   }\n  62 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-id-init-unresolvable.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-id-init-unresolvable.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-id-init-unresolvable.js: Unexpected token (63:8)\n  61 | \n  62 | var C = class {\n\u003e 63 |   async *method({ x = unresolvableReference } = {}) {\n     |         ^\n  64 |     \n  65 |   }\n  66 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-list-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-list-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-list-err.js: Unexpected token (58:8)\n  56 | \n  57 | var C = class {\n\u003e 58 |   async *method({ a, b = thrower(), c = ++initCount } = {}) {\n     |         ^\n  59 |     \n  60 |   }\n  61 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-ary-value-null.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-ary-value-null.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-ary-value-null.js: Unexpected token (54:8)\n  52 | \n  53 | var C = class {\n\u003e 54 |   async *method({ w: [x, y, z] = [4, 5, 6] } = { w: null }) {\n     |         ^\n  55 |     \n  56 |   }\n  57 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-eval-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-eval-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-eval-err.js: Unexpected token (56:8)\n  54 | \n  55 | var C = class {\n\u003e 56 |   async *method({ [thrower()]: x } = {}) {\n     |         ^\n  57 |     \n  58 |   }\n  59 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-id-get-value-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-id-get-value-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-id-get-value-err.js: Unexpected token (59:8)\n  57 | \n  58 | var C = class {\n\u003e 59 |   async *method({ poisoned: x = ++initEvalCount } = poisonedProperty) {\n     |         ^\n  60 |     \n  61 |   }\n  62 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-id-init-throws.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-id-init-throws.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-id-init-throws.js: Unexpected token (59:8)\n  57 | \n  58 | var C = class {\n\u003e 59 |   async *method({ x: y = thrower() } = {}) {\n     |         ^\n  60 |     \n  61 |   }\n  62 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-id-init-unresolvable.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-id-init-unresolvable.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-id-init-unresolvable.js: Unexpected token (63:8)\n  61 | \n  62 | var C = class {\n\u003e 63 |   async *method({ x: y = unresolvableReference } = {}) {\n     |         ^\n  64 |     \n  65 |   }\n  66 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-obj-value-null.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-obj-value-null.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-obj-value-null.js: Unexpected token (54:8)\n  52 | \n  53 | var C = class {\n\u003e 54 |   async *method({ w: { x, y, z } = { x: 4, y: 5, z: 6 } } = { w: null }) {\n     |         ^\n  55 |     \n  56 |   }\n  57 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-obj-value-undef.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-obj-value-undef.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-obj-value-undef.js: Unexpected token (54:8)\n  52 | \n  53 | var C = class {\n\u003e 54 |   async *method({ w: { x, y, z } = undefined } = { }) {\n     |         ^\n  55 |     \n  56 |   }\n  57 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-obj-init-null.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-obj-init-null.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-obj-init-null.js: Unexpected token (52:8)\n  50 | \n  51 | var C = class {\n\u003e 52 |   async *method({}) {\n     |         ^\n  53 |     \n  54 |   }\n  55 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-obj-init-undefined.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-obj-init-undefined.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-obj-init-undefined.js: Unexpected token (52:8)\n  50 | \n  51 | var C = class {\n\u003e 52 |   async *method({}) {\n     |         ^\n  53 |     \n  54 |   }\n  55 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-id-get-value-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-id-get-value-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-id-get-value-err.js: Unexpected token (59:8)\n  57 | \n  58 | var C = class {\n\u003e 59 |   async *method({ poisoned }) {\n     |         ^\n  60 |     \n  61 |   }\n  62 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-id-init-throws.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-id-init-throws.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-id-init-throws.js: Unexpected token (59:8)\n  57 | \n  58 | var C = class {\n\u003e 59 |   async *method({ x = thrower() }) {\n     |         ^\n  60 |     \n  61 |   }\n  62 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-id-init-unresolvable.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-id-init-unresolvable.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-id-init-unresolvable.js: Unexpected token (63:8)\n  61 | \n  62 | var C = class {\n\u003e 63 |   async *method({ x = unresolvableReference }) {\n     |         ^\n  64 |     \n  65 |   }\n  66 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-list-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-list-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-list-err.js: Unexpected token (58:8)\n  56 | \n  57 | var C = class {\n\u003e 58 |   async *method({ a, b = thrower(), c = ++initCount }) {\n     |         ^\n  59 |     \n  60 |   }\n  61 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-prop-ary-value-null.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-prop-ary-value-null.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-prop-ary-value-null.js: Unexpected token (54:8)\n  52 | \n  53 | var C = class {\n\u003e 54 |   async *method({ w: [x, y, z] = [4, 5, 6] }) {\n     |         ^\n  55 |     \n  56 |   }\n  57 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-prop-eval-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-prop-eval-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-prop-eval-err.js: Unexpected token (56:8)\n  54 | \n  55 | var C = class {\n\u003e 56 |   async *method({ [thrower()]: x }) {\n     |         ^\n  57 |     \n  58 |   }\n  59 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-prop-id-get-value-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-prop-id-get-value-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-prop-id-get-value-err.js: Unexpected token (59:8)\n  57 | \n  58 | var C = class {\n\u003e 59 |   async *method({ poisoned: x = ++initEvalCount }) {\n     |         ^\n  60 |     \n  61 |   }\n  62 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-prop-id-init-throws.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-prop-id-init-throws.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-prop-id-init-throws.js: Unexpected token (59:8)\n  57 | \n  58 | var C = class {\n\u003e 59 |   async *method({ x: y = thrower() }) {\n     |         ^\n  60 |     \n  61 |   }\n  62 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-prop-id-init-unresolvable.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-prop-id-init-unresolvable.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-prop-id-init-unresolvable.js: Unexpected token (63:8)\n  61 | \n  62 | var C = class {\n\u003e 63 |   async *method({ x: y = unresolvableReference }) {\n     |         ^\n  64 |     \n  65 |   }\n  66 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-prop-obj-value-null.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-prop-obj-value-null.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-prop-obj-value-null.js: Unexpected token (54:8)\n  52 | \n  53 | var C = class {\n\u003e 54 |   async *method({ w: { x, y, z } = { x: 4, y: 5, z: 6 } }) {\n     |         ^\n  55 |     \n  56 |   }\n  57 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-prop-obj-value-undef.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-prop-obj-value-undef.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-obj-ptrn-prop-obj-value-undef.js: Unexpected token (54:8)\n  52 | \n  53 | var C = class {\n\u003e 54 |   async *method({ w: { x, y, z } = undefined }) {\n     |         ^\n  55 |     \n  56 |   }\n  57 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-ary-init-iter-get-err-array-prototype.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-ary-init-iter-get-err-array-prototype.js: Unexpected token (64:15)\n  62 | \n  63 | var C = class {\n\u003e 64 |   static async *method([x, y, z]) {\n     |                ^\n  65 |     \n  66 |   }\n  67 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-ary-init-iter-get-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-ary-init-iter-get-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-ary-init-iter-get-err.js: Unexpected token (58:15)\n  56 | \n  57 | var C = class {\n\u003e 58 |   static async *method([x]) {\n     |                ^\n  59 |     \n  60 |   }\n  61 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-elem-ary-val-null.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-elem-ary-val-null.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-elem-ary-val-null.js: Unexpected token (65:15)\n  63 | \n  64 | var C = class {\n\u003e 65 |   static async *method([[x]]) {\n     |                ^\n  66 |     \n  67 |   }\n  68 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-elem-id-init-throws.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-elem-id-init-throws.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-elem-id-init-throws.js: Unexpected token (56:15)\n  54 | \n  55 | var C = class {\n\u003e 56 |   static async *method([x = (function() { throw new Test262Error(); })()]) {\n     |                ^\n  57 |     \n  58 |   }\n  59 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-elem-id-init-unresolvable.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-elem-id-init-unresolvable.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-elem-id-init-unresolvable.js: Unexpected token (63:15)\n  61 | \n  62 | var C = class {\n\u003e 63 |   static async *method([ x = unresolvableReference ]) {\n     |                ^\n  64 |     \n  65 |   }\n  66 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-elem-id-iter-step-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-elem-id-iter-step-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-elem-id-iter-step-err.js: Unexpected token (65:15)\n  63 | \n  64 | var C = class {\n\u003e 65 |   static async *method([x]) {\n     |                ^\n  66 |     \n  67 |   }\n  68 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-elem-id-iter-val-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-elem-id-iter-val-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-elem-id-iter-val-err.js: Unexpected token (76:15)\n  74 | \n  75 | var C = class {\n\u003e 76 |   static async *method([x]) {\n     |                ^\n  77 |     \n  78 |   }\n  79 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-elem-obj-val-null.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-elem-obj-val-null.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-elem-obj-val-null.js: Unexpected token (65:15)\n  63 | \n  64 | var C = class {\n\u003e 65 |   static async *method([{ x }]) {\n     |                ^\n  66 |     \n  67 |   }\n  68 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-elem-obj-val-undef.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-elem-obj-val-undef.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-elem-obj-val-undef.js: Unexpected token (65:15)\n  63 | \n  64 | var C = class {\n\u003e 65 |   static async *method([{ x }]) {\n     |                ^\n  66 |     \n  67 |   }\n  68 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-rest-id-iter-val-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-rest-id-iter-val-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-rest-id-iter-val-err.js: Unexpected token (71:15)\n  69 | \n  70 | var C = class {\n\u003e 71 |   static async *method([...x]) {\n     |                ^\n  72 |     \n  73 |   }\n  74 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-init-iter-get-err-array-prototype.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-init-iter-get-err-array-prototype.js: Unexpected token (64:15)\n  62 | \n  63 | var C = class {\n\u003e 64 |   static async *method([x, y, z] = [1, 2, 3]) {\n     |                ^\n  65 |     \n  66 |   }\n  67 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-init-iter-get-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-init-iter-get-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-init-iter-get-err.js: Unexpected token (58:15)\n  56 | \n  57 | var C = class {\n\u003e 58 |   static async *method([x] = iter) {\n     |                ^\n  59 |     \n  60 |   }\n  61 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-ary-val-null.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-ary-val-null.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-ary-val-null.js: Unexpected token (65:15)\n  63 | \n  64 | var C = class {\n\u003e 65 |   static async *method([[x]] = [null]) {\n     |                ^\n  66 |     \n  67 |   }\n  68 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-id-init-throws.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-id-init-throws.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-id-init-throws.js: Unexpected token (56:15)\n  54 | \n  55 | var C = class {\n\u003e 56 |   static async *method([x = (function() { throw new Test262Error(); })()] = [undefined]) {\n     |                ^\n  57 |     \n  58 |   }\n  59 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-id-init-unresolvable.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-id-init-unresolvable.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-id-init-unresolvable.js: Unexpected token (63:15)\n  61 | \n  62 | var C = class {\n\u003e 63 |   static async *method([ x = unresolvableReference ] = []) {\n     |                ^\n  64 |     \n  65 |   }\n  66 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-id-iter-step-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-id-iter-step-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-id-iter-step-err.js: Unexpected token (65:15)\n  63 | \n  64 | var C = class {\n\u003e 65 |   static async *method([x] = g) {\n     |                ^\n  66 |     \n  67 |   }\n  68 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-id-iter-val-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-id-iter-val-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-id-iter-val-err.js: Unexpected token (76:15)\n  74 | \n  75 | var C = class {\n\u003e 76 |   static async *method([x] = g) {\n     |                ^\n  77 |     \n  78 |   }\n  79 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-obj-val-null.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-obj-val-null.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-obj-val-null.js: Unexpected token (65:15)\n  63 | \n  64 | var C = class {\n\u003e 65 |   static async *method([{ x }] = [null]) {\n     |                ^\n  66 |     \n  67 |   }\n  68 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-obj-val-undef.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-obj-val-undef.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-obj-val-undef.js: Unexpected token (65:15)\n  63 | \n  64 | var C = class {\n\u003e 65 |   static async *method([{ x }] = []) {\n     |                ^\n  66 |     \n  67 |   }\n  68 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-rest-id-iter-val-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-rest-id-iter-val-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-rest-id-iter-val-err.js: Unexpected token (71:15)\n  69 | \n  70 | var C = class {\n\u003e 71 |   static async *method([...x] = iter) {\n     |                ^\n  72 |     \n  73 |   }\n  74 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-init-null.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-init-null.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-init-null.js: Unexpected token (52:15)\n  50 | \n  51 | var C = class {\n\u003e 52 |   static async *method({} = null) {\n     |                ^\n  53 |     \n  54 |   }\n  55 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-init-undefined.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-init-undefined.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-init-undefined.js: Unexpected token (52:15)\n  50 | \n  51 | var C = class {\n\u003e 52 |   static async *method({} = undefined) {\n     |                ^\n  53 |     \n  54 |   }\n  55 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-id-get-value-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-id-get-value-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-id-get-value-err.js: Unexpected token (59:15)\n  57 | \n  58 | var C = class {\n\u003e 59 |   static async *method({ poisoned } = poisonedProperty) {\n     |                ^\n  60 |     \n  61 |   }\n  62 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-id-init-throws.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-id-init-throws.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-id-init-throws.js: Unexpected token (59:15)\n  57 | \n  58 | var C = class {\n\u003e 59 |   static async *method({ x = thrower() } = {}) {\n     |                ^\n  60 |     \n  61 |   }\n  62 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-id-init-unresolvable.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-id-init-unresolvable.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-id-init-unresolvable.js: Unexpected token (63:15)\n  61 | \n  62 | var C = class {\n\u003e 63 |   static async *method({ x = unresolvableReference } = {}) {\n     |                ^\n  64 |     \n  65 |   }\n  66 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-list-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-list-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-list-err.js: Unexpected token (58:15)\n  56 | \n  57 | var C = class {\n\u003e 58 |   static async *method({ a, b = thrower(), c = ++initCount } = {}) {\n     |                ^\n  59 |     \n  60 |   }\n  61 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-ary-value-null.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-ary-value-null.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-ary-value-null.js: Unexpected token (54:15)\n  52 | \n  53 | var C = class {\n\u003e 54 |   static async *method({ w: [x, y, z] = [4, 5, 6] } = { w: null }) {\n     |                ^\n  55 |     \n  56 |   }\n  57 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-eval-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-eval-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-eval-err.js: Unexpected token (56:15)\n  54 | \n  55 | var C = class {\n\u003e 56 |   static async *method({ [thrower()]: x } = {}) {\n     |                ^\n  57 |     \n  58 |   }\n  59 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-id-get-value-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-id-get-value-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-id-get-value-err.js: Unexpected token (59:15)\n  57 | \n  58 | var C = class {\n\u003e 59 |   static async *method({ poisoned: x = ++initEvalCount } = poisonedProperty) {\n     |                ^\n  60 |     \n  61 |   }\n  62 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-id-init-throws.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-id-init-throws.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-id-init-throws.js: Unexpected token (59:15)\n  57 | \n  58 | var C = class {\n\u003e 59 |   static async *method({ x: y = thrower() } = {}) {\n     |                ^\n  60 |     \n  61 |   }\n  62 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-id-init-unresolvable.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-id-init-unresolvable.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-id-init-unresolvable.js: Unexpected token (63:15)\n  61 | \n  62 | var C = class {\n\u003e 63 |   static async *method({ x: y = unresolvableReference } = {}) {\n     |                ^\n  64 |     \n  65 |   }\n  66 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-obj-value-null.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-obj-value-null.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-obj-value-null.js: Unexpected token (54:15)\n  52 | \n  53 | var C = class {\n\u003e 54 |   static async *method({ w: { x, y, z } = { x: 4, y: 5, z: 6 } } = { w: null }) {\n     |                ^\n  55 |     \n  56 |   }\n  57 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-obj-value-undef.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-obj-value-undef.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-obj-value-undef.js: Unexpected token (54:15)\n  52 | \n  53 | var C = class {\n\u003e 54 |   static async *method({ w: { x, y, z } = undefined } = { }) {\n     |                ^\n  55 |     \n  56 |   }\n  57 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-obj-init-null.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-obj-init-null.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-obj-init-null.js: Unexpected token (52:15)\n  50 | \n  51 | var C = class {\n\u003e 52 |   static async *method({}) {\n     |                ^\n  53 |     \n  54 |   }\n  55 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-obj-init-undefined.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-obj-init-undefined.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-obj-init-undefined.js: Unexpected token (52:15)\n  50 | \n  51 | var C = class {\n\u003e 52 |   static async *method({}) {\n     |                ^\n  53 |     \n  54 |   }\n  55 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-id-get-value-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-id-get-value-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-id-get-value-err.js: Unexpected token (59:15)\n  57 | \n  58 | var C = class {\n\u003e 59 |   static async *method({ poisoned }) {\n     |                ^\n  60 |     \n  61 |   }\n  62 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-id-init-throws.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-id-init-throws.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-id-init-throws.js: Unexpected token (59:15)\n  57 | \n  58 | var C = class {\n\u003e 59 |   static async *method({ x = thrower() }) {\n     |                ^\n  60 |     \n  61 |   }\n  62 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-id-init-unresolvable.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-id-init-unresolvable.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-id-init-unresolvable.js: Unexpected token (63:15)\n  61 | \n  62 | var C = class {\n\u003e 63 |   static async *method({ x = unresolvableReference }) {\n     |                ^\n  64 |     \n  65 |   }\n  66 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-list-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-list-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-list-err.js: Unexpected token (58:15)\n  56 | \n  57 | var C = class {\n\u003e 58 |   static async *method({ a, b = thrower(), c = ++initCount }) {\n     |                ^\n  59 |     \n  60 |   }\n  61 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-prop-ary-value-null.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-prop-ary-value-null.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-prop-ary-value-null.js: Unexpected token (54:15)\n  52 | \n  53 | var C = class {\n\u003e 54 |   static async *method({ w: [x, y, z] = [4, 5, 6] }) {\n     |                ^\n  55 |     \n  56 |   }\n  57 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-prop-eval-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-prop-eval-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-prop-eval-err.js: Unexpected token (56:15)\n  54 | \n  55 | var C = class {\n\u003e 56 |   static async *method({ [thrower()]: x }) {\n     |                ^\n  57 |     \n  58 |   }\n  59 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-prop-id-get-value-err.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-prop-id-get-value-err.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-prop-id-get-value-err.js: Unexpected token (59:15)\n  57 | \n  58 | var C = class {\n\u003e 59 |   static async *method({ poisoned: x = ++initEvalCount }) {\n     |                ^\n  60 |     \n  61 |   }\n  62 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-prop-id-init-throws.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-prop-id-init-throws.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-prop-id-init-throws.js: Unexpected token (59:15)\n  57 | \n  58 | var C = class {\n\u003e 59 |   static async *method({ x: y = thrower() }) {\n     |                ^\n  60 |     \n  61 |   }\n  62 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-prop-id-init-unresolvable.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-prop-id-init-unresolvable.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-prop-id-init-unresolvable.js: Unexpected token (63:15)\n  61 | \n  62 | var C = class {\n\u003e 63 |   static async *method({ x: y = unresolvableReference }) {\n     |                ^\n  64 |     \n  65 |   }\n  66 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-prop-obj-value-null.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-prop-obj-value-null.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-prop-obj-value-null.js: Unexpected token (54:15)\n  52 | \n  53 | var C = class {\n\u003e 54 |   static async *method({ w: { x, y, z } = { x: 4, y: 5, z: 6 } }) {\n     |                ^\n  55 |     \n  56 |   }\n  57 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-prop-obj-value-undef.js-strict:true": "test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-prop-obj-value-undef.js: SyntaxError: test/language/expressions/class/dstr/async-gen-meth-static-obj-ptrn-prop-obj-value-undef.js: Unexpected token (54:15)\n  52 | \n  53 | var C = class {\n\u003e 54 |   static async *method({ w: { x, y, z } = undefined }) {\n     |                ^\n  55 |     \n  56 |   }\n  57 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/expressions/class/dstr/meth-ary-init-iter-get-err-array-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/class/dstr/meth-ary-ptrn-elem-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/meth-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/expressions/class/dstr/meth-ary-ptrn-elem-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/expressions/class/dstr/meth-ary-ptrn-elem-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/expressions/class/dstr/meth-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/expressions/class/dstr/meth-ary-ptrn-rest-ary-elem.js: Unexpected token (97:13)\n   95 | var callCount = 0;\n   96 | var C = class {\n\u003e  97 |   method([...[x, y, z]]) {\n      |              ^\n   98 |     assert.sameValue(x, 3);\n   99 |     assert.sameValue(y, 4);\n  100 |     assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/expressions/class/dstr/meth-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/expressions/class/dstr/meth-ary-ptrn-rest-ary-rest.js: Unexpected token (78:13)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   method([...[...x]]) {\n     |              ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.sameValue(x.length, 3);\n  81 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-ary-ptrn-rest-obj-id.js-strict:true": "test/language/expressions/class/dstr/meth-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/expressions/class/dstr/meth-ary-ptrn-rest-obj-id.js: Unexpected token (77:13)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   method([...{ length }]) {\n     |              ^\n  78 |     assert.sameValue(length, 3);\n  79 |     callCount = callCount + 1;\n  80 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/expressions/class/dstr/meth-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/expressions/class/dstr/meth-ary-ptrn-rest-obj-prop-id.js: Unexpected token (78:13)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   method([...{ 0: v, 1: w, 2: x, 3: y, length: z }]) {\n     |              ^\n  79 |     assert.sameValue(v, 7);\n  80 |     assert.sameValue(w, 8);\n  81 |     assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-dflt-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-ary-init-iter-get-err-array-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-ary-elem.js: Unexpected token (97:13)\n   95 | var callCount = 0;\n   96 | var C = class {\n\u003e  97 |   method([...[x, y, z]] = [3, 4, 5]) {\n      |              ^\n   98 |     assert.sameValue(x, 3);\n   99 |     assert.sameValue(y, 4);\n  100 |     assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-ary-rest.js: Unexpected token (78:13)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   method([...[...x]] = values) {\n     |              ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.sameValue(x.length, 3);\n  81 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-obj-id.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-obj-id.js: Unexpected token (77:13)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   method([...{ length }] = [1, 2, 3]) {\n     |              ^\n  78 |     assert.sameValue(length, 3);\n  79 |     callCount = callCount + 1;\n  80 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-obj-prop-id.js: Unexpected token (78:13)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   method([...{ 0: v, 1: w, 2: x, 3: y, length: z }] = [7, 8, 9]) {\n     |              ^\n  79 |     assert.sameValue(v, 7);\n  80 |     assert.sameValue(w, 8);\n  81 |     assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-dflt-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-obj-ptrn-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-dflt-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-dflt-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-obj-ptrn-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-dflt-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-obj-ptrn-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-dflt-obj-ptrn-rest-getter.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-obj-ptrn-rest-getter.js: SyntaxError: test/language/expressions/class/dstr/meth-dflt-obj-ptrn-rest-getter.js: Unexpected token (66:10)\n  64 | var callCount = 0;\n  65 | var C = class {\n\u003e 66 |   method({...x} = { get v() { count++; return 2; } }) {\n     |           ^\n  67 |     assert.sameValue(count, 1);\n  68 | \n  69 |     verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-dflt-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/class/dstr/meth-dflt-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (67:10)\n  65 | var callCount = 0;\n  66 | var C = class {\n\u003e 67 |   method({...rest} = o) {\n     |           ^\n  68 |     assert.sameValue(rest.x, undefined);\n  69 | \n  70 |     verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-dflt-obj-ptrn-rest-val-obj.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/expressions/class/dstr/meth-dflt-obj-ptrn-rest-val-obj.js: Unexpected token (65:16)\n  63 | var callCount = 0;\n  64 | var C = class {\n\u003e 65 |   method({a, b, ...rest} = {x: 1, y: 2, a: 5, b: 3}) {\n     |                 ^\n  66 |     assert.sameValue(rest.a, undefined);\n  67 |     assert.sameValue(rest.b, undefined);\n  68 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/class/dstr/meth-obj-ptrn-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/meth-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/expressions/class/dstr/meth-obj-ptrn-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/expressions/class/dstr/meth-obj-ptrn-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-obj-ptrn-rest-getter.js-strict:true": "test/language/expressions/class/dstr/meth-obj-ptrn-rest-getter.js: SyntaxError: test/language/expressions/class/dstr/meth-obj-ptrn-rest-getter.js: Unexpected token (66:10)\n  64 | var callCount = 0;\n  65 | var C = class {\n\u003e 66 |   method({...x}) {\n     |           ^\n  67 |     assert.sameValue(count, 1);\n  68 | \n  69 |     verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/class/dstr/meth-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/class/dstr/meth-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (67:10)\n  65 | var callCount = 0;\n  66 | var C = class {\n\u003e 67 |   method({...rest}) {\n     |           ^\n  68 |     assert.sameValue(rest.x, undefined);\n  69 | \n  70 |     verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-obj-ptrn-rest-val-obj.js-strict:true": "test/language/expressions/class/dstr/meth-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/expressions/class/dstr/meth-obj-ptrn-rest-val-obj.js: Unexpected token (65:16)\n  63 | var callCount = 0;\n  64 | var C = class {\n\u003e 65 |   method({a, b, ...rest}) {\n     |                 ^\n  66 |     assert.sameValue(rest.a, undefined);\n  67 |     assert.sameValue(rest.b, undefined);\n  68 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-static-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/expressions/class/dstr/meth-static-ary-init-iter-get-err-array-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-static-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/class/dstr/meth-static-ary-ptrn-elem-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-static-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/meth-static-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-static-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/expressions/class/dstr/meth-static-ary-ptrn-elem-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-static-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/expressions/class/dstr/meth-static-ary-ptrn-elem-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-ary-elem.js: Unexpected token (97:20)\n   95 | var callCount = 0;\n   96 | var C = class {\n\u003e  97 |   static method([...[x, y, z]]) {\n      |                     ^\n   98 |     assert.sameValue(x, 3);\n   99 |     assert.sameValue(y, 4);\n  100 |     assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-ary-rest.js: Unexpected token (78:20)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   static method([...[...x]]) {\n     |                     ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.sameValue(x.length, 3);\n  81 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-obj-id.js-strict:true": "test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-obj-id.js: Unexpected token (77:20)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   static method([...{ length }]) {\n     |                     ^\n  78 |     assert.sameValue(length, 3);\n  79 |     callCount = callCount + 1;\n  80 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-obj-prop-id.js: Unexpected token (78:20)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   static method([...{ 0: v, 1: w, 2: x, 3: y, length: z }]) {\n     |                     ^\n  79 |     assert.sameValue(v, 7);\n  80 |     assert.sameValue(w, 8);\n  81 |     assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-static-dflt-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-ary-init-iter-get-err-array-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-elem-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-elem-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-elem.js: Unexpected token (97:20)\n   95 | var callCount = 0;\n   96 | var C = class {\n\u003e  97 |   static method([...[x, y, z]] = [3, 4, 5]) {\n      |                     ^\n   98 |     assert.sameValue(x, 3);\n   99 |     assert.sameValue(y, 4);\n  100 |     assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-rest.js: Unexpected token (78:20)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   static method([...[...x]] = values) {\n     |                     ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.sameValue(x.length, 3);\n  81 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-obj-id.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-obj-id.js: Unexpected token (77:20)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   static method([...{ length }] = [1, 2, 3]) {\n     |                     ^\n  78 |     assert.sameValue(length, 3);\n  79 |     callCount = callCount + 1;\n  80 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-obj-prop-id.js: Unexpected token (78:20)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   static method([...{ 0: v, 1: w, 2: x, 3: y, length: z }] = [7, 8, 9]) {\n     |                     ^\n  79 |     assert.sameValue(v, 7);\n  80 |     assert.sameValue(w, 8);\n  81 |     assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-rest-getter.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-rest-getter.js: SyntaxError: test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-rest-getter.js: Unexpected token (66:17)\n  64 | var callCount = 0;\n  65 | var C = class {\n\u003e 66 |   static method({...x} = { get v() { count++; return 2; } }) {\n     |                  ^\n  67 |     assert.sameValue(count, 1);\n  68 | \n  69 |     verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (67:17)\n  65 | var callCount = 0;\n  66 | var C = class {\n\u003e 67 |   static method({...rest} = o) {\n     |                  ^\n  68 |     assert.sameValue(rest.x, undefined);\n  69 | \n  70 |     verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-rest-val-obj.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-rest-val-obj.js: Unexpected token (65:23)\n  63 | var callCount = 0;\n  64 | var C = class {\n\u003e 65 |   static method({a, b, ...rest} = {x: 1, y: 2, a: 5, b: 3}) {\n     |                        ^\n  66 |     assert.sameValue(rest.a, undefined);\n  67 |     assert.sameValue(rest.b, undefined);\n  68 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-static-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/class/dstr/meth-static-obj-ptrn-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-static-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/meth-static-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-static-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/expressions/class/dstr/meth-static-obj-ptrn-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-static-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/expressions/class/dstr/meth-static-obj-ptrn-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/dstr/meth-static-obj-ptrn-rest-getter.js-strict:true": "test/language/expressions/class/dstr/meth-static-obj-ptrn-rest-getter.js: SyntaxError: test/language/expressions/class/dstr/meth-static-obj-ptrn-rest-getter.js: Unexpected token (66:17)\n  64 | var callCount = 0;\n  65 | var C = class {\n\u003e 66 |   static method({...x}) {\n     |                  ^\n  67 |     assert.sameValue(count, 1);\n  68 | \n  69 |     verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-static-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/class/dstr/meth-static-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/class/dstr/meth-static-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (67:17)\n  65 | var callCount = 0;\n  66 | var C = class {\n\u003e 67 |   static method({...rest}) {\n     |                  ^\n  68 |     assert.sameValue(rest.x, undefined);\n  69 | \n  70 |     verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/meth-static-obj-ptrn-rest-val-obj.js-strict:true": "test/language/expressions/class/dstr/meth-static-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/expressions/class/dstr/meth-static-obj-ptrn-rest-val-obj.js: Unexpected token (65:23)\n  63 | var callCount = 0;\n  64 | var C = class {\n\u003e 65 |   static method({a, b, ...rest}) {\n     |                        ^\n  66 |     assert.sameValue(rest.a, undefined);\n  67 |     assert.sameValue(rest.b, undefined);\n  68 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-init-iter-close.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-init-iter-close.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-init-iter-close.js: Unexpected character '#' (87:2)\n  85 | var callCount = 0;\n  86 | var C = class {\n\u003e 87 |   #method([x]) {\n     |   ^\n  88 |     assert.sameValue(doneCallCount, 1);\n  89 |     callCount = callCount + 1;\n  90 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-init-iter-no-close.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-init-iter-no-close.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-init-iter-no-close.js: Unexpected character '#' (87:2)\n  85 | var callCount = 0;\n  86 | var C = class {\n\u003e 87 |   #method([x]) {\n     |   ^\n  88 |     assert.sameValue(doneCallCount, 0);\n  89 |     callCount = callCount + 1;\n  90 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-name-iter-val.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-name-iter-val.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-name-iter-val.js: Unexpected character '#' (84:2)\n  82 | var callCount = 0;\n  83 | var C = class {\n\u003e 84 |   #method([x, y, z]) {\n     |   ^\n  85 |     assert.sameValue(x, 1);\n  86 |     assert.sameValue(y, 2);\n  87 |     assert.sameValue(z, 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-elem-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-elem-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-elem-init.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   #method([[x, y, z] = [4, 5, 6]]) {\n     |   ^\n  77 |     assert.sameValue(x, 4);\n  78 |     assert.sameValue(y, 5);\n  79 |     assert.sameValue(z, 6); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-elem-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-elem-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-elem-iter.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   #method([[x, y, z] = [4, 5, 6]]) {\n     |   ^\n  78 |     assert.sameValue(x, 7);\n  79 |     assert.sameValue(y, 8);\n  80 |     assert.sameValue(z, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-empty-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-empty-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-empty-iter.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   #method([[] = function() { initCount += 1; }()]) {\n     |   ^\n  79 |     assert.sameValue(initCount, 0);\n  80 |     callCount = callCount + 1;\n  81 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-rest-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-rest-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-rest-init.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   #method([[...x] = values]) {\n     |   ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.sameValue(x[0], 2);\n  80 |     assert.sameValue(x[1], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-rest-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-rest-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-rest-iter.js: Unexpected character '#' (79:2)\n  77 | var callCount = 0;\n  78 | var C = class {\n\u003e 79 |   #method([[...x] = function() { initCount += 1; }()]) {\n     |   ^\n  80 |     assert(Array.isArray(x));\n  81 |     assert.sameValue(x[0], 2);\n  82 |     assert.sameValue(x[1], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-exhausted.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-exhausted.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-exhausted.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   #method([x = 23]) {\n     |   ^\n  78 |     assert.sameValue(x, 23);\n  79 |     callCount = callCount + 1;\n  80 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-arrow.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-arrow.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   #method([arrow = () =\u003e {}]) {\n     |   ^\n  79 |     assert.sameValue(arrow.name, 'arrow');\n  80 |     callCount = callCount + 1;\n  81 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-class.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-class.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   #method([cls = class {}, xCls = class X {}, xCls2 = class { static name() {} }]) {\n     |   ^\n  79 |     assert.sameValue(cls.name, 'cls');\n  80 |     assert.notSameValue(xCls.name, 'xCls');\n  81 |     assert.notSameValue(xCls2.name, 'xCls2'); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-cover.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-cover.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   #method([cover = (function () {}), xCover = (0, function() {})]) {\n     |   ^\n  79 |     assert.sameValue(cover.name, 'cover');\n  80 |     assert.notSameValue(xCover.name, 'xCover');\n  81 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-fn.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-fn.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   #method([fn = function () {}, xFn = function x() {}]) {\n     |   ^\n  79 |     assert.sameValue(fn.name, 'fn');\n  80 |     assert.notSameValue(xFn.name, 'xFn');\n  81 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-hole.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-hole.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-hole.js: Unexpected character '#' (72:2)\n  70 | var callCount = 0;\n  71 | var C = class {\n\u003e 72 |   #method([x = 23]) {\n     |   ^\n  73 |     assert.sameValue(x, 23);\n  74 |     // another statement\n  75 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-skipped.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-skipped.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-skipped.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   #method([w = counter(), x = counter(), y = counter(), z = counter()]) {\n     |   ^\n  79 |     assert.sameValue(w, null);\n  80 |     assert.sameValue(x, 0);\n  81 |     assert.sameValue(y, false); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-undef.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-undef.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-undef.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   #method([x = 23]) {\n     |   ^\n  77 |     assert.sameValue(x, 23);\n  78 |     callCount = callCount + 1;\n  79 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-iter-complete.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-iter-complete.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-iter-complete.js: Unexpected character '#' (80:2)\n  78 | var callCount = 0;\n  79 | var C = class {\n\u003e 80 |   #method([x]) {\n     |   ^\n  81 |     assert.sameValue(x, undefined);\n  82 |     callCount = callCount + 1;\n  83 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-iter-done.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-iter-done.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-iter-done.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | var C = class {\n\u003e 75 |   #method([_, x]) {\n     |   ^\n  76 |     assert.sameValue(x, undefined);\n  77 |     callCount = callCount + 1;\n  78 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-iter-val.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-iter-val.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-iter-val.js: Unexpected character '#' (84:2)\n  82 | var callCount = 0;\n  83 | var C = class {\n\u003e 84 |   #method([x, y, z]) {\n     |   ^\n  85 |     assert.sameValue(x, 1);\n  86 |     assert.sameValue(y, 2);\n  87 |     assert.sameValue(z, 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-obj-id-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-obj-id-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-obj-id-init.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   #method([{ x, y, z } = { x: 44, y: 55, z: 66 }]) {\n     |   ^\n  77 |     assert.sameValue(x, 44);\n  78 |     assert.sameValue(y, 55);\n  79 |     assert.sameValue(z, 66); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-obj-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-obj-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-obj-id.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   #method([{ x, y, z } = { x: 44, y: 55, z: 66 }]) {\n     |   ^\n  77 |     assert.sameValue(x, 11);\n  78 |     assert.sameValue(y, 22);\n  79 |     assert.sameValue(z, 33); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-obj-prop-id-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-obj-prop-id-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-obj-prop-id-init.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   #method([{ u: v, w: x, y: z } = { u: 444, w: 555, y: 666 }]) {\n     |   ^\n  77 |     assert.sameValue(v, 444);\n  78 |     assert.sameValue(x, 555);\n  79 |     assert.sameValue(z, 666); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-obj-prop-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-obj-prop-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-obj-prop-id.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   #method([{ u: v, w: x, y: z } = { u: 444, w: 555, y: 666 }]) {\n     |   ^\n  77 |     assert.sameValue(v, 777);\n  78 |     assert.sameValue(x, 888);\n  79 |     assert.sameValue(z, 999); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-ary-elem.js: Unexpected character '#' (97:2)\n   95 | var callCount = 0;\n   96 | var C = class {\n\u003e  97 |   #method([...[x, y, z]]) {\n      |   ^\n   98 |     assert.sameValue(x, 3);\n   99 |     assert.sameValue(y, 4);\n  100 |     assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-ary-rest.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   #method([...[...x]]) {\n     |   ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.sameValue(x.length, 3);\n  81 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-id-direct.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-id-direct.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-id-direct.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   #method([...x]) {\n     |   ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.compareArray(x, [1]);\n  81 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-id-elision.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-id-elision.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-id-elision.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | var C = class {\n\u003e 75 |   #method([ , , ...x]) {\n     |   ^\n  76 |     assert(Array.isArray(x));\n  77 |     assert.sameValue(x.length, 3);\n  78 |     assert.sameValue(x[0], 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-id-exhausted.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-id-exhausted.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-id-exhausted.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | var C = class {\n\u003e 75 |   #method([, , ...x]) {\n     |   ^\n  76 |     assert(Array.isArray(x));\n  77 |     assert.sameValue(x.length, 0);\n  78 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-id.js: Unexpected character '#' (72:2)\n  70 | var callCount = 0;\n  71 | var C = class {\n\u003e 72 |   #method([...x]) {\n     |   ^\n  73 |     assert(Array.isArray(x));\n  74 |     assert.sameValue(x.length, 3);\n  75 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-obj-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-obj-id.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   #method([...{ length }]) {\n     |   ^\n  78 |     assert.sameValue(length, 3);\n  79 |     callCount = callCount + 1;\n  80 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-obj-prop-id.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   #method([...{ 0: v, 1: w, 2: x, 3: y, length: z }]) {\n     |   ^\n  79 |     assert.sameValue(v, 7);\n  80 |     assert.sameValue(w, 8);\n  81 |     assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-init-iter-close.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-init-iter-close.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-init-iter-close.js: Unexpected character '#' (87:2)\n  85 | var callCount = 0;\n  86 | var C = class {\n\u003e 87 |   #method([x] = iter) {\n     |   ^\n  88 |     assert.sameValue(doneCallCount, 1);\n  89 |     callCount = callCount + 1;\n  90 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-init-iter-no-close.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-init-iter-no-close.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-init-iter-no-close.js: Unexpected character '#' (87:2)\n  85 | var callCount = 0;\n  86 | var C = class {\n\u003e 87 |   #method([x] = iter) {\n     |   ^\n  88 |     assert.sameValue(doneCallCount, 0);\n  89 |     callCount = callCount + 1;\n  90 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-name-iter-val.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-name-iter-val.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-name-iter-val.js: Unexpected character '#' (84:2)\n  82 | var callCount = 0;\n  83 | var C = class {\n\u003e 84 |   #method([x, y, z] = [1, 2, 3]) {\n     |   ^\n  85 |     assert.sameValue(x, 1);\n  86 |     assert.sameValue(y, 2);\n  87 |     assert.sameValue(z, 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elem-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elem-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elem-init.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   #method([[x, y, z] = [4, 5, 6]] = []) {\n     |   ^\n  77 |     assert.sameValue(x, 4);\n  78 |     assert.sameValue(y, 5);\n  79 |     assert.sameValue(z, 6); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elem-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elem-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elem-iter.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   #method([[x, y, z] = [4, 5, 6]] = [[7, 8, 9]]) {\n     |   ^\n  78 |     assert.sameValue(x, 7);\n  79 |     assert.sameValue(y, 8);\n  80 |     assert.sameValue(z, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-empty-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-empty-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-empty-iter.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   #method([[] = function() { initCount += 1; }()] = [[23]]) {\n     |   ^\n  79 |     assert.sameValue(initCount, 0);\n  80 |     callCount = callCount + 1;\n  81 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-rest-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-rest-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-rest-init.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   #method([[...x] = values] = []) {\n     |   ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.sameValue(x[0], 2);\n  80 |     assert.sameValue(x[1], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-rest-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-rest-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-rest-iter.js: Unexpected character '#' (79:2)\n  77 | var callCount = 0;\n  78 | var C = class {\n\u003e 79 |   #method([[...x] = function() { initCount += 1; }()] = [values]) {\n     |   ^\n  80 |     assert(Array.isArray(x));\n  81 |     assert.sameValue(x[0], 2);\n  82 |     assert.sameValue(x[1], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-exhausted.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-exhausted.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-exhausted.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   #method([x = 23] = []) {\n     |   ^\n  78 |     assert.sameValue(x, 23);\n  79 |     callCount = callCount + 1;\n  80 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   #method([arrow = () =\u003e {}] = []) {\n     |   ^\n  79 |     assert.sameValue(arrow.name, 'arrow');\n  80 |     callCount = callCount + 1;\n  81 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   #method([cls = class {}, xCls = class X {}, xCls2 = class { static name() {} }] = []) {\n     |   ^\n  79 |     assert.sameValue(cls.name, 'cls');\n  80 |     assert.notSameValue(xCls.name, 'xCls');\n  81 |     assert.notSameValue(xCls2.name, 'xCls2'); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-cover.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-cover.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   #method([cover = (function () {}), xCover = (0, function() {})] = []) {\n     |   ^\n  79 |     assert.sameValue(cover.name, 'cover');\n  80 |     assert.notSameValue(xCover.name, 'xCover');\n  81 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-fn.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-fn.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   #method([fn = function () {}, xFn = function x() {}] = []) {\n     |   ^\n  79 |     assert.sameValue(fn.name, 'fn');\n  80 |     assert.notSameValue(xFn.name, 'xFn');\n  81 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-hole.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-hole.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-hole.js: Unexpected character '#' (72:2)\n  70 | var callCount = 0;\n  71 | var C = class {\n\u003e 72 |   #method([x = 23] = [,]) {\n     |   ^\n  73 |     assert.sameValue(x, 23);\n  74 |     // another statement\n  75 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-skipped.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-skipped.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-skipped.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   #method([w = counter(), x = counter(), y = counter(), z = counter()] = [null, 0, false, '']) {\n     |   ^\n  79 |     assert.sameValue(w, null);\n  80 |     assert.sameValue(x, 0);\n  81 |     assert.sameValue(y, false); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-undef.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-undef.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-undef.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   #method([x = 23] = [undefined]) {\n     |   ^\n  77 |     assert.sameValue(x, 23);\n  78 |     callCount = callCount + 1;\n  79 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-complete.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-complete.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-complete.js: Unexpected character '#' (80:2)\n  78 | var callCount = 0;\n  79 | var C = class {\n\u003e 80 |   #method([x] = []) {\n     |   ^\n  81 |     assert.sameValue(x, undefined);\n  82 |     callCount = callCount + 1;\n  83 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-done.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-done.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-done.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | var C = class {\n\u003e 75 |   #method([_, x] = []) {\n     |   ^\n  76 |     assert.sameValue(x, undefined);\n  77 |     callCount = callCount + 1;\n  78 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-val.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-val.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-val.js: Unexpected character '#' (84:2)\n  82 | var callCount = 0;\n  83 | var C = class {\n\u003e 84 |   #method([x, y, z] = [1, 2, 3]) {\n     |   ^\n  85 |     assert.sameValue(x, 1);\n  86 |     assert.sameValue(y, 2);\n  87 |     assert.sameValue(z, 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-id-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-id-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-id-init.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   #method([{ x, y, z } = { x: 44, y: 55, z: 66 }] = []) {\n     |   ^\n  77 |     assert.sameValue(x, 44);\n  78 |     assert.sameValue(y, 55);\n  79 |     assert.sameValue(z, 66); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-id.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   #method([{ x, y, z } = { x: 44, y: 55, z: 66 }] = [{ x: 11, y: 22, z: 33 }]) {\n     |   ^\n  77 |     assert.sameValue(x, 11);\n  78 |     assert.sameValue(y, 22);\n  79 |     assert.sameValue(z, 33); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-prop-id-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-prop-id-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-prop-id-init.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   #method([{ u: v, w: x, y: z } = { u: 444, w: 555, y: 666 }] = []) {\n     |   ^\n  77 |     assert.sameValue(v, 444);\n  78 |     assert.sameValue(x, 555);\n  79 |     assert.sameValue(z, 666); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-prop-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-prop-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-prop-id.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   #method([{ u: v, w: x, y: z } = { u: 444, w: 555, y: 666 }] = [{ u: 777, w: 888, y: 999 }]) {\n     |   ^\n  77 |     assert.sameValue(v, 777);\n  78 |     assert.sameValue(x, 888);\n  79 |     assert.sameValue(z, 999); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-elem.js: Unexpected character '#' (97:2)\n   95 | var callCount = 0;\n   96 | var C = class {\n\u003e  97 |   #method([...[x, y, z]] = [3, 4, 5]) {\n      |   ^\n   98 |     assert.sameValue(x, 3);\n   99 |     assert.sameValue(y, 4);\n  100 |     assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-rest.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   #method([...[...x]] = values) {\n     |   ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.sameValue(x.length, 3);\n  81 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-id-direct.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-id-direct.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-id-direct.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   #method([...x] = [1]) {\n     |   ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.compareArray(x, [1]);\n  81 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-id-elision.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-id-elision.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-id-elision.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | var C = class {\n\u003e 75 |   #method([ , , ...x] = values) {\n     |   ^\n  76 |     assert(Array.isArray(x));\n  77 |     assert.sameValue(x.length, 3);\n  78 |     assert.sameValue(x[0], 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-id-exhausted.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-id-exhausted.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-id-exhausted.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | var C = class {\n\u003e 75 |   #method([, , ...x] = [1, 2]) {\n     |   ^\n  76 |     assert(Array.isArray(x));\n  77 |     assert.sameValue(x.length, 0);\n  78 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-id.js: Unexpected character '#' (72:2)\n  70 | var callCount = 0;\n  71 | var C = class {\n\u003e 72 |   #method([...x] = values) {\n     |   ^\n  73 |     assert(Array.isArray(x));\n  74 |     assert.sameValue(x.length, 3);\n  75 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-obj-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-obj-id.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   #method([...{ length }] = [1, 2, 3]) {\n     |   ^\n  78 |     assert.sameValue(length, 3);\n  79 |     callCount = callCount + 1;\n  80 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-obj-prop-id.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   #method([...{ 0: v, 1: w, 2: x, 3: y, length: z }] = [7, 8, 9]) {\n     |   ^\n  79 |     assert.sameValue(v, 7);\n  80 |     assert.sameValue(w, 8);\n  81 |     assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-empty.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-empty.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-empty.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   #method({} = obj) {\n     |   ^\n  77 |     assert.sameValue(accessCount, 0);\n  78 |     callCount = callCount + 1;\n  79 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-arrow.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-arrow.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   #method({ arrow = () =\u003e {} } = {}) {\n     |   ^\n  78 |     assert.sameValue(arrow.name, 'arrow');\n  79 |     callCount = callCount + 1;\n  80 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-class.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-class.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   #method({ cls = class {}, xCls = class X {}, xCls2 = class { static name() {} } } = {}) {\n     |   ^\n  78 |     assert.sameValue(cls.name, 'cls');\n  79 |     assert.notSameValue(xCls.name, 'xCls');\n  80 |     assert.notSameValue(xCls2.name, 'xCls2'); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-cover.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-cover.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   #method({ cover = (function () {}), xCover = (0, function() {})  } = {}) {\n     |   ^\n  78 |     assert.sameValue(cover.name, 'cover');\n  79 |     assert.notSameValue(xCover.name, 'xCover');\n  80 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-fn.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-fn.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   #method({ fn = function () {}, xFn = function x() {} } = {}) {\n     |   ^\n  78 |     assert.sameValue(fn.name, 'fn');\n  79 |     assert.notSameValue(xFn.name, 'xFn');\n  80 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-skipped.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-skipped.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-skipped.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   #method({ w = counter(), x = counter(), y = counter(), z = counter() } = { w: null, x: 0, y: false, z: '' }) {\n     |   ^\n  78 |     assert.sameValue(w, null);\n  79 |     assert.sameValue(x, 0);\n  80 |     assert.sameValue(y, false); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-trailing-comma.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-trailing-comma.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-trailing-comma.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | var C = class {\n\u003e 71 |   #method({ x, } = { x: 23 }) {\n     |   ^\n  72 |     assert.sameValue(x, 23);\n  73 |     callCount = callCount + 1;\n  74 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-ary-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-ary-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-ary-init.js: Unexpected character '#' (74:2)\n  72 | var callCount = 0;\n  73 | var C = class {\n\u003e 74 |   #method({ w: [x, y, z] = [4, 5, 6] } = {}) {\n     |   ^\n  75 |     assert.sameValue(x, 4);\n  76 |     assert.sameValue(y, 5);\n  77 |     assert.sameValue(z, 6); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-ary-trailing-comma.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-ary-trailing-comma.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-ary-trailing-comma.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | var C = class {\n\u003e 71 |   #method({ x: [y], } = { x: [45] }) {\n     |   ^\n  72 |     assert.sameValue(y,45);\n  73 |     callCount = callCount + 1;\n  74 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-ary.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-ary.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-ary.js: Unexpected character '#' (72:2)\n  70 | var callCount = 0;\n  71 | var C = class {\n\u003e 72 |   #method({ w: [x, y, z] = [4, 5, 6] } = { w: [7, undefined, ] }) {\n     |   ^\n  73 |     assert.sameValue(x, 7);\n  74 |     assert.sameValue(y, undefined);\n  75 |     assert.sameValue(z, undefined); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-id-init-skipped.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-id-init-skipped.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-id-init-skipped.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   #method({ s: t = counter(), u: v = counter(), w: x = counter(), y: z = counter() } = { s: null, u: 0, w: false, y: '' }) {\n     |   ^\n  77 |     assert.sameValue(t, null);\n  78 |     assert.sameValue(v, 0);\n  79 |     assert.sameValue(x, false); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-id-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-id-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-id-init.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | var C = class {\n\u003e 71 |   #method({ x: y = 33 } = { }) {\n     |   ^\n  72 |     assert.sameValue(y, 33);\n  73 |     assert.throws(ReferenceError, function() {\n  74 |       x; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-id-trailing-comma.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-id-trailing-comma.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-id-trailing-comma.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | var C = class {\n\u003e 71 |   #method({ x: y, } = { x: 23 }) {\n     |   ^\n  72 |     assert.sameValue(y, 23);\n  73 | \n  74 |     assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-id.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | var C = class {\n\u003e 71 |   #method({ x: y } = { x: 23 }) {\n     |   ^\n  72 |     assert.sameValue(y, 23);\n  73 |     assert.throws(ReferenceError, function() {\n  74 |       x; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-obj-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-obj-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-obj-init.js: Unexpected character '#' (74:2)\n  72 | var callCount = 0;\n  73 | var C = class {\n\u003e 74 |   #method({ w: { x, y, z } = { x: 4, y: 5, z: 6 } } = { w: undefined }) {\n     |   ^\n  75 |     assert.sameValue(x, 4);\n  76 |     assert.sameValue(y, 5);\n  77 |     assert.sameValue(z, 6); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-obj.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-obj.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-prop-obj.js: Unexpected character '#' (72:2)\n  70 | var callCount = 0;\n  71 | var C = class {\n\u003e 72 |   #method({ w: { x, y, z } = { x: 4, y: 5, z: 6 } } = { w: { x: undefined, z: 7 } }) {\n     |   ^\n  73 |     assert.sameValue(x, undefined);\n  74 |     assert.sameValue(y, undefined);\n  75 |     assert.sameValue(z, 7); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-rest-getter.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-rest-getter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-rest-getter.js: Unexpected character '#' (66:2)\n  64 | var callCount = 0;\n  65 | var C = class {\n\u003e 66 |   #method({...x} = { get v() { count++; return 2; } }) {\n     |   ^\n  67 |     assert.sameValue(count, 1);\n  68 | \n  69 |     verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-rest-skip-non-enumerable.js: Unexpected character '#' (67:2)\n  65 | var callCount = 0;\n  66 | var C = class {\n\u003e 67 |   #method({...rest} = o) {\n     |   ^\n  68 |     assert.sameValue(rest.x, undefined);\n  69 | \n  70 |     verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-rest-val-obj.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-rest-val-obj.js: Unexpected character '#' (65:2)\n  63 | var callCount = 0;\n  64 | var C = class {\n\u003e 65 |   #method({a, b, ...rest} = {x: 1, y: 2, a: 5, b: 3}) {\n     |   ^\n  66 |     assert.sameValue(rest.a, undefined);\n  67 |     assert.sameValue(rest.b, undefined);\n  68 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-empty.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-empty.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-empty.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   #method({}) {\n     |   ^\n  77 |     assert.sameValue(accessCount, 0);\n  78 |     callCount = callCount + 1;\n  79 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-arrow.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-arrow.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   #method({ arrow = () =\u003e {} }) {\n     |   ^\n  78 |     assert.sameValue(arrow.name, 'arrow');\n  79 |     callCount = callCount + 1;\n  80 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-class.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-class.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   #method({ cls = class {}, xCls = class X {}, xCls2 = class { static name() {} } }) {\n     |   ^\n  78 |     assert.sameValue(cls.name, 'cls');\n  79 |     assert.notSameValue(xCls.name, 'xCls');\n  80 |     assert.notSameValue(xCls2.name, 'xCls2'); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-cover.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-cover.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   #method({ cover = (function () {}), xCover = (0, function() {})  }) {\n     |   ^\n  78 |     assert.sameValue(cover.name, 'cover');\n  79 |     assert.notSameValue(xCover.name, 'xCover');\n  80 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-fn.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-fn.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   #method({ fn = function () {}, xFn = function x() {} }) {\n     |   ^\n  78 |     assert.sameValue(fn.name, 'fn');\n  79 |     assert.notSameValue(xFn.name, 'xFn');\n  80 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-skipped.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-skipped.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-skipped.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   #method({ w = counter(), x = counter(), y = counter(), z = counter() }) {\n     |   ^\n  78 |     assert.sameValue(w, null);\n  79 |     assert.sameValue(x, 0);\n  80 |     assert.sameValue(y, false); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-trailing-comma.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-trailing-comma.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-id-trailing-comma.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | var C = class {\n\u003e 71 |   #method({ x, }) {\n     |   ^\n  72 |     assert.sameValue(x, 23);\n  73 |     callCount = callCount + 1;\n  74 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-ary-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-ary-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-ary-init.js: Unexpected character '#' (74:2)\n  72 | var callCount = 0;\n  73 | var C = class {\n\u003e 74 |   #method({ w: [x, y, z] = [4, 5, 6] }) {\n     |   ^\n  75 |     assert.sameValue(x, 4);\n  76 |     assert.sameValue(y, 5);\n  77 |     assert.sameValue(z, 6); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-ary-trailing-comma.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-ary-trailing-comma.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-ary-trailing-comma.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | var C = class {\n\u003e 71 |   #method({ x: [y], }) {\n     |   ^\n  72 |     assert.sameValue(y,45);\n  73 |     callCount = callCount + 1;\n  74 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-ary.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-ary.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-ary.js: Unexpected character '#' (72:2)\n  70 | var callCount = 0;\n  71 | var C = class {\n\u003e 72 |   #method({ w: [x, y, z] = [4, 5, 6] }) {\n     |   ^\n  73 |     assert.sameValue(x, 7);\n  74 |     assert.sameValue(y, undefined);\n  75 |     assert.sameValue(z, undefined); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-id-init-skipped.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-id-init-skipped.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-id-init-skipped.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   #method({ s: t = counter(), u: v = counter(), w: x = counter(), y: z = counter() }) {\n     |   ^\n  77 |     assert.sameValue(t, null);\n  78 |     assert.sameValue(v, 0);\n  79 |     assert.sameValue(x, false); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-id-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-id-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-id-init.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | var C = class {\n\u003e 71 |   #method({ x: y = 33 }) {\n     |   ^\n  72 |     assert.sameValue(y, 33);\n  73 |     assert.throws(ReferenceError, function() {\n  74 |       x; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-id-trailing-comma.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-id-trailing-comma.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-id-trailing-comma.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | var C = class {\n\u003e 71 |   #method({ x: y, }) {\n     |   ^\n  72 |     assert.sameValue(y, 23);\n  73 | \n  74 |     assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-id.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | var C = class {\n\u003e 71 |   #method({ x: y }) {\n     |   ^\n  72 |     assert.sameValue(y, 23);\n  73 |     assert.throws(ReferenceError, function() {\n  74 |       x; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-obj-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-obj-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-obj-init.js: Unexpected character '#' (74:2)\n  72 | var callCount = 0;\n  73 | var C = class {\n\u003e 74 |   #method({ w: { x, y, z } = { x: 4, y: 5, z: 6 } }) {\n     |   ^\n  75 |     assert.sameValue(x, 4);\n  76 |     assert.sameValue(y, 5);\n  77 |     assert.sameValue(z, 6); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-obj.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-obj.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-prop-obj.js: Unexpected character '#' (72:2)\n  70 | var callCount = 0;\n  71 | var C = class {\n\u003e 72 |   #method({ w: { x, y, z } = { x: 4, y: 5, z: 6 } }) {\n     |   ^\n  73 |     assert.sameValue(x, undefined);\n  74 |     assert.sameValue(y, undefined);\n  75 |     assert.sameValue(z, 7); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-rest-getter.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-rest-getter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-rest-getter.js: Unexpected character '#' (66:2)\n  64 | var callCount = 0;\n  65 | var C = class {\n\u003e 66 |   #method({...x}) {\n     |   ^\n  67 |     assert.sameValue(count, 1);\n  68 | \n  69 |     verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-rest-skip-non-enumerable.js: Unexpected character '#' (67:2)\n  65 | var callCount = 0;\n  66 | var C = class {\n\u003e 67 |   #method({...rest}) {\n     |   ^\n  68 |     assert.sameValue(rest.x, undefined);\n  69 | \n  70 |     verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-rest-val-obj.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-rest-val-obj.js: Unexpected character '#' (65:2)\n  63 | var callCount = 0;\n  64 | var C = class {\n\u003e 65 |   #method({a, b, ...rest}) {\n     |   ^\n  66 |     assert.sameValue(rest.a, undefined);\n  67 |     assert.sameValue(rest.b, undefined);\n  68 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-init-iter-close.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-init-iter-close.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-init-iter-close.js: Unexpected character '#' (87:9)\n  85 | var callCount = 0;\n  86 | var C = class {\n\u003e 87 |   static #method([x]) {\n     |          ^\n  88 |     assert.sameValue(doneCallCount, 1);\n  89 |     callCount = callCount + 1;\n  90 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-init-iter-no-close.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-init-iter-no-close.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-init-iter-no-close.js: Unexpected character '#' (87:9)\n  85 | var callCount = 0;\n  86 | var C = class {\n\u003e 87 |   static #method([x]) {\n     |          ^\n  88 |     assert.sameValue(doneCallCount, 0);\n  89 |     callCount = callCount + 1;\n  90 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-name-iter-val.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-name-iter-val.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-name-iter-val.js: Unexpected character '#' (84:9)\n  82 | var callCount = 0;\n  83 | var C = class {\n\u003e 84 |   static #method([x, y, z]) {\n     |          ^\n  85 |     assert.sameValue(x, 1);\n  86 |     assert.sameValue(y, 2);\n  87 |     assert.sameValue(z, 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-elem-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-elem-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-elem-init.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   static #method([[x, y, z] = [4, 5, 6]]) {\n     |          ^\n  77 |     assert.sameValue(x, 4);\n  78 |     assert.sameValue(y, 5);\n  79 |     assert.sameValue(z, 6); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-elem-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-elem-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-elem-iter.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   static #method([[x, y, z] = [4, 5, 6]]) {\n     |          ^\n  78 |     assert.sameValue(x, 7);\n  79 |     assert.sameValue(y, 8);\n  80 |     assert.sameValue(z, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-empty-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-empty-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-empty-iter.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   static #method([[] = function() { initCount += 1; }()]) {\n     |          ^\n  79 |     assert.sameValue(initCount, 0);\n  80 |     callCount = callCount + 1;\n  81 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-rest-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-rest-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-rest-init.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   static #method([[...x] = values]) {\n     |          ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.sameValue(x[0], 2);\n  80 |     assert.sameValue(x[1], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-rest-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-rest-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-rest-iter.js: Unexpected character '#' (79:9)\n  77 | var callCount = 0;\n  78 | var C = class {\n\u003e 79 |   static #method([[...x] = function() { initCount += 1; }()]) {\n     |          ^\n  80 |     assert(Array.isArray(x));\n  81 |     assert.sameValue(x[0], 2);\n  82 |     assert.sameValue(x[1], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-exhausted.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-exhausted.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-exhausted.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   static #method([x = 23]) {\n     |          ^\n  78 |     assert.sameValue(x, 23);\n  79 |     callCount = callCount + 1;\n  80 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-arrow.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-arrow.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   static #method([arrow = () =\u003e {}]) {\n     |          ^\n  79 |     assert.sameValue(arrow.name, 'arrow');\n  80 |     callCount = callCount + 1;\n  81 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-class.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-class.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   static #method([cls = class {}, xCls = class X {}, xCls2 = class { static name() {} }]) {\n     |          ^\n  79 |     assert.sameValue(cls.name, 'cls');\n  80 |     assert.notSameValue(xCls.name, 'xCls');\n  81 |     assert.notSameValue(xCls2.name, 'xCls2'); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-cover.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-cover.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   static #method([cover = (function () {}), xCover = (0, function() {})]) {\n     |          ^\n  79 |     assert.sameValue(cover.name, 'cover');\n  80 |     assert.notSameValue(xCover.name, 'xCover');\n  81 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-fn.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-fn.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   static #method([fn = function () {}, xFn = function x() {}]) {\n     |          ^\n  79 |     assert.sameValue(fn.name, 'fn');\n  80 |     assert.notSameValue(xFn.name, 'xFn');\n  81 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-hole.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-hole.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-hole.js: Unexpected character '#' (72:9)\n  70 | var callCount = 0;\n  71 | var C = class {\n\u003e 72 |   static #method([x = 23]) {\n     |          ^\n  73 |     assert.sameValue(x, 23);\n  74 |     // another statement\n  75 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-skipped.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-skipped.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-skipped.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   static #method([w = counter(), x = counter(), y = counter(), z = counter()]) {\n     |          ^\n  79 |     assert.sameValue(w, null);\n  80 |     assert.sameValue(x, 0);\n  81 |     assert.sameValue(y, false); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-undef.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-undef.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-undef.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   static #method([x = 23]) {\n     |          ^\n  77 |     assert.sameValue(x, 23);\n  78 |     callCount = callCount + 1;\n  79 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-complete.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-complete.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-complete.js: Unexpected character '#' (80:9)\n  78 | var callCount = 0;\n  79 | var C = class {\n\u003e 80 |   static #method([x]) {\n     |          ^\n  81 |     assert.sameValue(x, undefined);\n  82 |     callCount = callCount + 1;\n  83 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-done.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-done.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-done.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | var C = class {\n\u003e 75 |   static #method([_, x]) {\n     |          ^\n  76 |     assert.sameValue(x, undefined);\n  77 |     callCount = callCount + 1;\n  78 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-val.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-val.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-val.js: Unexpected character '#' (84:9)\n  82 | var callCount = 0;\n  83 | var C = class {\n\u003e 84 |   static #method([x, y, z]) {\n     |          ^\n  85 |     assert.sameValue(x, 1);\n  86 |     assert.sameValue(y, 2);\n  87 |     assert.sameValue(z, 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-obj-id-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-obj-id-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-obj-id-init.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   static #method([{ x, y, z } = { x: 44, y: 55, z: 66 }]) {\n     |          ^\n  77 |     assert.sameValue(x, 44);\n  78 |     assert.sameValue(y, 55);\n  79 |     assert.sameValue(z, 66); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-obj-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-obj-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-obj-id.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   static #method([{ x, y, z } = { x: 44, y: 55, z: 66 }]) {\n     |          ^\n  77 |     assert.sameValue(x, 11);\n  78 |     assert.sameValue(y, 22);\n  79 |     assert.sameValue(z, 33); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-obj-prop-id-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-obj-prop-id-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-obj-prop-id-init.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   static #method([{ u: v, w: x, y: z } = { u: 444, w: 555, y: 666 }]) {\n     |          ^\n  77 |     assert.sameValue(v, 444);\n  78 |     assert.sameValue(x, 555);\n  79 |     assert.sameValue(z, 666); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-obj-prop-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-obj-prop-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-obj-prop-id.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   static #method([{ u: v, w: x, y: z } = { u: 444, w: 555, y: 666 }]) {\n     |          ^\n  77 |     assert.sameValue(v, 777);\n  78 |     assert.sameValue(x, 888);\n  79 |     assert.sameValue(z, 999); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-ary-elem.js: Unexpected character '#' (97:9)\n   95 | var callCount = 0;\n   96 | var C = class {\n\u003e  97 |   static #method([...[x, y, z]]) {\n      |          ^\n   98 |     assert.sameValue(x, 3);\n   99 |     assert.sameValue(y, 4);\n  100 |     assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-ary-rest.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   static #method([...[...x]]) {\n     |          ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.sameValue(x.length, 3);\n  81 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-id-direct.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-id-direct.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-id-direct.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   static #method([...x]) {\n     |          ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.compareArray(x, [1]);\n  81 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-id-elision.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-id-elision.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-id-elision.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | var C = class {\n\u003e 75 |   static #method([ , , ...x]) {\n     |          ^\n  76 |     assert(Array.isArray(x));\n  77 |     assert.sameValue(x.length, 3);\n  78 |     assert.sameValue(x[0], 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-id-exhausted.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-id-exhausted.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-id-exhausted.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | var C = class {\n\u003e 75 |   static #method([, , ...x]) {\n     |          ^\n  76 |     assert(Array.isArray(x));\n  77 |     assert.sameValue(x.length, 0);\n  78 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-id.js: Unexpected character '#' (72:9)\n  70 | var callCount = 0;\n  71 | var C = class {\n\u003e 72 |   static #method([...x]) {\n     |          ^\n  73 |     assert(Array.isArray(x));\n  74 |     assert.sameValue(x.length, 3);\n  75 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-obj-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-obj-id.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   static #method([...{ length }]) {\n     |          ^\n  78 |     assert.sameValue(length, 3);\n  79 |     callCount = callCount + 1;\n  80 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-obj-prop-id.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   static #method([...{ 0: v, 1: w, 2: x, 3: y, length: z }]) {\n     |          ^\n  79 |     assert.sameValue(v, 7);\n  80 |     assert.sameValue(w, 8);\n  81 |     assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-init-iter-close.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-init-iter-close.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-init-iter-close.js: Unexpected character '#' (87:9)\n  85 | var callCount = 0;\n  86 | var C = class {\n\u003e 87 |   static #method([x] = iter) {\n     |          ^\n  88 |     assert.sameValue(doneCallCount, 1);\n  89 |     callCount = callCount + 1;\n  90 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-init-iter-no-close.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-init-iter-no-close.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-init-iter-no-close.js: Unexpected character '#' (87:9)\n  85 | var callCount = 0;\n  86 | var C = class {\n\u003e 87 |   static #method([x] = iter) {\n     |          ^\n  88 |     assert.sameValue(doneCallCount, 0);\n  89 |     callCount = callCount + 1;\n  90 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-name-iter-val.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-name-iter-val.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-name-iter-val.js: Unexpected character '#' (84:9)\n  82 | var callCount = 0;\n  83 | var C = class {\n\u003e 84 |   static #method([x, y, z] = [1, 2, 3]) {\n     |          ^\n  85 |     assert.sameValue(x, 1);\n  86 |     assert.sameValue(y, 2);\n  87 |     assert.sameValue(z, 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elem-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elem-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elem-init.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   static #method([[x, y, z] = [4, 5, 6]] = []) {\n     |          ^\n  77 |     assert.sameValue(x, 4);\n  78 |     assert.sameValue(y, 5);\n  79 |     assert.sameValue(z, 6); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elem-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elem-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elem-iter.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   static #method([[x, y, z] = [4, 5, 6]] = [[7, 8, 9]]) {\n     |          ^\n  78 |     assert.sameValue(x, 7);\n  79 |     assert.sameValue(y, 8);\n  80 |     assert.sameValue(z, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-empty-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-empty-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-empty-iter.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   static #method([[] = function() { initCount += 1; }()] = [[23]]) {\n     |          ^\n  79 |     assert.sameValue(initCount, 0);\n  80 |     callCount = callCount + 1;\n  81 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-rest-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-rest-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-rest-init.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   static #method([[...x] = values] = []) {\n     |          ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.sameValue(x[0], 2);\n  80 |     assert.sameValue(x[1], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-rest-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-rest-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-rest-iter.js: Unexpected character '#' (79:9)\n  77 | var callCount = 0;\n  78 | var C = class {\n\u003e 79 |   static #method([[...x] = function() { initCount += 1; }()] = [values]) {\n     |          ^\n  80 |     assert(Array.isArray(x));\n  81 |     assert.sameValue(x[0], 2);\n  82 |     assert.sameValue(x[1], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-exhausted.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-exhausted.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-exhausted.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   static #method([x = 23] = []) {\n     |          ^\n  78 |     assert.sameValue(x, 23);\n  79 |     callCount = callCount + 1;\n  80 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   static #method([arrow = () =\u003e {}] = []) {\n     |          ^\n  79 |     assert.sameValue(arrow.name, 'arrow');\n  80 |     callCount = callCount + 1;\n  81 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-class.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-class.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   static #method([cls = class {}, xCls = class X {}, xCls2 = class { static name() {} }] = []) {\n     |          ^\n  79 |     assert.sameValue(cls.name, 'cls');\n  80 |     assert.notSameValue(xCls.name, 'xCls');\n  81 |     assert.notSameValue(xCls2.name, 'xCls2'); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-cover.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-cover.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   static #method([cover = (function () {}), xCover = (0, function() {})] = []) {\n     |          ^\n  79 |     assert.sameValue(cover.name, 'cover');\n  80 |     assert.notSameValue(xCover.name, 'xCover');\n  81 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-fn.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-fn.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   static #method([fn = function () {}, xFn = function x() {}] = []) {\n     |          ^\n  79 |     assert.sameValue(fn.name, 'fn');\n  80 |     assert.notSameValue(xFn.name, 'xFn');\n  81 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-hole.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-hole.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-hole.js: Unexpected character '#' (72:9)\n  70 | var callCount = 0;\n  71 | var C = class {\n\u003e 72 |   static #method([x = 23] = [,]) {\n     |          ^\n  73 |     assert.sameValue(x, 23);\n  74 |     // another statement\n  75 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-skipped.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-skipped.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-skipped.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   static #method([w = counter(), x = counter(), y = counter(), z = counter()] = [null, 0, false, '']) {\n     |          ^\n  79 |     assert.sameValue(w, null);\n  80 |     assert.sameValue(x, 0);\n  81 |     assert.sameValue(y, false); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-undef.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-undef.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-undef.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   static #method([x = 23] = [undefined]) {\n     |          ^\n  77 |     assert.sameValue(x, 23);\n  78 |     callCount = callCount + 1;\n  79 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-complete.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-complete.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-complete.js: Unexpected character '#' (80:9)\n  78 | var callCount = 0;\n  79 | var C = class {\n\u003e 80 |   static #method([x] = []) {\n     |          ^\n  81 |     assert.sameValue(x, undefined);\n  82 |     callCount = callCount + 1;\n  83 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-done.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-done.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-done.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | var C = class {\n\u003e 75 |   static #method([_, x] = []) {\n     |          ^\n  76 |     assert.sameValue(x, undefined);\n  77 |     callCount = callCount + 1;\n  78 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-val.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-val.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-val.js: Unexpected character '#' (84:9)\n  82 | var callCount = 0;\n  83 | var C = class {\n\u003e 84 |   static #method([x, y, z] = [1, 2, 3]) {\n     |          ^\n  85 |     assert.sameValue(x, 1);\n  86 |     assert.sameValue(y, 2);\n  87 |     assert.sameValue(z, 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-id-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-id-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-id-init.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   static #method([{ x, y, z } = { x: 44, y: 55, z: 66 }] = []) {\n     |          ^\n  77 |     assert.sameValue(x, 44);\n  78 |     assert.sameValue(y, 55);\n  79 |     assert.sameValue(z, 66); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-id.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   static #method([{ x, y, z } = { x: 44, y: 55, z: 66 }] = [{ x: 11, y: 22, z: 33 }]) {\n     |          ^\n  77 |     assert.sameValue(x, 11);\n  78 |     assert.sameValue(y, 22);\n  79 |     assert.sameValue(z, 33); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-prop-id-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-prop-id-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-prop-id-init.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   static #method([{ u: v, w: x, y: z } = { u: 444, w: 555, y: 666 }] = []) {\n     |          ^\n  77 |     assert.sameValue(v, 444);\n  78 |     assert.sameValue(x, 555);\n  79 |     assert.sameValue(z, 666); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-prop-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-prop-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-prop-id.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   static #method([{ u: v, w: x, y: z } = { u: 444, w: 555, y: 666 }] = [{ u: 777, w: 888, y: 999 }]) {\n     |          ^\n  77 |     assert.sameValue(v, 777);\n  78 |     assert.sameValue(x, 888);\n  79 |     assert.sameValue(z, 999); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-elem.js: Unexpected character '#' (97:9)\n   95 | var callCount = 0;\n   96 | var C = class {\n\u003e  97 |   static #method([...[x, y, z]] = [3, 4, 5]) {\n      |          ^\n   98 |     assert.sameValue(x, 3);\n   99 |     assert.sameValue(y, 4);\n  100 |     assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-rest.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   static #method([...[...x]] = values) {\n     |          ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.sameValue(x.length, 3);\n  81 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-direct.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-direct.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-direct.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   static #method([...x] = [1]) {\n     |          ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.compareArray(x, [1]);\n  81 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-elision.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-elision.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-elision.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | var C = class {\n\u003e 75 |   static #method([ , , ...x] = values) {\n     |          ^\n  76 |     assert(Array.isArray(x));\n  77 |     assert.sameValue(x.length, 3);\n  78 |     assert.sameValue(x[0], 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-exhausted.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-exhausted.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-exhausted.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | var C = class {\n\u003e 75 |   static #method([, , ...x] = [1, 2]) {\n     |          ^\n  76 |     assert(Array.isArray(x));\n  77 |     assert.sameValue(x.length, 0);\n  78 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id.js: Unexpected character '#' (72:9)\n  70 | var callCount = 0;\n  71 | var C = class {\n\u003e 72 |   static #method([...x] = values) {\n     |          ^\n  73 |     assert(Array.isArray(x));\n  74 |     assert.sameValue(x.length, 3);\n  75 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-obj-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-obj-id.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   static #method([...{ length }] = [1, 2, 3]) {\n     |          ^\n  78 |     assert.sameValue(length, 3);\n  79 |     callCount = callCount + 1;\n  80 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-obj-prop-id.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class {\n\u003e 78 |   static #method([...{ 0: v, 1: w, 2: x, 3: y, length: z }] = [7, 8, 9]) {\n     |          ^\n  79 |     assert.sameValue(v, 7);\n  80 |     assert.sameValue(w, 8);\n  81 |     assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-empty.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-empty.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-empty.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   static #method({} = obj) {\n     |          ^\n  77 |     assert.sameValue(accessCount, 0);\n  78 |     callCount = callCount + 1;\n  79 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-arrow.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-arrow.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   static #method({ arrow = () =\u003e {} } = {}) {\n     |          ^\n  78 |     assert.sameValue(arrow.name, 'arrow');\n  79 |     callCount = callCount + 1;\n  80 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-class.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-class.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   static #method({ cls = class {}, xCls = class X {}, xCls2 = class { static name() {} } } = {}) {\n     |          ^\n  78 |     assert.sameValue(cls.name, 'cls');\n  79 |     assert.notSameValue(xCls.name, 'xCls');\n  80 |     assert.notSameValue(xCls2.name, 'xCls2'); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-cover.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-cover.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   static #method({ cover = (function () {}), xCover = (0, function() {})  } = {}) {\n     |          ^\n  78 |     assert.sameValue(cover.name, 'cover');\n  79 |     assert.notSameValue(xCover.name, 'xCover');\n  80 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-fn.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-fn.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   static #method({ fn = function () {}, xFn = function x() {} } = {}) {\n     |          ^\n  78 |     assert.sameValue(fn.name, 'fn');\n  79 |     assert.notSameValue(xFn.name, 'xFn');\n  80 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-skipped.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-skipped.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-skipped.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   static #method({ w = counter(), x = counter(), y = counter(), z = counter() } = { w: null, x: 0, y: false, z: '' }) {\n     |          ^\n  78 |     assert.sameValue(w, null);\n  79 |     assert.sameValue(x, 0);\n  80 |     assert.sameValue(y, false); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-trailing-comma.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-trailing-comma.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-trailing-comma.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | var C = class {\n\u003e 71 |   static #method({ x, } = { x: 23 }) {\n     |          ^\n  72 |     assert.sameValue(x, 23);\n  73 |     callCount = callCount + 1;\n  74 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary-init.js: Unexpected character '#' (74:9)\n  72 | var callCount = 0;\n  73 | var C = class {\n\u003e 74 |   static #method({ w: [x, y, z] = [4, 5, 6] } = {}) {\n     |          ^\n  75 |     assert.sameValue(x, 4);\n  76 |     assert.sameValue(y, 5);\n  77 |     assert.sameValue(z, 6); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary-trailing-comma.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary-trailing-comma.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary-trailing-comma.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | var C = class {\n\u003e 71 |   static #method({ x: [y], } = { x: [45] }) {\n     |          ^\n  72 |     assert.sameValue(y,45);\n  73 |     callCount = callCount + 1;\n  74 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary.js: Unexpected character '#' (72:9)\n  70 | var callCount = 0;\n  71 | var C = class {\n\u003e 72 |   static #method({ w: [x, y, z] = [4, 5, 6] } = { w: [7, undefined, ] }) {\n     |          ^\n  73 |     assert.sameValue(x, 7);\n  74 |     assert.sameValue(y, undefined);\n  75 |     assert.sameValue(z, undefined); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-init-skipped.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-init-skipped.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-init-skipped.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   static #method({ s: t = counter(), u: v = counter(), w: x = counter(), y: z = counter() } = { s: null, u: 0, w: false, y: '' }) {\n     |          ^\n  77 |     assert.sameValue(t, null);\n  78 |     assert.sameValue(v, 0);\n  79 |     assert.sameValue(x, false); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-init.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | var C = class {\n\u003e 71 |   static #method({ x: y = 33 } = { }) {\n     |          ^\n  72 |     assert.sameValue(y, 33);\n  73 |     assert.throws(ReferenceError, function() {\n  74 |       x; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-trailing-comma.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-trailing-comma.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-trailing-comma.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | var C = class {\n\u003e 71 |   static #method({ x: y, } = { x: 23 }) {\n     |          ^\n  72 |     assert.sameValue(y, 23);\n  73 | \n  74 |     assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | var C = class {\n\u003e 71 |   static #method({ x: y } = { x: 23 }) {\n     |          ^\n  72 |     assert.sameValue(y, 23);\n  73 |     assert.throws(ReferenceError, function() {\n  74 |       x; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-obj-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-obj-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-obj-init.js: Unexpected character '#' (74:9)\n  72 | var callCount = 0;\n  73 | var C = class {\n\u003e 74 |   static #method({ w: { x, y, z } = { x: 4, y: 5, z: 6 } } = { w: undefined }) {\n     |          ^\n  75 |     assert.sameValue(x, 4);\n  76 |     assert.sameValue(y, 5);\n  77 |     assert.sameValue(z, 6); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-obj.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-obj.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-prop-obj.js: Unexpected character '#' (72:9)\n  70 | var callCount = 0;\n  71 | var C = class {\n\u003e 72 |   static #method({ w: { x, y, z } = { x: 4, y: 5, z: 6 } } = { w: { x: undefined, z: 7 } }) {\n     |          ^\n  73 |     assert.sameValue(x, undefined);\n  74 |     assert.sameValue(y, undefined);\n  75 |     assert.sameValue(z, 7); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-rest-getter.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-rest-getter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-rest-getter.js: Unexpected character '#' (66:9)\n  64 | var callCount = 0;\n  65 | var C = class {\n\u003e 66 |   static #method({...x} = { get v() { count++; return 2; } }) {\n     |          ^\n  67 |     assert.sameValue(count, 1);\n  68 | \n  69 |     verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js: Unexpected character '#' (67:9)\n  65 | var callCount = 0;\n  66 | var C = class {\n\u003e 67 |   static #method({...rest} = o) {\n     |          ^\n  68 |     assert.sameValue(rest.x, undefined);\n  69 | \n  70 |     verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-rest-val-obj.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-rest-val-obj.js: Unexpected character '#' (65:9)\n  63 | var callCount = 0;\n  64 | var C = class {\n\u003e 65 |   static #method({a, b, ...rest} = {x: 1, y: 2, a: 5, b: 3}) {\n     |          ^\n  66 |     assert.sameValue(rest.a, undefined);\n  67 |     assert.sameValue(rest.b, undefined);\n  68 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-empty.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-empty.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-empty.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   static #method({}) {\n     |          ^\n  77 |     assert.sameValue(accessCount, 0);\n  78 |     callCount = callCount + 1;\n  79 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-arrow.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-arrow.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   static #method({ arrow = () =\u003e {} }) {\n     |          ^\n  78 |     assert.sameValue(arrow.name, 'arrow');\n  79 |     callCount = callCount + 1;\n  80 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-class.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-class.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   static #method({ cls = class {}, xCls = class X {}, xCls2 = class { static name() {} } }) {\n     |          ^\n  78 |     assert.sameValue(cls.name, 'cls');\n  79 |     assert.notSameValue(xCls.name, 'xCls');\n  80 |     assert.notSameValue(xCls2.name, 'xCls2'); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-cover.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-cover.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   static #method({ cover = (function () {}), xCover = (0, function() {})  }) {\n     |          ^\n  78 |     assert.sameValue(cover.name, 'cover');\n  79 |     assert.notSameValue(xCover.name, 'xCover');\n  80 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-fn.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-fn.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   static #method({ fn = function () {}, xFn = function x() {} }) {\n     |          ^\n  78 |     assert.sameValue(fn.name, 'fn');\n  79 |     assert.notSameValue(xFn.name, 'xFn');\n  80 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-skipped.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-skipped.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-skipped.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | var C = class {\n\u003e 77 |   static #method({ w = counter(), x = counter(), y = counter(), z = counter() }) {\n     |          ^\n  78 |     assert.sameValue(w, null);\n  79 |     assert.sameValue(x, 0);\n  80 |     assert.sameValue(y, false); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-trailing-comma.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-trailing-comma.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-trailing-comma.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | var C = class {\n\u003e 71 |   static #method({ x, }) {\n     |          ^\n  72 |     assert.sameValue(x, 23);\n  73 |     callCount = callCount + 1;\n  74 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-ary-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-ary-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-ary-init.js: Unexpected character '#' (74:9)\n  72 | var callCount = 0;\n  73 | var C = class {\n\u003e 74 |   static #method({ w: [x, y, z] = [4, 5, 6] }) {\n     |          ^\n  75 |     assert.sameValue(x, 4);\n  76 |     assert.sameValue(y, 5);\n  77 |     assert.sameValue(z, 6); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-ary-trailing-comma.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-ary-trailing-comma.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-ary-trailing-comma.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | var C = class {\n\u003e 71 |   static #method({ x: [y], }) {\n     |          ^\n  72 |     assert.sameValue(y,45);\n  73 |     callCount = callCount + 1;\n  74 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-ary.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-ary.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-ary.js: Unexpected character '#' (72:9)\n  70 | var callCount = 0;\n  71 | var C = class {\n\u003e 72 |   static #method({ w: [x, y, z] = [4, 5, 6] }) {\n     |          ^\n  73 |     assert.sameValue(x, 7);\n  74 |     assert.sameValue(y, undefined);\n  75 |     assert.sameValue(z, undefined); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-id-init-skipped.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-id-init-skipped.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-id-init-skipped.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | var C = class {\n\u003e 76 |   static #method({ s: t = counter(), u: v = counter(), w: x = counter(), y: z = counter() }) {\n     |          ^\n  77 |     assert.sameValue(t, null);\n  78 |     assert.sameValue(v, 0);\n  79 |     assert.sameValue(x, false); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-id-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-id-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-id-init.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | var C = class {\n\u003e 71 |   static #method({ x: y = 33 }) {\n     |          ^\n  72 |     assert.sameValue(y, 33);\n  73 |     assert.throws(ReferenceError, function() {\n  74 |       x; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-id-trailing-comma.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-id-trailing-comma.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-id-trailing-comma.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | var C = class {\n\u003e 71 |   static #method({ x: y, }) {\n     |          ^\n  72 |     assert.sameValue(y, 23);\n  73 | \n  74 |     assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-id.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-id.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-id.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | var C = class {\n\u003e 71 |   static #method({ x: y }) {\n     |          ^\n  72 |     assert.sameValue(y, 23);\n  73 |     assert.throws(ReferenceError, function() {\n  74 |       x; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-obj-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-obj-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-obj-init.js: Unexpected character '#' (74:9)\n  72 | var callCount = 0;\n  73 | var C = class {\n\u003e 74 |   static #method({ w: { x, y, z } = { x: 4, y: 5, z: 6 } }) {\n     |          ^\n  75 |     assert.sameValue(x, 4);\n  76 |     assert.sameValue(y, 5);\n  77 |     assert.sameValue(z, 6); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-obj.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-obj.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-prop-obj.js: Unexpected character '#' (72:9)\n  70 | var callCount = 0;\n  71 | var C = class {\n\u003e 72 |   static #method({ w: { x, y, z } = { x: 4, y: 5, z: 6 } }) {\n     |          ^\n  73 |     assert.sameValue(x, undefined);\n  74 |     assert.sameValue(y, undefined);\n  75 |     assert.sameValue(z, 7); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-rest-getter.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-rest-getter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-rest-getter.js: Unexpected character '#' (66:9)\n  64 | var callCount = 0;\n  65 | var C = class {\n\u003e 66 |   static #method({...x}) {\n     |          ^\n  67 |     assert.sameValue(count, 1);\n  68 | \n  69 |     verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-rest-skip-non-enumerable.js: Unexpected character '#' (67:9)\n  65 | var callCount = 0;\n  66 | var C = class {\n\u003e 67 |   static #method({...rest}) {\n     |          ^\n  68 |     assert.sameValue(rest.x, undefined);\n  69 | \n  70 |     verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-rest-val-obj.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-rest-val-obj.js: Unexpected character '#' (65:9)\n  63 | var callCount = 0;\n  64 | var C = class {\n\u003e 65 |   static #method({a, b, ...rest}) {\n     |          ^\n  66 |     assert.sameValue(rest.a, undefined);\n  67 |     assert.sameValue(rest.b, undefined);\n  68 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-computed-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-computed-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-computed-names.js: Unexpected token (28:25)\n  26 | \n  27 | var C = class {\n\u003e 28 |   m() { return 42; } [x] = 42; [10] = \"meep\"; [\"not initialized\"];\n     |                          ^\n  29 |   \n  30 | }\n  31 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-computed-symbol-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-computed-symbol-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-computed-symbol-names.js: Unexpected token (29:30)\n  27 | \n  28 | var C = class {\n\u003e 29 |   m() { return 42; } [x]; [y] = 42;\n     |                               ^\n  30 |   \n  31 | }\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:21)\n  66 | \n  67 | var C = class {\n\u003e 68 |   m() { return 42; } #\\u{6F};\n     |                      ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J;; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-literal-names-asi.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-literal-names-asi.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-literal-names-asi.js: Unexpected token (27:4)\n  25 | var C = class {\n  26 |   m() { return 42; } a\n\u003e 27 |   b = 42;;\n     |     ^\n  28 |   \n  29 | }\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-literal-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-literal-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-literal-names.js: Unexpected token (28:26)\n  26 | \n  27 | var C = class {\n\u003e 28 |   m() { return 42; } a; b = 42;\n     |                           ^\n  29 |   c = fn;\n  30 |   \n  31 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-private-field-usage.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-private-field-usage.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-private-field-usage.js: Unexpected character '#' (27:21)\n  25 | \n  26 | var C = class {\n\u003e 27 |   m() { return 42; } #m = 'test262';;\n     |                      ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-private-method-getter-usage.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-private-method-getter-usage.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-private-method-getter-usage.js: Unexpected character '#' (27:25)\n  25 | \n  26 | var C = class {\n\u003e 27 |   m() { return 42; } get #m() { return 'test262'; };\n     |                          ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-private-method-usage.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-private-method-usage.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-private-method-usage.js: Unexpected character '#' (27:21)\n  25 | \n  26 | var C = class {\n\u003e 27 |   m() { return 42; } #m() { return 'test262'; };\n     |                      ^\n  28 |   method() {\n  29 |     return this.#m();\n  30 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-private-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-private-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-private-names.js: Unexpected character '#' (29:21)\n  27 | \n  28 | var C = class {\n\u003e 29 |   m() { return 42; } #x; #y;\n     |                      ^\n  30 |   x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-rs-field-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-field-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-field-identifier-initializer.js: Unexpected token (62:23)\n  60 | \n  61 | var C = class {\n\u003e 62 |   m() { return 42; } $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;\n     |                        ^\n  63 |   \n  64 | }\n  65 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-rs-field-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-field-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-field-identifier.js: Missing class properties transform.\n  60 | \n  61 | var C = class {\n\u003e 62 |   m() { return 42; } $; _; \\u{6F}; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J;\n     |                      ^\n  63 |   \n  64 | }\n  65 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-rs-private-getter-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-private-getter-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-private-getter-alt.js: Unexpected character '#' (60:21)\n  58 | \n  59 | var C = class {\n\u003e 60 |   m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                      ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-rs-private-getter.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-private-getter.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-private-getter.js: Unexpected character '#' (60:21)\n  58 | \n  59 | var C = class {\n\u003e 60 |   m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                      ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-rs-private-method-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-private-method-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-private-method-alt.js: Unexpected character '#' (59:21)\n  57 | \n  58 | var C = class {\n\u003e 59 |   m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                      ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-rs-private-method.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-private-method.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-private-method.js: Unexpected character '#' (59:21)\n  57 | \n  58 | var C = class {\n\u003e 59 |   m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                      ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-rs-private-setter-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-private-setter-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-private-setter-alt.js: Unexpected character '#' (59:21)\n  57 | \n  58 | var C = class {\n\u003e 59 |   m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                      ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-rs-private-setter.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-private-setter.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-private-setter.js: Unexpected character '#' (59:21)\n  57 | \n  58 | var C = class {\n\u003e 59 |   m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                      ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-rs-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-privatename-identifier-alt.js: Unexpected character '#' (60:21)\n  58 | \n  59 | var C = class {\n\u003e 60 |   m() { return 42; } #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J;\n     |                      ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:21)\n  58 | \n  59 | var C = class {\n\u003e 60 |   m() { return 42; } #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1;\n     |                      ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-rs-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:21)\n  58 | \n  59 | var C = class {\n\u003e 60 |   m() { return 42; } #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1;\n     |                      ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-rs-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-privatename-identifier.js: Unexpected character '#' (60:21)\n  58 | \n  59 | var C = class {\n\u003e 60 |   m() { return 42; } #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J;\n     |                      ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:30)\n  62 | \n  63 | var C = class {\n\u003e 64 |   m() { return 42; } static * #$(value) {\n     |                               ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:30)\n  62 | \n  63 | var C = class {\n\u003e 64 |   m() { return 42; } static * #$(value) {\n     |                               ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:28)\n  59 | \n  60 | var C = class {\n\u003e 61 |   m() { return 42; } static #$(value) {\n     |                             ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:28)\n  59 | \n  60 | var C = class {\n\u003e 61 |   m() { return 42; } static #$(value) {\n     |                             ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:28)\n  59 | \n  60 | var C = class {\n\u003e 61 |   m() { return 42; } static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                             ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:28)\n  59 | \n  60 | var C = class {\n\u003e 61 |   m() { return 42; } static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                             ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:28)\n  59 | \n  60 | var C = class {\n\u003e 61 |   m() { return 42; } static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                             ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:28)\n  59 | \n  60 | var C = class {\n\u003e 61 |   m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                             ^\n  62 |   static $() {\n  63 |     return C.#$;\n  64 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:28)\n  59 | \n  60 | var C = class {\n\u003e 61 |   m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                             ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:28)\n  59 | \n  60 | var C = class {\n\u003e 61 |   m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;\n     |                             ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-privatename-identifier.js: Unexpected character '#' (61:28)\n  59 | \n  60 | var C = class {\n\u003e 61 |   m() { return 42; } static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                             ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-static-private-fields.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-static-private-fields.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-static-private-fields.js: Unexpected character '#' (29:28)\n  27 | \n  28 | var C = class {\n\u003e 29 |   m() { return 42; } static #x; static #y;\n     |                             ^\n  30 |   static x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-static-private-methods-with-fields.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-static-private-methods-with-fields.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-static-private-methods-with-fields.js: Unexpected character '#' (29:28)\n  27 | \n  28 | var C = class {\n\u003e 29 |   m() { return 42; } static #xVal; static #yVal;\n     |                             ^\n  30 |   static #x(value) {\n  31 |     this.#xVal = value;\n  32 |     return this.#xVal; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-static-private-methods.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-static-private-methods.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-static-private-methods.js: Unexpected character '#' (30:9)\n  28 | var C = class {\n  29 |   m() { return 42; } ;\n\u003e 30 |   static #x(value) {\n     |          ^\n  31 |     return value / 2;\n  32 |   }\n  33 |   static #y(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-method-string-literal-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-string-literal-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-string-literal-names.js: Unexpected token (26:35)\n  24 | \n  25 | var C = class {\n\u003e 26 |   m() { return 42; } 'a'; \"b\"; 'c' = 39;\n     |                                    ^\n  27 |   \"d\" = 42;\n  28 |   \n  29 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-computed-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-computed-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-computed-names.js: Unexpected token (28:32)\n  26 | \n  27 | var C = class {\n\u003e 28 |   static m() { return 42; } [x] = 42; [10] = \"meep\"; [\"not initialized\"];\n     |                                 ^\n  29 |   \n  30 | }\n  31 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-computed-symbol-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-computed-symbol-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-computed-symbol-names.js: Unexpected token (29:37)\n  27 | \n  28 | var C = class {\n\u003e 29 |   static m() { return 42; } [x]; [y] = 42;\n     |                                      ^\n  30 |   \n  31 | }\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:28)\n  66 | \n  67 | var C = class {\n\u003e 68 |   static m() { return 42; } #\\u{6F};\n     |                             ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J;; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-literal-names-asi.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-literal-names-asi.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-literal-names-asi.js: Unexpected token (27:4)\n  25 | var C = class {\n  26 |   static m() { return 42; } a\n\u003e 27 |   b = 42;;\n     |     ^\n  28 |   \n  29 | }\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-literal-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-literal-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-literal-names.js: Unexpected token (28:33)\n  26 | \n  27 | var C = class {\n\u003e 28 |   static m() { return 42; } a; b = 42;\n     |                                  ^\n  29 |   c = fn;\n  30 |   \n  31 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-private-field-usage.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-private-field-usage.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-private-field-usage.js: Unexpected character '#' (27:28)\n  25 | \n  26 | var C = class {\n\u003e 27 |   static m() { return 42; } #m = 'test262';;\n     |                             ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-private-method-getter-usage.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-private-method-getter-usage.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-private-method-getter-usage.js: Unexpected character '#' (27:32)\n  25 | \n  26 | var C = class {\n\u003e 27 |   static m() { return 42; } get #m() { return 'test262'; };\n     |                                 ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-private-method-usage.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-private-method-usage.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-private-method-usage.js: Unexpected character '#' (27:28)\n  25 | \n  26 | var C = class {\n\u003e 27 |   static m() { return 42; } #m() { return 'test262'; };\n     |                             ^\n  28 |   method() {\n  29 |     return this.#m();\n  30 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-private-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-private-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-private-names.js: Unexpected character '#' (29:28)\n  27 | \n  28 | var C = class {\n\u003e 29 |   static m() { return 42; } #x; #y;\n     |                             ^\n  30 |   x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-field-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-field-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-field-identifier-initializer.js: Unexpected token (62:30)\n  60 | \n  61 | var C = class {\n\u003e 62 |   static m() { return 42; } $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;\n     |                               ^\n  63 |   \n  64 | }\n  65 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-field-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-field-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-field-identifier.js: Missing class properties transform.\n  60 | \n  61 | var C = class {\n\u003e 62 |   static m() { return 42; } $; _; \\u{6F}; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J;\n     |                             ^\n  63 |   \n  64 | }\n  65 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-private-getter-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-private-getter-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-private-getter-alt.js: Unexpected character '#' (60:28)\n  58 | \n  59 | var C = class {\n\u003e 60 |   static m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                             ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-private-getter.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-private-getter.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-private-getter.js: Unexpected character '#' (60:28)\n  58 | \n  59 | var C = class {\n\u003e 60 |   static m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                             ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-private-method-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-private-method-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-private-method-alt.js: Unexpected character '#' (59:28)\n  57 | \n  58 | var C = class {\n\u003e 59 |   static m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                             ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-private-method.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-private-method.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-private-method.js: Unexpected character '#' (59:28)\n  57 | \n  58 | var C = class {\n\u003e 59 |   static m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                             ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-private-setter-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-private-setter-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-private-setter-alt.js: Unexpected character '#' (59:28)\n  57 | \n  58 | var C = class {\n\u003e 59 |   static m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                             ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-private-setter.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-private-setter.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-private-setter.js: Unexpected character '#' (59:28)\n  57 | \n  58 | var C = class {\n\u003e 59 |   static m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                             ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-privatename-identifier-alt.js: Unexpected character '#' (60:28)\n  58 | \n  59 | var C = class {\n\u003e 60 |   static m() { return 42; } #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J;\n     |                             ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:28)\n  58 | \n  59 | var C = class {\n\u003e 60 |   static m() { return 42; } #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1;\n     |                             ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:28)\n  58 | \n  59 | var C = class {\n\u003e 60 |   static m() { return 42; } #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1;\n     |                             ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-privatename-identifier.js: Unexpected character '#' (60:28)\n  58 | \n  59 | var C = class {\n\u003e 60 |   static m() { return 42; } #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J;\n     |                             ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:37)\n  62 | \n  63 | var C = class {\n\u003e 64 |   static m() { return 42; } static * #$(value) {\n     |                                      ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:37)\n  62 | \n  63 | var C = class {\n\u003e 64 |   static m() { return 42; } static * #$(value) {\n     |                                      ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:35)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static m() { return 42; } static #$(value) {\n     |                                    ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:35)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static m() { return 42; } static #$(value) {\n     |                                    ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:35)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static m() { return 42; } static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                                    ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:35)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static m() { return 42; } static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                                    ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:35)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static m() { return 42; } static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                                    ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:35)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                                    ^\n  62 |   static $() {\n  63 |     return C.#$;\n  64 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:35)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                                    ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:35)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;\n     |                                    ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-privatename-identifier.js: Unexpected character '#' (61:35)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static m() { return 42; } static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                                    ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-static-private-fields.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-static-private-fields.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-static-private-fields.js: Unexpected character '#' (29:35)\n  27 | \n  28 | var C = class {\n\u003e 29 |   static m() { return 42; } static #x; static #y;\n     |                                    ^\n  30 |   static x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-static-private-methods-with-fields.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-static-private-methods-with-fields.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-static-private-methods-with-fields.js: Unexpected character '#' (29:35)\n  27 | \n  28 | var C = class {\n\u003e 29 |   static m() { return 42; } static #xVal; static #yVal;\n     |                                    ^\n  30 |   static #x(value) {\n  31 |     this.#xVal = value;\n  32 |     return this.#xVal; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-static-private-methods.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-static-private-methods.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-static-private-methods.js: Unexpected character '#' (30:9)\n  28 | var C = class {\n  29 |   static m() { return 42; } ;\n\u003e 30 |   static #x(value) {\n     |          ^\n  31 |     return value / 2;\n  32 |   }\n  33 |   static #y(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/after-same-line-static-method-string-literal-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-string-literal-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-string-literal-names.js: Unexpected token (26:42)\n  24 | \n  25 | var C = class {\n\u003e 26 |   static m() { return 42; } 'a'; \"b\"; 'c' = 39;\n     |                                           ^\n  27 |   \"d\" = 42;\n  28 |   \n  29 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-contains-superproperty-1.js-strict:true": "test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-contains-superproperty-1.js: SyntaxError: test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-contains-superproperty-1.js: Unexpected token (30:4)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   x = eval('executed = true; () =\u003e super.x;');\n     |     ^\n  31 | };\n  32 | \n  33 | new C().x(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-contains-superproperty-2.js-strict:true": "test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-contains-superproperty-2.js: SyntaxError: test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-contains-superproperty-2.js: Unexpected token (27:4)\n  25 | var A = class {}\n  26 | var C = class extends A {\n\u003e 27 |   x = eval('executed = true; () =\u003e super[\"x\"];');\n     |     ^\n  28 | };\n  29 | \n  30 | new C().x(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall-1.js-strict:true": "test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall-1.js: SyntaxError: test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall-1.js: Unexpected token (30:4)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   x = eval('executed = true; () =\u003e super()[\"x\"];');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall-2.js-strict:true": "test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall-2.js: SyntaxError: test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall-2.js: Unexpected token (23:4)\n  21 | var A = class {}\n  22 | var C = class extends A {\n\u003e 23 |   x = eval('executed = true; () =\u003e super().x;');\n     |     ^\n  24 | }\n  25 | \n  26 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall.js-strict:true": "test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall.js: SyntaxError: test/language/expressions/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall.js: Unexpected token (30:4)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   x = eval('executed = true; () =\u003e super();');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-contains-superproperty-1.js-strict:true": "test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-contains-superproperty-1.js: SyntaxError: test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-contains-superproperty-1.js: Unexpected token (29:4)\n  27 | var A = class {}\n  28 | var C = class extends A {\n\u003e 29 |   x = (0, eval)('() =\u003e super.x;');\n     |     ^\n  30 | };\n  31 | \n  32 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-contains-superproperty-2.js-strict:true": "test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-contains-superproperty-2.js: SyntaxError: test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-contains-superproperty-2.js: Unexpected token (26:4)\n  24 | var A = class {}\n  25 | var C = class extends A {\n\u003e 26 |   x = (0, eval)('() =\u003e super[\"x\"];');\n     |     ^\n  27 | };\n  28 | \n  29 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall-1.js-strict:true": "test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall-1.js: SyntaxError: test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall-1.js: Unexpected token (29:4)\n  27 | var A = class {}\n  28 | var C = class extends A {\n\u003e 29 |   x = (0, eval)('() =\u003e super()[\"x\"];');\n     |     ^\n  30 | }\n  31 | \n  32 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall-2.js-strict:true": "test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall-2.js: SyntaxError: test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall-2.js: Unexpected token (22:4)\n  20 | var A = class {}\n  21 | var C = class extends A {\n\u003e 22 |   x = (0, eval)('() =\u003e super().x;');\n     |     ^\n  23 | }\n  24 | \n  25 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall.js-strict:true": "test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall.js: SyntaxError: test/language/expressions/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall.js: Unexpected token (29:4)\n  27 | var A = class {}\n  28 | var C = class extends A {\n\u003e 29 |   x = (0, eval)('() =\u003e super();');\n     |     ^\n  30 | }\n  31 | \n  32 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-direct-eval-err-contains-arguments.js-strict:true": "test/language/expressions/class/elements/arrow-body-direct-eval-err-contains-arguments.js: SyntaxError: test/language/expressions/class/elements/arrow-body-direct-eval-err-contains-arguments.js: Unexpected token (30:4)\n  28 | let executed = false;\n  29 | let C = class {\n\u003e 30 |   x = eval('executed = true; () =\u003e arguments;');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-direct-eval-err-contains-newtarget.js-strict:true": "test/language/expressions/class/elements/arrow-body-direct-eval-err-contains-newtarget.js: SyntaxError: test/language/expressions/class/elements/arrow-body-direct-eval-err-contains-newtarget.js: Unexpected token (29:4)\n  27 | var executed = false;\n  28 | var C = class {\n\u003e 29 |   x = eval('executed = true; () =\u003e new.target;');\n     |     ^\n  30 | }\n  31 | \n  32 | var c = new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-indirect-eval-err-contains-arguments.js-strict:true": "test/language/expressions/class/elements/arrow-body-indirect-eval-err-contains-arguments.js: SyntaxError: test/language/expressions/class/elements/arrow-body-indirect-eval-err-contains-arguments.js: Unexpected token (29:4)\n  27 | \n  28 | var C = class {\n\u003e 29 |   x = (0, eval)('() =\u003e arguments;');\n     |     ^\n  30 | }\n  31 | \n  32 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-indirect-eval-err-contains-newtarget.js-strict:true": "test/language/expressions/class/elements/arrow-body-indirect-eval-err-contains-newtarget.js: SyntaxError: test/language/expressions/class/elements/arrow-body-indirect-eval-err-contains-newtarget.js: Unexpected token (28:4)\n  26 | \n  27 | var C = class {\n\u003e 28 |   x = (0, eval)('() =\u003e new.target;');\n     |     ^\n  29 | }\n  30 | \n  31 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-private-derived-cls-direct-eval-contains-superproperty-1.js-strict:true": "test/language/expressions/class/elements/arrow-body-private-derived-cls-direct-eval-contains-superproperty-1.js: SyntaxError: test/language/expressions/class/elements/arrow-body-private-derived-cls-direct-eval-contains-superproperty-1.js: Unexpected character '#' (30:2)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   #x = eval('executed = true; () =\u003e super.x;');\n     |   ^\n  31 |   x() {\n  32 |     this.#x();\n  33 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-private-derived-cls-direct-eval-contains-superproperty-2.js-strict:true": "test/language/expressions/class/elements/arrow-body-private-derived-cls-direct-eval-contains-superproperty-2.js: SyntaxError: test/language/expressions/class/elements/arrow-body-private-derived-cls-direct-eval-contains-superproperty-2.js: Unexpected character '#' (27:2)\n  25 | var A = class {}\n  26 | var C = class extends A {\n\u003e 27 |   #x = eval('executed = true; () =\u003e super[\"x\"];');\n     |   ^\n  28 |   x() {\n  29 |     this.#x();\n  30 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-private-derived-cls-direct-eval-err-contains-supercall-1.js-strict:true": "test/language/expressions/class/elements/arrow-body-private-derived-cls-direct-eval-err-contains-supercall-1.js: SyntaxError: test/language/expressions/class/elements/arrow-body-private-derived-cls-direct-eval-err-contains-supercall-1.js: Unexpected character '#' (30:2)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   #x = eval('executed = true; () =\u003e super()[\"x\"];');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-private-derived-cls-direct-eval-err-contains-supercall-2.js-strict:true": "test/language/expressions/class/elements/arrow-body-private-derived-cls-direct-eval-err-contains-supercall-2.js: SyntaxError: test/language/expressions/class/elements/arrow-body-private-derived-cls-direct-eval-err-contains-supercall-2.js: Unexpected character '#' (23:2)\n  21 | var A = class {}\n  22 | var C = class extends A {\n\u003e 23 |   #x = eval('executed = true; () =\u003e super().x;');\n     |   ^\n  24 | }\n  25 | \n  26 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-private-derived-cls-direct-eval-err-contains-supercall.js-strict:true": "test/language/expressions/class/elements/arrow-body-private-derived-cls-direct-eval-err-contains-supercall.js: SyntaxError: test/language/expressions/class/elements/arrow-body-private-derived-cls-direct-eval-err-contains-supercall.js: Unexpected character '#' (30:2)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   #x = eval('executed = true; () =\u003e super();');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-private-derived-cls-indirect-eval-contains-superproperty-1.js-strict:true": "test/language/expressions/class/elements/arrow-body-private-derived-cls-indirect-eval-contains-superproperty-1.js: SyntaxError: test/language/expressions/class/elements/arrow-body-private-derived-cls-indirect-eval-contains-superproperty-1.js: Unexpected character '#' (29:2)\n  27 | var A = class {}\n  28 | var C = class extends A {\n\u003e 29 |   #x = (0, eval)('() =\u003e super.x;');\n     |   ^\n  30 | };\n  31 | \n  32 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-private-derived-cls-indirect-eval-contains-superproperty-2.js-strict:true": "test/language/expressions/class/elements/arrow-body-private-derived-cls-indirect-eval-contains-superproperty-2.js: SyntaxError: test/language/expressions/class/elements/arrow-body-private-derived-cls-indirect-eval-contains-superproperty-2.js: Unexpected character '#' (26:2)\n  24 | var A = class {}\n  25 | var C = class extends A {\n\u003e 26 |   #x = (0, eval)('() =\u003e super[\"x\"];');\n     |   ^\n  27 | };\n  28 | \n  29 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-private-derived-cls-indirect-eval-err-contains-supercall-1.js-strict:true": "test/language/expressions/class/elements/arrow-body-private-derived-cls-indirect-eval-err-contains-supercall-1.js: SyntaxError: test/language/expressions/class/elements/arrow-body-private-derived-cls-indirect-eval-err-contains-supercall-1.js: Unexpected character '#' (29:2)\n  27 | var A = class {}\n  28 | var C = class extends A {\n\u003e 29 |   #x = (0, eval)('() =\u003e super()[\"x\"];');\n     |   ^\n  30 | }\n  31 | \n  32 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-private-derived-cls-indirect-eval-err-contains-supercall-2.js-strict:true": "test/language/expressions/class/elements/arrow-body-private-derived-cls-indirect-eval-err-contains-supercall-2.js: SyntaxError: test/language/expressions/class/elements/arrow-body-private-derived-cls-indirect-eval-err-contains-supercall-2.js: Unexpected character '#' (22:2)\n  20 | var A = class {}\n  21 | var C = class extends A {\n\u003e 22 |   #x = (0, eval)('() =\u003e super().x;');\n     |   ^\n  23 | }\n  24 | \n  25 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-private-derived-cls-indirect-eval-err-contains-supercall.js-strict:true": "test/language/expressions/class/elements/arrow-body-private-derived-cls-indirect-eval-err-contains-supercall.js: SyntaxError: test/language/expressions/class/elements/arrow-body-private-derived-cls-indirect-eval-err-contains-supercall.js: Unexpected character '#' (29:2)\n  27 | var A = class {}\n  28 | var C = class extends A {\n\u003e 29 |   #x = (0, eval)('() =\u003e super();');\n     |   ^\n  30 | }\n  31 | \n  32 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-private-direct-eval-err-contains-arguments.js-strict:true": "test/language/expressions/class/elements/arrow-body-private-direct-eval-err-contains-arguments.js: SyntaxError: test/language/expressions/class/elements/arrow-body-private-direct-eval-err-contains-arguments.js: Unexpected character '#' (29:2)\n  27 | \n  28 | var C = class {\n\u003e 29 |   #x = eval('() =\u003e arguments;');\n     |   ^\n  30 |   x() {\n  31 |     this.#x();\n  32 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-private-direct-eval-err-contains-newtarget.js-strict:true": "test/language/expressions/class/elements/arrow-body-private-direct-eval-err-contains-newtarget.js: SyntaxError: test/language/expressions/class/elements/arrow-body-private-direct-eval-err-contains-newtarget.js: Unexpected character '#' (29:2)\n  27 | var executed = false;\n  28 | var C = class {\n\u003e 29 |   #x = eval('executed = true; () =\u003e new.target;');\n     |   ^\n  30 |   x() {\n  31 |     this.#x();\n  32 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-private-indirect-eval-err-contains-arguments.js-strict:true": "test/language/expressions/class/elements/arrow-body-private-indirect-eval-err-contains-arguments.js: SyntaxError: test/language/expressions/class/elements/arrow-body-private-indirect-eval-err-contains-arguments.js: Unexpected character '#' (29:2)\n  27 | \n  28 | var C = class {\n\u003e 29 |   #x = (0, eval)('() =\u003e arguments;');\n     |   ^\n  30 |   x() {\n  31 |     this.#x();\n  32 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/arrow-body-private-indirect-eval-err-contains-newtarget.js-strict:true": "test/language/expressions/class/elements/arrow-body-private-indirect-eval-err-contains-newtarget.js: SyntaxError: test/language/expressions/class/elements/arrow-body-private-indirect-eval-err-contains-newtarget.js: Unexpected character '#' (28:2)\n  26 | \n  27 | var C = class {\n\u003e 28 |   #x = (0, eval)('() =\u003e new.target;');\n     |   ^\n  29 | }\n  30 | \n  31 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/class-name-static-initializer-anonymous.js-strict:true": "test/language/expressions/class/elements/class-name-static-initializer-anonymous.js: SyntaxError: test/language/expressions/class/elements/class-name-static-initializer-anonymous.js: Unexpected token (24:13)\n  22 | \n  23 | var C = class {\n\u003e 24 |     static f = (className = this.name);\n     |              ^\n  25 | }\n  26 | \n  27 | assert.sameValue(className, \"C\"); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/class-name-static-initializer-decl.js-strict:true": "test/language/expressions/class/elements/class-name-static-initializer-decl.js: SyntaxError: test/language/expressions/class/elements/class-name-static-initializer-decl.js: Unexpected token (24:13)\n  22 | \n  23 | class C {\n\u003e 24 |     static f = (className = this.name);\n     |              ^\n  25 | }\n  26 | \n  27 | assert.sameValue(className, \"C\"); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/class-name-static-initializer-default-export.js-strict:true": "test/language/expressions/class/elements/class-name-static-initializer-default-export.js: SyntaxError: test/language/expressions/class/elements/class-name-static-initializer-default-export.js: Unexpected token (25:13)\n  23 | \n  24 | export default class {\n\u003e 25 |     static f = (className = this.name);\n     |              ^\n  26 | }\n  27 | \n  28 | assert.sameValue(className, \"default\"); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/class-name-static-initializer-expr.js-strict:true": "test/language/expressions/class/elements/class-name-static-initializer-expr.js: SyntaxError: test/language/expressions/class/elements/class-name-static-initializer-expr.js: Unexpected token (24:13)\n  22 | \n  23 | var expr = class C {\n\u003e 24 |     static f = (className = this.name);\n     |              ^\n  25 | }\n  26 | \n  27 | assert.sameValue(className, \"C\"); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/computed-name-toprimitive-symbol.js-strict:true": "test/language/expressions/class/elements/computed-name-toprimitive-symbol.js: SyntaxError: test/language/expressions/class/elements/computed-name-toprimitive-symbol.js: Unexpected token (69:9)\n  67 | \n  68 | var C = class {\n\u003e 69 |   [obj1] = 42;\n     |          ^\n  70 |   [obj2] = 43;\n  71 |   [obj3] = 44;\n  72 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/computed-name-toprimitive.js-strict:true": "test/language/expressions/class/elements/computed-name-toprimitive.js: SyntaxError: test/language/expressions/class/elements/computed-name-toprimitive.js: Unexpected token (66:9)\n  64 | \n  65 | var C = class {\n\u003e 66 |   [obj1] = 42;\n     |          ^\n  67 |   [obj2] = 43;\n  68 |   [obj3] = 44;\n  69 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/ctor-called-after-fields-init.js-strict:true": "test/language/expressions/class/elements/ctor-called-after-fields-init.js: SyntaxError: test/language/expressions/class/elements/ctor-called-after-fields-init.js: Unexpected token (29:6)\n  27 |     ctor = this.foo;\n  28 |   }\n\u003e 29 |   foo = 42;\n     |       ^\n  30 | }\n  31 | \n  32 | var c = new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/derived-cls-direct-eval-contains-superproperty-1.js-strict:true": "test/language/expressions/class/elements/derived-cls-direct-eval-contains-superproperty-1.js: SyntaxError: test/language/expressions/class/elements/derived-cls-direct-eval-contains-superproperty-1.js: Unexpected token (30:4)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   x = eval('executed = true; super.x;');\n     |     ^\n  31 | };\n  32 | \n  33 | new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/derived-cls-direct-eval-contains-superproperty-2.js-strict:true": "test/language/expressions/class/elements/derived-cls-direct-eval-contains-superproperty-2.js: SyntaxError: test/language/expressions/class/elements/derived-cls-direct-eval-contains-superproperty-2.js: Unexpected token (27:4)\n  25 | var A = class {}\n  26 | var C = class extends A {\n\u003e 27 |   x = eval('executed = true; super[\"x\"];');\n     |     ^\n  28 | };\n  29 | \n  30 | new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/derived-cls-direct-eval-err-contains-supercall-1.js-strict:true": "test/language/expressions/class/elements/derived-cls-direct-eval-err-contains-supercall-1.js: SyntaxError: test/language/expressions/class/elements/derived-cls-direct-eval-err-contains-supercall-1.js: Unexpected token (30:4)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   x = eval('executed = true; super()[\"x\"];');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/derived-cls-direct-eval-err-contains-supercall-2.js-strict:true": "test/language/expressions/class/elements/derived-cls-direct-eval-err-contains-supercall-2.js: SyntaxError: test/language/expressions/class/elements/derived-cls-direct-eval-err-contains-supercall-2.js: Unexpected token (23:4)\n  21 | var A = class {}\n  22 | var C = class extends A {\n\u003e 23 |   x = eval('executed = true; super().x;');\n     |     ^\n  24 | }\n  25 | \n  26 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/derived-cls-direct-eval-err-contains-supercall.js-strict:true": "test/language/expressions/class/elements/derived-cls-direct-eval-err-contains-supercall.js: SyntaxError: test/language/expressions/class/elements/derived-cls-direct-eval-err-contains-supercall.js: Unexpected token (30:4)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   x = eval('executed = true; super();');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/derived-cls-indirect-eval-contains-superproperty-1.js-strict:true": "test/language/expressions/class/elements/derived-cls-indirect-eval-contains-superproperty-1.js: SyntaxError: test/language/expressions/class/elements/derived-cls-indirect-eval-contains-superproperty-1.js: Unexpected token (30:4)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   x = (0, eval)('executed = true; super.x;');\n     |     ^\n  31 | };\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/derived-cls-indirect-eval-contains-superproperty-2.js-strict:true": "test/language/expressions/class/elements/derived-cls-indirect-eval-contains-superproperty-2.js: SyntaxError: test/language/expressions/class/elements/derived-cls-indirect-eval-contains-superproperty-2.js: Unexpected token (27:4)\n  25 | var A = class {}\n  26 | var C = class extends A {\n\u003e 27 |   x = (0, eval)('executed = true; super[\"x\"];');\n     |     ^\n  28 | };\n  29 | \n  30 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/derived-cls-indirect-eval-err-contains-supercall-1.js-strict:true": "test/language/expressions/class/elements/derived-cls-indirect-eval-err-contains-supercall-1.js: SyntaxError: test/language/expressions/class/elements/derived-cls-indirect-eval-err-contains-supercall-1.js: Unexpected token (30:4)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   x = (0, eval)('executed = true; super()[\"x\"];');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/derived-cls-indirect-eval-err-contains-supercall-2.js-strict:true": "test/language/expressions/class/elements/derived-cls-indirect-eval-err-contains-supercall-2.js: SyntaxError: test/language/expressions/class/elements/derived-cls-indirect-eval-err-contains-supercall-2.js: Unexpected token (23:4)\n  21 | var A = class {}\n  22 | var C = class extends A {\n\u003e 23 |   x = (0, eval)('executed = true; super().x;');\n     |     ^\n  24 | }\n  25 | \n  26 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/derived-cls-indirect-eval-err-contains-supercall.js-strict:true": "test/language/expressions/class/elements/derived-cls-indirect-eval-err-contains-supercall.js: SyntaxError: test/language/expressions/class/elements/derived-cls-indirect-eval-err-contains-supercall.js: Unexpected token (30:4)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   x = (0, eval)('executed = true; super();');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/direct-eval-err-contains-arguments.js-strict:true": "test/language/expressions/class/elements/direct-eval-err-contains-arguments.js: SyntaxError: test/language/expressions/class/elements/direct-eval-err-contains-arguments.js: Unexpected token (30:4)\n  28 | var executed = false;\n  29 | var C = class {\n\u003e 30 |   x = eval('executed = true; arguments;');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/direct-eval-err-contains-newtarget.js-strict:true": "test/language/expressions/class/elements/direct-eval-err-contains-newtarget.js: SyntaxError: test/language/expressions/class/elements/direct-eval-err-contains-newtarget.js: Unexpected token (29:4)\n  27 | var executed = false;\n  28 | var C = class {\n\u003e 29 |   x = eval('executed = true; new.target;');\n     |     ^\n  30 | }\n  31 | \n  32 | var c = new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/evaluation-error/computed-name-referenceerror.js-strict:true": "test/language/expressions/class/elements/evaluation-error/computed-name-referenceerror.js: SyntaxError: test/language/expressions/class/elements/evaluation-error/computed-name-referenceerror.js: Unexpected token (53:12)\n  51 | function evaluate() {\n  52 |   var C = class {\n\u003e 53 |     [noRef] = fn();\n     |             ^\n  54 |   };\n  55 | }\n  56 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/evaluation-error/computed-name-toprimitive-err.js-strict:true": "test/language/expressions/class/elements/evaluation-error/computed-name-toprimitive-err.js: SyntaxError: test/language/expressions/class/elements/evaluation-error/computed-name-toprimitive-err.js: Missing class properties transform.\n  53 | function evaluate() {\n  54 |   var C = class {\n\u003e 55 |     [obj]\n     |     ^\n  56 |   };\n  57 | }\n  58 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/evaluation-error/computed-name-toprimitive-returns-noncallable.js-strict:true": "test/language/expressions/class/elements/evaluation-error/computed-name-toprimitive-returns-noncallable.js: SyntaxError: test/language/expressions/class/elements/evaluation-error/computed-name-toprimitive-returns-noncallable.js: Unexpected token (53:10)\n  51 | function evaluate() {\n  52 |   var C = class {\n\u003e 53 |     [obj] = refErrorIfEvaluated;\n     |           ^\n  54 |   };\n  55 | }\n  56 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/evaluation-error/computed-name-toprimitive-returns-nonobject.js-strict:true": "test/language/expressions/class/elements/evaluation-error/computed-name-toprimitive-returns-nonobject.js: SyntaxError: test/language/expressions/class/elements/evaluation-error/computed-name-toprimitive-returns-nonobject.js: Unexpected token (53:10)\n  51 | function evaluate() {\n  52 |   var C = class {\n\u003e 53 |     [obj] = refErrorIfEvaluated;\n     |           ^\n  54 |   };\n  55 | }\n  56 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/evaluation-error/computed-name-tostring-err.js-strict:true": "test/language/expressions/class/elements/evaluation-error/computed-name-tostring-err.js: SyntaxError: test/language/expressions/class/elements/evaluation-error/computed-name-tostring-err.js: Missing class properties transform.\n  53 | function evaluate() {\n  54 |   var C = class {\n\u003e 55 |     [obj]\n     |     ^\n  56 |   };\n  57 | }\n  58 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/evaluation-error/computed-name-valueof-err.js-strict:true": "test/language/expressions/class/elements/evaluation-error/computed-name-valueof-err.js: SyntaxError: test/language/expressions/class/elements/evaluation-error/computed-name-valueof-err.js: Missing class properties transform.\n  54 | function evaluate() {\n  55 |   var C = class {\n\u003e 56 |     [obj]\n     |     ^\n  57 |   };\n  58 | }\n  59 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/field-declaration.js-strict:true": "test/language/expressions/class/elements/field-declaration.js: SyntaxError: test/language/expressions/class/elements/field-declaration.js: Unexpected token (54:4)\n  52 | \n  53 | var C = class {\n\u003e 54 |   f = 'test262';\n     |     ^\n  55 |   'g';\n  56 |   0 = 'bar';\n  57 |   [computed]; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/fields-anonymous-function-length.js-strict:true": "test/language/expressions/class/elements/fields-anonymous-function-length.js: SyntaxError: test/language/expressions/class/elements/fields-anonymous-function-length.js: Unexpected token (37:8)\n  35 | \n  36 | var C = class {\n\u003e 37 |   field = function() {};\n     |         ^\n  38 |   #field = (a, b, c, d) =\u003e undefined;\n  39 | \n  40 |   accessPrivateField() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/fields-asi-1.js-strict:true": "test/language/expressions/class/elements/fields-asi-1.js: SyntaxError: test/language/expressions/class/elements/fields-asi-1.js: Unexpected token (13:4)\n  11 | var obj = {}\n  12 | var C = class {\n\u003e 13 |   x = obj\n     |     ^\n  14 |   ['lol'] = 42\n  15 | }\n  16 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/fields-asi-2.js-strict:true": "test/language/expressions/class/elements/fields-asi-2.js: SyntaxError: test/language/expressions/class/elements/fields-asi-2.js: Unexpected token (12:4)\n  10 | \n  11 | var C = class {\n\u003e 12 |   x = \"lol\"\n     |     ^\n  13 |   [1]\n  14 | }\n  15 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/fields-asi-5.js-strict:true": "test/language/expressions/class/elements/fields-asi-5.js: SyntaxError: test/language/expressions/class/elements/fields-asi-5.js: Unexpected token (16:4)\n  14 | \n  15 | var C = class {\n\u003e 16 |   a = x\n     |     ^\n  17 |   in\n  18 |   z\n  19 |   b = y at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/fields-computed-name-static-propname-prototype.js-strict:true": "test/language/expressions/class/elements/fields-computed-name-static-propname-prototype.js: SyntaxError: test/language/expressions/class/elements/fields-computed-name-static-propname-prototype.js: Unexpected token (25:15)\n  23 | assert.throws(TypeError, function() {\n  24 |   (0, class {\n\u003e 25 |     static [x] = 42;\n     |                ^\n  26 |   });\n  27 | });\n  28 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/fields-multiple-definitions-static-private-methods-proxy.js-strict:true": "test/language/expressions/class/elements/fields-multiple-definitions-static-private-methods-proxy.js: SyntaxError: test/language/expressions/class/elements/fields-multiple-definitions-static-private-methods-proxy.js: Unexpected character '#' (27:9)\n  25 | \n  26 | var C = class {\n\u003e 27 |   static #x(value) {\n     |          ^\n  28 |     return 1;\n  29 |   }\n  30 |   static x() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/fields-run-once-on-double-super.js-strict:true": "test/language/expressions/class/elements/fields-run-once-on-double-super.js: SyntaxError: test/language/expressions/class/elements/fields-run-once-on-double-super.js: Unexpected token (28:8)\n  26 | \n  27 | var C = class extends Base {\n\u003e 28 |   field = ++fieldInitCalled;\n     |         ^\n  29 |   constructor() {\n  30 |     assert.sameValue(baseCtorCalled, 0);\n  31 |     assert.sameValue(fieldInitCalled, 0); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/grammar-private-field-optional-chaining.js-strict:true": "test/language/expressions/class/elements/grammar-private-field-optional-chaining.js: SyntaxError: test/language/expressions/class/elements/grammar-private-field-optional-chaining.js: Unexpected character '#' (24:2)\n  22 | \n  23 | var C = class {\n\u003e 24 |   #m = 'test262';\n     |   ^\n  25 | \n  26 |   static access(obj) {\n  27 |     return obj?.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/indirect-eval-err-contains-arguments.js-strict:true": "test/language/expressions/class/elements/indirect-eval-err-contains-arguments.js: SyntaxError: test/language/expressions/class/elements/indirect-eval-err-contains-arguments.js: Unexpected token (30:4)\n  28 | var executed = false;\n  29 | var C = class {\n\u003e 30 |   x = (0, eval)('executed = true; arguments;');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/indirect-eval-err-contains-newtarget.js-strict:true": "test/language/expressions/class/elements/indirect-eval-err-contains-newtarget.js: SyntaxError: test/language/expressions/class/elements/indirect-eval-err-contains-newtarget.js: Unexpected token (29:4)\n  27 | var executed = false;\n  28 | var C = class {\n\u003e 29 |   x = (0, eval)('executed = true; new.target;');\n     |     ^\n  30 | }\n  31 | \n  32 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/init-err-evaluation.js-strict:true": "test/language/expressions/class/elements/init-err-evaluation.js: SyntaxError: test/language/expressions/class/elements/init-err-evaluation.js: Unexpected token (28:4)\n  26 | \n  27 | var C = class {\n\u003e 28 |   x = fn1();\n     |     ^\n  29 |   y = fn2();\n  30 |   z = fn1();\n  31 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/init-value-defined-after-class.js-strict:true": "test/language/expressions/class/elements/init-value-defined-after-class.js: SyntaxError: test/language/expressions/class/elements/init-value-defined-after-class.js: Unexpected token (27:6)\n  25 | \n  26 | var C = class {\n\u003e 27 |   [x] = x;\n     |       ^\n  28 | }\n  29 | \n  30 | var c1 = new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/init-value-incremental.js-strict:true": "test/language/expressions/class/elements/init-value-incremental.js: SyntaxError: test/language/expressions/class/elements/init-value-incremental.js: Unexpected token (36:8)\n  34 | \n  35 | var C = class {\n\u003e 36 |   [x++] = x++;\n     |         ^\n  37 |   [x++] = x++;\n  38 | }\n  39 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/intercalated-static-non-static-computed-fields.js-strict:true": "test/language/expressions/class/elements/intercalated-static-non-static-computed-fields.js: SyntaxError: test/language/expressions/class/elements/intercalated-static-non-static-computed-fields.js: Unexpected token (44:8)\n  42 | \n  43 | var C = class {\n\u003e 44 |   [i++] = i++;\n     |         ^\n  45 |   static [i++] = i++;\n  46 |   [i++] = i++;\n  47 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-computed-names.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-computed-names.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | var C = class {\n\u003e 28 |   foo = \"foobar\";\n     |       ^\n  29 |   m() { return 42 }\n  30 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"]\n  31 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-computed-symbol-names.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-computed-symbol-names.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-computed-symbol-names.js: Unexpected token (29:6)\n  27 | \n  28 | var C = class {\n\u003e 29 |   foo = \"foobar\";\n     |       ^\n  30 |   m() { return 42 }\n  31 |   [x]; [y] = 42\n  32 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected token (68:6)\n  66 | \n  67 | var C = class {\n\u003e 68 |   foo = \"foobar\";\n     |       ^\n  69 |   m() { return 42 }\n  70 |   #\\u{6F};\n  71 |   #\\u2118; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-literal-names-asi.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-literal-names-asi.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-literal-names-asi.js: Unexpected token (26:6)\n  24 | \n  25 | var C = class {\n\u003e 26 |   foo = \"foobar\";\n     |       ^\n  27 |   m() { return 42 }\n  28 |   a\n  29 |   b = 42; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-literal-names.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-literal-names.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-literal-names.js: Unexpected token (28:6)\n  26 | \n  27 | var C = class {\n\u003e 28 |   foo = \"foobar\";\n     |       ^\n  29 |   m() { return 42 }\n  30 |   a; b = 42;\n  31 |   c = fn at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-private-field-usage.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-private-field-usage.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-private-field-usage.js: Unexpected token (27:6)\n  25 | \n  26 | var C = class {\n\u003e 27 |   foo = \"foobar\";\n     |       ^\n  28 |   m() { return 42 }\n  29 |   #m = 'test262';\n  30 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-private-method-getter-usage.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-private-method-getter-usage.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-private-method-getter-usage.js: Unexpected token (27:6)\n  25 | \n  26 | var C = class {\n\u003e 27 |   foo = \"foobar\";\n     |       ^\n  28 |   m() { return 42 }\n  29 |   get #m() { return 'test262'; }\n  30 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-private-method-usage.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-private-method-usage.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-private-method-usage.js: Unexpected token (27:6)\n  25 | \n  26 | var C = class {\n\u003e 27 |   foo = \"foobar\";\n     |       ^\n  28 |   m() { return 42 }\n  29 |   #m() { return 'test262'; }\n  30 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-private-names.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-private-names.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-private-names.js: Unexpected token (29:6)\n  27 | \n  28 | var C = class {\n\u003e 29 |   foo = \"foobar\";\n     |       ^\n  30 |   m() { return 42 }\n  31 |   #x; #y\n  32 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-rs-field-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-field-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-field-identifier-initializer.js: Unexpected token (62:6)\n  60 | \n  61 | var C = class {\n\u003e 62 |   foo = \"foobar\";\n     |       ^\n  63 |   m() { return 42 }\n  64 |   $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1\n  65 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-rs-field-identifier.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-field-identifier.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-field-identifier.js: Unexpected token (62:6)\n  60 | \n  61 | var C = class {\n\u003e 62 |   foo = \"foobar\";\n     |       ^\n  63 |   m() { return 42 }\n  64 |   $; _; \\u{6F}; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J\n  65 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-rs-private-getter-alt.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-private-getter-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-private-getter-alt.js: Unexpected token (60:6)\n  58 | \n  59 | var C = class {\n\u003e 60 |   foo = \"foobar\";\n     |       ^\n  61 |   m() { return 42 }\n  62 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n  63 |   get #$() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-rs-private-getter.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-private-getter.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-private-getter.js: Unexpected token (60:6)\n  58 | \n  59 | var C = class {\n\u003e 60 |   foo = \"foobar\";\n     |       ^\n  61 |   m() { return 42 }\n  62 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n  63 |   get #$() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-rs-private-method-alt.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-private-method-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-private-method-alt.js: Unexpected token (59:6)\n  57 | \n  58 | var C = class {\n\u003e 59 |   foo = \"foobar\";\n     |       ^\n  60 |   m() { return 42 }\n  61 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n  62 |   #$() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-rs-private-method.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-private-method.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-private-method.js: Unexpected token (59:6)\n  57 | \n  58 | var C = class {\n\u003e 59 |   foo = \"foobar\";\n     |       ^\n  60 |   m() { return 42 }\n  61 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n  62 |   #$() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-rs-private-setter-alt.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-private-setter-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-private-setter-alt.js: Unexpected token (59:6)\n  57 | \n  58 | var C = class {\n\u003e 59 |   foo = \"foobar\";\n     |       ^\n  60 |   m() { return 42 }\n  61 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n  62 |   set #$(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-rs-private-setter.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-private-setter.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-private-setter.js: Unexpected token (59:6)\n  57 | \n  58 | var C = class {\n\u003e 59 |   foo = \"foobar\";\n     |       ^\n  60 |   m() { return 42 }\n  61 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n  62 |   set #$(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-rs-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-privatename-identifier-alt.js: Unexpected token (60:6)\n  58 | \n  59 | var C = class {\n\u003e 60 |   foo = \"foobar\";\n     |       ^\n  61 |   m() { return 42 }\n  62 |   #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J\n  63 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-privatename-identifier-initializer-alt.js: Unexpected token (60:6)\n  58 | \n  59 | var C = class {\n\u003e 60 |   foo = \"foobar\";\n     |       ^\n  61 |   m() { return 42 }\n  62 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1\n  63 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-rs-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-privatename-identifier-initializer.js: Unexpected token (60:6)\n  58 | \n  59 | var C = class {\n\u003e 60 |   foo = \"foobar\";\n     |       ^\n  61 |   m() { return 42 }\n  62 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1\n  63 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-rs-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-privatename-identifier.js: Unexpected token (60:6)\n  58 | \n  59 | var C = class {\n\u003e 60 |   foo = \"foobar\";\n     |       ^\n  61 |   m() { return 42 }\n  62 |   #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J\n  63 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-generator-method-privatename-identifier-alt.js: Unexpected token (64:6)\n  62 | \n  63 | var C = class {\n\u003e 64 |   foo = \"foobar\";\n     |       ^\n  65 |   m() { return 42 }\n  66 |   static * #$(value) {\n  67 |     yield * value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-generator-method-privatename-identifier.js: Unexpected token (64:6)\n  62 | \n  63 | var C = class {\n\u003e 64 |   foo = \"foobar\";\n     |       ^\n  65 |   m() { return 42 }\n  66 |   static * #$(value) {\n  67 |     yield * value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-method-privatename-identifier-alt.js: Unexpected token (61:6)\n  59 | \n  60 | var C = class {\n\u003e 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() { return 42 }\n  63 |   static #$(value) {\n  64 |     return value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-method-privatename-identifier.js: Unexpected token (61:6)\n  59 | \n  60 | var C = class {\n\u003e 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() { return 42 }\n  63 |   static #$(value) {\n  64 |     return value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-alt-by-classname.js: Unexpected token (61:6)\n  59 | \n  60 | var C = class {\n\u003e 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() { return 42 }\n  63 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n  64 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-alt.js: Unexpected token (61:6)\n  59 | \n  60 | var C = class {\n\u003e 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() { return 42 }\n  63 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n  64 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-by-classname.js: Unexpected token (61:6)\n  59 | \n  60 | var C = class {\n\u003e 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() { return 42 }\n  63 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n  64 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected token (61:6)\n  59 | \n  60 | var C = class {\n\u003e 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() { return 42 }\n  63 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n  64 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer-alt.js: Unexpected token (61:6)\n  59 | \n  60 | var C = class {\n\u003e 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() { return 42 }\n  63 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n  64 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer.js: Unexpected token (61:6)\n  59 | \n  60 | var C = class {\n\u003e 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() { return 42 }\n  63 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1\n  64 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-privatename-identifier.js: Unexpected token (61:6)\n  59 | \n  60 | var C = class {\n\u003e 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() { return 42 }\n  63 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n  64 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-static-private-fields.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-static-private-fields.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-static-private-fields.js: Unexpected token (29:6)\n  27 | \n  28 | var C = class {\n\u003e 29 |   foo = \"foobar\";\n     |       ^\n  30 |   m() { return 42 }\n  31 |   static #x; static #y\n  32 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-static-private-methods-with-fields.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-static-private-methods-with-fields.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-static-private-methods-with-fields.js: Unexpected token (29:6)\n  27 | \n  28 | var C = class {\n\u003e 29 |   foo = \"foobar\";\n     |       ^\n  30 |   m() { return 42 }\n  31 |   static #xVal; static #yVal\n  32 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-static-private-methods.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-static-private-methods.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-static-private-methods.js: Unexpected token (29:6)\n  27 | \n  28 | var C = class {\n\u003e 29 |   foo = \"foobar\";\n     |       ^\n  30 |   m() { return 42 }\n  31 |   \n  32 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-definitions-string-literal-names.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-string-literal-names.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-string-literal-names.js: Unexpected token (26:6)\n  24 | \n  25 | var C = class {\n\u003e 26 |   foo = \"foobar\";\n     |       ^\n  27 |   m() { return 42 }\n  28 |   'a'; \"b\"; 'c' = 39;\n  29 |   \"d\" = 42 at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-computed-names.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-computed-names.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | var C = class {\n\u003e 28 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"]\n     |       ^\n  29 |   foo = \"foobar\"\n  30 |   bar = \"barbaz\";\n  31 |    at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-computed-symbol-names.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-computed-symbol-names.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-computed-symbol-names.js: Unexpected token (29:11)\n  27 | \n  28 | var C = class {\n\u003e 29 |   [x]; [y] = 42\n     |            ^\n  30 |   foo = \"foobar\"\n  31 |   bar = \"barbaz\";\n  32 |    at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:2)\n  66 | \n  67 | var C = class {\n\u003e 68 |   #\\u{6F};\n     |   ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-literal-names-asi.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-literal-names-asi.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-literal-names-asi.js: Unexpected token (27:4)\n  25 | var C = class {\n  26 |   a\n\u003e 27 |   b = 42;\n     |     ^\n  28 |   foo = \"foobar\"\n  29 |   bar = \"barbaz\";\n  30 |    at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-literal-names.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-literal-names.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-literal-names.js: Unexpected token (28:7)\n  26 | \n  27 | var C = class {\n\u003e 28 |   a; b = 42;\n     |        ^\n  29 |   c = fn\n  30 |   foo = \"foobar\"\n  31 |   bar = \"barbaz\"; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-private-field-usage.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-private-field-usage.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-private-field-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | var C = class {\n\u003e 27 |   #m = 'test262';\n     |   ^\n  28 |   foo = \"foobar\"\n  29 |   bar = \"barbaz\";\n  30 |   method() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-private-method-getter-usage.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-private-method-getter-usage.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-private-method-getter-usage.js: Unexpected character '#' (27:6)\n  25 | \n  26 | var C = class {\n\u003e 27 |   get #m() { return 'test262'; }\n     |       ^\n  28 |   foo = \"foobar\"\n  29 |   bar = \"barbaz\";\n  30 |   method() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-private-method-usage.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-private-method-usage.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-private-method-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | var C = class {\n\u003e 27 |   #m() { return 'test262'; }\n     |   ^\n  28 |   foo = \"foobar\"\n  29 |   bar = \"barbaz\";\n  30 |   method() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-private-names.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-private-names.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-private-names.js: Unexpected character '#' (29:2)\n  27 | \n  28 | var C = class {\n\u003e 29 |   #x; #y\n     |   ^\n  30 |   foo = \"foobar\"\n  31 |   bar = \"barbaz\";\n  32 |   x() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-field-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-field-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-field-identifier-initializer.js: Unexpected token (62:4)\n  60 | \n  61 | var C = class {\n\u003e 62 |   $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1\n     |     ^\n  63 |   foo = \"foobar\"\n  64 |   bar = \"barbaz\";\n  65 |    at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-field-identifier.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-field-identifier.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-field-identifier.js: Unexpected token (63:6)\n  61 | var C = class {\n  62 |   $; _; \\u{6F}; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J\n\u003e 63 |   foo = \"foobar\"\n     |       ^\n  64 |   bar = \"barbaz\";\n  65 |   \n  66 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-private-getter-alt.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-private-getter-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-private-getter-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n\u003e 60 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-private-getter.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-private-getter.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-private-getter.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n\u003e 60 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-private-method-alt.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-private-method-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-private-method-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-private-method.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-private-method.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-private-method.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-private-setter-alt.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-private-setter-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-private-setter-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-private-setter.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-private-setter.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-private-setter.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-privatename-identifier-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n\u003e 60 |   #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J\n     |   ^\n  61 |   foo = \"foobar\"\n  62 |   bar = \"barbaz\";\n  63 |   $(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n\u003e 60 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1\n     |   ^\n  61 |   foo = \"foobar\"\n  62 |   bar = \"barbaz\";\n  63 |   $() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n\u003e 60 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1\n     |   ^\n  61 |   foo = \"foobar\"\n  62 |   bar = \"barbaz\";\n  63 |   $() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-privatename-identifier.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n\u003e 60 |   #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J\n     |   ^\n  61 |   foo = \"foobar\"\n  62 |   bar = \"barbaz\";\n  63 |   $(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:11)\n  62 | \n  63 | var C = class {\n\u003e 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:11)\n  62 | \n  63 | var C = class {\n\u003e 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$(value) {\n     |          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$(value) {\n     |          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-static-private-fields.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-static-private-fields.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-static-private-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class {\n\u003e 29 |   static #x; static #y\n     |          ^\n  30 |   foo = \"foobar\"\n  31 |   bar = \"barbaz\";\n  32 |   static x() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-static-private-methods-with-fields.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-static-private-methods-with-fields.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-static-private-methods-with-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class {\n\u003e 29 |   static #xVal; static #yVal\n     |          ^\n  30 |   foo = \"foobar\"\n  31 |   bar = \"barbaz\";\n  32 |   static #x(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-static-private-methods.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-static-private-methods.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-static-private-methods.js: Unexpected token (30:6)\n  28 | var C = class {\n  29 |   \n\u003e 30 |   foo = \"foobar\"\n     |       ^\n  31 |   bar = \"barbaz\";\n  32 |   static #x(value) {\n  33 |     return value / 2; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/multiple-stacked-definitions-string-literal-names.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-string-literal-names.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-string-literal-names.js: Unexpected token (26:16)\n  24 | \n  25 | var C = class {\n\u003e 26 |   'a'; \"b\"; 'c' = 39;\n     |                 ^\n  27 |   \"d\" = 42\n  28 |   foo = \"foobar\"\n  29 |   bar = \"barbaz\"; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-derived-cls-direct-eval-contains-superproperty-1.js-strict:true": "test/language/expressions/class/elements/nested-derived-cls-direct-eval-contains-superproperty-1.js: SyntaxError: test/language/expressions/class/elements/nested-derived-cls-direct-eval-contains-superproperty-1.js: Unexpected token (30:4)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   x = eval('executed = true; super.x;');\n     |     ^\n  31 | };\n  32 | \n  33 | new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-derived-cls-direct-eval-contains-superproperty-2.js-strict:true": "test/language/expressions/class/elements/nested-derived-cls-direct-eval-contains-superproperty-2.js: SyntaxError: test/language/expressions/class/elements/nested-derived-cls-direct-eval-contains-superproperty-2.js: Unexpected token (27:4)\n  25 | var A = class {}\n  26 | var C = class extends A {\n\u003e 27 |   x = eval('executed = true; super[\"x\"];');\n     |     ^\n  28 | };\n  29 | \n  30 | new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-derived-cls-direct-eval-err-contains-supercall-1.js-strict:true": "test/language/expressions/class/elements/nested-derived-cls-direct-eval-err-contains-supercall-1.js: SyntaxError: test/language/expressions/class/elements/nested-derived-cls-direct-eval-err-contains-supercall-1.js: Unexpected token (30:4)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   x = eval('executed = true; super()[\"x\"];');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-derived-cls-direct-eval-err-contains-supercall-2.js-strict:true": "test/language/expressions/class/elements/nested-derived-cls-direct-eval-err-contains-supercall-2.js: SyntaxError: test/language/expressions/class/elements/nested-derived-cls-direct-eval-err-contains-supercall-2.js: Unexpected token (23:4)\n  21 | var A = class {}\n  22 | var C = class extends A {\n\u003e 23 |   x = eval('executed = true; super().x;');\n     |     ^\n  24 | }\n  25 | \n  26 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-derived-cls-direct-eval-err-contains-supercall.js-strict:true": "test/language/expressions/class/elements/nested-derived-cls-direct-eval-err-contains-supercall.js: SyntaxError: test/language/expressions/class/elements/nested-derived-cls-direct-eval-err-contains-supercall.js: Unexpected token (30:4)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   x = eval('executed = true; super();');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-derived-cls-indirect-eval-contains-superproperty-1.js-strict:true": "test/language/expressions/class/elements/nested-derived-cls-indirect-eval-contains-superproperty-1.js: SyntaxError: test/language/expressions/class/elements/nested-derived-cls-indirect-eval-contains-superproperty-1.js: Unexpected token (30:4)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   x = (0, eval)('executed = true; super.x;');\n     |     ^\n  31 | };\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-derived-cls-indirect-eval-contains-superproperty-2.js-strict:true": "test/language/expressions/class/elements/nested-derived-cls-indirect-eval-contains-superproperty-2.js: SyntaxError: test/language/expressions/class/elements/nested-derived-cls-indirect-eval-contains-superproperty-2.js: Unexpected token (27:4)\n  25 | var A = class {}\n  26 | var C = class extends A {\n\u003e 27 |   x = (0, eval)('executed = true; super[\"x\"];');\n     |     ^\n  28 | };\n  29 | \n  30 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall-1.js-strict:true": "test/language/expressions/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall-1.js: SyntaxError: test/language/expressions/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall-1.js: Unexpected token (30:4)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   x = (0, eval)('executed = true; super()[\"x\"];');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall-2.js-strict:true": "test/language/expressions/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall-2.js: SyntaxError: test/language/expressions/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall-2.js: Unexpected token (23:4)\n  21 | var A = class {}\n  22 | var C = class extends A {\n\u003e 23 |   x = (0, eval)('executed = true; super().x;');\n     |     ^\n  24 | }\n  25 | \n  26 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall.js-strict:true": "test/language/expressions/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall.js: SyntaxError: test/language/expressions/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall.js: Unexpected token (30:4)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   x = (0, eval)('executed = true; super();');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-direct-eval-err-contains-arguments.js-strict:true": "test/language/expressions/class/elements/nested-direct-eval-err-contains-arguments.js: SyntaxError: test/language/expressions/class/elements/nested-direct-eval-err-contains-arguments.js: Unexpected token (30:4)\n  28 | let executed = false;\n  29 | let C = class {\n\u003e 30 |   x = () =\u003e {\n     |     ^\n  31 |     let f = eval('executed = true; arguments;');\n  32 |     f();\n  33 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-direct-eval-err-contains-newtarget.js-strict:true": "test/language/expressions/class/elements/nested-direct-eval-err-contains-newtarget.js: SyntaxError: test/language/expressions/class/elements/nested-direct-eval-err-contains-newtarget.js: Unexpected token (29:4)\n  27 | var executed = false;\n  28 | var C = class {\n\u003e 29 |   x = eval('executed = true; new.target;');\n     |     ^\n  30 | }\n  31 | \n  32 | var c = new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-indirect-eval-err-contains-arguments.js-strict:true": "test/language/expressions/class/elements/nested-indirect-eval-err-contains-arguments.js: SyntaxError: test/language/expressions/class/elements/nested-indirect-eval-err-contains-arguments.js: Unexpected token (30:4)\n  28 | var executed = false;\n  29 | var C = class {\n\u003e 30 |   x = () =\u003e (0, eval)('executed = true; arguments;');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-indirect-eval-err-contains-newtarget.js-strict:true": "test/language/expressions/class/elements/nested-indirect-eval-err-contains-newtarget.js: SyntaxError: test/language/expressions/class/elements/nested-indirect-eval-err-contains-newtarget.js: Unexpected token (29:4)\n  27 | var executed = false;\n  28 | var C = class {\n\u003e 29 |   x = (0, eval)('executed = true; new.target;');\n     |     ^\n  30 | }\n  31 | \n  32 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-private-derived-cls-direct-eval-contains-superproperty-1.js-strict:true": "test/language/expressions/class/elements/nested-private-derived-cls-direct-eval-contains-superproperty-1.js: SyntaxError: test/language/expressions/class/elements/nested-private-derived-cls-direct-eval-contains-superproperty-1.js: Unexpected character '#' (30:2)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   #x = eval('executed = true; super.x;');\n     |   ^\n  31 | };\n  32 | \n  33 | new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-private-derived-cls-direct-eval-contains-superproperty-2.js-strict:true": "test/language/expressions/class/elements/nested-private-derived-cls-direct-eval-contains-superproperty-2.js: SyntaxError: test/language/expressions/class/elements/nested-private-derived-cls-direct-eval-contains-superproperty-2.js: Unexpected character '#' (27:2)\n  25 | var A = class {}\n  26 | var C = class extends A {\n\u003e 27 |   #x = eval('executed = true; super[\"x\"];');\n     |   ^\n  28 | };\n  29 | \n  30 | new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-private-derived-cls-direct-eval-err-contains-supercall-1.js-strict:true": "test/language/expressions/class/elements/nested-private-derived-cls-direct-eval-err-contains-supercall-1.js: SyntaxError: test/language/expressions/class/elements/nested-private-derived-cls-direct-eval-err-contains-supercall-1.js: Unexpected character '#' (30:2)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   #x = eval('executed = true; super()[\"x\"];');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-private-derived-cls-direct-eval-err-contains-supercall-2.js-strict:true": "test/language/expressions/class/elements/nested-private-derived-cls-direct-eval-err-contains-supercall-2.js: SyntaxError: test/language/expressions/class/elements/nested-private-derived-cls-direct-eval-err-contains-supercall-2.js: Unexpected character '#' (23:2)\n  21 | var A = class {}\n  22 | var C = class extends A {\n\u003e 23 |   #x = eval('executed = true; super().x;');\n     |   ^\n  24 | }\n  25 | \n  26 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-private-derived-cls-direct-eval-err-contains-supercall.js-strict:true": "test/language/expressions/class/elements/nested-private-derived-cls-direct-eval-err-contains-supercall.js: SyntaxError: test/language/expressions/class/elements/nested-private-derived-cls-direct-eval-err-contains-supercall.js: Unexpected character '#' (30:2)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   #x = eval('executed = true; super();');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-private-derived-cls-indirect-eval-contains-superproperty-1.js-strict:true": "test/language/expressions/class/elements/nested-private-derived-cls-indirect-eval-contains-superproperty-1.js: SyntaxError: test/language/expressions/class/elements/nested-private-derived-cls-indirect-eval-contains-superproperty-1.js: Unexpected character '#' (30:2)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   #x = (0, eval)('executed = true; super.x;');\n     |   ^\n  31 | };\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-private-derived-cls-indirect-eval-contains-superproperty-2.js-strict:true": "test/language/expressions/class/elements/nested-private-derived-cls-indirect-eval-contains-superproperty-2.js: SyntaxError: test/language/expressions/class/elements/nested-private-derived-cls-indirect-eval-contains-superproperty-2.js: Unexpected character '#' (27:2)\n  25 | var A = class {}\n  26 | var C = class extends A {\n\u003e 27 |   #x = (0, eval)('executed = true; super[\"x\"];');\n     |   ^\n  28 | };\n  29 | \n  30 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-private-derived-cls-indirect-eval-err-contains-supercall-1.js-strict:true": "test/language/expressions/class/elements/nested-private-derived-cls-indirect-eval-err-contains-supercall-1.js: SyntaxError: test/language/expressions/class/elements/nested-private-derived-cls-indirect-eval-err-contains-supercall-1.js: Unexpected character '#' (30:2)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   #x = (0, eval)('executed = true; super()[\"x\"];');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-private-derived-cls-indirect-eval-err-contains-supercall-2.js-strict:true": "test/language/expressions/class/elements/nested-private-derived-cls-indirect-eval-err-contains-supercall-2.js: SyntaxError: test/language/expressions/class/elements/nested-private-derived-cls-indirect-eval-err-contains-supercall-2.js: Unexpected character '#' (23:2)\n  21 | var A = class {}\n  22 | var C = class extends A {\n\u003e 23 |   #x = (0, eval)('executed = true; super().x;');\n     |   ^\n  24 | }\n  25 | \n  26 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-private-derived-cls-indirect-eval-err-contains-supercall.js-strict:true": "test/language/expressions/class/elements/nested-private-derived-cls-indirect-eval-err-contains-supercall.js: SyntaxError: test/language/expressions/class/elements/nested-private-derived-cls-indirect-eval-err-contains-supercall.js: Unexpected character '#' (30:2)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   #x = (0, eval)('executed = true; super();');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-private-direct-eval-err-contains-arguments.js-strict:true": "test/language/expressions/class/elements/nested-private-direct-eval-err-contains-arguments.js: SyntaxError: test/language/expressions/class/elements/nested-private-direct-eval-err-contains-arguments.js: Unexpected character '#' (30:2)\n  28 | var executed = false;\n  29 | var C = class {\n\u003e 30 |   #x = () =\u003e eval('executed = true; arguments;');\n     |   ^\n  31 |   x() {\n  32 |     this.#x();\n  33 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-private-direct-eval-err-contains-newtarget.js-strict:true": "test/language/expressions/class/elements/nested-private-direct-eval-err-contains-newtarget.js: SyntaxError: test/language/expressions/class/elements/nested-private-direct-eval-err-contains-newtarget.js: Unexpected character '#' (29:2)\n  27 | var executed = false;\n  28 | var C = class {\n\u003e 29 |   #x = eval('executed = true; new.target;');\n     |   ^\n  30 | }\n  31 | \n  32 | var c = new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-private-indirect-eval-err-contains-arguments.js-strict:true": "test/language/expressions/class/elements/nested-private-indirect-eval-err-contains-arguments.js: SyntaxError: test/language/expressions/class/elements/nested-private-indirect-eval-err-contains-arguments.js: Unexpected character '#' (30:2)\n  28 | var executed = false;\n  29 | var C = class {\n\u003e 30 |   #x = () =\u003e (0, eval)('executed = true; arguments;');\n     |   ^\n  31 |   x() {\n  32 |     this.#x();\n  33 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/nested-private-indirect-eval-err-contains-newtarget.js-strict:true": "test/language/expressions/class/elements/nested-private-indirect-eval-err-contains-newtarget.js: SyntaxError: test/language/expressions/class/elements/nested-private-indirect-eval-err-contains-newtarget.js: Unexpected character '#' (29:2)\n  27 | var executed = false;\n  28 | var C = class {\n\u003e 29 |   #x = (0, eval)('executed = true; new.target;');\n     |   ^\n  30 | }\n  31 | \n  32 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-computed-names.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-computed-names.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | var C = class {\n\u003e 28 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"]\n     |       ^\n  29 |   m() { return 42; }\n  30 |   \n  31 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-computed-symbol-names.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-computed-symbol-names.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-computed-symbol-names.js: Unexpected token (29:11)\n  27 | \n  28 | var C = class {\n\u003e 29 |   [x]; [y] = 42\n     |            ^\n  30 |   m() { return 42; }\n  31 |   \n  32 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:2)\n  66 | \n  67 | var C = class {\n\u003e 68 |   #\\u{6F};\n     |   ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-literal-names-asi.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-literal-names-asi.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-literal-names-asi.js: Unexpected token (27:4)\n  25 | var C = class {\n  26 |   a\n\u003e 27 |   b = 42;\n     |     ^\n  28 |   m() { return 42; }\n  29 |   \n  30 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-literal-names.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-literal-names.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-literal-names.js: Unexpected token (28:7)\n  26 | \n  27 | var C = class {\n\u003e 28 |   a; b = 42;\n     |        ^\n  29 |   c = fn\n  30 |   m() { return 42; }\n  31 |    at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-private-field-usage.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-private-field-usage.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-private-field-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | var C = class {\n\u003e 27 |   #m = 'test262';\n     |   ^\n  28 |   m() { return 42; }\n  29 |   method() {\n  30 |     return this.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-private-method-getter-usage.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-private-method-getter-usage.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-private-method-getter-usage.js: Unexpected character '#' (27:6)\n  25 | \n  26 | var C = class {\n\u003e 27 |   get #m() { return 'test262'; }\n     |       ^\n  28 |   m() { return 42; }\n  29 |   method() {\n  30 |     return this.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-private-method-usage.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-private-method-usage.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-private-method-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | var C = class {\n\u003e 27 |   #m() { return 'test262'; }\n     |   ^\n  28 |   m() { return 42; }\n  29 |   method() {\n  30 |     return this.#m(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-private-names.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-private-names.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-private-names.js: Unexpected character '#' (29:2)\n  27 | \n  28 | var C = class {\n\u003e 29 |   #x; #y\n     |   ^\n  30 |   m() { return 42; }\n  31 |   x() {\n  32 |     this.#x = 42; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-field-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-field-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-field-identifier-initializer.js: Unexpected token (62:4)\n  60 | \n  61 | var C = class {\n\u003e 62 |   $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1\n     |     ^\n  63 |   m() { return 42; }\n  64 |   \n  65 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-field-identifier.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-field-identifier.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-field-identifier.js: Missing class properties transform.\n  60 | \n  61 | var C = class {\n\u003e 62 |   $; _; \\u{6F}; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J\n     |   ^\n  63 |   m() { return 42; }\n  64 |   \n  65 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-private-getter-alt.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-private-getter-alt.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-private-getter-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n\u003e 60 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-private-getter.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-private-getter.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-private-getter.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n\u003e 60 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-private-method-alt.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-private-method-alt.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-private-method-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-private-method.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-private-method.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-private-method.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-private-setter-alt.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-private-setter-alt.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-private-setter-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-private-setter.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-private-setter.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-private-setter.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-privatename-identifier-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n\u003e 60 |   #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J\n     |   ^\n  61 |   m() { return 42; }\n  62 |   $(value) {\n  63 |     this.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n\u003e 60 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1\n     |   ^\n  61 |   m() { return 42; }\n  62 |   $() {\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n\u003e 60 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1\n     |   ^\n  61 |   m() { return 42; }\n  62 |   $() {\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-privatename-identifier.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n\u003e 60 |   #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J\n     |   ^\n  61 |   m() { return 42; }\n  62 |   $(value) {\n  63 |     this.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:11)\n  62 | \n  63 | var C = class {\n\u003e 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:11)\n  62 | \n  63 | var C = class {\n\u003e 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$(value) {\n     |          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$(value) {\n     |          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $(value) {\n  64 |     C.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $(value) {\n  64 |     this.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $(value) {\n  64 |     C.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $() {\n  64 |     return C.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $() {\n  64 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $() {\n  64 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $(value) {\n  64 |     this.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-static-private-fields.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-static-private-fields.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-static-private-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class {\n\u003e 29 |   static #x; static #y\n     |          ^\n  30 |   m() { return 42; }\n  31 |   static x() {\n  32 |     this.#x = 42; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-static-private-methods-with-fields.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-static-private-methods-with-fields.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-static-private-methods-with-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class {\n\u003e 29 |   static #xVal; static #yVal\n     |          ^\n  30 |   m() { return 42; }\n  31 |   static #x(value) {\n  32 |     this.#xVal = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-static-private-methods.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-static-private-methods.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-static-private-methods.js: Unexpected character '#' (31:9)\n  29 |   \n  30 |   m() { return 42; }\n\u003e 31 |   static #x(value) {\n     |          ^\n  32 |     return value / 2;\n  33 |   }\n  34 |   static #y(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-no-sc-line-method-string-literal-names.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-string-literal-names.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-string-literal-names.js: Unexpected token (26:16)\n  24 | \n  25 | var C = class {\n\u003e 26 |   'a'; \"b\"; 'c' = 39;\n     |                 ^\n  27 |   \"d\" = 42\n  28 |   m() { return 42; }\n  29 |    at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-computed-names.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-computed-names.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | var C = class {\n\u003e 28 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"];\n     |       ^\n  29 |   m() { return 42; }\n  30 |   \n  31 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-computed-symbol-names.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-computed-symbol-names.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-computed-symbol-names.js: Unexpected token (29:11)\n  27 | \n  28 | var C = class {\n\u003e 29 |   [x]; [y] = 42;\n     |            ^\n  30 |   m() { return 42; }\n  31 |   \n  32 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:2)\n  66 | \n  67 | var C = class {\n\u003e 68 |   #\\u{6F};\n     |   ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J;; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-literal-names-asi.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-literal-names-asi.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-literal-names-asi.js: Unexpected token (27:4)\n  25 | var C = class {\n  26 |   a\n\u003e 27 |   b = 42;;\n     |     ^\n  28 |   m() { return 42; }\n  29 |   \n  30 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-literal-names.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-literal-names.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-literal-names.js: Unexpected token (28:7)\n  26 | \n  27 | var C = class {\n\u003e 28 |   a; b = 42;\n     |        ^\n  29 |   c = fn;\n  30 |   m() { return 42; }\n  31 |    at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-private-field-usage.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-private-field-usage.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-private-field-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | var C = class {\n\u003e 27 |   #m = 'test262';;\n     |   ^\n  28 |   m() { return 42; }\n  29 |   method() {\n  30 |     return this.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-private-method-getter-usage.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-private-method-getter-usage.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-private-method-getter-usage.js: Unexpected character '#' (27:6)\n  25 | \n  26 | var C = class {\n\u003e 27 |   get #m() { return 'test262'; };\n     |       ^\n  28 |   m() { return 42; }\n  29 |   method() {\n  30 |     return this.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-private-method-usage.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-private-method-usage.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-private-method-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | var C = class {\n\u003e 27 |   #m() { return 'test262'; };\n     |   ^\n  28 |   m() { return 42; }\n  29 |   method() {\n  30 |     return this.#m(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-private-names.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-private-names.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-private-names.js: Unexpected character '#' (29:2)\n  27 | \n  28 | var C = class {\n\u003e 29 |   #x; #y;\n     |   ^\n  30 |   m() { return 42; }\n  31 |   x() {\n  32 |     this.#x = 42; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-rs-field-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-field-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-field-identifier-initializer.js: Unexpected token (62:4)\n  60 | \n  61 | var C = class {\n\u003e 62 |   $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;\n     |     ^\n  63 |   m() { return 42; }\n  64 |   \n  65 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-rs-field-identifier.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-field-identifier.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-field-identifier.js: Missing class properties transform.\n  60 | \n  61 | var C = class {\n\u003e 62 |   $; _; \\u{6F}; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J;\n     |   ^\n  63 |   m() { return 42; }\n  64 |   \n  65 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-rs-private-getter-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-private-getter-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-private-getter-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n\u003e 60 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-rs-private-getter.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-private-getter.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-private-getter.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n\u003e 60 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-rs-private-method-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-private-method-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-private-method-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-rs-private-method.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-private-method.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-private-method.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-rs-private-setter-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-private-setter-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-private-setter-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-rs-private-setter.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-private-setter.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-private-setter.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-rs-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-privatename-identifier-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n\u003e 60 |   #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J;\n     |   ^\n  61 |   m() { return 42; }\n  62 |   $(value) {\n  63 |     this.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n\u003e 60 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1;\n     |   ^\n  61 |   m() { return 42; }\n  62 |   $() {\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-rs-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n\u003e 60 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1;\n     |   ^\n  61 |   m() { return 42; }\n  62 |   $() {\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-rs-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-privatename-identifier.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n\u003e 60 |   #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J;\n     |   ^\n  61 |   m() { return 42; }\n  62 |   $(value) {\n  63 |     this.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:11)\n  62 | \n  63 | var C = class {\n\u003e 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:11)\n  62 | \n  63 | var C = class {\n\u003e 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$(value) {\n     |          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$(value) {\n     |          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $(value) {\n  64 |     C.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $(value) {\n  64 |     this.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $(value) {\n  64 |     C.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $() {\n  64 |     return C.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $() {\n  64 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $() {\n  64 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $(value) {\n  64 |     this.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-static-private-fields.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-static-private-fields.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-static-private-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class {\n\u003e 29 |   static #x; static #y;\n     |          ^\n  30 |   m() { return 42; }\n  31 |   static x() {\n  32 |     this.#x = 42; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-static-private-methods-with-fields.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-static-private-methods-with-fields.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-static-private-methods-with-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class {\n\u003e 29 |   static #xVal; static #yVal;\n     |          ^\n  30 |   m() { return 42; }\n  31 |   static #x(value) {\n  32 |     this.#xVal = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-static-private-methods.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-static-private-methods.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-static-private-methods.js: Unexpected character '#' (31:9)\n  29 |   ;\n  30 |   m() { return 42; }\n\u003e 31 |   static #x(value) {\n     |          ^\n  32 |     return value / 2;\n  33 |   }\n  34 |   static #y(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/new-sc-line-method-string-literal-names.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-string-literal-names.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-string-literal-names.js: Unexpected token (26:16)\n  24 | \n  25 | var C = class {\n\u003e 26 |   'a'; \"b\"; 'c' = 39;\n     |                 ^\n  27 |   \"d\" = 42;\n  28 |   m() { return 42; }\n  29 |    at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-accessor-name/inst-private-escape-sequence-ZWJ.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/inst-private-escape-sequence-ZWJ.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/inst-private-escape-sequence-ZWJ.js: Unexpected character '#' (62:6)\n  60 | \n  61 | var C = class {\n\u003e 62 |   get #ZW_\\u200D_J() { return 'get string'; }\n     |       ^\n  63 |   set #ZW_\\u200D_J(param) { stringSet = param; }\n  64 | \n  65 |   getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-accessor-name/inst-private-escape-sequence-ZWNJ.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/inst-private-escape-sequence-ZWNJ.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/inst-private-escape-sequence-ZWNJ.js: Unexpected character '#' (62:6)\n  60 | \n  61 | var C = class {\n\u003e 62 |   get #ZW_\\u200C_NJ() { return 'get string'; }\n     |       ^\n  63 |   set #ZW_\\u200C_NJ(param) { stringSet = param; }\n  64 | \n  65 |   getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-accessor-name/inst-private-escape-sequence-u2118.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/inst-private-escape-sequence-u2118.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/inst-private-escape-sequence-u2118.js: Unexpected character '#' (62:6)\n  60 | \n  61 | var C = class {\n\u003e 62 |   get #\\u2118() { return 'get string'; }\n     |       ^\n  63 |   set #\\u2118(param) { stringSet = param; }\n  64 | \n  65 |   getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-accessor-name/inst-private-escape-sequence-u6F.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/inst-private-escape-sequence-u6F.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/inst-private-escape-sequence-u6F.js: Unexpected character '#' (62:6)\n  60 | \n  61 | var C = class {\n\u003e 62 |   get #\\u{6F}() { return 'get string'; }\n     |       ^\n  63 |   set #\\u{6F}(param) { stringSet = param; }\n  64 | \n  65 |   getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-accessor-name/inst-private-name-ZWJ.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/inst-private-name-ZWJ.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/inst-private-name-ZWJ.js: Unexpected character '#' (62:6)\n  60 | \n  61 | var C = class {\n\u003e 62 |   get #ZW_‍_J() { return 'get string'; }\n     |       ^\n  63 |   set #ZW_‍_J(param) { stringSet = param; }\n  64 | \n  65 |   getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-accessor-name/inst-private-name-ZWNJ.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/inst-private-name-ZWNJ.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/inst-private-name-ZWNJ.js: Unexpected character '#' (62:6)\n  60 | \n  61 | var C = class {\n\u003e 62 |   get #ZW_‌_NJ() { return 'get string'; }\n     |       ^\n  63 |   set #ZW_‌_NJ(param) { stringSet = param; }\n  64 | \n  65 |   getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-accessor-name/inst-private-name-common.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/inst-private-name-common.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/inst-private-name-common.js: Unexpected character '#' (62:6)\n  60 | \n  61 | var C = class {\n\u003e 62 |   get #test262() { return 'get string'; }\n     |       ^\n  63 |   set #test262(param) { stringSet = param; }\n  64 | \n  65 |   getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-accessor-name/inst-private-name-dollar.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/inst-private-name-dollar.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/inst-private-name-dollar.js: Unexpected character '#' (62:6)\n  60 | \n  61 | var C = class {\n\u003e 62 |   get #$() { return 'get string'; }\n     |       ^\n  63 |   set #$(param) { stringSet = param; }\n  64 | \n  65 |   getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-accessor-name/inst-private-name-u2118.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/inst-private-name-u2118.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/inst-private-name-u2118.js: Unexpected character '#' (62:6)\n  60 | \n  61 | var C = class {\n\u003e 62 |   get #℘() { return 'get string'; }\n     |       ^\n  63 |   set #℘(param) { stringSet = param; }\n  64 | \n  65 |   getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-accessor-name/inst-private-name-underscore.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/inst-private-name-underscore.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/inst-private-name-underscore.js: Unexpected character '#' (62:6)\n  60 | \n  61 | var C = class {\n\u003e 62 |   get #_() { return 'get string'; }\n     |       ^\n  63 |   set #_(param) { stringSet = param; }\n  64 | \n  65 |   getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-accessor-name/static-private-escape-sequence-ZWJ.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/static-private-escape-sequence-ZWJ.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/static-private-escape-sequence-ZWJ.js: Unexpected character '#' (63:13)\n  61 | \n  62 | var C = class {\n\u003e 63 |   static get #ZW_\\u200D_J() { return 'get string'; }\n     |              ^\n  64 |   static set #ZW_\\u200D_J(param) { stringSet = param; }\n  65 | \n  66 |   static getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-accessor-name/static-private-escape-sequence-ZWNJ.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/static-private-escape-sequence-ZWNJ.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/static-private-escape-sequence-ZWNJ.js: Unexpected character '#' (63:13)\n  61 | \n  62 | var C = class {\n\u003e 63 |   static get #ZW_\\u200C_NJ() { return 'get string'; }\n     |              ^\n  64 |   static set #ZW_\\u200C_NJ(param) { stringSet = param; }\n  65 | \n  66 |   static getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-accessor-name/static-private-escape-sequence-u2118.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/static-private-escape-sequence-u2118.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/static-private-escape-sequence-u2118.js: Unexpected character '#' (63:13)\n  61 | \n  62 | var C = class {\n\u003e 63 |   static get #\\u2118() { return 'get string'; }\n     |              ^\n  64 |   static set #\\u2118(param) { stringSet = param; }\n  65 | \n  66 |   static getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-accessor-name/static-private-escape-sequence-u6F.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/static-private-escape-sequence-u6F.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/static-private-escape-sequence-u6F.js: Unexpected character '#' (63:13)\n  61 | \n  62 | var C = class {\n\u003e 63 |   static get #\\u{6F}() { return 'get string'; }\n     |              ^\n  64 |   static set #\\u{6F}(param) { stringSet = param; }\n  65 | \n  66 |   static getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-accessor-name/static-private-name-ZWJ.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/static-private-name-ZWJ.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/static-private-name-ZWJ.js: Unexpected character '#' (63:13)\n  61 | \n  62 | var C = class {\n\u003e 63 |   static get #ZW_‍_J() { return 'get string'; }\n     |              ^\n  64 |   static set #ZW_‍_J(param) { stringSet = param; }\n  65 | \n  66 |   static getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-accessor-name/static-private-name-ZWNJ.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/static-private-name-ZWNJ.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/static-private-name-ZWNJ.js: Unexpected character '#' (63:13)\n  61 | \n  62 | var C = class {\n\u003e 63 |   static get #ZW_‌_NJ() { return 'get string'; }\n     |              ^\n  64 |   static set #ZW_‌_NJ(param) { stringSet = param; }\n  65 | \n  66 |   static getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-accessor-name/static-private-name-common.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/static-private-name-common.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/static-private-name-common.js: Unexpected character '#' (63:13)\n  61 | \n  62 | var C = class {\n\u003e 63 |   static get #test262() { return 'get string'; }\n     |              ^\n  64 |   static set #test262(param) { stringSet = param; }\n  65 | \n  66 |   static getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-accessor-name/static-private-name-dollar.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/static-private-name-dollar.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/static-private-name-dollar.js: Unexpected character '#' (63:13)\n  61 | \n  62 | var C = class {\n\u003e 63 |   static get #$() { return 'get string'; }\n     |              ^\n  64 |   static set #$(param) { stringSet = param; }\n  65 | \n  66 |   static getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-accessor-name/static-private-name-u2118.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/static-private-name-u2118.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/static-private-name-u2118.js: Unexpected character '#' (63:13)\n  61 | \n  62 | var C = class {\n\u003e 63 |   static get #℘() { return 'get string'; }\n     |              ^\n  64 |   static set #℘(param) { stringSet = param; }\n  65 | \n  66 |   static getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-accessor-name/static-private-name-underscore.js-strict:true": "test/language/expressions/class/elements/private-accessor-name/static-private-name-underscore.js: SyntaxError: test/language/expressions/class/elements/private-accessor-name/static-private-name-underscore.js: Unexpected character '#' (63:13)\n  61 | \n  62 | var C = class {\n\u003e 63 |   static get #_() { return 'get string'; }\n     |              ^\n  64 |   static set #_(param) { stringSet = param; }\n  65 | \n  66 |   static getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-async-generator-method-name.js-strict:true": "test/language/expressions/class/elements/private-async-generator-method-name.js: SyntaxError: test/language/expressions/class/elements/private-async-generator-method-name.js: Unexpected token (52:8)\n  50 | \n  51 | var C = class {\n\u003e 52 |   async * #method() {};\n     |         ^\n  53 | \n  54 |   getPrivateMethod() {\n  55 |     return this.#method; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-async-method-name.js-strict:true": "test/language/expressions/class/elements/private-async-method-name.js: SyntaxError: test/language/expressions/class/elements/private-async-method-name.js: Unexpected character '#' (52:8)\n  50 | \n  51 | var C = class {\n\u003e 52 |   async #method() {};\n     |         ^\n  53 | \n  54 |   getPrivateMethod() {\n  55 |     return this.#method; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-derived-cls-direct-eval-contains-superproperty-1.js-strict:true": "test/language/expressions/class/elements/private-derived-cls-direct-eval-contains-superproperty-1.js: SyntaxError: test/language/expressions/class/elements/private-derived-cls-direct-eval-contains-superproperty-1.js: Unexpected character '#' (30:2)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   #x = eval('executed = true; super.x;');\n     |   ^\n  31 | };\n  32 | \n  33 | new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-derived-cls-direct-eval-contains-superproperty-2.js-strict:true": "test/language/expressions/class/elements/private-derived-cls-direct-eval-contains-superproperty-2.js: SyntaxError: test/language/expressions/class/elements/private-derived-cls-direct-eval-contains-superproperty-2.js: Unexpected character '#' (27:2)\n  25 | var A = class {}\n  26 | var C = class extends A {\n\u003e 27 |   #x = eval('executed = true; super[\"x\"];');\n     |   ^\n  28 | };\n  29 | \n  30 | new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-derived-cls-direct-eval-err-contains-supercall-1.js-strict:true": "test/language/expressions/class/elements/private-derived-cls-direct-eval-err-contains-supercall-1.js: SyntaxError: test/language/expressions/class/elements/private-derived-cls-direct-eval-err-contains-supercall-1.js: Unexpected character '#' (30:2)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   #x = eval('executed = true; super()[\"x\"];');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-derived-cls-direct-eval-err-contains-supercall-2.js-strict:true": "test/language/expressions/class/elements/private-derived-cls-direct-eval-err-contains-supercall-2.js: SyntaxError: test/language/expressions/class/elements/private-derived-cls-direct-eval-err-contains-supercall-2.js: Unexpected character '#' (23:2)\n  21 | var A = class {}\n  22 | var C = class extends A {\n\u003e 23 |   #x = eval('executed = true; super().x;');\n     |   ^\n  24 | }\n  25 | \n  26 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-derived-cls-direct-eval-err-contains-supercall.js-strict:true": "test/language/expressions/class/elements/private-derived-cls-direct-eval-err-contains-supercall.js: SyntaxError: test/language/expressions/class/elements/private-derived-cls-direct-eval-err-contains-supercall.js: Unexpected character '#' (30:2)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   #x = eval('executed = true; super();');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-derived-cls-indirect-eval-contains-superproperty-1.js-strict:true": "test/language/expressions/class/elements/private-derived-cls-indirect-eval-contains-superproperty-1.js: SyntaxError: test/language/expressions/class/elements/private-derived-cls-indirect-eval-contains-superproperty-1.js: Unexpected character '#' (30:2)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   #x = (0, eval)('executed = true; super.x;');\n     |   ^\n  31 | };\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-derived-cls-indirect-eval-contains-superproperty-2.js-strict:true": "test/language/expressions/class/elements/private-derived-cls-indirect-eval-contains-superproperty-2.js: SyntaxError: test/language/expressions/class/elements/private-derived-cls-indirect-eval-contains-superproperty-2.js: Unexpected character '#' (27:2)\n  25 | var A = class {}\n  26 | var C = class extends A {\n\u003e 27 |   #x = (0, eval)('executed = true; super[\"x\"];');\n     |   ^\n  28 | };\n  29 | \n  30 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-derived-cls-indirect-eval-err-contains-supercall-1.js-strict:true": "test/language/expressions/class/elements/private-derived-cls-indirect-eval-err-contains-supercall-1.js: SyntaxError: test/language/expressions/class/elements/private-derived-cls-indirect-eval-err-contains-supercall-1.js: Unexpected character '#' (30:2)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   #x = (0, eval)('executed = true; super()[\"x\"];');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-derived-cls-indirect-eval-err-contains-supercall-2.js-strict:true": "test/language/expressions/class/elements/private-derived-cls-indirect-eval-err-contains-supercall-2.js: SyntaxError: test/language/expressions/class/elements/private-derived-cls-indirect-eval-err-contains-supercall-2.js: Unexpected character '#' (23:2)\n  21 | var A = class {}\n  22 | var C = class extends A {\n\u003e 23 |   #x = (0, eval)('executed = true; super().x;');\n     |   ^\n  24 | }\n  25 | \n  26 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-derived-cls-indirect-eval-err-contains-supercall.js-strict:true": "test/language/expressions/class/elements/private-derived-cls-indirect-eval-err-contains-supercall.js: SyntaxError: test/language/expressions/class/elements/private-derived-cls-indirect-eval-err-contains-supercall.js: Unexpected character '#' (30:2)\n  28 | var A = class {}\n  29 | var C = class extends A {\n\u003e 30 |   #x = (0, eval)('executed = true; super();');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-direct-eval-err-contains-arguments.js-strict:true": "test/language/expressions/class/elements/private-direct-eval-err-contains-arguments.js: SyntaxError: test/language/expressions/class/elements/private-direct-eval-err-contains-arguments.js: Unexpected character '#' (30:2)\n  28 | var executed = false;\n  29 | var C = class {\n\u003e 30 |   #x = eval('executed = true; arguments;');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-direct-eval-err-contains-newtarget.js-strict:true": "test/language/expressions/class/elements/private-direct-eval-err-contains-newtarget.js: SyntaxError: test/language/expressions/class/elements/private-direct-eval-err-contains-newtarget.js: Unexpected character '#' (29:2)\n  27 | var executed = false;\n  28 | var C = class {\n\u003e 29 |   #x = eval('executed = true; new.target;');\n     |   ^\n  30 | }\n  31 | \n  32 | var c = new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-field-access-on-inner-arrow-function.js-strict:true": "test/language/expressions/class/elements/private-field-access-on-inner-arrow-function.js: SyntaxError: test/language/expressions/class/elements/private-field-access-on-inner-arrow-function.js: Unexpected character '#' (26:2)\n  24 | \n  25 | var C = class {\n\u003e 26 |   #f = 'Test262';\n     |   ^\n  27 | \n  28 |   method() {\n  29 |     let arrowFunction = () =\u003e { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-field-access-on-inner-function.js-strict:true": "test/language/expressions/class/elements/private-field-access-on-inner-function.js: SyntaxError: test/language/expressions/class/elements/private-field-access-on-inner-function.js: Unexpected character '#' (26:2)\n  24 | \n  25 | var C = class {\n\u003e 26 |   #f = 'Test262';\n     |   ^\n  27 | \n  28 |   method() {\n  29 |     let self = this; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-field-after-optional-chain.js-strict:true": "test/language/expressions/class/elements/private-field-after-optional-chain.js: SyntaxError: test/language/expressions/class/elements/private-field-after-optional-chain.js: Unexpected character '#' (28:2)\n  26 | \n  27 | var C = class {\n\u003e 28 |   #f = 'Test262';\n     |   ^\n  29 | \n  30 |   method(o) {\n  31 |     return o?.c.#f; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-field-as-arrow-function.js-strict:true": "test/language/expressions/class/elements/private-field-as-arrow-function.js: SyntaxError: test/language/expressions/class/elements/private-field-as-arrow-function.js: Unexpected character '#' (26:2)\n  24 | \n  25 | var C = class {\n\u003e 26 |   #m = () =\u003e 'test262';\n     |   ^\n  27 | \n  28 |   method() {\n  29 |     return this.#m(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-field-as-function.js-strict:true": "test/language/expressions/class/elements/private-field-as-function.js: SyntaxError: test/language/expressions/class/elements/private-field-as-function.js: Unexpected character '#' (26:2)\n  24 | \n  25 | var C = class {\n\u003e 26 |   #m = function () { return 'test262'; };\n     |   ^\n  27 | \n  28 |   method() {\n  29 |     return this.#m(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-field-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-field-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-field-on-nested-class.js: Unexpected character '#' (26:2)\n  24 | \n  25 | var C = class {\n\u003e 26 |   #outer = 'test262';\n     |   ^\n  27 | \n  28 |   B_withoutPrivateField = class {\n  29 |     method(o) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-fields-proxy-default-handler-throws.js-strict:true": "test/language/expressions/class/elements/private-fields-proxy-default-handler-throws.js: SyntaxError: test/language/expressions/class/elements/private-fields-proxy-default-handler-throws.js: Unexpected character '#' (19:2)\n  17 | \n  18 | var C = class {\n\u003e 19 |   #x = 1;\n     |   ^\n  20 |   x() {\n  21 |     return this.#x;\n  22 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-generator-method-name.js-strict:true": "test/language/expressions/class/elements/private-generator-method-name.js: SyntaxError: test/language/expressions/class/elements/private-generator-method-name.js: Unexpected character '#' (52:4)\n  50 | \n  51 | var C = class {\n\u003e 52 |   * #method() {};\n     |     ^\n  53 | \n  54 |   getPrivateMethod() {\n  55 |     return this.#method; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-getter-access-on-inner-arrow-function.js-strict:true": "test/language/expressions/class/elements/private-getter-access-on-inner-arrow-function.js: SyntaxError: test/language/expressions/class/elements/private-getter-access-on-inner-arrow-function.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class {\n\u003e 26 |   get #m() { return 'Test262'; }\n     |       ^\n  27 | \n  28 |   method() {\n  29 |     let arrowFunction = () =\u003e { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-getter-access-on-inner-function.js-strict:true": "test/language/expressions/class/elements/private-getter-access-on-inner-function.js: SyntaxError: test/language/expressions/class/elements/private-getter-access-on-inner-function.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class {\n\u003e 26 |   get #m() { return 'Test262'; }\n     |       ^\n  27 | \n  28 |   method() {\n  29 |     let self = this; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-getter-is-not-a-own-property.js-strict:true": "test/language/expressions/class/elements/private-getter-is-not-a-own-property.js: SyntaxError: test/language/expressions/class/elements/private-getter-is-not-a-own-property.js: Unexpected character '#' (31:6)\n  29 | \n  30 | var C = class {\n\u003e 31 |   get #m() { return \"Test262\"; }\n     |       ^\n  32 | \n  33 |   checkPrivateGetter() {\n  34 |     assert.sameValue(this.hasOwnProperty(\"#m\"), false); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-getter-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-getter-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-getter-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class {\n\u003e 26 |   get #m() { return 'test262'; }\n     |       ^\n  27 | \n  28 |   B = class {\n  29 |     method(o) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-getter-shadowed-by-field-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-getter-shadowed-by-field-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-getter-shadowed-by-field-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class {\n\u003e 26 |   get #m() { return 'outer class'; }\n     |       ^\n  27 | \n  28 |   method() { return this.#m; }\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-getter-shadowed-by-getter-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-getter-shadowed-by-getter-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-getter-shadowed-by-getter-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class {\n\u003e 26 |   get #m() { return 'outer class'; }\n     |       ^\n  27 | \n  28 |   method() { return this.#m; }\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-getter-shadowed-by-method-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-getter-shadowed-by-method-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-getter-shadowed-by-method-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class {\n\u003e 26 |   get #m() { throw new Test262Error(); }\n     |       ^\n  27 | \n  28 |   B = class {\n  29 |     method(o) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-getter-shadowed-by-setter-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-getter-shadowed-by-setter-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-getter-shadowed-by-setter-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class {\n\u003e 26 |   get #m() { return 'outer class'; }\n     |       ^\n  27 | \n  28 |   method() { return this.#m; }\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-indirect-eval-err-contains-arguments.js-strict:true": "test/language/expressions/class/elements/private-indirect-eval-err-contains-arguments.js: SyntaxError: test/language/expressions/class/elements/private-indirect-eval-err-contains-arguments.js: Unexpected character '#' (30:2)\n  28 | var executed = false;\n  29 | var C = class {\n\u003e 30 |   #x = (0, eval)('executed = true; arguments;');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-indirect-eval-err-contains-newtarget.js-strict:true": "test/language/expressions/class/elements/private-indirect-eval-err-contains-newtarget.js: SyntaxError: test/language/expressions/class/elements/private-indirect-eval-err-contains-newtarget.js: Unexpected character '#' (29:2)\n  27 | var executed = false;\n  28 | var C = class {\n\u003e 29 |   #x = (0, eval)('executed = true; new.target;');\n     |   ^\n  30 | }\n  31 | \n  32 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-method-access-on-inner-arrow-function.js-strict:true": "test/language/expressions/class/elements/private-method-access-on-inner-arrow-function.js: SyntaxError: test/language/expressions/class/elements/private-method-access-on-inner-arrow-function.js: Unexpected character '#' (26:2)\n  24 | \n  25 | var C = class {\n\u003e 26 |   #m() { return 'Test262'; }\n     |   ^\n  27 | \n  28 |   method() {\n  29 |     let arrowFunction = () =\u003e { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-method-access-on-inner-function.js-strict:true": "test/language/expressions/class/elements/private-method-access-on-inner-function.js: SyntaxError: test/language/expressions/class/elements/private-method-access-on-inner-function.js: Unexpected character '#' (26:2)\n  24 | \n  25 | var C = class {\n\u003e 26 |   #m() { return 'Test262'; }\n     |   ^\n  27 | \n  28 |   method() {\n  29 |     let self = this; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-method-comparison.js-strict:true": "test/language/expressions/class/elements/private-method-comparison.js: SyntaxError: test/language/expressions/class/elements/private-method-comparison.js: Unexpected character '#' (35:2)\n  33 | \n  34 | var C = class {\n\u003e 35 |   #m() { return 'test262'; }\n     |   ^\n  36 |     \n  37 |   getPrivateMethod() {\n  38 |       return this.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-method-get-and-call.js-strict:true": "test/language/expressions/class/elements/private-method-get-and-call.js: SyntaxError: test/language/expressions/class/elements/private-method-get-and-call.js: Unexpected character '#' (35:2)\n  33 | \n  34 | var C = class {\n\u003e 35 |   #m() { return this._v; }\n     |   ^\n  36 |     \n  37 |   getPrivateMethod() {\n  38 |       return this.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-method-is-not-a-own-property.js-strict:true": "test/language/expressions/class/elements/private-method-is-not-a-own-property.js: SyntaxError: test/language/expressions/class/elements/private-method-is-not-a-own-property.js: Unexpected character '#' (31:2)\n  29 | \n  30 | var C = class {\n\u003e 31 |   #m() { return \"Test262\"; }\n     |   ^\n  32 | \n  33 |   checkPrivateMethod() {\n  34 |     assert.sameValue(this.hasOwnProperty(\"#m\"), false); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-method-length.js-strict:true": "test/language/expressions/class/elements/private-method-length.js: SyntaxError: test/language/expressions/class/elements/private-method-length.js: Unexpected character '#' (39:2)\n  37 | \n  38 | var C = class {\n\u003e 39 |   #method(a) {};\n     |   ^\n  40 | \n  41 |   getPrivateMethod() {\n  42 |     return this.#method; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-method-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-method-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-method-on-nested-class.js: Unexpected character '#' (26:2)\n  24 | \n  25 | var C = class {\n\u003e 26 |   #m() { return 'test262'; }\n     |   ^\n  27 | \n  28 |   B = class {\n  29 |     method(o) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-method-referenced-from-static-method.js-strict:true": "test/language/expressions/class/elements/private-method-referenced-from-static-method.js: SyntaxError: test/language/expressions/class/elements/private-method-referenced-from-static-method.js: Unexpected character '#' (29:2)\n  27 | \n  28 | var C = class {\n\u003e 29 |   #f() { return 42; }\n     |   ^\n  30 |   static g() {\n  31 |     return this.#f();\n  32 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-method-shadowed-by-field-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-method-shadowed-by-field-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-method-shadowed-by-field-on-nested-class.js: Unexpected character '#' (26:2)\n  24 | \n  25 | var C = class {\n\u003e 26 |   #m() { return 'outer class'; }\n     |   ^\n  27 | \n  28 |   method() { return this.#m(); }\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-method-shadowed-by-getter-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-method-shadowed-by-getter-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-method-shadowed-by-getter-on-nested-class.js: Unexpected character '#' (26:2)\n  24 | \n  25 | var C = class {\n\u003e 26 |   #m() { return 'outer class'; }\n     |   ^\n  27 | \n  28 |   method() { return this.#m(); }\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-method-shadowed-by-setter-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-method-shadowed-by-setter-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-method-shadowed-by-setter-on-nested-class.js: Unexpected character '#' (26:2)\n  24 | \n  25 | var C = class {\n\u003e 26 |   #m() { return 'outer class'; }\n     |   ^\n  27 | \n  28 |   method() { return this.#m(); }\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-method-shadowed-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-method-shadowed-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-method-shadowed-on-nested-class.js: Unexpected character '#' (26:2)\n  24 | \n  25 | var C = class {\n\u003e 26 |   #m() { throw new Test262Error(); }\n     |   ^\n  27 | \n  28 |   B = class {\n  29 |     method() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-methods/prod-private-method-initialize-order.js-strict:true": "test/language/expressions/class/elements/private-methods/prod-private-method-initialize-order.js: SyntaxError: test/language/expressions/class/elements/private-methods/prod-private-method-initialize-order.js: Unexpected token (103:4)\n  101 | \n  102 | var C = class {\n\u003e 103 |   a = this.#m();\n      |     ^\n  104 | \n  105 |   #m() { return 42; }\n  106 |   get bGetter() { return this.#b; } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-methods/prod-private-method.js-strict:true": "test/language/expressions/class/elements/private-methods/prod-private-method.js: SyntaxError: test/language/expressions/class/elements/private-methods/prod-private-method.js: Unexpected character '#' (88:2)\n  86 | \n  87 | var C = class {\n\u003e 88 |   #m() { return 42; }\n     |   ^\n  89 | \n  90 | \n  91 |   get ref() { return this.#m; } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-setter-access-on-inner-arrow-function.js-strict:true": "test/language/expressions/class/elements/private-setter-access-on-inner-arrow-function.js: SyntaxError: test/language/expressions/class/elements/private-setter-access-on-inner-arrow-function.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class {\n\u003e 26 |   set #m(v) { this._v = v; }\n     |       ^\n  27 | \n  28 |   method() {\n  29 |     let arrowFunction = () =\u003e { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-setter-access-on-inner-function.js-strict:true": "test/language/expressions/class/elements/private-setter-access-on-inner-function.js: SyntaxError: test/language/expressions/class/elements/private-setter-access-on-inner-function.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class {\n\u003e 26 |   set #m(v) { this._v = v; }\n     |       ^\n  27 | \n  28 |   method() {\n  29 |     let self = this; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-setter-is-not-a-own-property.js-strict:true": "test/language/expressions/class/elements/private-setter-is-not-a-own-property.js: SyntaxError: test/language/expressions/class/elements/private-setter-is-not-a-own-property.js: Unexpected character '#' (31:6)\n  29 | \n  30 | var C = class {\n\u003e 31 |   set #m(v) { this._v = v; }\n     |       ^\n  32 | \n  33 |   checkPrivateSetter() {\n  34 |     assert.sameValue(this.hasOwnProperty(\"#m\"), false); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-setter-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-setter-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-setter-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class {\n\u003e 26 |   set #m(v) { this._v = v; }\n     |       ^\n  27 | \n  28 |   B = class {\n  29 |     method(o, v) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-setter-shadowed-by-field-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-setter-shadowed-by-field-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-setter-shadowed-by-field-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class {\n\u003e 26 |   set #m(v) { this._v = v; }\n     |       ^\n  27 | \n  28 |   method(v) { this.#m = v; }\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-setter-shadowed-by-getter-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-setter-shadowed-by-getter-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-setter-shadowed-by-getter-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class {\n\u003e 26 |   set #m(v) { this._v = v; }\n     |       ^\n  27 | \n  28 |   method(v) { this.#m = v; }\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-setter-shadowed-by-method-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-setter-shadowed-by-method-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-setter-shadowed-by-method-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class {\n\u003e 26 |   set #m(v) { this._v = v; }\n     |       ^\n  27 | \n  28 |   method(v) { this.#m = v; }\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-setter-shadowed-by-setter-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-setter-shadowed-by-setter-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-setter-shadowed-by-setter-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class {\n\u003e 26 |   set #m(v) { this._v = v; }\n     |       ^\n  27 | \n  28 |   method(v) { this.#m = v; }\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-static-async-generator-method-name.js-strict:true": "test/language/expressions/class/elements/private-static-async-generator-method-name.js: SyntaxError: test/language/expressions/class/elements/private-static-async-generator-method-name.js: Unexpected token (54:15)\n  52 | \n  53 | var C = class {\n\u003e 54 |   static async * #method() {};\n     |                ^\n  55 | \n  56 |   static getPrivateMethod() {\n  57 |     return this.#method; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-static-async-method-name.js-strict:true": "test/language/expressions/class/elements/private-static-async-method-name.js: SyntaxError: test/language/expressions/class/elements/private-static-async-method-name.js: Unexpected character '#' (54:15)\n  52 | \n  53 | var C = class {\n\u003e 54 |   static async #method() {};\n     |                ^\n  55 | \n  56 |   static getPrivateMethod() {\n  57 |     return this.#method; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-static-field-shadowed-by-field-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-static-field-shadowed-by-field-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-static-field-shadowed-by-field-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | var C = class {\n\u003e 68 |   static #m = 'outer class';\n     |          ^\n  69 | \n  70 |   static fieldAccess() {\n  71 |     return this.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-static-field-shadowed-by-getter-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-static-field-shadowed-by-getter-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-static-field-shadowed-by-getter-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | var C = class {\n\u003e 68 |   static #m = 'outer class';\n     |          ^\n  69 | \n  70 |   static fieldAccess() {\n  71 |     return this.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-static-field-shadowed-by-method-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-static-field-shadowed-by-method-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-static-field-shadowed-by-method-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | var C = class {\n\u003e 68 |   static #m = () =\u003e 'outer class';\n     |          ^\n  69 | \n  70 |   static fieldAccess() {\n  71 |     return this.#m(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-static-field-shadowed-by-setter-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-static-field-shadowed-by-setter-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-static-field-shadowed-by-setter-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | var C = class {\n\u003e 68 |   static #m = 'outer class';\n     |          ^\n  69 | \n  70 |   static fieldAccess() {\n  71 |     return this.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-static-field-usage-inside-nested-class.js-strict:true": "test/language/expressions/class/elements/private-static-field-usage-inside-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-static-field-usage-inside-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | var C = class {\n\u003e 68 |   static #m = 'outer class';\n     |          ^\n  69 | \n  70 |   static B = class {\n  71 |     static fieldAccess(o) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-static-generator-method-name.js-strict:true": "test/language/expressions/class/elements/private-static-generator-method-name.js: SyntaxError: test/language/expressions/class/elements/private-static-generator-method-name.js: Unexpected character '#' (54:11)\n  52 | \n  53 | var C = class {\n\u003e 54 |   static * #method() {};\n     |            ^\n  55 | \n  56 |   static getPrivateMethod() {\n  57 |     return this.#method; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-static-method-length.js-strict:true": "test/language/expressions/class/elements/private-static-method-length.js: SyntaxError: test/language/expressions/class/elements/private-static-method-length.js: Unexpected character '#' (39:9)\n  37 | \n  38 | var C = class {\n\u003e 39 |   static #method(a, b, c) {};\n     |          ^\n  40 | \n  41 |   static getPrivateMethod() {\n  42 |     return this.#method; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-static-method-name.js-strict:true": "test/language/expressions/class/elements/private-static-method-name.js: SyntaxError: test/language/expressions/class/elements/private-static-method-name.js: Unexpected character '#' (62:9)\n  60 | \n  61 | var C = class {\n\u003e 62 |   static #method() {\n     |          ^\n  63 |     return 'Test262';\n  64 |   };\n  65 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-static-method-shadowed-by-field-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-static-method-shadowed-by-field-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-static-method-shadowed-by-field-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | var C = class {\n\u003e 68 |   static #m() { return 'outer class'; }\n     |          ^\n  69 | \n  70 |   static methodAccess() {\n  71 |     return this.#m(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-static-method-shadowed-by-getter-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-static-method-shadowed-by-getter-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-static-method-shadowed-by-getter-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | var C = class {\n\u003e 68 |   static #m() { return 'outer class'; }\n     |          ^\n  69 | \n  70 |   static methodAccess() {\n  71 |     return this.#m(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-static-method-shadowed-by-method-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-static-method-shadowed-by-method-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-static-method-shadowed-by-method-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | var C = class {\n\u003e 68 |   static #m() { return 'outer class'; }\n     |          ^\n  69 | \n  70 |   static methodAccess() {\n  71 |     return this.#m(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-static-method-shadowed-by-setter-on-nested-class.js-strict:true": "test/language/expressions/class/elements/private-static-method-shadowed-by-setter-on-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-static-method-shadowed-by-setter-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | var C = class {\n\u003e 68 |   static #m() { return 'outer class'; }\n     |          ^\n  69 | \n  70 |   static methodAccess() {\n  71 |     return this.#m(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/private-static-method-usage-inside-nested-class.js-strict:true": "test/language/expressions/class/elements/private-static-method-usage-inside-nested-class.js: SyntaxError: test/language/expressions/class/elements/private-static-method-usage-inside-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | var C = class {\n\u003e 68 |   static #m() {\n     |          ^\n  69 |     return 'outer class';\n  70 |   }\n  71 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/prod-private-getter-before-super-return-in-constructor.js-strict:true": "test/language/expressions/class/elements/prod-private-getter-before-super-return-in-constructor.js: SyntaxError: test/language/expressions/class/elements/prod-private-getter-before-super-return-in-constructor.js: Unexpected character '#' (40:15)\n  38 | \n  39 | class D extends C {\n\u003e 40 |     f() { this.#m; }\n     |                ^\n  41 |     get #m() { return 42; }\n  42 | }\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/prod-private-getter-before-super-return-in-field-initializer.js-strict:true": "test/language/expressions/class/elements/prod-private-getter-before-super-return-in-field-initializer.js: SyntaxError: test/language/expressions/class/elements/prod-private-getter-before-super-return-in-field-initializer.js: Unexpected token (33:4)\n  31 | \n  32 | var C = class {\n\u003e 33 |   f = this.g();\n     |     ^\n  34 | \n  35 | }\n  36 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/prod-private-method-before-super-return-in-constructor.js-strict:true": "test/language/expressions/class/elements/prod-private-method-before-super-return-in-constructor.js: SyntaxError: test/language/expressions/class/elements/prod-private-method-before-super-return-in-constructor.js: Unexpected character '#' (40:15)\n  38 | \n  39 | class D extends C {\n\u003e 40 |     f() { this.#m(); }\n     |                ^\n  41 |     #m() { return 42; }\n  42 | }\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/prod-private-method-before-super-return-in-field-initializer.js-strict:true": "test/language/expressions/class/elements/prod-private-method-before-super-return-in-field-initializer.js: SyntaxError: test/language/expressions/class/elements/prod-private-method-before-super-return-in-field-initializer.js: Unexpected token (33:4)\n  31 | \n  32 | var C = class {\n\u003e 33 |   f = this.g();\n     |     ^\n  34 | \n  35 | }\n  36 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/prod-private-setter-before-super-return-in-constructor.js-strict:true": "test/language/expressions/class/elements/prod-private-setter-before-super-return-in-constructor.js: SyntaxError: test/language/expressions/class/elements/prod-private-setter-before-super-return-in-constructor.js: Unexpected character '#' (40:15)\n  38 | \n  39 | class D extends C {\n\u003e 40 |     f() { this.#m = 42; }\n     |                ^\n  41 |     set #m(val) {}\n  42 | }\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/prod-private-setter-before-super-return-in-field-initializer.js-strict:true": "test/language/expressions/class/elements/prod-private-setter-before-super-return-in-field-initializer.js: SyntaxError: test/language/expressions/class/elements/prod-private-setter-before-super-return-in-field-initializer.js: Unexpected token (33:4)\n  31 | \n  32 | var C = class {\n\u003e 33 |   f = this.g();\n     |     ^\n  34 | \n  35 | }\n  36 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/redeclaration-symbol.js-strict:true": "test/language/expressions/class/elements/redeclaration-symbol.js: SyntaxError: test/language/expressions/class/elements/redeclaration-symbol.js: Unexpected token (39:6)\n  37 | \n  38 | var C = class {\n\u003e 39 |   [y] = (x.push(\"a\"), \"old_value\");\n     |       ^\n  40 |   [y] = (x.push(\"b\"), \"same_value\");\n  41 |   [y] = (x.push(\"c\"), \"same_value\");\n  42 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/redeclaration.js-strict:true": "test/language/expressions/class/elements/redeclaration.js: SyntaxError: test/language/expressions/class/elements/redeclaration.js: Unexpected token (38:4)\n  36 | \n  37 | var C = class {\n\u003e 38 |   y = (x.push(\"a\"), \"old_value\");\n     |     ^\n  39 |   [\"y\"] = (x.push(\"b\"), \"another_value\");\n  40 |   \"y\" = (x.push(\"c\"), \"same_value\");\n  41 |   y = (x.push(\"d\"), \"same_value\"); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-computed-names.js-strict:true": "test/language/expressions/class/elements/regular-definitions-computed-names.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | var C = class {\n\u003e 28 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"]\n     |       ^\n  29 |   \n  30 | }\n  31 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-computed-symbol-names.js-strict:true": "test/language/expressions/class/elements/regular-definitions-computed-symbol-names.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-computed-symbol-names.js: Unexpected token (29:11)\n  27 | \n  28 | var C = class {\n\u003e 29 |   [x]; [y] = 42\n     |            ^\n  30 |   \n  31 | }\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/expressions/class/elements/regular-definitions-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (67:2)\n  65 | \n  66 | var C = class {\n\u003e 67 |   #\\u{6F};\n     |   ^\n  68 |   #\\u2118;\n  69 |   #ZW_\\u200C_NJ;\n  70 |   #ZW_\\u200D_J; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-literal-names-asi.js-strict:true": "test/language/expressions/class/elements/regular-definitions-literal-names-asi.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-literal-names-asi.js: Unexpected token (27:4)\n  25 | var C = class {\n  26 |   a\n\u003e 27 |   b = 42;\n     |     ^\n  28 |   \n  29 | }\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-literal-names.js-strict:true": "test/language/expressions/class/elements/regular-definitions-literal-names.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-literal-names.js: Unexpected token (28:7)\n  26 | \n  27 | var C = class {\n\u003e 28 |   a; b = 42;\n     |        ^\n  29 |   c = fn\n  30 |   \n  31 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-private-field-usage.js-strict:true": "test/language/expressions/class/elements/regular-definitions-private-field-usage.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-private-field-usage.js: Unexpected character '#' (26:2)\n  24 | \n  25 | var C = class {\n\u003e 26 |   #m = 'test262';\n     |   ^\n  27 |   method() {\n  28 |     return this.#m;\n  29 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-private-method-getter-usage.js-strict:true": "test/language/expressions/class/elements/regular-definitions-private-method-getter-usage.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-private-method-getter-usage.js: Unexpected character '#' (26:6)\n  24 | \n  25 | var C = class {\n\u003e 26 |   get #m() { return 'test262'; }\n     |       ^\n  27 |   method() {\n  28 |     return this.#m;\n  29 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-private-method-usage.js-strict:true": "test/language/expressions/class/elements/regular-definitions-private-method-usage.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-private-method-usage.js: Unexpected character '#' (26:2)\n  24 | \n  25 | var C = class {\n\u003e 26 |   #m() { return 'test262'; }\n     |   ^\n  27 |   method() {\n  28 |     return this.#m();\n  29 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-private-names.js-strict:true": "test/language/expressions/class/elements/regular-definitions-private-names.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-private-names.js: Unexpected character '#' (28:2)\n  26 | \n  27 | var C = class {\n\u003e 28 |   #x; #y\n     |   ^\n  29 |   x() {\n  30 |     this.#x = 42;\n  31 |     return this.#x; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-rs-field-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-field-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-field-identifier-initializer.js: Unexpected token (61:4)\n  59 | \n  60 | var C = class {\n\u003e 61 |   $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1\n     |     ^\n  62 |   \n  63 | }\n  64 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-rs-field-identifier.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-field-identifier.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-field-identifier.js: Missing class properties transform.\n  59 | \n  60 | var C = class {\n\u003e 61 |   $; _; \\u{6F}; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J\n     |   ^\n  62 |   \n  63 | }\n  64 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-rs-private-getter-alt.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-private-getter-alt.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-private-getter-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   get #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-rs-private-getter.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-private-getter.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-private-getter.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   get #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-rs-private-method-alt.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-private-method-alt.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-private-method-alt.js: Unexpected character '#' (58:2)\n  56 | \n  57 | var C = class {\n\u003e 58 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  59 |   #$() {\n  60 |     return this.#$_;\n  61 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-rs-private-method.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-private-method.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-private-method.js: Unexpected character '#' (58:2)\n  56 | \n  57 | var C = class {\n\u003e 58 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  59 |   #$() {\n  60 |     return this.#$_;\n  61 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-rs-private-setter-alt.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-private-setter-alt.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-private-setter-alt.js: Unexpected character '#' (58:2)\n  56 | \n  57 | var C = class {\n\u003e 58 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  59 |   set #$(value) {\n  60 |     this.#$_ = value;\n  61 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-rs-private-setter.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-private-setter.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-private-setter.js: Unexpected character '#' (58:2)\n  56 | \n  57 | var C = class {\n\u003e 58 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  59 |   set #$(value) {\n  60 |     this.#$_ = value;\n  61 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-rs-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-privatename-identifier-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n\u003e 59 |   #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J\n     |   ^\n  60 |   $(value) {\n  61 |     this.#$ = value;\n  62 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n\u003e 59 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1\n     |   ^\n  60 |   $() {\n  61 |     return this.#$;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-rs-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-privatename-identifier-initializer.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n\u003e 59 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1\n     |   ^\n  60 |   $() {\n  61 |     return this.#$;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-rs-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-privatename-identifier.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n\u003e 59 |   #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J\n     |   ^\n  60 |   $(value) {\n  61 |     this.#$ = value;\n  62 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (63:11)\n  61 | \n  62 | var C = class {\n\u003e 63 |   static * #$(value) {\n     |            ^\n  64 |     yield * value;\n  65 |   }\n  66 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (63:11)\n  61 | \n  62 | var C = class {\n\u003e 63 |   static * #$(value) {\n     |            ^\n  64 |     yield * value;\n  65 |   }\n  66 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (60:9)\n  58 | \n  59 | var C = class {\n\u003e 60 |   static #$(value) {\n     |          ^\n  61 |     return value;\n  62 |   }\n  63 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-rs-static-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-method-privatename-identifier.js: Unexpected character '#' (60:9)\n  58 | \n  59 | var C = class {\n\u003e 60 |   static #$(value) {\n     |          ^\n  61 |     return value;\n  62 |   }\n  63 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (60:9)\n  58 | \n  59 | var C = class {\n\u003e 60 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n     |          ^\n  61 |   static $(value) {\n  62 |     C.#$ = value;\n  63 |     return C.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-alt.js: Unexpected character '#' (60:9)\n  58 | \n  59 | var C = class {\n\u003e 60 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n     |          ^\n  61 |   static $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (60:9)\n  58 | \n  59 | var C = class {\n\u003e 60 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n     |          ^\n  61 |   static $(value) {\n  62 |     C.#$ = value;\n  63 |     return C.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (60:9)\n  58 | \n  59 | var C = class {\n\u003e 60 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n     |          ^\n  61 |   static $() {\n  62 |     return C.#$;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:9)\n  58 | \n  59 | var C = class {\n\u003e 60 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n     |          ^\n  61 |   static $() {\n  62 |     return this.#$;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (60:9)\n  58 | \n  59 | var C = class {\n\u003e 60 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1\n     |          ^\n  61 |   static $() {\n  62 |     return this.#$;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-privatename-identifier.js: Unexpected character '#' (60:9)\n  58 | \n  59 | var C = class {\n\u003e 60 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n     |          ^\n  61 |   static $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-static-private-fields.js-strict:true": "test/language/expressions/class/elements/regular-definitions-static-private-fields.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-static-private-fields.js: Unexpected character '#' (28:9)\n  26 | \n  27 | var C = class {\n\u003e 28 |   static #x; static #y\n     |          ^\n  29 |   static x() {\n  30 |     this.#x = 42;\n  31 |     return this.#x; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-static-private-methods-with-fields.js-strict:true": "test/language/expressions/class/elements/regular-definitions-static-private-methods-with-fields.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-static-private-methods-with-fields.js: Unexpected character '#' (28:9)\n  26 | \n  27 | var C = class {\n\u003e 28 |   static #xVal; static #yVal\n     |          ^\n  29 |   static #x(value) {\n  30 |     this.#xVal = value;\n  31 |     return this.#xVal; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-static-private-methods.js-strict:true": "test/language/expressions/class/elements/regular-definitions-static-private-methods.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-static-private-methods.js: Unexpected character '#' (29:9)\n  27 | var C = class {\n  28 |   \n\u003e 29 |   static #x(value) {\n     |          ^\n  30 |     return value / 2;\n  31 |   }\n  32 |   static #y(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/regular-definitions-string-literal-names.js-strict:true": "test/language/expressions/class/elements/regular-definitions-string-literal-names.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-string-literal-names.js: Unexpected token (26:16)\n  24 | \n  25 | var C = class {\n\u003e 26 |   'a'; \"b\"; 'c' = 39;\n     |                 ^\n  27 |   \"d\" = 42\n  28 |   \n  29 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-computed-names.js-strict:true": "test/language/expressions/class/elements/same-line-method-computed-names.js: SyntaxError: test/language/expressions/class/elements/same-line-method-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | var C = class {\n\u003e 28 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"]; m() { return 42; }\n     |       ^\n  29 |   \n  30 | }\n  31 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-computed-symbol-names.js-strict:true": "test/language/expressions/class/elements/same-line-method-computed-symbol-names.js: SyntaxError: test/language/expressions/class/elements/same-line-method-computed-symbol-names.js: Unexpected token (29:11)\n  27 | \n  28 | var C = class {\n\u003e 29 |   [x]; [y] = 42; m() { return 42; }\n     |            ^\n  30 |   \n  31 | }\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/expressions/class/elements/same-line-method-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/expressions/class/elements/same-line-method-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:2)\n  66 | \n  67 | var C = class {\n\u003e 68 |   #\\u{6F};\n     |   ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J;; m() { return 42; } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-literal-names-asi.js-strict:true": "test/language/expressions/class/elements/same-line-method-literal-names-asi.js: SyntaxError: test/language/expressions/class/elements/same-line-method-literal-names-asi.js: Unexpected token (27:4)\n  25 | var C = class {\n  26 |   a\n\u003e 27 |   b = 42;; m() { return 42; }\n     |     ^\n  28 |   \n  29 | }\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-literal-names.js-strict:true": "test/language/expressions/class/elements/same-line-method-literal-names.js: SyntaxError: test/language/expressions/class/elements/same-line-method-literal-names.js: Unexpected token (28:7)\n  26 | \n  27 | var C = class {\n\u003e 28 |   a; b = 42;\n     |        ^\n  29 |   c = fn; m() { return 42; }\n  30 |   \n  31 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-private-field-usage.js-strict:true": "test/language/expressions/class/elements/same-line-method-private-field-usage.js: SyntaxError: test/language/expressions/class/elements/same-line-method-private-field-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | var C = class {\n\u003e 27 |   #m = 'test262';; m() { return 42; }\n     |   ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-private-method-getter-usage.js-strict:true": "test/language/expressions/class/elements/same-line-method-private-method-getter-usage.js: SyntaxError: test/language/expressions/class/elements/same-line-method-private-method-getter-usage.js: Unexpected character '#' (27:6)\n  25 | \n  26 | var C = class {\n\u003e 27 |   get #m() { return 'test262'; }; m() { return 42; }\n     |       ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-private-method-usage.js-strict:true": "test/language/expressions/class/elements/same-line-method-private-method-usage.js: SyntaxError: test/language/expressions/class/elements/same-line-method-private-method-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | var C = class {\n\u003e 27 |   #m() { return 'test262'; }; m() { return 42; }\n     |   ^\n  28 |   method() {\n  29 |     return this.#m();\n  30 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-private-names.js-strict:true": "test/language/expressions/class/elements/same-line-method-private-names.js: SyntaxError: test/language/expressions/class/elements/same-line-method-private-names.js: Unexpected character '#' (29:2)\n  27 | \n  28 | var C = class {\n\u003e 29 |   #x; #y; m() { return 42; }\n     |   ^\n  30 |   x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-rs-field-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-field-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-field-identifier-initializer.js: Unexpected token (62:4)\n  60 | \n  61 | var C = class {\n\u003e 62 |   $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1; m() { return 42; }\n     |     ^\n  63 |   \n  64 | }\n  65 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-rs-field-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-field-identifier.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-field-identifier.js: Missing class properties transform.\n  60 | \n  61 | var C = class {\n\u003e 62 |   $; _; \\u{6F}; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J; m() { return 42; }\n     |   ^\n  63 |   \n  64 | }\n  65 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-rs-private-getter-alt.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-private-getter-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-private-getter-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n\u003e 60 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-rs-private-getter.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-private-getter.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-private-getter.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n\u003e 60 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-rs-private-method-alt.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-private-method-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-private-method-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-rs-private-method.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-private-method.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-private-method.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-rs-private-setter-alt.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-private-setter-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-private-setter-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-rs-private-setter.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-private-setter.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-private-setter.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-rs-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-privatename-identifier-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n\u003e 60 |   #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J; m() { return 42; }\n     |   ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n\u003e 60 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1; m() { return 42; }\n     |   ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-rs-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n\u003e 60 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1; m() { return 42; }\n     |   ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-rs-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-privatename-identifier.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n\u003e 60 |   #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J; m() { return 42; }\n     |   ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:11)\n  62 | \n  63 | var C = class {\n\u003e 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:11)\n  62 | \n  63 | var C = class {\n\u003e 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$(value) {\n     |          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-rs-static-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$(value) {\n     |          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J; m() { return 42; }\n     |          ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J; m() { return 42; }\n     |          ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J; m() { return 42; }\n     |          ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1; m() { return 42; }\n     |          ^\n  62 |   static $() {\n  63 |     return C.#$;\n  64 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1; m() { return 42; }\n     |          ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1; m() { return 42; }\n     |          ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J; m() { return 42; }\n     |          ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-static-private-fields.js-strict:true": "test/language/expressions/class/elements/same-line-method-static-private-fields.js: SyntaxError: test/language/expressions/class/elements/same-line-method-static-private-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class {\n\u003e 29 |   static #x; static #y; m() { return 42; }\n     |          ^\n  30 |   static x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-static-private-methods-with-fields.js-strict:true": "test/language/expressions/class/elements/same-line-method-static-private-methods-with-fields.js: SyntaxError: test/language/expressions/class/elements/same-line-method-static-private-methods-with-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class {\n\u003e 29 |   static #xVal; static #yVal; m() { return 42; }\n     |          ^\n  30 |   static #x(value) {\n  31 |     this.#xVal = value;\n  32 |     return this.#xVal; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-static-private-methods.js-strict:true": "test/language/expressions/class/elements/same-line-method-static-private-methods.js: SyntaxError: test/language/expressions/class/elements/same-line-method-static-private-methods.js: Unexpected character '#' (30:9)\n  28 | var C = class {\n  29 |   ; m() { return 42; }\n\u003e 30 |   static #x(value) {\n     |          ^\n  31 |     return value / 2;\n  32 |   }\n  33 |   static #y(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/same-line-method-string-literal-names.js-strict:true": "test/language/expressions/class/elements/same-line-method-string-literal-names.js: SyntaxError: test/language/expressions/class/elements/same-line-method-string-literal-names.js: Unexpected token (26:16)\n  24 | \n  25 | var C = class {\n\u003e 26 |   'a'; \"b\"; 'c' = 39;\n     |                 ^\n  27 |   \"d\" = 42; m() { return 42; }\n  28 |   \n  29 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-as-valid-instance-field-assigned.js-strict:true": "test/language/expressions/class/elements/static-as-valid-instance-field-assigned.js: SyntaxError: test/language/expressions/class/elements/static-as-valid-instance-field-assigned.js: Unexpected token (26:9)\n  24 | \n  25 | var C = class {\n\u003e 26 |   static = \"foo\";\n     |          ^\n  27 | }\n  28 | \n  29 | let c = new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-as-valid-instance-field.js-strict:true": "test/language/expressions/class/elements/static-as-valid-instance-field.js: SyntaxError: test/language/expressions/class/elements/static-as-valid-instance-field.js: Missing class properties transform.\n  24 | \n  25 | var C = class {\n\u003e 26 |   static;\n     |   ^\n  27 | }\n  28 | \n  29 | let c = new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-as-valid-static-field-assigned.js-strict:true": "test/language/expressions/class/elements/static-as-valid-static-field-assigned.js: SyntaxError: test/language/expressions/class/elements/static-as-valid-static-field-assigned.js: Unexpected token (20:16)\n  18 | \n  19 | var C = class {\n\u003e 20 |   static static = \"test262\";\n     |                 ^\n  21 | }\n  22 | \n  23 | verifyProperty(C, \"static\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-as-valid-static-field.js-strict:true": "test/language/expressions/class/elements/static-as-valid-static-field.js: SyntaxError: test/language/expressions/class/elements/static-as-valid-static-field.js: Missing class properties transform.\n  18 | \n  19 | var C = class {\n\u003e 20 |   static static;\n     |   ^\n  21 | }\n  22 | \n  23 | verifyProperty(C, \"static\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-field-anonymous-function-length.js-strict:true": "test/language/expressions/class/elements/static-field-anonymous-function-length.js: SyntaxError: test/language/expressions/class/elements/static-field-anonymous-function-length.js: Unexpected character '#' (52:9)\n  50 | \n  51 | var C = class {\n\u003e 52 |   static #field = (a, b) =\u003e undefined;\n     |          ^\n  53 |   static field = function() {};\n  54 | \n  55 |   static accessPrivateField() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-field-anonymous-function-name.js-strict:true": "test/language/expressions/class/elements/static-field-anonymous-function-name.js: SyntaxError: test/language/expressions/class/elements/static-field-anonymous-function-name.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static #field = () =\u003e 'Test262';\n     |          ^\n  62 |   static field = function() { return 42; };\n  63 | \n  64 |   static accessPrivateField() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-field-declaration.js-strict:true": "test/language/expressions/class/elements/static-field-declaration.js: SyntaxError: test/language/expressions/class/elements/static-field-declaration.js: Unexpected token (75:11)\n  73 | \n  74 | var C = class {\n\u003e 75 |   static f = 'test262';\n     |            ^\n  76 |   static 'g';\n  77 |   static 0 = 'bar';\n  78 |   static [computed]; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-field-init-this-inside-arrow-function.js-strict:true": "test/language/expressions/class/elements/static-field-init-this-inside-arrow-function.js: SyntaxError: test/language/expressions/class/elements/static-field-init-this-inside-arrow-function.js: Unexpected token (61:11)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static f = () =\u003e this;\n     |            ^\n  62 | }\n  63 | \n  64 | assert.sameValue(C.f(), C); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-field-init-with-this.js-strict:true": "test/language/expressions/class/elements/static-field-init-with-this.js: SyntaxError: test/language/expressions/class/elements/static-field-init-with-this.js: Unexpected token (61:11)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static f = 'test';\n     |            ^\n  62 |   static g = this.f + '262';\n  63 |   static h = eval('this.g') + 'test';\n  64 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-field-redeclaration.js-strict:true": "test/language/expressions/class/elements/static-field-redeclaration.js: SyntaxError: test/language/expressions/class/elements/static-field-redeclaration.js: Unexpected token (61:11)\n  59 | \n  60 | var C = class {\n\u003e 61 |   static f = 'test';\n     |            ^\n  62 |   static f = this.f + '262';\n  63 |   static g() {\n  64 |     return 45; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-private-fields-proxy-default-handler-throws.js-strict:true": "test/language/expressions/class/elements/static-private-fields-proxy-default-handler-throws.js: SyntaxError: test/language/expressions/class/elements/static-private-fields-proxy-default-handler-throws.js: Unexpected character '#' (18:9)\n  16 | \n  17 | var C = class {\n\u003e 18 |   static #x = 1;\n     |          ^\n  19 |   static x() {\n  20 |     return this.#x;\n  21 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-private-getter-access-on-inner-arrow-function.js-strict:true": "test/language/expressions/class/elements/static-private-getter-access-on-inner-arrow-function.js: SyntaxError: test/language/expressions/class/elements/static-private-getter-access-on-inner-arrow-function.js: Unexpected character '#' (29:13)\n  27 | \n  28 | var C = class {\n\u003e 29 |   static get #f() {\n     |              ^\n  30 |     return 'Test262';\n  31 |   }\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-private-getter-access-on-inner-class.js-strict:true": "test/language/expressions/class/elements/static-private-getter-access-on-inner-class.js: SyntaxError: test/language/expressions/class/elements/static-private-getter-access-on-inner-class.js: Unexpected character '#' (29:13)\n  27 | \n  28 | var C = class {\n\u003e 29 |   static get #f() {\n     |              ^\n  30 |     return 'Test262';\n  31 |   }\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-private-getter-access-on-inner-function.js-strict:true": "test/language/expressions/class/elements/static-private-getter-access-on-inner-function.js: SyntaxError: test/language/expressions/class/elements/static-private-getter-access-on-inner-function.js: Unexpected character '#' (29:13)\n  27 | \n  28 | var C = class {\n\u003e 29 |   static get #f() {\n     |              ^\n  30 |     return 'Test262';\n  31 |   }\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-private-getter.js-strict:true": "test/language/expressions/class/elements/static-private-getter.js: SyntaxError: test/language/expressions/class/elements/static-private-getter.js: Unexpected character '#' (44:13)\n  42 | \n  43 | var C = class {\n\u003e 44 |   static get #f() {\n     |              ^\n  45 |     return 'Test262';\n  46 |   }\n  47 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-private-method-access-on-inner-arrow-function.js-strict:true": "test/language/expressions/class/elements/static-private-method-access-on-inner-arrow-function.js: SyntaxError: test/language/expressions/class/elements/static-private-method-access-on-inner-arrow-function.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class {\n\u003e 29 |   static #f() { return 42; }\n     |          ^\n  30 |   static g() {\n  31 |     const arrowFunction = () =\u003e {\n  32 |       return this.#f(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-private-method-access-on-inner-function.js-strict:true": "test/language/expressions/class/elements/static-private-method-access-on-inner-function.js: SyntaxError: test/language/expressions/class/elements/static-private-method-access-on-inner-function.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class {\n\u003e 29 |   static #f() { return 42; }\n     |          ^\n  30 |   static g() {\n  31 |     const self = this;\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-private-method-and-instance-method-brand-check.js-strict:true": "test/language/expressions/class/elements/static-private-method-and-instance-method-brand-check.js: SyntaxError: test/language/expressions/class/elements/static-private-method-and-instance-method-brand-check.js: Unexpected character '#' (37:9)\n  35 | \n  36 | var C = class {\n\u003e 37 |   static #f() {\n     |          ^\n  38 |     return 'static';\n  39 |   }\n  40 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-private-method-referenced-from-instance-method.js-strict:true": "test/language/expressions/class/elements/static-private-method-referenced-from-instance-method.js: SyntaxError: test/language/expressions/class/elements/static-private-method-referenced-from-instance-method.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class {\n\u003e 29 |   static #f() { return 42; }\n     |          ^\n  30 |   g() {\n  31 |     return this.#f();\n  32 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-private-method-subclass-receiver.js-strict:true": "test/language/expressions/class/elements/static-private-method-subclass-receiver.js: SyntaxError: test/language/expressions/class/elements/static-private-method-subclass-receiver.js: Unexpected character '#' (29:27)\n  27 | \n  28 | var C = class {\n\u003e 29 |   static f() { return this.#g(); }\n     |                            ^\n  30 |   static #g() { return 42; }\n  31 | \n  32 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-private-methods-proxy-default-handler-throws.js-strict:true": "test/language/expressions/class/elements/static-private-methods-proxy-default-handler-throws.js: SyntaxError: test/language/expressions/class/elements/static-private-methods-proxy-default-handler-throws.js: Unexpected character '#' (19:9)\n  17 | \n  18 | var C = class {\n\u003e 19 |   static #x(value) {\n     |          ^\n  20 |     return 1;\n  21 |   }\n  22 |   static x() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-private-setter-access-on-inner-arrow-function.js-strict:true": "test/language/expressions/class/elements/static-private-setter-access-on-inner-arrow-function.js: SyntaxError: test/language/expressions/class/elements/static-private-setter-access-on-inner-arrow-function.js: Unexpected character '#' (29:13)\n  27 | \n  28 | var C = class {\n\u003e 29 |   static set #f(v) {\n     |              ^\n  30 |     this._v = v;\n  31 |   }\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-private-setter-access-on-inner-class.js-strict:true": "test/language/expressions/class/elements/static-private-setter-access-on-inner-class.js: SyntaxError: test/language/expressions/class/elements/static-private-setter-access-on-inner-class.js: Unexpected character '#' (29:13)\n  27 | \n  28 | var C = class {\n\u003e 29 |   static set #f(v) {\n     |              ^\n  30 |     return this._v = v;\n  31 |   }\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-private-setter-access-on-inner-function.js-strict:true": "test/language/expressions/class/elements/static-private-setter-access-on-inner-function.js: SyntaxError: test/language/expressions/class/elements/static-private-setter-access-on-inner-function.js: Unexpected character '#' (29:13)\n  27 | \n  28 | var C = class {\n\u003e 29 |   static set #f(v) {\n     |              ^\n  30 |     this._v = v;\n  31 |   }\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/static-private-setter.js-strict:true": "test/language/expressions/class/elements/static-private-setter.js: SyntaxError: test/language/expressions/class/elements/static-private-setter.js: Unexpected character '#' (44:13)\n  42 | \n  43 | var C = class {\n\u003e 44 |   static set #f(v) {\n     |              ^\n  45 |     this._v = v;\n  46 |   }\n  47 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/syntax/early-errors/grammar-static-get-meth-prototype.js-strict:true": "test/language/expressions/class/elements/syntax/early-errors/grammar-static-get-meth-prototype.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/class/elements/syntax/early-errors/grammar-static-set-meth-prototype.js-strict:true": "test/language/expressions/class/elements/syntax/early-errors/grammar-static-set-meth-prototype.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/class/elements/syntax/valid/grammar-field-classelementname-initializer-alt.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-field-classelementname-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-field-classelementname-initializer-alt.js: Unexpected token (65:4)\n  63 | \n  64 | var C = class {\n\u003e 65 |   $ = 1;\n     |     ^\n  66 |   _ = 2;\n  67 |   \\u{6F} = 3;\n  68 |   ℘ = 4;      // DO NOT CHANGE THE NAME OF THIS FIELD at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/syntax/valid/grammar-field-classelementname-initializer.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-field-classelementname-initializer.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-field-classelementname-initializer.js: Unexpected token (65:4)\n  63 | \n  64 | var C = class {\n\u003e 65 |   $ = 1;\n     |     ^\n  66 |   _ = 2;\n  67 |   \\u{6F} = 3;\n  68 |   \\u2118 = 4; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/syntax/valid/grammar-field-identifier-alt.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-field-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-field-identifier-alt.js: Missing class properties transform.\n  63 | \n  64 | var C = class {\n\u003e 65 |   $;\n     |   ^\n  66 |   _;\n  67 |   \\u{6F};\n  68 |   ℘;      // DO NOT CHANGE THE NAME OF THIS FIELD at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/syntax/valid/grammar-field-identifier.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-field-identifier.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-field-identifier.js: Missing class properties transform.\n  63 | \n  64 | var C = class {\n\u003e 65 |   $;\n     |   ^\n  66 |   _;\n  67 |   \\u{6F};\n  68 |   \\u2118; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/syntax/valid/grammar-fields-multi-line.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-fields-multi-line.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-fields-multi-line.js: Missing class properties transform.\n  26 | \n  27 | var C = class {\n\u003e 28 |   x\n     |   ^\n  29 |   y\n  30 | };\n  31 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/syntax/valid/grammar-privatemeth-duplicate-get-set.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-privatemeth-duplicate-get-set.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-privatemeth-duplicate-get-set.js: Unexpected character '#' (20:6)\n  18 | \n  19 | var C = class {\n\u003e 20 |   get #m() {}\n     |       ^\n  21 |   set #m(_) {}\n  22 | };\n  23 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/syntax/valid/grammar-privatemeth-duplicate-meth-nestedclassmeth.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-privatemeth-duplicate-meth-nestedclassmeth.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-privatemeth-duplicate-meth-nestedclassmeth.js: Unexpected character '#' (22:6)\n  20 |   constructor() {\n  21 |     class B {\n\u003e 22 |       #m() {}\n     |       ^\n  23 |     }\n  24 |   }\n  25 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/syntax/valid/grammar-privatename-classelementname-initializer-alt.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-privatename-classelementname-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-privatename-classelementname-initializer-alt.js: Unexpected character '#' (62:2)\n  60 | \n  61 | var C = class {\n\u003e 62 |   #$ = 1;\n     |   ^\n  63 |   #_ = 2;\n  64 |   #\\u{6F} = 3;\n  65 |   #℘ = 4;      // DO NOT CHANGE THE NAME OF THIS FIELD at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/syntax/valid/grammar-privatename-classelementname-initializer.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-privatename-classelementname-initializer.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-privatename-classelementname-initializer.js: Unexpected character '#' (62:2)\n  60 | \n  61 | var C = class {\n\u003e 62 |   #$ = 1;\n     |   ^\n  63 |   #_ = 2;\n  64 |   #\\u{6F} = 3;\n  65 |   #\\u2118 = 4; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/syntax/valid/grammar-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-privatename-identifier.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n\u003e 59 |   #$;\n     |   ^\n  60 |   #_;\n  61 |   #\\u{6F};\n  62 |   #\\u2118; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/syntax/valid/grammar-privatename-no-initializer-with-method.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-privatename-no-initializer-with-method.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-privatename-no-initializer-with-method.js: Unexpected character '#' (31:2)\n  29 | \n  30 | var C = class {\n\u003e 31 |   #x\n     |   ^\n  32 |   m() {}\n  33 | };\n  34 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/syntax/valid/grammar-privatenames-multi-line.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-privatenames-multi-line.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-privatenames-multi-line.js: Unexpected character '#' (31:2)\n  29 | \n  30 | var C = class {\n\u003e 31 |   #x\n     |   ^\n  32 |   #y\n  33 | };\n  34 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/syntax/valid/grammar-special-prototype-async-gen-meth-valid.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-special-prototype-async-gen-meth-valid.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-special-prototype-async-gen-meth-valid.js: Unexpected token (40:8)\n  38 | \n  39 | var C = class {\n\u003e 40 |   async * prototype() {}\n     |         ^\n  41 | };\n  42 | \n  43 | assert(C.hasOwnProperty('prototype')); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/syntax/valid/grammar-special-prototype-async-meth-valid.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-special-prototype-async-meth-valid.js: test/language/expressions/class/elements/syntax/valid/grammar-special-prototype-async-meth-valid.js: Line 39:112 Unexpected token function",
  "test/language/expressions/class/elements/syntax/valid/grammar-static-ctor-async-gen-meth-valid.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-static-ctor-async-gen-meth-valid.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-static-ctor-async-gen-meth-valid.js: Unexpected token (24:15)\n  22 | \n  23 | var C = class {\n\u003e 24 |   static async * constructor() {}\n     |                ^\n  25 |   constructor() {} // stacks with a valid constructor\n  26 | };\n  27 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/syntax/valid/grammar-static-ctor-async-meth-valid.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-static-ctor-async-meth-valid.js: test/language/expressions/class/elements/syntax/valid/grammar-static-ctor-async-meth-valid.js: Line 23:80 Unexpected token function",
  "test/language/expressions/class/elements/syntax/valid/grammar-static-private-async-gen-meth-prototype.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-static-private-async-gen-meth-prototype.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-static-private-async-gen-meth-prototype.js: Unexpected token (20:15)\n  18 | \n  19 | var C = class {\n\u003e 20 |   static async * #prototype() {}\n     |                ^\n  21 | };\n  22 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/syntax/valid/grammar-static-private-async-meth-prototype.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-static-private-async-meth-prototype.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-static-private-async-meth-prototype.js: Unexpected character '#' (20:15)\n  18 | \n  19 | var C = class {\n\u003e 20 |   static async #prototype() {}\n     |                ^\n  21 | };\n  22 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/syntax/valid/grammar-static-private-meth-prototype.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-static-private-meth-prototype.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-static-private-meth-prototype.js: Unexpected character '#' (20:9)\n  18 | \n  19 | var C = class {\n\u003e 20 |   static #prototype() {}\n     |          ^\n  21 | };\n  22 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-computed-names.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-computed-names.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-computed-names.js: Unexpected token (29:12)\n  27 | var C = class {\n  28 |   ;;;;\n\u003e 29 |   ;;;;;;[x] = 42; [10] = \"meep\"; [\"not initialized\"];;;;;;;\n     |             ^\n  30 |   ;;;;\n  31 |   \n  32 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-computed-symbol-names.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-computed-symbol-names.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-computed-symbol-names.js: Unexpected token (30:17)\n  28 | var C = class {\n  29 |   ;;;;\n\u003e 30 |   ;;;;;;[x]; [y] = 42;;;;;;;\n     |                  ^\n  31 |   ;;;;\n  32 |   \n  33 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:8)\n  66 | var C = class {\n  67 |   ;;;;\n\u003e 68 |   ;;;;;;#\\u{6F};\n     |         ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J;;;;;;;; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-literal-names-asi.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-literal-names-asi.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-literal-names-asi.js: Unexpected token (28:4)\n  26 |   ;;;;\n  27 |   ;;;;;;a\n\u003e 28 |   b = 42;;;;;;;;\n     |     ^\n  29 |   ;;;;\n  30 |   \n  31 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-literal-names.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-literal-names.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-literal-names.js: Unexpected token (29:13)\n  27 | var C = class {\n  28 |   ;;;;\n\u003e 29 |   ;;;;;;a; b = 42;\n     |              ^\n  30 |   c = fn;;;;;;;\n  31 |   ;;;;\n  32 |    at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-private-field-usage.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-private-field-usage.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-private-field-usage.js: Unexpected character '#' (27:8)\n  25 | var C = class {\n  26 |   ;;;;\n\u003e 27 |   ;;;;;;#m = 'test262';;;;;;;;\n     |         ^\n  28 |   ;;;;\n  29 |   method() {\n  30 |     return this.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-private-method-getter-usage.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-private-method-getter-usage.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-private-method-getter-usage.js: Unexpected character '#' (27:12)\n  25 | var C = class {\n  26 |   ;;;;\n\u003e 27 |   ;;;;;;get #m() { return 'test262'; };;;;;;;\n     |             ^\n  28 |   ;;;;\n  29 |   method() {\n  30 |     return this.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-private-method-usage.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-private-method-usage.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-private-method-usage.js: Unexpected character '#' (27:8)\n  25 | var C = class {\n  26 |   ;;;;\n\u003e 27 |   ;;;;;;#m() { return 'test262'; };;;;;;;\n     |         ^\n  28 |   ;;;;\n  29 |   method() {\n  30 |     return this.#m(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-private-names.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-private-names.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-private-names.js: Unexpected character '#' (29:8)\n  27 | var C = class {\n  28 |   ;;;;\n\u003e 29 |   ;;;;;;#x; #y;;;;;;;\n     |         ^\n  30 |   ;;;;\n  31 |   x() {\n  32 |     this.#x = 42; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-field-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-field-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-field-identifier-initializer.js: Unexpected token (62:10)\n  60 | var C = class {\n  61 |   ;;;;\n\u003e 62 |   ;;;;;;$ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;;;;;;;\n     |           ^\n  63 |   ;;;;\n  64 |   \n  65 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-field-identifier.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-field-identifier.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-field-identifier.js: Missing class properties transform.\n  60 | var C = class {\n  61 |   ;;;;\n\u003e 62 |   ;;;;;;$; _; \\u{6F}; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J;;;;;;;\n     |         ^\n  63 |   ;;;;\n  64 |   \n  65 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-private-getter-alt.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-private-getter-alt.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-private-getter-alt.js: Unexpected character '#' (60:8)\n  58 | var C = class {\n  59 |   ;;;;\n\u003e 60 |   ;;;;;;#$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |         ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-private-getter.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-private-getter.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-private-getter.js: Unexpected character '#' (60:8)\n  58 | var C = class {\n  59 |   ;;;;\n\u003e 60 |   ;;;;;;#$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |         ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-private-method-alt.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-private-method-alt.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-private-method-alt.js: Unexpected character '#' (59:8)\n  57 | var C = class {\n  58 |   ;;;;\n\u003e 59 |   ;;;;;;#$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |         ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-private-method.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-private-method.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-private-method.js: Unexpected character '#' (59:8)\n  57 | var C = class {\n  58 |   ;;;;\n\u003e 59 |   ;;;;;;#$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |         ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-private-setter-alt.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-private-setter-alt.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-private-setter-alt.js: Unexpected character '#' (59:8)\n  57 | var C = class {\n  58 |   ;;;;\n\u003e 59 |   ;;;;;;#$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |         ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-private-setter.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-private-setter.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-private-setter.js: Unexpected character '#' (59:8)\n  57 | var C = class {\n  58 |   ;;;;\n\u003e 59 |   ;;;;;;#$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |         ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-privatename-identifier-alt.js: Unexpected character '#' (60:8)\n  58 | var C = class {\n  59 |   ;;;;\n\u003e 60 |   ;;;;;;#$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J;;;;;;;\n     |         ^\n  61 |   ;;;;\n  62 |   $(value) {\n  63 |     this.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:8)\n  58 | var C = class {\n  59 |   ;;;;\n\u003e 60 |   ;;;;;;#$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1;;;;;;;\n     |         ^\n  61 |   ;;;;\n  62 |   $() {\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:8)\n  58 | var C = class {\n  59 |   ;;;;\n\u003e 60 |   ;;;;;;#$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1;;;;;;;\n     |         ^\n  61 |   ;;;;\n  62 |   $() {\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-privatename-identifier.js: Unexpected character '#' (60:8)\n  58 | var C = class {\n  59 |   ;;;;\n\u003e 60 |   ;;;;;;#$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J;;;;;;;\n     |         ^\n  61 |   ;;;;\n  62 |   $(value) {\n  63 |     this.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:17)\n  62 | var C = class {\n  63 |   ;;;;\n\u003e 64 |   ;;;;;;static * #$(value) {\n     |                  ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:17)\n  62 | var C = class {\n  63 |   ;;;;\n\u003e 64 |   ;;;;;;static * #$(value) {\n     |                  ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:15)\n  59 | var C = class {\n  60 |   ;;;;\n\u003e 61 |   ;;;;;;static #$(value) {\n     |                ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:15)\n  59 | var C = class {\n  60 |   ;;;;\n\u003e 61 |   ;;;;;;static #$(value) {\n     |                ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:15)\n  59 | var C = class {\n  60 |   ;;;;\n\u003e 61 |   ;;;;;;static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $(value) {\n  64 |     C.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:15)\n  59 | var C = class {\n  60 |   ;;;;\n\u003e 61 |   ;;;;;;static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $(value) {\n  64 |     this.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:15)\n  59 | var C = class {\n  60 |   ;;;;\n\u003e 61 |   ;;;;;;static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $(value) {\n  64 |     C.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:15)\n  59 | var C = class {\n  60 |   ;;;;\n\u003e 61 |   ;;;;;;static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $() {\n  64 |     return C.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:15)\n  59 | var C = class {\n  60 |   ;;;;\n\u003e 61 |   ;;;;;;static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $() {\n  64 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:15)\n  59 | var C = class {\n  60 |   ;;;;\n\u003e 61 |   ;;;;;;static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $() {\n  64 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-privatename-identifier.js: Unexpected character '#' (61:15)\n  59 | var C = class {\n  60 |   ;;;;\n\u003e 61 |   ;;;;;;static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $(value) {\n  64 |     this.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-static-private-fields.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-static-private-fields.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-static-private-fields.js: Unexpected character '#' (29:15)\n  27 | var C = class {\n  28 |   ;;;;\n\u003e 29 |   ;;;;;;static #x; static #y;;;;;;;\n     |                ^\n  30 |   ;;;;\n  31 |   static x() {\n  32 |     this.#x = 42; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-static-private-methods-with-fields.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-static-private-methods-with-fields.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-static-private-methods-with-fields.js: Unexpected character '#' (29:15)\n  27 | var C = class {\n  28 |   ;;;;\n\u003e 29 |   ;;;;;;static #xVal; static #yVal;;;;;;;\n     |                ^\n  30 |   ;;;;\n  31 |   static #x(value) {\n  32 |     this.#xVal = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-static-private-methods.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-static-private-methods.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-static-private-methods.js: Unexpected character '#' (31:9)\n  29 |   ;;;;;;;;;;;;;\n  30 |   ;;;;\n\u003e 31 |   static #x(value) {\n     |          ^\n  32 |     return value / 2;\n  33 |   }\n  34 |   static #y(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/elements/wrapped-in-sc-string-literal-names.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-string-literal-names.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-string-literal-names.js: Unexpected token (27:22)\n  25 | var C = class {\n  26 |   ;;;;\n\u003e 27 |   ;;;;;;'a'; \"b\"; 'c' = 39;\n     |                       ^\n  28 |   \"d\" = 42;;;;;;;\n  29 |   ;;;;\n  30 |    at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/heritage-arrow-function.js-strict:true": "test/language/expressions/class/heritage-arrow-function.js: test/language/expressions/class/heritage-arrow-function.js: Line 30:212 Unexpected token function (and 2 more errors)",
  "test/language/expressions/class/heritage-async-arrow-function.js-strict:true": "test/language/expressions/class/heritage-async-arrow-function.js: test/language/expressions/class/heritage-async-arrow-function.js: Line 30:212 Unexpected token function (and 2 more errors)",
  "test/language/expressions/class/method-static/dflt-params-ref-later.js-strict:true": "test/language/expressions/class/method-static/dflt-params-ref-later.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/class/method-static/dflt-params-ref-self.js-strict:true": "test/language/expressions/class/method-static/dflt-params-ref-self.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/class/method/dflt-params-ref-later.js-strict:true": "test/language/expressions/class/method/dflt-params-ref-later.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/class/method/dflt-params-ref-self.js-strict:true": "test/language/expressions/class/method/dflt-params-ref-self.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/class/name.js-strict:true": "test/language/expressions/class/name.js: Test262Error: descriptor value should be  at harness/sta.js:22:9(49)",
  "test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-eval-indirect.js-strict:false": "test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-eval-indirect.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 2:1 Unexpected reserved word (and 7 more errors) at eval (native)",
  "test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-eval.js-strict:false": "test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-eval.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 2:1 Unexpected reserved word (and 7 more errors) at createAndInstantiateClass (test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-eval.js:34:19(6))",
  "test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-factory.js-strict:true": "test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-factory.js: SyntaxError: test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-factory.js: Unexpected character '#' (25:8)\n  23 | let createAndInstantiateClass = function () {\n  24 |   const C = class {\n\u003e 25 |     get #m() { return 'test262'; }\n     |         ^\n  26 | \n  27 |     access(o) {\n  28 |       return o.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-function-ctor.js-strict:true": "test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-function-ctor.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 2:8 Unexpected reserved word (and 6 more errors) at createAndInstantiateClass (test/language/expressions/class/private-getter-brand-check-multiple-evaluations-of-class-function-ctor.js:34:30(5))",
  "test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-eval-indirect.js-strict:false": "test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-eval-indirect.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 2:1 Unexpected reserved word (and 7 more errors) at eval (native)",
  "test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-eval.js-strict:false": "test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-eval.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 2:1 Unexpected reserved word (and 7 more errors) at createAndInstantiateClass (test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-eval.js:34:19(6))",
  "test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-factory.js-strict:true": "test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-factory.js: SyntaxError: test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-factory.js: Unexpected character '#' (25:4)\n  23 | let createAndInstantiateClass = function () {\n  24 |   const C = class {\n\u003e 25 |     #m() { return 'test262'; }\n     |     ^\n  26 | \n  27 |     access(o) {\n  28 |       return o.#m(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-function-ctor.js-strict:true": "test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-function-ctor.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 2:8 Unexpected reserved word (and 6 more errors) at createAndInstantiateClass (test/language/expressions/class/private-method-brand-check-multiple-evaluations-of-class-function-ctor.js:34:30(5))",
  "test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-eval-indirect.js-strict:false": "test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-eval-indirect.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 2:1 Unexpected reserved word (and 3 more errors) at eval (native)",
  "test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-eval.js-strict:false": "test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-eval.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 2:1 Unexpected reserved word (and 3 more errors) at createAndInstantiateClass (test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-eval.js:34:19(6))",
  "test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-factory.js-strict:true": "test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-factory.js: SyntaxError: test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-factory.js: Unexpected character '#' (25:8)\n  23 | let createAndInstantiateClass = function () {\n  24 |   const C = class {\n\u003e 25 |     set #m(v) { this._v = v; }\n     |         ^\n  26 | \n  27 |     access(o, v) {\n  28 |       o.#m = v; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-function-ctor.js-strict:true": "test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-function-ctor.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 2:8 Unexpected reserved word (and 4 more errors) at createAndInstantiateClass (test/language/expressions/class/private-setter-brand-check-multiple-evaluations-of-class-function-ctor.js:34:30(5))",
  "test/language/expressions/class/private-static-field-multiple-evaluations-of-class-direct-eval.js-strict:false": "test/language/expressions/class/private-static-field-multiple-evaluations-of-class-direct-eval.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 2:1 Unexpected reserved word (and 5 more errors) at evalClass (test/language/expressions/class/private-static-field-multiple-evaluations-of-class-direct-eval.js:53:14(6))",
  "test/language/expressions/class/private-static-field-multiple-evaluations-of-class-eval-indirect.js-strict:false": "test/language/expressions/class/private-static-field-multiple-evaluations-of-class-eval-indirect.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 2:1 Unexpected reserved word (and 5 more errors) at eval (native)",
  "test/language/expressions/class/private-static-field-multiple-evaluations-of-class-factory.js-strict:true": "test/language/expressions/class/private-static-field-multiple-evaluations-of-class-factory.js: SyntaxError: test/language/expressions/class/private-static-field-multiple-evaluations-of-class-factory.js: Unexpected character '#' (44:11)\n  42 | let createClass = function () {\n  43 |   return class {\n\u003e 44 |     static #m = 'test262';\n     |            ^\n  45 | \n  46 |     static access() {\n  47 |       return this.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/private-static-field-multiple-evaluations-of-class-function-ctor.js-strict:true": "test/language/expressions/class/private-static-field-multiple-evaluations-of-class-function-ctor.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 2:8 Unexpected reserved word (and 6 more errors) at createClass (test/language/expressions/class/private-static-field-multiple-evaluations-of-class-function-ctor.js:53:30(5))",
  "test/language/expressions/class/private-static-getter-multiple-evaluations-of-class-direct-eval.js-strict:false": "test/language/expressions/class/private-static-getter-multiple-evaluations-of-class-direct-eval.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 2:1 Unexpected reserved word (and 7 more errors) at evalClass (test/language/expressions/class/private-static-getter-multiple-evaluations-of-class-direct-eval.js:39:14(6))",
  "test/language/expressions/class/private-static-getter-multiple-evaluations-of-class-eval-indirect.js-strict:false": "test/language/expressions/class/private-static-getter-multiple-evaluations-of-class-eval-indirect.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 2:1 Unexpected reserved word (and 7 more errors) at eval (native)",
  "test/language/expressions/class/private-static-getter-multiple-evaluations-of-class-factory.js-strict:true": "test/language/expressions/class/private-static-getter-multiple-evaluations-of-class-factory.js: SyntaxError: test/language/expressions/class/private-static-getter-multiple-evaluations-of-class-factory.js: Unexpected character '#' (28:15)\n  26 | let createClass = function () {\n  27 |   return class {\n\u003e 28 |     static get #m() {\n     |                ^\n  29 |       return 'test262';\n  30 |     };\n  31 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/private-static-getter-multiple-evaluations-of-class-function-ctor.js-strict:true": "test/language/expressions/class/private-static-getter-multiple-evaluations-of-class-function-ctor.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 2:8 Unexpected reserved word (and 7 more errors) at createClass (test/language/expressions/class/private-static-getter-multiple-evaluations-of-class-function-ctor.js:39:30(5))",
  "test/language/expressions/class/private-static-method-brand-check-multiple-evaluations-of-class-direct-eval.js-strict:false": "test/language/expressions/class/private-static-method-brand-check-multiple-evaluations-of-class-direct-eval.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 2:1 Unexpected reserved word (and 7 more errors) at evalClass (test/language/expressions/class/private-static-method-brand-check-multiple-evaluations-of-class-direct-eval.js:37:14(6))",
  "test/language/expressions/class/private-static-method-brand-check-multiple-evaluations-of-class-eval-indirect.js-strict:false": "test/language/expressions/class/private-static-method-brand-check-multiple-evaluations-of-class-eval-indirect.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 2:1 Unexpected reserved word (and 7 more errors) at eval (native)",
  "test/language/expressions/class/private-static-method-brand-check-multiple-evaluations-of-class-factory.js-strict:true": "test/language/expressions/class/private-static-method-brand-check-multiple-evaluations-of-class-factory.js: SyntaxError: test/language/expressions/class/private-static-method-brand-check-multiple-evaluations-of-class-factory.js: Unexpected character '#' (28:11)\n  26 | let createClass = function () {\n  27 |   return class {\n\u003e 28 |     static #m() { return 'test262'; }\n     |            ^\n  29 | \n  30 |     static access() {\n  31 |       return this.#m(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/private-static-method-brand-check-multiple-evaluations-of-class-function-ctor.js-strict:true": "test/language/expressions/class/private-static-method-brand-check-multiple-evaluations-of-class-function-ctor.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 2:8 Unexpected reserved word (and 9 more errors) at createClass (test/language/expressions/class/private-static-method-brand-check-multiple-evaluations-of-class-function-ctor.js:37:30(5))",
  "test/language/expressions/class/private-static-setter-multiple-evaluations-of-class-direct-eval.js-strict:false": "test/language/expressions/class/private-static-setter-multiple-evaluations-of-class-direct-eval.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 2:1 Unexpected reserved word (and 3 more errors) at evalClass (test/language/expressions/class/private-static-setter-multiple-evaluations-of-class-direct-eval.js:39:14(6))",
  "test/language/expressions/class/private-static-setter-multiple-evaluations-of-class-eval-indirect.js-strict:false": "test/language/expressions/class/private-static-setter-multiple-evaluations-of-class-eval-indirect.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 2:1 Unexpected reserved word (and 3 more errors) at eval (native)",
  "test/language/expressions/class/private-static-setter-multiple-evaluations-of-class-factory.js-strict:true": "test/language/expressions/class/private-static-setter-multiple-evaluations-of-class-factory.js: SyntaxError: test/language/expressions/class/private-static-setter-multiple-evaluations-of-class-factory.js: Unexpected character '#' (28:15)\n  26 | let createClass = function () {\n  27 |   return class {\n\u003e 28 |     static set #m(v) {\n     |                ^\n  29 |       this._v = v;\n  30 |     };\n  31 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/class/private-static-setter-multiple-evaluations-of-class-function-ctor.js-strict:true": "test/language/expressions/class/private-static-setter-multiple-evaluations-of-class-function-ctor.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 2:8 Unexpected reserved word (and 4 more errors) at createClass (test/language/expressions/class/private-static-setter-multiple-evaluations-of-class-function-ctor.js:39:30(5))",
  "test/language/expressions/class/restricted-properties.js-strict:true": "test/language/expressions/class/restricted-properties.js: Test262Error: No \"caller\" own property Expected SameValue(«true», «false») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/scope-meth-paramsbody-var-open.js-strict:true": "test/language/expressions/class/scope-meth-paramsbody-var-open.js: Test262Error: Expected SameValue(«inside», «outside») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/scope-name-lex-open-heritage.js-strict:true": "test/language/expressions/class/scope-name-lex-open-heritage.js: Test262Error: from class heritage Expected SameValue(«outside», «function C() {_classCallCheck(this, C);return _possibleConstructorReturn(this, (C.__proto__ || Object.getPrototypeOf(C)).apply(this, arguments));}») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/scope-name-lex-open-no-heritage.js-strict:true": "test/language/expressions/class/scope-name-lex-open-no-heritage.js: Test262Error: inner binding rejects modification Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/class/scope-setter-paramsbody-var-open.js-strict:true": "test/language/expressions/class/scope-setter-paramsbody-var-open.js: Test262Error: Expected SameValue(«inside», «outside») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/scope-static-meth-paramsbody-var-open.js-strict:true": "test/language/expressions/class/scope-static-meth-paramsbody-var-open.js: Test262Error: Expected SameValue(«inside», «outside») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/scope-static-setter-paramsbody-var-open.js-strict:true": "test/language/expressions/class/scope-static-setter-paramsbody-var-open.js: Test262Error: Expected SameValue(«inside», «outside») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/class/subclass-builtins/subclass-AggregateError.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-AggregateError.js: ReferenceError: AggregateError is not defined at test/language/expressions/class/subclass-builtins/subclass-AggregateError.js:12:273(20)",
  "test/language/expressions/class/subclass-builtins/subclass-Array.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Array.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/class/subclass-builtins/subclass-ArrayBuffer.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-ArrayBuffer.js: TypeError: Constructor ArrayBuffer requires 'new' at apply (native)",
  "test/language/expressions/class/subclass-builtins/subclass-DataView.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-DataView.js: TypeError: Constructor DataView requires 'new' at apply (native)",
  "test/language/expressions/class/subclass-builtins/subclass-Error.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Error.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/class/subclass-builtins/subclass-EvalError.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-EvalError.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/class/subclass-builtins/subclass-Float32Array.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Float32Array.js: TypeError: Constructor TypedArray requires 'new' at apply (native)",
  "test/language/expressions/class/subclass-builtins/subclass-Float64Array.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Float64Array.js: TypeError: Constructor TypedArray requires 'new' at apply (native)",
  "test/language/expressions/class/subclass-builtins/subclass-Function.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Function.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/class/subclass-builtins/subclass-Int16Array.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Int16Array.js: TypeError: Constructor TypedArray requires 'new' at apply (native)",
  "test/language/expressions/class/subclass-builtins/subclass-Int32Array.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Int32Array.js: TypeError: Constructor TypedArray requires 'new' at apply (native)",
  "test/language/expressions/class/subclass-builtins/subclass-Int8Array.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Int8Array.js: TypeError: Constructor TypedArray requires 'new' at apply (native)",
  "test/language/expressions/class/subclass-builtins/subclass-Map.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Map.js: TypeError: Constructor Map requires 'new' at apply (native)",
  "test/language/expressions/class/subclass-builtins/subclass-Object.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Object.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/class/subclass-builtins/subclass-Promise.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Promise.js: ReferenceError: Promise is not defined at test/language/expressions/class/subclass-builtins/subclass-Promise.js:12:259(20)",
  "test/language/expressions/class/subclass-builtins/subclass-RangeError.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-RangeError.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/class/subclass-builtins/subclass-ReferenceError.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-ReferenceError.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/class/subclass-builtins/subclass-RegExp.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-RegExp.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/class/subclass-builtins/subclass-Set.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Set.js: TypeError: Constructor Set requires 'new' at apply (native)",
  "test/language/expressions/class/subclass-builtins/subclass-SyntaxError.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-SyntaxError.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/class/subclass-builtins/subclass-TypeError.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-TypeError.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/class/subclass-builtins/subclass-URIError.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-URIError.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/class/subclass-builtins/subclass-Uint16Array.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Uint16Array.js: TypeError: Constructor TypedArray requires 'new' at apply (native)",
  "test/language/expressions/class/subclass-builtins/subclass-Uint32Array.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Uint32Array.js: TypeError: Constructor TypedArray requires 'new' at apply (native)",
  "test/language/expressions/class/subclass-builtins/subclass-Uint8Array.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Uint8Array.js: TypeError: Constructor TypedArray requires 'new' at apply (native)",
  "test/language/expressions/class/subclass-builtins/subclass-Uint8ClampedArray.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-Uint8ClampedArray.js: TypeError: Constructor TypedArray requires 'new' at apply (native)",
  "test/language/expressions/class/subclass-builtins/subclass-WeakMap.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-WeakMap.js: TypeError: Constructor WeakMap requires 'new' at apply (native)",
  "test/language/expressions/class/subclass-builtins/subclass-WeakRef.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-WeakRef.js: ReferenceError: WeakRef is not defined at test/language/expressions/class/subclass-builtins/subclass-WeakRef.js:12:259(20)",
  "test/language/expressions/class/subclass-builtins/subclass-WeakSet.js-strict:true": "test/language/expressions/class/subclass-builtins/subclass-WeakSet.js: TypeError: Constructor WeakSet requires 'new' at apply (native)",
  "test/language/expressions/coalesce/abrupt-is-a-short-circuit.js-strict:true": "test/language/expressions/coalesce/abrupt-is-a-short-circuit.js: SyntaxError: test/language/expressions/coalesce/abrupt-is-a-short-circuit.js: Unexpected token (49:15)\n  47 | x = undefined;\n  48 | assert.throws(Test262Error, function() {\n\u003e 49 |     undefined ?? poison() ?? morePoison();\n     |                ^\n  50 | }, 'undefined ?? poison() ?? morePoison();');\n  51 | \n  52 | x = undefined; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/coalesce/chainable-if-parenthesis-covered-logical-and.js-strict:true": "test/language/expressions/coalesce/chainable-if-parenthesis-covered-logical-and.js: SyntaxError: test/language/expressions/coalesce/chainable-if-parenthesis-covered-logical-and.js: Unexpected token (41:11)\n  39 | \n  40 | x = undefined;\n\u003e 41 | x = (null ?? 41) \u0026\u0026 42;\n     |            ^\n  42 | assert.sameValue(x, 42, '(null ?? 41) \u0026\u0026 42');\n  43 | \n  44 | x = undefined; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/coalesce/chainable-if-parenthesis-covered-logical-or.js-strict:true": "test/language/expressions/coalesce/chainable-if-parenthesis-covered-logical-or.js: SyntaxError: test/language/expressions/coalesce/chainable-if-parenthesis-covered-logical-or.js: Unexpected token (41:11)\n  39 | \n  40 | x = undefined;\n\u003e 41 | x = (null ?? 42) || 43;\n     |            ^\n  42 | assert.sameValue(x, 42, '(null ?? 42) || 43');\n  43 | \n  44 | x = undefined; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/coalesce/chainable-with-bitwise-and.js-strict:true": "test/language/expressions/coalesce/chainable-with-bitwise-and.js: SyntaxError: test/language/expressions/coalesce/chainable-with-bitwise-and.js: Unexpected token (40:10)\n  38 | var x;\n  39 | \n\u003e 40 | x = null ?? 42 \u0026 43;\n     |           ^\n  41 | assert.sameValue(x, 42, 'null ?? 42 \u0026 43');\n  42 | \n  43 | x = undefined ?? 42 \u0026 43; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/coalesce/chainable-with-bitwise-or.js-strict:true": "test/language/expressions/coalesce/chainable-with-bitwise-or.js: SyntaxError: test/language/expressions/coalesce/chainable-with-bitwise-or.js: Unexpected token (40:10)\n  38 | var x;\n  39 | \n\u003e 40 | x = null ?? 1 | 42;\n     |           ^\n  41 | assert.sameValue(x, 43, 'null ?? 1 | 42');\n  42 | \n  43 | x = undefined ?? 1 | 42; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/coalesce/chainable-with-bitwise-xor.js-strict:true": "test/language/expressions/coalesce/chainable-with-bitwise-xor.js: SyntaxError: test/language/expressions/coalesce/chainable-with-bitwise-xor.js: Unexpected token (40:10)\n  38 | var x;\n  39 | \n\u003e 40 | x = null ?? 1 ^ 42;\n     |           ^\n  41 | assert.sameValue(x, 43, 'null ?? 1 ^ 42');\n  42 | \n  43 | x = undefined ?? 1 ^ 42; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/coalesce/chainable.js-strict:true": "test/language/expressions/coalesce/chainable.js: SyntaxError: test/language/expressions/coalesce/chainable.js: Unexpected token (41:10)\n  39 | var x;\n  40 | \n\u003e 41 | x = null ?? undefined ?? 42;\n     |           ^\n  42 | assert.sameValue(x, 42, 'null ?? undefined ?? 42');\n  43 | \n  44 | x = undefined ?? null ?? 42; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/coalesce/follows-null.js-strict:true": "test/language/expressions/coalesce/follows-null.js: SyntaxError: test/language/expressions/coalesce/follows-null.js: Unexpected token (40:10)\n  38 | var x;\n  39 | \n\u003e 40 | x = null ?? 42;\n     |           ^\n  41 | assert.sameValue(x, 42, 'null ?? 42');\n  42 | \n  43 | x = null ?? undefined; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/coalesce/follows-undefined.js-strict:true": "test/language/expressions/coalesce/follows-undefined.js: SyntaxError: test/language/expressions/coalesce/follows-undefined.js: Unexpected token (40:15)\n  38 | var x;\n  39 | \n\u003e 40 | x = undefined ?? 42;\n     |                ^\n  41 | assert.sameValue(x, 42, 'undefined ?? 42');\n  42 | \n  43 | x = undefined ?? undefined; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/coalesce/short-circuit-number-0.js-strict:true": "test/language/expressions/coalesce/short-circuit-number-0.js: SyntaxError: test/language/expressions/coalesce/short-circuit-number-0.js: Unexpected token (41:7)\n  39 | \n  40 | x = undefined;\n\u003e 41 | x = 0 ?? 1;\n     |        ^\n  42 | assert.sameValue(x, 0, '0 ?? 1');\n  43 | \n  44 | x = undefined; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/coalesce/short-circuit-number-42.js-strict:true": "test/language/expressions/coalesce/short-circuit-number-42.js: SyntaxError: test/language/expressions/coalesce/short-circuit-number-42.js: Unexpected token (41:8)\n  39 | \n  40 | x = undefined;\n\u003e 41 | x = 42 ?? 1;\n     |         ^\n  42 | assert.sameValue(x, 42, '42 ?? 1');\n  43 | \n  44 | x = undefined; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/coalesce/short-circuit-number-empty-string.js-strict:true": "test/language/expressions/coalesce/short-circuit-number-empty-string.js: SyntaxError: test/language/expressions/coalesce/short-circuit-number-empty-string.js: Unexpected token (42:9)\n  40 | \n  41 | x = undefined;\n\u003e 42 | x = str ?? 1;\n     |          ^\n  43 | assert.sameValue(x, str, 'str ?? 1');\n  44 | \n  45 | x = undefined; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/coalesce/short-circuit-number-false.js-strict:true": "test/language/expressions/coalesce/short-circuit-number-false.js: SyntaxError: test/language/expressions/coalesce/short-circuit-number-false.js: Unexpected token (41:11)\n  39 | \n  40 | x = undefined;\n\u003e 41 | x = false ?? 1;\n     |            ^\n  42 | assert.sameValue(x, false, 'false ?? 1');\n  43 | \n  44 | x = undefined; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/coalesce/short-circuit-number-object.js-strict:true": "test/language/expressions/coalesce/short-circuit-number-object.js: SyntaxError: test/language/expressions/coalesce/short-circuit-number-object.js: Unexpected token (49:9)\n  47 | \n  48 | x = undefined;\n\u003e 49 | x = obj ?? 1;\n     |          ^\n  50 | assert.sameValue(x, obj, 'obj ?? 1');\n  51 | \n  52 | x = undefined; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/coalesce/short-circuit-number-string.js-strict:true": "test/language/expressions/coalesce/short-circuit-number-string.js: SyntaxError: test/language/expressions/coalesce/short-circuit-number-string.js: Unexpected token (42:9)\n  40 | \n  41 | x = undefined;\n\u003e 42 | x = str ?? 1;\n     |          ^\n  43 | assert.sameValue(x, str, 'str ?? 1');\n  44 | \n  45 | x = undefined; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/coalesce/short-circuit-number-symbol.js-strict:true": "test/language/expressions/coalesce/short-circuit-number-symbol.js: SyntaxError: test/language/expressions/coalesce/short-circuit-number-symbol.js: Unexpected token (42:7)\n  40 | \n  41 | x = undefined;\n\u003e 42 | x = s ?? 1;\n     |        ^\n  43 | assert.sameValue(x, s, 's ?? null');\n  44 | \n  45 | x = undefined; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/coalesce/short-circuit-number-true.js-strict:true": "test/language/expressions/coalesce/short-circuit-number-true.js: SyntaxError: test/language/expressions/coalesce/short-circuit-number-true.js: Unexpected token (41:10)\n  39 | \n  40 | x = undefined;\n\u003e 41 | x = true ?? 1;\n     |           ^\n  42 | assert.sameValue(x, true, 'true ?? null');\n  43 | \n  44 | x = undefined; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/coalesce/short-circuit-prevents-evaluation.js-strict:true": "test/language/expressions/coalesce/short-circuit-prevents-evaluation.js: SyntaxError: test/language/expressions/coalesce/short-circuit-prevents-evaluation.js: Unexpected token (44:15)\n  42 | \n  43 | x = undefined;\n\u003e 44 | x = undefined ?? 42 ?? undefined ?? poison();\n     |                ^\n  45 | assert.sameValue(x, 42);\n  46 | \n  47 | x = undefined; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/coalesce/tco-pos-null.js-strict:true": "test/language/expressions/coalesce/tco-pos-null.js: SyntaxError: test/language/expressions/coalesce/tco-pos-null.js: Unexpected token (25:15)\n  23 |     return;\n  24 |   }\n\u003e 25 |   return null ?? f(n - 1);\n     |                ^\n  26 | }($MAX_ITERATIONS));\n  27 | assert.sameValue(callCount, 1);\n  28 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/coalesce/tco-pos-undefined.js-strict:true": "test/language/expressions/coalesce/tco-pos-undefined.js: SyntaxError: test/language/expressions/coalesce/tco-pos-undefined.js: Unexpected token (25:20)\n  23 |     return;\n  24 |   }\n\u003e 25 |   return undefined ?? f(n - 1);\n     |                     ^\n  26 | }($MAX_ITERATIONS));\n  27 | assert.sameValue(callCount, 1);\n  28 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.10_T1.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.10_T1.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.10_T2.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.10_T2.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.10_T4.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.10_T4.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.11_T1.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.11_T1.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.11_T2.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.11_T2.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.11_T4.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.11_T4.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.1_T1.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.1_T1.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.1_T2.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.1_T2.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.1_T4.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.1_T4.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.2_T1.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.2_T1.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.2_T2.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.2_T2.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.2_T4.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.2_T4.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.3_T1.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.3_T1.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.3_T2.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.3_T2.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.3_T4.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.3_T4.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.4_T1.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.4_T1.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.4_T2.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.4_T2.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.4_T4.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.4_T4.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.5_T1.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.5_T1.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.5_T2.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.5_T2.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.5_T4.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.5_T4.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.6_T1.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.6_T1.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.6_T2.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.6_T2.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.6_T4.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.6_T4.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.7_T1.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.7_T1.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.7_T2.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.7_T2.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.7_T4.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.7_T4.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.8_T1.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.8_T1.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.8_T2.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.8_T2.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.8_T4.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.8_T4.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.9_T1.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.9_T1.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.9_T2.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.9_T2.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/S11.13.2_A7.9_T4.js-strict:true": "test/language/expressions/compound-assignment/S11.13.2_A7.9_T4.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--1.js-strict:false": "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--1.js: TypeError: Object.defineProperty called on non-object at defineProperty (native)",
  "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--10.js-strict:false": "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--10.js: SyntaxError: test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--10.js: 'with' in strict mode (28:0)\n  26 | };\n  27 | \n\u003e 28 | with (scope) {\n     | ^\n  29 |   (function() {\n  30 |     \"use strict\";\n  31 |     assert.throws(ReferenceError, () =\u003e { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--11.js-strict:false": "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--11.js: TypeError: Object.defineProperty called on non-object at defineProperty (native)",
  "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--12.js-strict:false": "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--12.js: SyntaxError: test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--12.js: 'with' in strict mode (27:0)\n  25 | };\n  26 | \n\u003e 27 | with (scope) {\n     | ^\n  28 |   (function() {\n  29 |     \"use strict\";\n  30 |     assert.throws(ReferenceError, () =\u003e { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--13.js-strict:false": "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--13.js: TypeError: Object.defineProperty called on non-object at defineProperty (native)",
  "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--14.js-strict:false": "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--14.js: SyntaxError: test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--14.js: 'with' in strict mode (27:0)\n  25 | };\n  26 | \n\u003e 27 | with (scope) {\n     | ^\n  28 |   (function() {\n  29 |     \"use strict\";\n  30 |     assert.throws(ReferenceError, () =\u003e { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--15.js-strict:false": "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--15.js: TypeError: Object.defineProperty called on non-object at defineProperty (native)",
  "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--16.js-strict:false": "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--16.js: SyntaxError: test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--16.js: 'with' in strict mode (27:0)\n  25 | };\n  26 | \n\u003e 27 | with (scope) {\n     | ^\n  28 |   (function() {\n  29 |     \"use strict\";\n  30 |     assert.throws(ReferenceError, () =\u003e { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--17.js-strict:false": "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--17.js: TypeError: Object.defineProperty called on non-object at defineProperty (native)",
  "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--18.js-strict:false": "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--18.js: SyntaxError: test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--18.js: 'with' in strict mode (27:0)\n  25 | };\n  26 | \n\u003e 27 | with (scope) {\n     | ^\n  28 |   (function() {\n  29 |     \"use strict\";\n  30 |     assert.throws(ReferenceError, () =\u003e { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--19.js-strict:false": "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--19.js: TypeError: Object.defineProperty called on non-object at defineProperty (native)",
  "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--2.js-strict:false": "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--2.js: SyntaxError: test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--2.js: 'with' in strict mode (27:0)\n  25 | };\n  26 | \n\u003e 27 | with (scope) {\n     | ^\n  28 |   (function() {\n  29 |     \"use strict\";\n  30 |     assert.throws(ReferenceError, () =\u003e { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--20.js-strict:false": "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--20.js: SyntaxError: test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--20.js: 'with' in strict mode (27:0)\n  25 | };\n  26 | \n\u003e 27 | with (scope) {\n     | ^\n  28 |   (function() {\n  29 |     \"use strict\";\n  30 |     assert.throws(ReferenceError, () =\u003e { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--21.js-strict:false": "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--21.js: TypeError: Object.defineProperty called on non-object at defineProperty (native)",
  "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--3.js-strict:false": "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--3.js: TypeError: Object.defineProperty called on non-object at defineProperty (native)",
  "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--4.js-strict:false": "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--4.js: SyntaxError: test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--4.js: 'with' in strict mode (27:0)\n  25 | };\n  26 | \n\u003e 27 | with (scope) {\n     | ^\n  28 |   (function() {\n  29 |     \"use strict\";\n  30 |     assert.throws(ReferenceError, () =\u003e { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--5.js-strict:false": "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--5.js: TypeError: Object.defineProperty called on non-object at defineProperty (native)",
  "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--6.js-strict:false": "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--6.js: SyntaxError: test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--6.js: 'with' in strict mode (27:0)\n  25 | };\n  26 | \n\u003e 27 | with (scope) {\n     | ^\n  28 |   (function() {\n  29 |     \"use strict\";\n  30 |     assert.throws(ReferenceError, () =\u003e { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--7.js-strict:false": "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--7.js: TypeError: Object.defineProperty called on non-object at defineProperty (native)",
  "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--8.js-strict:false": "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--8.js: SyntaxError: test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--8.js: 'with' in strict mode (27:0)\n  25 | };\n  26 | \n\u003e 27 | with (scope) {\n     | ^\n  28 |   (function() {\n  29 |     \"use strict\";\n  30 |     assert.throws(ReferenceError, () =\u003e { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--9.js-strict:false": "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v--9.js: TypeError: Object.defineProperty called on non-object at defineProperty (native)",
  "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v-.js-strict:false": "test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v-.js: SyntaxError: test/language/expressions/compound-assignment/compound-assignment-operator-calls-putvalue-lref--v-.js: 'with' in strict mode (27:0)\n  25 | };\n  26 | \n\u003e 27 | with (scope) {\n     | ^\n  28 |   (function() {\n  29 |     \"use strict\";\n  30 |     assert.throws(ReferenceError, () =\u003e { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/conditional/coalesce-expr-ternary.js-strict:true": "test/language/expressions/conditional/coalesce-expr-ternary.js: SyntaxError: test/language/expressions/conditional/coalesce-expr-ternary.js: Unexpected token (29:15)\n  27 | var x;\n  28 | \n\u003e 29 | x = undefined ?? true ? 0 : 42;\n     |                ^\n  30 | assert.sameValue(x, 0, 'undefined ?? true ? 0 : 42');\n  31 | \n  32 | x = undefined; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/delete/non-reference-return-true.js-strict:true": "test/language/expressions/delete/non-reference-return-true.js: TypeError: Value is not an object: Test262 at test/language/expressions/delete/non-reference-return-true.js:31:35(116)",
  "test/language/expressions/delete/super-property-method.js-strict:true": "test/language/expressions/delete/super-property-method.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/delete/super-property.js-strict:true": "test/language/expressions/delete/super-property.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/equals/coerce-symbol-to-prim-invocation.js-strict:true": "test/language/expressions/equals/coerce-symbol-to-prim-invocation.js: Test262Error: method invoked with the string \"default\" as the first argument Expected SameValue(«number», «default») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/equals/coerce-symbol-to-prim-return-prim.js-strict:true": "test/language/expressions/equals/coerce-symbol-to-prim-return-prim.js: Test262Error: symbol (equal) Expected SameValue(«false», «true») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/exponentiation/applying-the-exp-operator_A7.js-strict:true": "test/language/expressions/exponentiation/applying-the-exp-operator_A7.js: Test262Error: -1 ** Infinity Expected SameValue(«1», «NaN») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/exponentiation/applying-the-exp-operator_A8.js-strict:true": "test/language/expressions/exponentiation/applying-the-exp-operator_A8.js: Test262Error: -1 ** -Infinity Expected SameValue(«1», «NaN») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/function/arguments-with-arguments-fn.js-strict:false": "test/language/expressions/function/arguments-with-arguments-fn.js: SyntaxError: test/language/expressions/function/arguments-with-arguments-fn.js: arguments is a reserved word in strict mode (24:11)\n  22 | \n  23 | var f = function(x = args = arguments) {\n\u003e 24 |   function arguments() {}\n     |            ^\n  25 | };\n  26 | \n  27 | f(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/function/arguments-with-arguments-lex.js-strict:false": "test/language/expressions/function/arguments-with-arguments-lex.js: SyntaxError: test/language/expressions/function/arguments-with-arguments-lex.js: arguments is a reserved word in strict mode (24:6)\n  22 | \n  23 | var f = function (x = args = arguments) {\n\u003e 24 |   let arguments;\n     |       ^\n  25 | };\n  26 | \n  27 | f(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/function/dflt-params-ref-later.js-strict:true": "test/language/expressions/function/dflt-params-ref-later.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/function/dflt-params-ref-self.js-strict:true": "test/language/expressions/function/dflt-params-ref-self.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/function/dstr/ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/expressions/function/dstr/ary-init-iter-get-err-array-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/function/dstr/ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/function/dstr/ary-ptrn-elem-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/function/dstr/ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/function/dstr/ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/function/dstr/ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/expressions/function/dstr/ary-ptrn-elem-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/function/dstr/ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/expressions/function/dstr/ary-ptrn-elem-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/function/dstr/ary-ptrn-rest-ary-elem.js-strict:true": "test/language/expressions/function/dstr/ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/expressions/function/dstr/ary-ptrn-rest-ary-elem.js: Unexpected token (77:17)\n  75 | var callCount = 0;\n  76 | var f;\n\u003e 77 | f = function([...[x, y, z]]) {\n     |                  ^\n  78 |   assert.sameValue(x, 3);\n  79 |   assert.sameValue(y, 4);\n  80 |   assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/function/dstr/ary-ptrn-rest-ary-rest.js-strict:true": "test/language/expressions/function/dstr/ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/expressions/function/dstr/ary-ptrn-rest-ary-rest.js: Unexpected token (58:17)\n  56 | var callCount = 0;\n  57 | var f;\n\u003e 58 | f = function([...[...x]]) {\n     |                  ^\n  59 |   assert(Array.isArray(x));\n  60 |   assert.sameValue(x.length, 3);\n  61 |   assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/function/dstr/ary-ptrn-rest-obj-id.js-strict:true": "test/language/expressions/function/dstr/ary-ptrn-rest-obj-id.js: SyntaxError: test/language/expressions/function/dstr/ary-ptrn-rest-obj-id.js: Unexpected token (57:17)\n  55 | var callCount = 0;\n  56 | var f;\n\u003e 57 | f = function([...{ length }]) {\n     |                  ^\n  58 |   assert.sameValue(length, 3);\n  59 |   callCount = callCount + 1;\n  60 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/function/dstr/ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/expressions/function/dstr/ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/expressions/function/dstr/ary-ptrn-rest-obj-prop-id.js: Unexpected token (58:17)\n  56 | var callCount = 0;\n  57 | var f;\n\u003e 58 | f = function([...{ 0: v, 1: w, 2: x, 3: y, length: z }]) {\n     |                  ^\n  59 |   assert.sameValue(v, 7);\n  60 |   assert.sameValue(w, 8);\n  61 |   assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/function/dstr/dflt-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/expressions/function/dstr/dflt-ary-init-iter-get-err-array-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/expressions/function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/expressions/function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/function/dstr/dflt-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/expressions/function/dstr/dflt-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/expressions/function/dstr/dflt-ary-ptrn-rest-ary-elem.js: Unexpected token (77:17)\n  75 | var callCount = 0;\n  76 | var f;\n\u003e 77 | f = function([...[x, y, z]] = [3, 4, 5]) {\n     |                  ^\n  78 |   assert.sameValue(x, 3);\n  79 |   assert.sameValue(y, 4);\n  80 |   assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/function/dstr/dflt-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/expressions/function/dstr/dflt-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/expressions/function/dstr/dflt-ary-ptrn-rest-ary-rest.js: Unexpected token (58:17)\n  56 | var callCount = 0;\n  57 | var f;\n\u003e 58 | f = function([...[...x]] = values) {\n     |                  ^\n  59 |   assert(Array.isArray(x));\n  60 |   assert.sameValue(x.length, 3);\n  61 |   assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/function/dstr/dflt-ary-ptrn-rest-obj-id.js-strict:true": "test/language/expressions/function/dstr/dflt-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/expressions/function/dstr/dflt-ary-ptrn-rest-obj-id.js: Unexpected token (57:17)\n  55 | var callCount = 0;\n  56 | var f;\n\u003e 57 | f = function([...{ length }] = [1, 2, 3]) {\n     |                  ^\n  58 |   assert.sameValue(length, 3);\n  59 |   callCount = callCount + 1;\n  60 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/function/dstr/dflt-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/expressions/function/dstr/dflt-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/expressions/function/dstr/dflt-ary-ptrn-rest-obj-prop-id.js: Unexpected token (58:17)\n  56 | var callCount = 0;\n  57 | var f;\n\u003e 58 | f = function([...{ 0: v, 1: w, 2: x, 3: y, length: z }] = [7, 8, 9]) {\n     |                  ^\n  59 |   assert.sameValue(v, 7);\n  60 |   assert.sameValue(w, 8);\n  61 |   assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/function/dstr/dflt-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/function/dstr/dflt-obj-ptrn-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/function/dstr/dflt-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/function/dstr/dflt-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/function/dstr/dflt-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/expressions/function/dstr/dflt-obj-ptrn-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/function/dstr/dflt-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/expressions/function/dstr/dflt-obj-ptrn-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/function/dstr/dflt-obj-ptrn-rest-getter.js-strict:true": "test/language/expressions/function/dstr/dflt-obj-ptrn-rest-getter.js: SyntaxError: test/language/expressions/function/dstr/dflt-obj-ptrn-rest-getter.js: Unexpected token (46:14)\n  44 | var callCount = 0;\n  45 | var f;\n\u003e 46 | f = function({...x} = { get v() { count++; return 2; } }) {\n     |               ^\n  47 |   assert.sameValue(count, 1);\n  48 | \n  49 |   verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/function/dstr/dflt-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/function/dstr/dflt-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/function/dstr/dflt-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (47:14)\n  45 | var callCount = 0;\n  46 | var f;\n\u003e 47 | f = function({...rest} = o) {\n     |               ^\n  48 |   assert.sameValue(rest.x, undefined);\n  49 | \n  50 |   verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/function/dstr/dflt-obj-ptrn-rest-val-obj.js-strict:true": "test/language/expressions/function/dstr/dflt-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/expressions/function/dstr/dflt-obj-ptrn-rest-val-obj.js: Unexpected token (45:20)\n  43 | var callCount = 0;\n  44 | var f;\n\u003e 45 | f = function({a, b, ...rest} = {x: 1, y: 2, a: 5, b: 3}) {\n     |                     ^\n  46 |   assert.sameValue(rest.a, undefined);\n  47 |   assert.sameValue(rest.b, undefined);\n  48 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/function/dstr/obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/function/dstr/obj-ptrn-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/function/dstr/obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/function/dstr/obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/function/dstr/obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/expressions/function/dstr/obj-ptrn-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/function/dstr/obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/expressions/function/dstr/obj-ptrn-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/function/dstr/obj-ptrn-rest-getter.js-strict:true": "test/language/expressions/function/dstr/obj-ptrn-rest-getter.js: SyntaxError: test/language/expressions/function/dstr/obj-ptrn-rest-getter.js: Unexpected token (46:14)\n  44 | var callCount = 0;\n  45 | var f;\n\u003e 46 | f = function({...x}) {\n     |               ^\n  47 |   assert.sameValue(count, 1);\n  48 | \n  49 |   verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/function/dstr/obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/function/dstr/obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/function/dstr/obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (47:14)\n  45 | var callCount = 0;\n  46 | var f;\n\u003e 47 | f = function({...rest}) {\n     |               ^\n  48 |   assert.sameValue(rest.x, undefined);\n  49 | \n  50 |   verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/function/dstr/obj-ptrn-rest-val-obj.js-strict:true": "test/language/expressions/function/dstr/obj-ptrn-rest-val-obj.js: SyntaxError: test/language/expressions/function/dstr/obj-ptrn-rest-val-obj.js: Unexpected token (45:20)\n  43 | var callCount = 0;\n  44 | var f;\n\u003e 45 | f = function({a, b, ...rest}) {\n     |                     ^\n  46 |   assert.sameValue(rest.a, undefined);\n  47 |   assert.sameValue(rest.b, undefined);\n  48 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/function/eval-var-scope-syntax-err.js-strict:false": "test/language/expressions/function/eval-var-scope-syntax-err.js: Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/function/name.js-strict:true": "test/language/expressions/function/name.js: Test262Error: obj should have an own property name at harness/sta.js:22:9(49)",
  "test/language/expressions/function/param-eval-non-strict-is-correct-value.js-strict:false": "test/language/expressions/function/param-eval-non-strict-is-correct-value.js: SyntaxError: test/language/expressions/function/param-eval-non-strict-is-correct-value.js: eval is a reserved word in strict mode (14:19)\n  12 | let evalValue = {};\n  13 | \n\u003e 14 | let foo = function(eval) {\n     |                    ^\n  15 |   assert.sameValue(eval, evalValue);\n  16 |   exprCallCount += 1;\n  17 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/function/scope-body-lex-distinct.js-strict:false": "test/language/expressions/function/scope-body-lex-distinct.js: Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/function/scope-name-var-open-non-strict.js-strict:false": "test/language/expressions/function/scope-name-var-open-non-strict.js: Test262Error: inner binding is immutable (from parameters) Expected SameValue(«null», «function f()\n\n\n\n\n{var _ = arguments.length \u003e 0 \u0026\u0026 arguments[0] !== undefined ? arguments[0] : (probeParams = function probeParams() {return f;}, setParams = function setParams() {f = null;});\n  probeBody = function probeBody() {return f;};\n  setBody = function setBody() {f = null;};\n}») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/function/scope-name-var-open-strict.js-strict:true": "test/language/expressions/function/scope-name-var-open-strict.js: Test262Error: inner binding rejects modification (from parameters) Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/function/scope-param-elem-var-close.js-strict:false": "test/language/expressions/function/scope-param-elem-var-close.js: Test262Error: Expected SameValue(«outside», «inside») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/function/scope-param-elem-var-open.js-strict:false": "test/language/expressions/function/scope-param-elem-var-open.js: Test262Error: Expected SameValue(«outside», «inside») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/function/scope-param-rest-elem-var-close.js-strict:false": "test/language/expressions/function/scope-param-rest-elem-var-close.js: SyntaxError: test/language/expressions/function/scope-param-rest-elem-var-close.js: Unexpected token (22:7)\n  20 | \n  21 | (function(\n\u003e 22 |     ...[_ = (eval('var x = \"inside\";'), probeParam = function() { return x; })]\n     |        ^\n  23 |   ) {\n  24 |     probeBody = function() { return x; }\n  25 | }()); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/function/scope-param-rest-elem-var-open.js-strict:false": "test/language/expressions/function/scope-param-rest-elem-var-open.js: SyntaxError: test/language/expressions/function/scope-param-rest-elem-var-open.js: Unexpected token (23:7)\n  21 | (function(\n  22 |     _ = probe1 = function() { return x; },\n\u003e 23 |     ...[__ = (eval('var x = \"inside\";'), probe2 = function() { return x; })]\n     |        ^\n  24 |   ) {\n  25 | }());\n  26 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/function/scope-paramsbody-var-open.js-strict:true": "test/language/expressions/function/scope-paramsbody-var-open.js: Test262Error: Expected SameValue(«inside», «outside») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/function/unscopables-with-in-nested-fn.js-strict:false": "test/language/expressions/function/unscopables-with-in-nested-fn.js: SyntaxError: test/language/expressions/function/unscopables-with-in-nested-fn.js: 'with' in strict mode (75:4)\n  73 |   (function() {\n  74 |     count++;\n\u003e 75 |     with (globalThis) {\n     |     ^\n  76 |       count++;\n  77 |       assert.sameValue(v, 1, 'The value of `v` is 1');\n  78 |     } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/function/unscopables-with.js-strict:false": "test/language/expressions/function/unscopables-with.js: SyntaxError: test/language/expressions/function/unscopables-with.js: 'with' in strict mode (74:2)\n  72 | ref = function(x) {\n  73 |   count++;\n\u003e 74 |   with (globalThis) {\n     |   ^\n  75 |     count++;\n  76 |     assert.sameValue(v, undefined, 'The value of `v` is expected to equal `undefined`');\n  77 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/import.meta/distinct-for-each-module.js-strict:true": "test/language/expressions/import.meta/distinct-for-each-module.js: SyntaxError: test/language/expressions/import.meta/distinct-for-each-module.js: Unexpected token (29:20)\n  27 | \n  28 | // The imported module has a distinct import.meta object.\n\u003e 29 | assert.notSameValue(import.meta, fixture_meta,\n     |                     ^\n  30 |                     \"foreign import.meta accessed via import binding\");\n  31 | assert.notSameValue(import.meta, getMeta(),\n  32 |                     \"foreign import.meta accessed via function call\"); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/import.meta/import-meta-is-an-ordinary-object.js-strict:true": "test/language/expressions/import.meta/import-meta-is-an-ordinary-object.js: SyntaxError: test/language/expressions/import.meta/import-meta-is-an-ordinary-object.js: Unexpected token (28:24)\n  26 | \n  27 | // import.meta is an object.\n\u003e 28 | assert.sameValue(typeof import.meta, \"object\",\n     |                         ^\n  29 |                  \"typeof import.meta is 'object'\");\n  30 | assert.notSameValue(import.meta, null,\n  31 |                     \"typeof import.meta is 'object' and import.meta isn't |null|.\"); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/import.meta/same-object-returned.js-strict:true": "test/language/expressions/import.meta/same-object-returned.js: SyntaxError: test/language/expressions/import.meta/same-object-returned.js: Unexpected token (28:8)\n  26 | ---*/\n  27 | \n\u003e 28 | var a = import.meta;\n     |         ^\n  29 | var b = function() { return import.meta; }();\n  30 | \n  31 | assert.sameValue(import.meta, a, at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/import.meta/syntax/escape-sequence-import.js-strict:true": "test/language/expressions/import.meta/syntax/escape-sequence-import.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/import.meta/syntax/goal-async-function-params-or-body.js-strict:true": "test/language/expressions/import.meta/syntax/goal-async-function-params-or-body.js: test/language/expressions/import.meta/syntax/goal-async-function-params-or-body.js: Line 14:27 Unexpected token function (and 2 more errors)",
  "test/language/expressions/import.meta/syntax/goal-async-generator-params-or-body.js-strict:true": "test/language/expressions/import.meta/syntax/goal-async-generator-params-or-body.js: SyntaxError: test/language/expressions/import.meta/syntax/goal-async-generator-params-or-body.js: Unexpected token (14:35)\n  12 | ---*/\n  13 | \n\u003e 14 | var AsyncGenerator = async function*(){}.constructor;\n     |                                    ^\n  15 | \n  16 | assert.throws(SyntaxError, function() {\n  17 |     AsyncGenerator(\"import.meta\"); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/import.meta/syntax/goal-module-nested-function.js-strict:true": "test/language/expressions/import.meta/syntax/goal-module-nested-function.js: SyntaxError: test/language/expressions/import.meta/syntax/goal-module-nested-function.js: 'import' and 'export' may only appear at the top level (16:2)\n  14 | \n  15 | function f() {\n\u003e 16 |   import.meta;\n     |   ^\n  17 | }\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/import.meta/syntax/goal-module.js-strict:true": "test/language/expressions/import.meta/syntax/goal-module.js: SyntaxError: test/language/expressions/import.meta/syntax/goal-module.js: Unexpected token, expected { (15:6)\n  13 | ---*/\n  14 | \n\u003e 15 | import.meta;\n     |       ^\n  16 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-and-assignment-operator-lhs-before-rhs.js-strict:true": "test/language/expressions/logical-assignment/lgcl-and-assignment-operator-lhs-before-rhs.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-and-assignment-operator-lhs-before-rhs.js: Unexpected token (24:17)\n  22 |   };\n  23 | \n\u003e 24 |   base[prop()] \u0026\u0026= expr();\n     |                  ^\n  25 | });\n  26 | \n  27 | assert.throws(TypeError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-and-assignment-operator-namedevaluation-arrow-function.js-strict:true": "test/language/expressions/logical-assignment/lgcl-and-assignment-operator-namedevaluation-arrow-function.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-and-assignment-operator-namedevaluation-arrow-function.js: Unexpected token (19:8)\n  17 | \n  18 | var value = 1;\n\u003e 19 | value \u0026\u0026= () =\u003e {};\n     |         ^\n  20 | \n  21 | assert.sameValue(value.name, \"value\", \"value\");\n  22 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-and-assignment-operator-namedevaluation-class-expression.js-strict:true": "test/language/expressions/logical-assignment/lgcl-and-assignment-operator-namedevaluation-class-expression.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-and-assignment-operator-namedevaluation-class-expression.js: Unexpected token (19:8)\n  17 | \n  18 | var value = 1;\n\u003e 19 | value \u0026\u0026= class {};\n     |         ^\n  20 | \n  21 | assert.sameValue(value.name, \"value\", \"value\");\n  22 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-and-assignment-operator-namedevaluation-function.js-strict:true": "test/language/expressions/logical-assignment/lgcl-and-assignment-operator-namedevaluation-function.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-and-assignment-operator-namedevaluation-function.js: Unexpected token (19:8)\n  17 | \n  18 | var value = 1;\n\u003e 19 | value \u0026\u0026= function() {};\n     |         ^\n  20 | \n  21 | assert.sameValue(value.name, \"value\", \"value\");\n  22 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-and-assignment-operator-no-set-put.js-strict:true": "test/language/expressions/logical-assignment/lgcl-and-assignment-operator-no-set-put.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-and-assignment-operator-no-set-put.js: Unexpected token (27:13)\n  25 | \n  26 | assert.throws(TypeError, function() {\n\u003e 27 |   obj.prop \u0026\u0026= 1;\n     |              ^\n  28 | });\n  29 | assert.sameValue(obj.prop, 2, \"obj.prop\");\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-and-assignment-operator-no-set.js-strict:true": "test/language/expressions/logical-assignment/lgcl-and-assignment-operator-no-set.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-and-assignment-operator-no-set.js: Unexpected token (26:28)\n  24 | });\n  25 | \n\u003e 26 | assert.sameValue(obj.prop \u0026\u0026= 1, 0, \"obj.prop\");\n     |                             ^\n  27 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-and-assignment-operator-non-extensible.js-strict:true": "test/language/expressions/logical-assignment/lgcl-and-assignment-operator-non-extensible.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-and-assignment-operator-non-extensible.js: Unexpected token (19:11)\n  17 | Object.preventExtensions(obj);\n  18 | \n\u003e 19 | obj.prop \u0026\u0026= 1;\n     |            ^\n  20 | assert.sameValue(obj.prop, undefined, \"obj.prop\");\n  21 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-and-assignment-operator-non-writeable-put.js-strict:true": "test/language/expressions/logical-assignment/lgcl-and-assignment-operator-non-writeable-put.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-and-assignment-operator-non-writeable-put.js: Unexpected token (25:13)\n  23 | \n  24 | assert.throws(TypeError, function() {\n\u003e 25 |   obj.prop \u0026\u0026= 1;\n     |              ^\n  26 | });\n  27 | assert.sameValue(obj.prop, 2, \"obj.prop\");\n  28 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-and-assignment-operator-non-writeable.js-strict:true": "test/language/expressions/logical-assignment/lgcl-and-assignment-operator-non-writeable.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-and-assignment-operator-non-writeable.js: Unexpected token (24:28)\n  22 | });\n  23 | \n\u003e 24 | assert.sameValue(obj.prop \u0026\u0026= 1, 0, \"obj.prop\");\n     |                             ^\n  25 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-and-assignment-operator-unresolved-lhs.js-strict:true": "test/language/expressions/logical-assignment/lgcl-and-assignment-operator-unresolved-lhs.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-and-assignment-operator-unresolved-lhs.js: Unexpected token (16:15)\n  14 | \n  15 | assert.throws(ReferenceError, function() {\n\u003e 16 |   unresolved \u0026\u0026= 1;\n     |                ^\n  17 | });\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-and-assignment-operator-unresolved-rhs-put.js-strict:true": "test/language/expressions/logical-assignment/lgcl-and-assignment-operator-unresolved-rhs-put.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-and-assignment-operator-unresolved-rhs-put.js: Unexpected token (18:10)\n  16 | \n  17 | assert.throws(ReferenceError, function() {\n\u003e 18 |   value \u0026\u0026= unresolved;\n     |           ^\n  19 | });\n  20 | assert.sameValue(value, 2, \"value\");\n  21 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-and-assignment-operator-unresolved-rhs.js-strict:true": "test/language/expressions/logical-assignment/lgcl-and-assignment-operator-unresolved-rhs.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-and-assignment-operator-unresolved-rhs.js: Unexpected token (17:25)\n  15 | var value = 0;\n  16 | \n\u003e 17 | assert.sameValue(value \u0026\u0026= unresolved, 0, \"value\");\n     |                          ^\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-and-assignment-operator.js-strict:true": "test/language/expressions/logical-assignment/lgcl-and-assignment-operator.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-and-assignment-operator.js: Unexpected token (25:25)\n  23 | \n  24 | var value = undefined;\n\u003e 25 | assert.sameValue(value \u0026\u0026= 1, undefined, \"(value \u0026\u0026= 1) === undefined; where value = undefined\");\n     |                          ^\n  26 | \n  27 | value = null;\n  28 | assert.sameValue(value \u0026\u0026= 1, null, \"(value \u0026\u0026= 1) === null where value = null\"); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-and-whitespace.js-strict:true": "test/language/expressions/logical-assignment/lgcl-and-whitespace.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-and-whitespace.js: Unexpected token (16:21)\n  14 | \n  15 | x = 1;\n\u003e 16 | assert.sameValue(x\t\u0026\u0026=\t2, 2, 'U+0009 (expression)');\n     |                   \t  ^\n  17 | assert.sameValue(x, 2, 'U+0009 (side effect)');\n  18 | \n  19 | x = 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-lhs-before-rhs.js-strict:true": "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-lhs-before-rhs.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-lhs-before-rhs.js: Unexpected token (24:16)\n  22 |   };\n  23 | \n\u003e 24 |   base[prop()] ??= expr();\n     |                 ^\n  25 | });\n  26 | \n  27 | assert.throws(TypeError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-namedevaluation-arrow-function.js-strict:true": "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-namedevaluation-arrow-function.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-namedevaluation-arrow-function.js: Unexpected token (19:7)\n  17 | \n  18 | var value = undefined;\n\u003e 19 | value ??= () =\u003e {};\n     |        ^\n  20 | \n  21 | assert.sameValue(value.name, \"value\", \"value\");\n  22 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-namedevaluation-class-expression.js-strict:true": "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-namedevaluation-class-expression.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-namedevaluation-class-expression.js: Unexpected token (19:7)\n  17 | \n  18 | var value = undefined;\n\u003e 19 | value ??= class {};\n     |        ^\n  20 | \n  21 | assert.sameValue(value.name, \"value\", \"value\");\n  22 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-namedevaluation-function.js-strict:true": "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-namedevaluation-function.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-namedevaluation-function.js: Unexpected token (19:7)\n  17 | \n  18 | var value = undefined;\n\u003e 19 | value ??= function() {};\n     |        ^\n  20 | \n  21 | assert.sameValue(value.name, \"value\", \"value\");\n  22 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-no-set-put.js-strict:true": "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-no-set-put.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-no-set-put.js: Unexpected token (27:12)\n  25 | \n  26 | assert.throws(TypeError, function() {\n\u003e 27 |   obj.prop ??= 1;\n     |             ^\n  28 | });\n  29 | assert.sameValue(obj.prop, undefined, \"obj.prop\");\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-no-set.js-strict:true": "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-no-set.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-no-set.js: Unexpected token (26:27)\n  24 | });\n  25 | \n\u003e 26 | assert.sameValue(obj.prop ??= 1, 0, \"obj.prop\");\n     |                            ^\n  27 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-non-extensible.js-strict:true": "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-non-extensible.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-non-extensible.js: Unexpected token (20:12)\n  18 | \n  19 | assert.throws(TypeError, function() {\n\u003e 20 |   obj.prop ??= 1;\n     |             ^\n  21 | });\n  22 | assert.sameValue(obj.prop, undefined, \"obj.prop\");\n  23 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-non-writeable-put.js-strict:true": "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-non-writeable-put.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-non-writeable-put.js: Unexpected token (25:12)\n  23 | \n  24 | assert.throws(TypeError, function() {\n\u003e 25 |   obj.prop ??= 1;\n     |             ^\n  26 | });\n  27 | assert.sameValue(obj.prop, undefined, \"obj.prop\");\n  28 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-non-writeable.js-strict:true": "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-non-writeable.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-non-writeable.js: Unexpected token (24:27)\n  22 | });\n  23 | \n\u003e 24 | assert.sameValue(obj.prop ??= 1, 0, \"obj.prop\");\n     |                            ^\n  25 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-unresolved-lhs.js-strict:true": "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-unresolved-lhs.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-unresolved-lhs.js: Unexpected token (16:14)\n  14 | \n  15 | assert.throws(ReferenceError, function() {\n\u003e 16 |   unresolved ??= 1;\n     |               ^\n  17 | });\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-unresolved-rhs-put.js-strict:true": "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-unresolved-rhs-put.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-unresolved-rhs-put.js: Unexpected token (18:9)\n  16 | \n  17 | assert.throws(ReferenceError, function() {\n\u003e 18 |   value ??= unresolved;\n     |          ^\n  19 | });\n  20 | assert.sameValue(value, undefined, \"value\");\n  21 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-unresolved-rhs.js-strict:true": "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-unresolved-rhs.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-unresolved-rhs.js: Unexpected token (17:24)\n  15 | var value = 0;\n  16 | \n\u003e 17 | assert.sameValue(value ??= unresolved, 0, \"value\");\n     |                         ^\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator.js-strict:true": "test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator.js: Unexpected token (24:24)\n  22 | \n  23 | var value = undefined;\n\u003e 24 | assert.sameValue(value ??= 1, 1, \"(value ??= 1) === 1; where value = undefined\");\n     |                         ^\n  25 | \n  26 | value = null;\n  27 | assert.sameValue(value ??= 1, 1, \"(value ??= 1) === 1; where value = null\"); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-nullish-whitespace.js-strict:true": "test/language/expressions/logical-assignment/lgcl-nullish-whitespace.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-nullish-whitespace.js: Unexpected token (16:20)\n  14 | \n  15 | x = null;\n\u003e 16 | assert.sameValue(x\t??=\t1, 1, 'U+0009 (expression)');\n     |                   \t ^\n  17 | assert.sameValue(x, 1, 'U+0009 (side effect)');\n  18 | \n  19 | x = null; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-or-assignment-operator-lhs-before-rhs.js-strict:true": "test/language/expressions/logical-assignment/lgcl-or-assignment-operator-lhs-before-rhs.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-or-assignment-operator-lhs-before-rhs.js: Unexpected token (24:17)\n  22 |   };\n  23 | \n\u003e 24 |   base[prop()] ||= expr();\n     |                  ^\n  25 | });\n  26 | \n  27 | assert.throws(TypeError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-or-assignment-operator-namedevaluation-arrow-function.js-strict:true": "test/language/expressions/logical-assignment/lgcl-or-assignment-operator-namedevaluation-arrow-function.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-or-assignment-operator-namedevaluation-arrow-function.js: Unexpected token (19:8)\n  17 | \n  18 | var value = 0;\n\u003e 19 | value ||= () =\u003e {};\n     |         ^\n  20 | \n  21 | assert.sameValue(value.name, \"value\", \"value\");\n  22 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-or-assignment-operator-namedevaluation-class-expression.js-strict:true": "test/language/expressions/logical-assignment/lgcl-or-assignment-operator-namedevaluation-class-expression.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-or-assignment-operator-namedevaluation-class-expression.js: Unexpected token (19:8)\n  17 | \n  18 | var value = 0;\n\u003e 19 | value ||= class {};\n     |         ^\n  20 | \n  21 | assert.sameValue(value.name, \"value\", \"value\");\n  22 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-or-assignment-operator-namedevaluation-function.js-strict:true": "test/language/expressions/logical-assignment/lgcl-or-assignment-operator-namedevaluation-function.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-or-assignment-operator-namedevaluation-function.js: Unexpected token (19:8)\n  17 | \n  18 | var value = 0;\n\u003e 19 | value ||= function() {};\n     |         ^\n  20 | \n  21 | assert.sameValue(value.name, \"value\", \"value\");\n  22 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-or-assignment-operator-no-set-put.js-strict:true": "test/language/expressions/logical-assignment/lgcl-or-assignment-operator-no-set-put.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-or-assignment-operator-no-set-put.js: Unexpected token (27:13)\n  25 | \n  26 | assert.throws(TypeError, function() {\n\u003e 27 |   obj.prop ||= 1;\n     |              ^\n  28 | });\n  29 | assert.sameValue(obj.prop, 0, \"obj.prop\");\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-or-assignment-operator-no-set.js-strict:true": "test/language/expressions/logical-assignment/lgcl-or-assignment-operator-no-set.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-or-assignment-operator-no-set.js: Unexpected token (26:28)\n  24 | });\n  25 | \n\u003e 26 | assert.sameValue(obj.prop ||= 1, 2, \"obj.prop\");\n     |                             ^\n  27 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-or-assignment-operator-non-extensible.js-strict:true": "test/language/expressions/logical-assignment/lgcl-or-assignment-operator-non-extensible.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-or-assignment-operator-non-extensible.js: Unexpected token (20:13)\n  18 | \n  19 | assert.throws(TypeError, function() {\n\u003e 20 |   obj.prop ||= 1;\n     |              ^\n  21 | });\n  22 | assert.sameValue(obj.prop, undefined, \"obj.prop\");\n  23 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-or-assignment-operator-non-writeable-put.js-strict:true": "test/language/expressions/logical-assignment/lgcl-or-assignment-operator-non-writeable-put.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-or-assignment-operator-non-writeable-put.js: Unexpected token (25:13)\n  23 | \n  24 | assert.throws(TypeError, function() {\n\u003e 25 |   obj.prop ||= 1;\n     |              ^\n  26 | });\n  27 | assert.sameValue(obj.prop, 0, \"obj.prop\");\n  28 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-or-assignment-operator-non-writeable.js-strict:true": "test/language/expressions/logical-assignment/lgcl-or-assignment-operator-non-writeable.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-or-assignment-operator-non-writeable.js: Unexpected token (24:28)\n  22 | });\n  23 | \n\u003e 24 | assert.sameValue(obj.prop ||= 1, 2, \"obj.prop\");\n     |                             ^\n  25 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-or-assignment-operator-unresolved-lhs.js-strict:true": "test/language/expressions/logical-assignment/lgcl-or-assignment-operator-unresolved-lhs.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-or-assignment-operator-unresolved-lhs.js: Unexpected token (16:15)\n  14 | \n  15 | assert.throws(ReferenceError, function() {\n\u003e 16 |   unresolved ||= 1;\n     |                ^\n  17 | });\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-or-assignment-operator-unresolved-rhs-put.js-strict:true": "test/language/expressions/logical-assignment/lgcl-or-assignment-operator-unresolved-rhs-put.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-or-assignment-operator-unresolved-rhs-put.js: Unexpected token (18:10)\n  16 | \n  17 | assert.throws(ReferenceError, function() {\n\u003e 18 |   value ||= unresolved;\n     |           ^\n  19 | });\n  20 | assert.sameValue(value, 0, \"value\");\n  21 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-or-assignment-operator-unresolved-rhs.js-strict:true": "test/language/expressions/logical-assignment/lgcl-or-assignment-operator-unresolved-rhs.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-or-assignment-operator-unresolved-rhs.js: Unexpected token (17:25)\n  15 | var value = 2;\n  16 | \n\u003e 17 | assert.sameValue(value ||= unresolved, 2, \"value\");\n     |                          ^\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-or-assignment-operator.js-strict:true": "test/language/expressions/logical-assignment/lgcl-or-assignment-operator.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-or-assignment-operator.js: Unexpected token (25:25)\n  23 | \n  24 | var value = undefined;\n\u003e 25 | assert.sameValue(value ||= 1, 1, \"(value ||= 1) === 1; where value = undefined\");\n     |                          ^\n  26 | \n  27 | value = null;\n  28 | assert.sameValue(value ||= 1, 1, \"(value ||= 1) === 1; where value = null\"); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/logical-assignment/lgcl-or-whitespace.js-strict:true": "test/language/expressions/logical-assignment/lgcl-or-whitespace.js: SyntaxError: test/language/expressions/logical-assignment/lgcl-or-whitespace.js: Unexpected token (16:21)\n  14 | \n  15 | x = 0;\n\u003e 16 | assert.sameValue(x\t||=\t1, 1, 'U+0009 (expression)');\n     |                   \t  ^\n  17 | assert.sameValue(x, 1, 'U+0009 (side effect)');\n  18 | \n  19 | x = 0; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/new.target/asi.js-strict:true": "test/language/expressions/new.target/asi.js: Test262Error: tokens seperated by line breaks Expected SameValue(«function() {\n  newTarget = new   .   target;\n}», «undefined») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/new.target/escaped-new.js-strict:true": "test/language/expressions/new.target/escaped-new.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/new.target/escaped-target.js-strict:true": "test/language/expressions/new.target/escaped-target.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/new.target/value-via-super-call.js-strict:true": "test/language/expressions/new.target/value-via-super-call.js: Test262Error: within \"parent\" constructor Expected SameValue(«undefined», «function Child() {_classCallCheck(this, Child);return _possibleConstructorReturn(this, (Child.__proto__ || Object.getPrototypeOf(Child)).call(this));\n\n  }») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/new/spread-err-mult-err-iter-get-value.js-strict:true": "test/language/expressions/new/spread-err-mult-err-iter-get-value.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/new/spread-err-mult-err-obj-unresolvable.js-strict:true": "test/language/expressions/new/spread-err-mult-err-obj-unresolvable.js: SyntaxError: test/language/expressions/new/spread-err-mult-err-obj-unresolvable.js: Unexpected token (35:27)\n  33 | \n  34 | assert.throws(ReferenceError, function() {\n\u003e 35 |   new function() {}({a: 0, ...unresolvableReference});\n     |                            ^\n  36 | });\n  37 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/new/spread-err-sngl-err-obj-unresolvable.js-strict:true": "test/language/expressions/new/spread-err-sngl-err-obj-unresolvable.js: SyntaxError: test/language/expressions/new/spread-err-sngl-err-obj-unresolvable.js: Unexpected token (35:21)\n  33 | \n  34 | assert.throws(ReferenceError, function() {\n\u003e 35 |   new function() {}({...unresolvableReference});\n     |                      ^\n  36 | });\n  37 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/new/spread-mult-obj-ident.js-strict:true": "test/language/expressions/new/spread-mult-obj-ident.js: SyntaxError: test/language/expressions/new/spread-mult-obj-ident.js: Unexpected token (70:15)\n  68 |   });\n  69 |   callCount += 1;\n\u003e 70 | }({a: 1, b: 2, ...o});\n     |                ^\n  71 | \n  72 | assert.sameValue(callCount, 1);\n  73 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/new/spread-mult-obj-null.js-strict:true": "test/language/expressions/new/spread-mult-obj-null.js: SyntaxError: test/language/expressions/new/spread-mult-obj-null.js: Unexpected token (41:15)\n  39 |   assert.sameValue(Object.keys(obj).length, 2);\n  40 |   callCount += 1;\n\u003e 41 | }({a: 1, b: 2, ...null});\n     |                ^\n  42 | \n  43 | assert.sameValue(callCount, 1);\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/new/spread-mult-obj-undefined.js-strict:true": "test/language/expressions/new/spread-mult-obj-undefined.js: SyntaxError: test/language/expressions/new/spread-mult-obj-undefined.js: Unexpected token (41:15)\n  39 |   assert.sameValue(Object.keys(obj).length, 2);\n  40 |   callCount += 1;\n\u003e 41 | }({a: 1, b: 2, ...undefined});\n     |                ^\n  42 | \n  43 | assert.sameValue(callCount, 1);\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/new/spread-obj-getter-descriptor.js-strict:true": "test/language/expressions/new/spread-obj-getter-descriptor.js: SyntaxError: test/language/expressions/new/spread-obj-getter-descriptor.js: Unexpected token (55:3)\n  53 |   });\n  54 |   callCount += 1;\n\u003e 55 | }({...o, c: 4, d: 5});\n     |    ^\n  56 | \n  57 | assert.sameValue(callCount, 1);\n  58 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/new/spread-obj-getter-init.js-strict:true": "test/language/expressions/new/spread-obj-getter-init.js: SyntaxError: test/language/expressions/new/spread-obj-getter-init.js: Unexpected token (35:3)\n  33 |   assert.sameValue(Object.keys(obj).length, 3);\n  34 |   callCount += 1;\n\u003e 35 | }({...o, get c() { executedGetter = true; }});\n     |    ^\n  36 | \n  37 | assert.sameValue(callCount, 1);\n  38 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/new/spread-obj-manipulate-outter-obj-in-getter.js-strict:true": "test/language/expressions/new/spread-obj-manipulate-outter-obj-in-getter.js: SyntaxError: test/language/expressions/new/spread-obj-manipulate-outter-obj-in-getter.js: Unexpected token (49:3)\n  47 |   assert.sameValue(Object.keys(obj).length, 3);\n  48 |   callCount += 1;\n\u003e 49 | }({...cthulhu, ...o});\n     |    ^\n  50 | \n  51 | assert.sameValue(callCount, 1);\n  52 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/new/spread-obj-mult-spread-getter.js-strict:true": "test/language/expressions/new/spread-obj-mult-spread-getter.js: SyntaxError: test/language/expressions/new/spread-obj-mult-spread-getter.js: Unexpected token (49:3)\n  47 |   assert.sameValue(Object.keys(obj).length, 3);\n  48 |   callCount += 1;\n\u003e 49 | }({...o, c: 4, d: 5, a: 42, ...o});\n     |    ^\n  50 | \n  51 | assert.sameValue(callCount, 1);\n  52 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/new/spread-obj-mult-spread.js-strict:true": "test/language/expressions/new/spread-obj-mult-spread.js: SyntaxError: test/language/expressions/new/spread-obj-mult-spread.js: Unexpected token (47:3)\n  45 |   assert.sameValue(Object.keys(obj).length, 4);\n  46 |   callCount += 1;\n\u003e 47 | }({...o, ...o2});\n     |    ^\n  48 | \n  49 | assert.sameValue(callCount, 1);\n  50 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/new/spread-obj-null.js-strict:true": "test/language/expressions/new/spread-obj-null.js: SyntaxError: test/language/expressions/new/spread-obj-null.js: Unexpected token (39:3)\n  37 |   assert.sameValue(Object.keys(obj).length, 0);\n  38 |   callCount += 1;\n\u003e 39 | }({...null});\n     |    ^\n  40 | \n  41 | assert.sameValue(callCount, 1);\n  42 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/new/spread-obj-override-immutable.js-strict:true": "test/language/expressions/new/spread-obj-override-immutable.js: SyntaxError: test/language/expressions/new/spread-obj-override-immutable.js: Unexpected token (48:3)\n  46 |   });\n  47 |   callCount += 1;\n\u003e 48 | }({...o, a: 3});\n     |    ^\n  49 | \n  50 | assert.sameValue(callCount, 1);\n  51 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/new/spread-obj-overrides-prev-properties.js-strict:true": "test/language/expressions/new/spread-obj-overrides-prev-properties.js: SyntaxError: test/language/expressions/new/spread-obj-overrides-prev-properties.js: Unexpected token (45:15)\n  43 |   assert.sameValue(o.b, 3);\n  44 |   callCount += 1;\n\u003e 45 | }({a: 1, b: 7, ...o});\n     |                ^\n  46 | \n  47 | assert.sameValue(callCount, 1);\n  48 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/new/spread-obj-skip-non-enumerable.js-strict:true": "test/language/expressions/new/spread-obj-skip-non-enumerable.js: SyntaxError: test/language/expressions/new/spread-obj-skip-non-enumerable.js: Unexpected token (33:3)\n  31 |   assert.sameValue(Object.keys(obj).length, 0);\n  32 |   callCount += 1;\n\u003e 33 | }({...o});\n     |    ^\n  34 | \n  35 | assert.sameValue(callCount, 1);\n  36 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/new/spread-obj-spread-order.js-strict:true": "test/language/expressions/new/spread-obj-spread-order.js: SyntaxError: test/language/expressions/new/spread-obj-spread-order.js: Unexpected token (46:3)\n  44 |   assert.sameValue(Object.keys(obj).length, 3);\n  45 |   callCount += 1;\n\u003e 46 | }({...o});\n     |    ^\n  47 | \n  48 | assert.sameValue(callCount, 1);\n  49 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/new/spread-obj-symbol-property.js-strict:true": "test/language/expressions/new/spread-obj-symbol-property.js: SyntaxError: test/language/expressions/new/spread-obj-symbol-property.js: Unexpected token (47:3)\n  45 |   assert.sameValue(Object.keys(obj).length, 2);\n  46 |   callCount += 1;\n\u003e 47 | }({...o, c: 4, d: 5});\n     |    ^\n  48 | \n  49 | assert.sameValue(callCount, 1);\n  50 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/new/spread-obj-undefined.js-strict:true": "test/language/expressions/new/spread-obj-undefined.js: SyntaxError: test/language/expressions/new/spread-obj-undefined.js: Unexpected token (39:3)\n  37 |   assert.sameValue(Object.keys(obj).length, 0);\n  38 |   callCount += 1;\n\u003e 39 | }({...undefined});\n     |    ^\n  40 | \n  41 | assert.sameValue(callCount, 1);\n  42 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/new/spread-obj-with-overrides.js-strict:true": "test/language/expressions/new/spread-obj-with-overrides.js: SyntaxError: test/language/expressions/new/spread-obj-with-overrides.js: Unexpected token (51:3)\n  49 |   assert.sameValue(Object.keys(obj).length, 10);\n  50 |   callCount += 1;\n\u003e 51 | }({...o, a: 1, b: 7, d: 5, h: -0, i: Symbol(\"foo\"), j: o});\n     |    ^\n  52 | \n  53 | assert.sameValue(callCount, 1);\n  54 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/new/spread-sngl-obj-ident.js-strict:true": "test/language/expressions/new/spread-sngl-obj-ident.js: SyntaxError: test/language/expressions/new/spread-sngl-obj-ident.js: Unexpected token (56:3)\n  54 |   });\n  55 |   callCount += 1;\n\u003e 56 | }({...o});\n     |    ^\n  57 | \n  58 | assert.sameValue(callCount, 1);\n  59 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/__proto__-duplicate-computed.js-strict:true": "test/language/expressions/object/__proto__-duplicate-computed.js: Test262Error: prototype is defined Expected SameValue(«[object Object]», «[object Object]») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/__proto__-duplicate.js-strict:true": "test/language/expressions/object/__proto__-duplicate.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/__proto__-fn-name.js-strict:true": "test/language/expressions/object/__proto__-fn-name.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/object/__proto__-permitted-dup-shorthand.js-strict:true": "test/language/expressions/object/__proto__-permitted-dup-shorthand.js: TypeError: Object prototype may only be an Object or null: 2 at test/language/expressions/object/__proto__-permitted-dup-shorthand.js:21:12(9)",
  "test/language/expressions/object/__proto__-value-non-object.js-strict:true": "test/language/expressions/object/__proto__-value-non-object.js: TypeError: Object prototype may only be an Object or null: undefined at test/language/expressions/object/__proto__-value-non-object.js:24:14(4)",
  "test/language/expressions/object/accessor-name-computed-yield-id.js-strict:false": "test/language/expressions/object/accessor-name-computed-yield-id.js: SyntaxError: test/language/expressions/object/accessor-name-computed-yield-id.js: Unexpected token (21:4)\n  19 | ---*/\n  20 | \n\u003e 21 | var yield = 'y';\n     |     ^\n  22 | var yieldSet;\n  23 | var obj = {\n  24 |   get [yield]() { return 'get yield'; }, at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/computed-__proto__.js-strict:true": "test/language/expressions/object/computed-__proto__.js: Test262Error: does not change the object prototype (ordinary object) Expected SameValue(«[object Object]», «[object Object]») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-assignment-expression-coalesce.js-strict:true": "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-assignment-expression-coalesce.js: SyntaxError: test/language/expressions/object/cpn-obj-lit-computed-property-name-from-assignment-expression-coalesce.js: Unexpected token (30:6)\n  28 | \n  29 | let o = {\n\u003e 30 |   [x ??= 1]: 2\n     |       ^\n  31 | };\n  32 | \n  33 | assert.sameValue( at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-assignment-expression-logical-and.js-strict:true": "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-assignment-expression-logical-and.js: SyntaxError: test/language/expressions/object/cpn-obj-lit-computed-property-name-from-assignment-expression-logical-and.js: Unexpected token (30:7)\n  28 | \n  29 | let o = {\n\u003e 30 |   [x \u0026\u0026= 1]: 2\n     |        ^\n  31 | };\n  32 | \n  33 | assert.sameValue( at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-assignment-expression-logical-or.js-strict:true": "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-assignment-expression-logical-or.js: SyntaxError: test/language/expressions/object/cpn-obj-lit-computed-property-name-from-assignment-expression-logical-or.js: Unexpected token (30:7)\n  28 | \n  29 | let o = {\n\u003e 30 |   [x ||= 1]: 2\n     |        ^\n  31 | };\n  32 | \n  33 | assert.sameValue( at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-async-arrow-function-expression.js-strict:true": "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-async-arrow-function-expression.js: test/language/expressions/object/cpn-obj-lit-computed-property-name-from-async-arrow-function-expression.js: Line 29:7 Unexpected token function (and 2 more errors)",
  "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-expression-coalesce.js-strict:true": "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-expression-coalesce.js: SyntaxError: test/language/expressions/object/cpn-obj-lit-computed-property-name-from-expression-coalesce.js: Unexpected token (30:6)\n  28 | \n  29 | let o = {\n\u003e 30 |   [x ?? 1]: 2\n     |       ^\n  31 | };\n  32 | \n  33 | assert.sameValue( at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-generator-function-declaration.js-strict:true": "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-generator-function-declaration.js: test/language/expressions/object/cpn-obj-lit-computed-property-name-from-generator-function-declaration.js: Line 26:9 Unexpected token * (and 2 more errors)",
  "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-integer-separators.js-strict:true": "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-integer-separators.js: SyntaxError: test/language/expressions/object/cpn-obj-lit-computed-property-name-from-integer-separators.js: Identifier directly after number (29:4)\n  27 | \n  28 | let o = {\n\u003e 29 |   [1_2_3_4_5_6_7_8]: 1_2_3_4_5_6_7_8\n     |     ^\n  30 | };\n  31 | \n  32 | assert.sameValue( at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-yield-expression.js-strict:true": "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-yield-expression.js: test/language/expressions/object/cpn-obj-lit-computed-property-name-from-yield-expression.js: Line 26:9 Unexpected token * (and 5 more errors)",
  "test/language/expressions/object/dstr/meth-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/expressions/object/dstr/meth-ary-init-iter-get-err-array-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/object/dstr/meth-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/object/dstr/meth-ary-ptrn-elem-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/dstr/meth-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/object/dstr/meth-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/dstr/meth-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/expressions/object/dstr/meth-ary-ptrn-elem-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/dstr/meth-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/expressions/object/dstr/meth-ary-ptrn-elem-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/dstr/meth-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/expressions/object/dstr/meth-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/expressions/object/dstr/meth-ary-ptrn-rest-ary-elem.js: Unexpected token (79:13)\n  77 | var callCount = 0;\n  78 | var obj = {\n\u003e 79 |   method([...[x, y, z]]) {\n     |              ^\n  80 |     assert.sameValue(x, 3);\n  81 |     assert.sameValue(y, 4);\n  82 |     assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/dstr/meth-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/expressions/object/dstr/meth-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/expressions/object/dstr/meth-ary-ptrn-rest-ary-rest.js: Unexpected token (60:13)\n  58 | var callCount = 0;\n  59 | var obj = {\n\u003e 60 |   method([...[...x]]) {\n     |              ^\n  61 |     assert(Array.isArray(x));\n  62 |     assert.sameValue(x.length, 3);\n  63 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/dstr/meth-ary-ptrn-rest-obj-id.js-strict:true": "test/language/expressions/object/dstr/meth-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/expressions/object/dstr/meth-ary-ptrn-rest-obj-id.js: Unexpected token (59:13)\n  57 | var callCount = 0;\n  58 | var obj = {\n\u003e 59 |   method([...{ length }]) {\n     |              ^\n  60 |     assert.sameValue(length, 3);\n  61 |     callCount = callCount + 1;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/dstr/meth-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/expressions/object/dstr/meth-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/expressions/object/dstr/meth-ary-ptrn-rest-obj-prop-id.js: Unexpected token (60:13)\n  58 | var callCount = 0;\n  59 | var obj = {\n\u003e 60 |   method([...{ 0: v, 1: w, 2: x, 3: y, length: z }]) {\n     |              ^\n  61 |     assert.sameValue(v, 7);\n  62 |     assert.sameValue(w, 8);\n  63 |     assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/dstr/meth-dflt-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/expressions/object/dstr/meth-dflt-ary-init-iter-get-err-array-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/object/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/object/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/expressions/object/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/expressions/object/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/expressions/object/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/dstr/meth-dflt-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/expressions/object/dstr/meth-dflt-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/expressions/object/dstr/meth-dflt-ary-ptrn-rest-ary-elem.js: Unexpected token (79:13)\n  77 | var callCount = 0;\n  78 | var obj = {\n\u003e 79 |   method([...[x, y, z]] = [3, 4, 5]) {\n     |              ^\n  80 |     assert.sameValue(x, 3);\n  81 |     assert.sameValue(y, 4);\n  82 |     assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/dstr/meth-dflt-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/expressions/object/dstr/meth-dflt-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/expressions/object/dstr/meth-dflt-ary-ptrn-rest-ary-rest.js: Unexpected token (60:13)\n  58 | var callCount = 0;\n  59 | var obj = {\n\u003e 60 |   method([...[...x]] = values) {\n     |              ^\n  61 |     assert(Array.isArray(x));\n  62 |     assert.sameValue(x.length, 3);\n  63 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/dstr/meth-dflt-ary-ptrn-rest-obj-id.js-strict:true": "test/language/expressions/object/dstr/meth-dflt-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/expressions/object/dstr/meth-dflt-ary-ptrn-rest-obj-id.js: Unexpected token (59:13)\n  57 | var callCount = 0;\n  58 | var obj = {\n\u003e 59 |   method([...{ length }] = [1, 2, 3]) {\n     |              ^\n  60 |     assert.sameValue(length, 3);\n  61 |     callCount = callCount + 1;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/dstr/meth-dflt-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/expressions/object/dstr/meth-dflt-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/expressions/object/dstr/meth-dflt-ary-ptrn-rest-obj-prop-id.js: Unexpected token (60:13)\n  58 | var callCount = 0;\n  59 | var obj = {\n\u003e 60 |   method([...{ 0: v, 1: w, 2: x, 3: y, length: z }] = [7, 8, 9]) {\n     |              ^\n  61 |     assert.sameValue(v, 7);\n  62 |     assert.sameValue(w, 8);\n  63 |     assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/dstr/meth-dflt-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/object/dstr/meth-dflt-obj-ptrn-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/dstr/meth-dflt-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/object/dstr/meth-dflt-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/dstr/meth-dflt-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/expressions/object/dstr/meth-dflt-obj-ptrn-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/dstr/meth-dflt-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/expressions/object/dstr/meth-dflt-obj-ptrn-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/dstr/meth-dflt-obj-ptrn-rest-getter.js-strict:true": "test/language/expressions/object/dstr/meth-dflt-obj-ptrn-rest-getter.js: SyntaxError: test/language/expressions/object/dstr/meth-dflt-obj-ptrn-rest-getter.js: Unexpected token (48:10)\n  46 | var callCount = 0;\n  47 | var obj = {\n\u003e 48 |   method({...x} = { get v() { count++; return 2; } }) {\n     |           ^\n  49 |     assert.sameValue(count, 1);\n  50 | \n  51 |     verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/dstr/meth-dflt-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/object/dstr/meth-dflt-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/object/dstr/meth-dflt-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (49:10)\n  47 | var callCount = 0;\n  48 | var obj = {\n\u003e 49 |   method({...rest} = o) {\n     |           ^\n  50 |     assert.sameValue(rest.x, undefined);\n  51 | \n  52 |     verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/dstr/meth-dflt-obj-ptrn-rest-val-obj.js-strict:true": "test/language/expressions/object/dstr/meth-dflt-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/expressions/object/dstr/meth-dflt-obj-ptrn-rest-val-obj.js: Unexpected token (47:16)\n  45 | var callCount = 0;\n  46 | var obj = {\n\u003e 47 |   method({a, b, ...rest} = {x: 1, y: 2, a: 5, b: 3}) {\n     |                 ^\n  48 |     assert.sameValue(rest.a, undefined);\n  49 |     assert.sameValue(rest.b, undefined);\n  50 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/dstr/meth-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/expressions/object/dstr/meth-obj-ptrn-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/dstr/meth-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/expressions/object/dstr/meth-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/dstr/meth-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/expressions/object/dstr/meth-obj-ptrn-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/dstr/meth-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/expressions/object/dstr/meth-obj-ptrn-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/dstr/meth-obj-ptrn-rest-getter.js-strict:true": "test/language/expressions/object/dstr/meth-obj-ptrn-rest-getter.js: SyntaxError: test/language/expressions/object/dstr/meth-obj-ptrn-rest-getter.js: Unexpected token (48:10)\n  46 | var callCount = 0;\n  47 | var obj = {\n\u003e 48 |   method({...x}) {\n     |           ^\n  49 |     assert.sameValue(count, 1);\n  50 | \n  51 |     verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/dstr/meth-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/object/dstr/meth-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/object/dstr/meth-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (49:10)\n  47 | var callCount = 0;\n  48 | var obj = {\n\u003e 49 |   method({...rest}) {\n     |           ^\n  50 |     assert.sameValue(rest.x, undefined);\n  51 | \n  52 |     verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/dstr/meth-obj-ptrn-rest-val-obj.js-strict:true": "test/language/expressions/object/dstr/meth-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/expressions/object/dstr/meth-obj-ptrn-rest-val-obj.js: Unexpected token (47:16)\n  45 | var callCount = 0;\n  46 | var obj = {\n\u003e 47 |   method({a, b, ...rest}) {\n     |                 ^\n  48 |     assert.sameValue(rest.a, undefined);\n  49 |     assert.sameValue(rest.b, undefined);\n  50 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/dstr/object-rest-proxy-ownkeys-returned-keys-order.js-strict:true": "test/language/expressions/object/dstr/object-rest-proxy-ownkeys-returned-keys-order.js: SyntaxError: test/language/expressions/object/dstr/object-rest-proxy-ownkeys-returned-keys-order.js: Unexpected token (45:5)\n  43 | });\n  44 | \n\u003e 45 | let {...$} = proxy;\n     |      ^\n  46 | assert.compareArray(getOwnKeys, ownKeysResult);\n  47 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/fn-name-accessor-get.js-strict:true": "test/language/expressions/object/fn-name-accessor-get.js: Test262Error: Expected SameValue(«id», «get id») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/fn-name-accessor-set.js-strict:true": "test/language/expressions/object/fn-name-accessor-set.js: Test262Error: Expected SameValue(«id», «set id») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/fn-name-arrow.js-strict:true": "test/language/expressions/object/fn-name-arrow.js: TypeError: Cannot read property 'enumerable' of undefined at verifyNotEnumerable (harness/propertyHelper.js:212:11(8))",
  "test/language/expressions/object/fn-name-class.js-strict:true": "test/language/expressions/object/fn-name-class.js: Test262Error: via anonymous Symbol Expected SameValue(«_class», «») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/fn-name-cover.js-strict:true": "test/language/expressions/object/fn-name-cover.js: TypeError: Cannot read property 'enumerable' of undefined at verifyNotEnumerable (harness/propertyHelper.js:212:11(8))",
  "test/language/expressions/object/fn-name-fn.js-strict:true": "test/language/expressions/object/fn-name-fn.js: TypeError: Cannot read property 'enumerable' of undefined at verifyNotEnumerable (harness/propertyHelper.js:212:11(8))",
  "test/language/expressions/object/method-definition/async-gen-meth-dflt-params-abrupt.js-strict:true": "test/language/expressions/object/method-definition/async-gen-meth-dflt-params-abrupt.js: SyntaxError: test/language/expressions/object/method-definition/async-gen-meth-dflt-params-abrupt.js: Unexpected token (39:8)\n  37 | var callCount = 0;\n  38 | var obj = {\n\u003e 39 |   async *method(_ = (function() { throw new Test262Error(); }())) {\n     |         ^\n  40 |     \n  41 |     callCount = callCount + 1;\n  42 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/method-definition/async-gen-meth-dflt-params-ref-later.js-strict:true": "test/language/expressions/object/method-definition/async-gen-meth-dflt-params-ref-later.js: SyntaxError: test/language/expressions/object/method-definition/async-gen-meth-dflt-params-ref-later.js: Unexpected token (40:8)\n  38 | var callCount = 0;\n  39 | var obj = {\n\u003e 40 |   async *method(x = y, y) {\n     |         ^\n  41 |     \n  42 |     callCount = callCount + 1;\n  43 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/method-definition/async-gen-meth-dflt-params-ref-self.js-strict:true": "test/language/expressions/object/method-definition/async-gen-meth-dflt-params-ref-self.js: SyntaxError: test/language/expressions/object/method-definition/async-gen-meth-dflt-params-ref-self.js: Unexpected token (40:8)\n  38 | var callCount = 0;\n  39 | var obj = {\n\u003e 40 |   async *method(x = x) {\n     |         ^\n  41 |     \n  42 |     callCount = callCount + 1;\n  43 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/method-definition/async-gen-meth-eval-var-scope-syntax-err.js-strict:false": "test/language/expressions/object/method-definition/async-gen-meth-eval-var-scope-syntax-err.js: SyntaxError: test/language/expressions/object/method-definition/async-gen-meth-eval-var-scope-syntax-err.js: Unexpected token (34:8)\n  32 | var callCount = 0;\n  33 | var obj = {\n\u003e 34 |   async *method(a = eval(\"var a = 42\")) {\n     |         ^\n  35 |     \n  36 |     callCount = callCount + 1;\n  37 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/method-definition/escaped-get-e.js-strict:true": "test/language/expressions/object/method-definition/escaped-get-e.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/escaped-get-g.js-strict:true": "test/language/expressions/object/method-definition/escaped-get-g.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/escaped-get-t.js-strict:true": "test/language/expressions/object/method-definition/escaped-get-t.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/escaped-get.js-strict:true": "test/language/expressions/object/method-definition/escaped-get.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/escaped-set-e.js-strict:true": "test/language/expressions/object/method-definition/escaped-set-e.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/escaped-set-s.js-strict:true": "test/language/expressions/object/method-definition/escaped-set-s.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/escaped-set-t.js-strict:true": "test/language/expressions/object/method-definition/escaped-set-t.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/escaped-set.js-strict:true": "test/language/expressions/object/method-definition/escaped-set.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/fn-name-fn.js-strict:true": "test/language/expressions/object/method-definition/fn-name-fn.js: TypeError: Cannot read property 'enumerable' of undefined at verifyNotEnumerable (harness/propertyHelper.js:212:11(8))",
  "test/language/expressions/object/method-definition/forbidden-ext/b1/meth-forbidden-ext-direct-access-prop-arguments.js-strict:false": "test/language/expressions/object/method-definition/forbidden-ext/b1/meth-forbidden-ext-direct-access-prop-arguments.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/object/method-definition/forbidden-ext/b1/meth-forbidden-ext-direct-access-prop-caller.js-strict:false": "test/language/expressions/object/method-definition/forbidden-ext/b1/meth-forbidden-ext-direct-access-prop-caller.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/object/method-definition/meth-dflt-params-ref-later.js-strict:true": "test/language/expressions/object/method-definition/meth-dflt-params-ref-later.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/object/method-definition/meth-dflt-params-ref-self.js-strict:true": "test/language/expressions/object/method-definition/meth-dflt-params-ref-self.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/object/method-definition/meth-eval-var-scope-syntax-err.js-strict:false": "test/language/expressions/object/method-definition/meth-eval-var-scope-syntax-err.js: Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/object/method-definition/name-invoke-ctor.js-strict:true": "test/language/expressions/object/method-definition/name-invoke-ctor.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/object/method-definition/name-name-prop-symbol.js-strict:true": "test/language/expressions/object/method-definition/name-name-prop-symbol.js: Test262Error: Expected SameValue(«», «[method]») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/method-definition/name-param-init-yield.js-strict:false": "test/language/expressions/object/method-definition/name-param-init-yield.js: SyntaxError: test/language/expressions/object/method-definition/name-param-init-yield.js: Unexpected token (13:4)\n  11 | ---*/\n  12 | \n\u003e 13 | var yield = 'default';\n     |     ^\n  14 | var obj = {\n  15 |   method(x = yield) {\n  16 |     return x; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/method-definition/name-param-redecl.js-strict:true": "test/language/expressions/object/method-definition/name-param-redecl.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/expressions/object/method-definition/name-prop-name-yield-id.js-strict:false": "test/language/expressions/object/method-definition/name-prop-name-yield-id.js: SyntaxError: test/language/expressions/object/method-definition/name-prop-name-yield-id.js: Unexpected token (13:4)\n  11 | ---*/\n  12 | \n\u003e 13 | var yield = 'propName';\n     |     ^\n  14 | var obj = {\n  15 |   [yield]() {}\n  16 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/method-definition/name-prototype-prop.js-strict:true": "test/language/expressions/object/method-definition/name-prototype-prop.js: Test262Error: Expected SameValue(«true», «false») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/method-definition/object-method-returns-promise.js-strict:true": "test/language/expressions/object/method-definition/object-method-returns-promise.js: test/language/expressions/object/method-definition/object-method-returns-promise.js: Line 12:9 Unexpected identifier (and 8 more errors)",
  "test/language/expressions/object/object-spread-proxy-ownkeys-returned-keys-order.js-strict:true": "test/language/expressions/object/object-spread-proxy-ownkeys-returned-keys-order.js: SyntaxError: test/language/expressions/object/object-spread-proxy-ownkeys-returned-keys-order.js: Unexpected token (45:2)\n  43 | });\n  44 | \n\u003e 45 | ({...proxy});\n     |   ^\n  46 | assert.compareArray(getOwnKeys, ownKeysResult);\n  47 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/prop-def-id-eval-error.js-strict:false": "test/language/expressions/object/prop-def-id-eval-error.js: SyntaxError: test/language/expressions/object/prop-def-id-eval-error.js: 'with' in strict mode (18:2)\n  16 | \n  17 | assert.throws(Test262Error, function() {\n\u003e 18 |   with (obj) {\n     |   ^\n  19 |     ({ attr });\n  20 |   }\n  21 | }); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/scope-getter-body-lex-distinc.js-strict:false": "test/language/expressions/object/scope-getter-body-lex-distinc.js: Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/object/scope-meth-body-lex-distinct.js-strict:false": "test/language/expressions/object/scope-meth-body-lex-distinct.js: Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/object/scope-meth-param-elem-var-close.js-strict:false": "test/language/expressions/object/scope-meth-param-elem-var-close.js: Test262Error: Expected SameValue(«outside», «inside») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/scope-meth-param-elem-var-open.js-strict:false": "test/language/expressions/object/scope-meth-param-elem-var-open.js: Test262Error: Expected SameValue(«outside», «inside») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/scope-meth-param-rest-elem-var-close.js-strict:false": "test/language/expressions/object/scope-meth-param-rest-elem-var-close.js: SyntaxError: test/language/expressions/object/scope-meth-param-rest-elem-var-close.js: Unexpected token (23:7)\n  21 | ({\n  22 |   m(\n\u003e 23 |     ...[_ = (eval('var x = \"inside\";'), probeParam = function() { return x; })]\n     |        ^\n  24 |   ) {\n  25 |     probeBody = function() { return x; }\n  26 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/scope-meth-param-rest-elem-var-open.js-strict:false": "test/language/expressions/object/scope-meth-param-rest-elem-var-open.js: SyntaxError: test/language/expressions/object/scope-meth-param-rest-elem-var-open.js: Unexpected token (24:7)\n  22 |   m(\n  23 |     _ = probe1 = function() { return x; },\n\u003e 24 |     ...[__ = (eval('var x = \"inside\";'), probe2 = function() { return x; })]\n     |        ^\n  25 |   ) {}\n  26 | }.m());\n  27 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/object/scope-meth-paramsbody-var-open.js-strict:true": "test/language/expressions/object/scope-meth-paramsbody-var-open.js: Test262Error: Expected SameValue(«inside», «outside») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/object/scope-setter-body-lex-distinc.js-strict:false": "test/language/expressions/object/scope-setter-body-lex-distinc.js: Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/object/scope-setter-paramsbody-var-open.js-strict:true": "test/language/expressions/object/scope-setter-paramsbody-var-open.js: Test262Error: Expected SameValue(«inside», «outside») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/optional-chaining/call-expression.js-strict:true": "test/language/expressions/optional-chaining/call-expression.js: SyntaxError: test/language/expressions/optional-chaining/call-expression.js: Unexpected token (24:26)\n  22 |   }\n  23 | }\n\u003e 24 | assert.sameValue(33, fn()?.a);\n     |                           ^\n  25 | assert.sameValue(undefined, fn()?.b);\n  26 | assert.sameValue(44, obj?.fn());\n  27 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/optional-chaining/eval-optional-call.js-strict:true": "test/language/expressions/optional-chaining/eval-optional-call.js: SyntaxError: test/language/expressions/optional-chaining/eval-optional-call.js: Unexpected token (33:14)\n  31 | function fn() {\n  32 |   const a = 'local';\n\u003e 33 |   return eval?.('a');\n     |               ^\n  34 | }\n  35 | \n  36 | assert.sameValue(fn(), 'global', 'fn() returns \"global\" value from indirect eval'); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/optional-chaining/iteration-statement-do.js-strict:true": "test/language/expressions/optional-chaining/iteration-statement-do.js: SyntaxError: test/language/expressions/optional-chaining/iteration-statement-do.js: Unexpected token (18:13)\n  16 |   count++;\n  17 |   break;\n\u003e 18 | } while (obj?.a);\n     |              ^\n  19 | assert.sameValue(1, count);\n  20 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/optional-chaining/iteration-statement-for-in.js-strict:true": "test/language/expressions/optional-chaining/iteration-statement-for-in.js: SyntaxError: test/language/expressions/optional-chaining/iteration-statement-for-in.js: Unexpected token (20:22)\n  18 | };\n  19 | let str = '';\n\u003e 20 | for (const key in obj?.inner) {\n     |                       ^\n  21 |   str += key;\n  22 | }\n  23 | assert.sameValue('ab', str); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/optional-chaining/iteration-statement-for-of-type-error.js-strict:true": "test/language/expressions/optional-chaining/iteration-statement-for-of-type-error.js: SyntaxError: test/language/expressions/optional-chaining/iteration-statement-for-of-type-error.js: Unexpected token (15:23)\n  13 | \n  14 | assert.throws(TypeError, function() {\n\u003e 15 |   for (const key of {}?.a) ;\n     |                        ^\n  16 | });\n  17 | \n  18 | assert.throws(TypeError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/optional-chaining/iteration-statement-for.js-strict:true": "test/language/expressions/optional-chaining/iteration-statement-for.js: SyntaxError: test/language/expressions/optional-chaining/iteration-statement-for.js: Unexpected token (17:20)\n  15 | let count;\n  16 | const obj = {a: true};\n\u003e 17 | for (count = 0; obj?.a; count++) {\n     |                     ^\n  18 |   if (count \u003e 0) break;\n  19 | }\n  20 | assert.sameValue(count, 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/optional-chaining/iteration-statement-while.js-strict:true": "test/language/expressions/optional-chaining/iteration-statement-while.js: SyntaxError: test/language/expressions/optional-chaining/iteration-statement-while.js: Unexpected token (15:11)\n  13 | let count = 0;\n  14 | const obj = {a: true};\n\u003e 15 | while (obj?.a) {\n     |            ^\n  16 |   count++;\n  17 |   break;\n  18 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/optional-chaining/member-expression.js-strict:true": "test/language/expressions/optional-chaining/member-expression.js: SyntaxError: test/language/expressions/optional-chaining/member-expression.js: Unexpected token (18:23)\n  16 | //   IdentifierReference\n  17 | const a = {b: 22};\n\u003e 18 | assert.sameValue(22, a?.b);\n     |                        ^\n  19 | //   this\n  20 | function fn () {\n  21 |   return this?.a at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/optional-chaining/new-target-optional-call.js-strict:true": "test/language/expressions/optional-chaining/new-target-optional-call.js: SyntaxError: test/language/expressions/optional-chaining/new-target-optional-call.js: Unexpected token (26:13)\n  24 | }\n  25 | function Foo(blerg) {\n\u003e 26 |   new.target?.();\n     |              ^\n  27 | }\n  28 | \n  29 | Reflect.construct(Foo, [], Base); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/optional-chaining/optional-call-preserves-this.js-strict:true": "test/language/expressions/optional-chaining/optional-call-preserves-this.js: SyntaxError: test/language/expressions/optional-chaining/optional-call-preserves-this.js: Unexpected token (21:19)\n  19 | };\n  20 | \n\u003e 21 | assert.sameValue(a?.b().c, 42);\n     |                    ^\n  22 | assert.sameValue((a?.b)().c, 42);\n  23 | \n  24 | assert.sameValue(a.b?.().c, 42); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/optional-chaining/optional-chain-expression-optional-expression.js-strict:true": "test/language/expressions/optional-chaining/optional-chain-expression-optional-expression.js: SyntaxError: test/language/expressions/optional-chaining/optional-chain-expression-optional-expression.js: Unexpected token (19:30)\n  17 | const d = [22];\n  18 | \n\u003e 19 | assert.sameValue(undefined, a?.[a?.b]);\n     |                               ^\n  20 | assert.sameValue(11, c?.[a?.b]);\n  21 | assert.sameValue(22, d?.[b?.e]);\n  22 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/optional-chaining/optional-chain-prod-arguments.js-strict:true": "test/language/expressions/optional-chaining/optional-chain-prod-arguments.js: SyntaxError: test/language/expressions/optional-chaining/optional-chain-prod-arguments.js: Unexpected token (18:20)\n  16 | }\n  17 | \n\u003e 18 | assert.sameValue(fn?.(10, 20), 30, 'regular');\n     |                     ^\n  19 | assert.sameValue(String?.(42), '42', 'built-in');\n  20 | assert.sameValue(fn ?. (...[10, 20, 40]), 70, 'spread');\n  21 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/optional-chaining/optional-chain-prod-expression.js-strict:true": "test/language/expressions/optional-chaining/optional-chain-prod-expression.js: SyntaxError: test/language/expressions/optional-chaining/optional-chain-prod-expression.js: Unexpected token (30:21)\n  28 | };\n  29 | \n\u003e 30 | assert.sameValue(arr?.[0], 39, '[0]');\n     |                      ^\n  31 | assert.sameValue(arr?.[0, 1], 42, '[0, 1]');\n  32 | assert.sameValue(arr?.[1], 42, '[1]');\n  33 | assert.sameValue(arr?.[1, 0], 39, '[1, 0]'); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/optional-chaining/optional-chain-prod-identifiername.js-strict:true": "test/language/expressions/optional-chaining/optional-chain-prod-identifiername.js: SyntaxError: test/language/expressions/optional-chaining/optional-chain-prod-identifiername.js: Unexpected token (20:21)\n  18 | };\n  19 | \n\u003e 20 | assert.sameValue(obj?.a, 'hello');\n     |                      ^\n  21 | assert.sameValue(obj?.\\u0061, 'hello');\n  22 | assert.sameValue(obj?.\\u{0061}, 'hello');\n  23 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/optional-chaining/optional-chain.js-strict:true": "test/language/expressions/optional-chaining/optional-chain.js: SyntaxError: test/language/expressions/optional-chaining/optional-chain.js: Unexpected token (33:25)\n  31 | \n  32 | // OptionalChain: ?.[Expression]\n\u003e 33 | assert.sameValue(11, arr?.[i + 1]);\n     |                          ^\n  34 | \n  35 | // OptionalChain: ?.IdentifierName\n  36 | assert.sameValue('hello', obj?.a); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/optional-chaining/optional-expression.js-strict:true": "test/language/expressions/optional-chaining/optional-expression.js: SyntaxError: test/language/expressions/optional-chaining/optional-expression.js: Unexpected token (26:25)\n  24 | \n  25 | // OptionalExpression (MemberExpression OptionalChain) OptionalChain\n\u003e 26 | assert.sameValue(22, obj?.a?.b);\n     |                          ^\n  27 | // OptionalExpression (CallExpression OptionalChain) OptionalChain\n  28 | assert.sameValue(undefined, fn()?.a?.b);\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/optional-chaining/runtime-semantics-evaluation.js-strict:true": "test/language/expressions/optional-chaining/runtime-semantics-evaluation.js: SyntaxError: test/language/expressions/optional-chaining/runtime-semantics-evaluation.js: Unexpected token (16:32)\n  14 | const nul = null;\n  15 | const undf = undefined;\n\u003e 16 | assert.sameValue(undefined, nul?.a);\n     |                                 ^\n  17 | assert.sameValue(undefined, undf?.b);\n  18 | assert.sameValue(undefined, null?.a);\n  19 | assert.sameValue(undefined, undefined?.b); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/optional-chaining/short-circuiting.js-strict:true": "test/language/expressions/optional-chaining/short-circuiting.js: SyntaxError: test/language/expressions/optional-chaining/short-circuiting.js: Unexpected token (17:2)\n  15 | let x = 1;\n  16 | \n\u003e 17 | a?.[++x] // short-circuiting.\n     |   ^\n  18 | a?.b.c(++x).d; // long short-circuiting.\n  19 | \n  20 | undefined?.[++x] // short-circuiting. at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/optional-chaining/super-property-optional-call.js-strict:true": "test/language/expressions/optional-chaining/super-property-optional-call.js: SyntaxError: test/language/expressions/optional-chaining/super-property-optional-call.js: Unexpected token (25:19)\n  23 | class Foo extends Base {\n  24 |     method() {\n\u003e 25 |       super.method?.();\n     |                    ^\n  26 |     }\n  27 | }\n  28 | const foo = new Foo(); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/postfix-decrement/S11.3.2_A6_T1.js-strict:true": "test/language/expressions/postfix-decrement/S11.3.2_A6_T1.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/postfix-decrement/S11.3.2_A6_T2.js-strict:true": "test/language/expressions/postfix-decrement/S11.3.2_A6_T2.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/postfix-decrement/S11.3.2_A6_T3.js-strict:true": "test/language/expressions/postfix-decrement/S11.3.2_A6_T3.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/postfix-decrement/operator-x-postfix-decrement-calls-putvalue-lhs-newvalue--1.js-strict:false": "test/language/expressions/postfix-decrement/operator-x-postfix-decrement-calls-putvalue-lhs-newvalue--1.js: TypeError: Object.defineProperty called on non-object at defineProperty (native)",
  "test/language/expressions/postfix-decrement/operator-x-postfix-decrement-calls-putvalue-lhs-newvalue-.js-strict:false": "test/language/expressions/postfix-decrement/operator-x-postfix-decrement-calls-putvalue-lhs-newvalue-.js: SyntaxError: test/language/expressions/postfix-decrement/operator-x-postfix-decrement-calls-putvalue-lhs-newvalue-.js: 'with' in strict mode (27:0)\n  25 | };\n  26 | \n\u003e 27 | with (scope) {\n     | ^\n  28 |   (function() {\n  29 |     \"use strict\";\n  30 |     assert.throws(ReferenceError, () =\u003e { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/postfix-increment/S11.3.1_A6_T1.js-strict:true": "test/language/expressions/postfix-increment/S11.3.1_A6_T1.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/postfix-increment/S11.3.1_A6_T2.js-strict:true": "test/language/expressions/postfix-increment/S11.3.1_A6_T2.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/postfix-increment/S11.3.1_A6_T3.js-strict:true": "test/language/expressions/postfix-increment/S11.3.1_A6_T3.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/postfix-increment/operator-x-postfix-increment-calls-putvalue-lhs-newvalue--1.js-strict:false": "test/language/expressions/postfix-increment/operator-x-postfix-increment-calls-putvalue-lhs-newvalue--1.js: TypeError: Object.defineProperty called on non-object at defineProperty (native)",
  "test/language/expressions/postfix-increment/operator-x-postfix-increment-calls-putvalue-lhs-newvalue-.js-strict:false": "test/language/expressions/postfix-increment/operator-x-postfix-increment-calls-putvalue-lhs-newvalue-.js: SyntaxError: test/language/expressions/postfix-increment/operator-x-postfix-increment-calls-putvalue-lhs-newvalue-.js: 'with' in strict mode (27:0)\n  25 | };\n  26 | \n\u003e 27 | with (scope) {\n     | ^\n  28 |   (function() {\n  29 |     \"use strict\";\n  30 |     assert.throws(ReferenceError, () =\u003e { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/prefix-decrement/S11.4.5_A6_T1.js-strict:true": "test/language/expressions/prefix-decrement/S11.4.5_A6_T1.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/prefix-decrement/S11.4.5_A6_T2.js-strict:true": "test/language/expressions/prefix-decrement/S11.4.5_A6_T2.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/prefix-decrement/S11.4.5_A6_T3.js-strict:true": "test/language/expressions/prefix-decrement/S11.4.5_A6_T3.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/prefix-decrement/operator-prefix-decrement-x-calls-putvalue-lhs-newvalue--1.js-strict:false": "test/language/expressions/prefix-decrement/operator-prefix-decrement-x-calls-putvalue-lhs-newvalue--1.js: TypeError: Object.defineProperty called on non-object at defineProperty (native)",
  "test/language/expressions/prefix-decrement/operator-prefix-decrement-x-calls-putvalue-lhs-newvalue-.js-strict:false": "test/language/expressions/prefix-decrement/operator-prefix-decrement-x-calls-putvalue-lhs-newvalue-.js: SyntaxError: test/language/expressions/prefix-decrement/operator-prefix-decrement-x-calls-putvalue-lhs-newvalue-.js: 'with' in strict mode (27:0)\n  25 | };\n  26 | \n\u003e 27 | with (scope) {\n     | ^\n  28 |   (function() {\n  29 |     \"use strict\";\n  30 |     assert.throws(ReferenceError, () =\u003e { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/prefix-increment/S11.4.4_A6_T1.js-strict:true": "test/language/expressions/prefix-increment/S11.4.4_A6_T1.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/prefix-increment/S11.4.4_A6_T2.js-strict:true": "test/language/expressions/prefix-increment/S11.4.4_A6_T2.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/expressions/prefix-increment/S11.4.4_A6_T3.js-strict:true": "test/language/expressions/prefix-increment/S11.4.4_A6_T3.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/prefix-increment/operator-prefix-increment-x-calls-putvalue-lhs-newvalue--1.js-strict:false": "test/language/expressions/prefix-increment/operator-prefix-increment-x-calls-putvalue-lhs-newvalue--1.js: TypeError: Object.defineProperty called on non-object at defineProperty (native)",
  "test/language/expressions/prefix-increment/operator-prefix-increment-x-calls-putvalue-lhs-newvalue-.js-strict:false": "test/language/expressions/prefix-increment/operator-prefix-increment-x-calls-putvalue-lhs-newvalue-.js: SyntaxError: test/language/expressions/prefix-increment/operator-prefix-increment-x-calls-putvalue-lhs-newvalue-.js: 'with' in strict mode (27:0)\n  25 | };\n  26 | \n\u003e 27 | with (scope) {\n     | ^\n  28 |   (function() {\n  29 |     \"use strict\";\n  30 |     assert.throws(ReferenceError, () =\u003e { at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/super/call-bind-this-value-twice.js-strict:true": "test/language/expressions/super/call-bind-this-value-twice.js: Test262Error: Expected SameValue(«undefined», «object») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/super/call-construct-invocation.js-strict:true": "test/language/expressions/super/call-construct-invocation.js: TypeError: Cannot call a class as a function at _classCallCheck (test/language/expressions/super/call-construct-invocation.js:13:102(9))",
  "test/language/expressions/super/call-poisoned-underscore-proto.js-strict:true": "test/language/expressions/super/call-poisoned-underscore-proto.js: Test262Error: should not be called at get (test/language/expressions/super/call-poisoned-underscore-proto.js:18:11(6))",
  "test/language/expressions/super/call-proto-not-ctor.js-strict:true": "test/language/expressions/super/call-proto-not-ctor.js: Test262Error: Expected SameValue(«undefined», «object») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/super/call-spread-err-mult-err-iter-get-value.js-strict:true": "test/language/expressions/super/call-spread-err-mult-err-iter-get-value.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/expressions/super/call-spread-err-mult-err-obj-unresolvable.js-strict:true": "test/language/expressions/super/call-spread-err-mult-err-obj-unresolvable.js: SyntaxError: test/language/expressions/super/call-spread-err-mult-err-obj-unresolvable.js: Unexpected token (38:17)\n  36 | class Test262ChildClass extends Test262ParentClass {\n  37 |   constructor() {\n\u003e 38 |     super({a: 0, ...unresolvableReference});\n     |                  ^\n  39 |   }\n  40 | }\n  41 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/super/call-spread-err-sngl-err-obj-unresolvable.js-strict:true": "test/language/expressions/super/call-spread-err-sngl-err-obj-unresolvable.js: SyntaxError: test/language/expressions/super/call-spread-err-sngl-err-obj-unresolvable.js: Unexpected token (38:11)\n  36 | class Test262ChildClass extends Test262ParentClass {\n  37 |   constructor() {\n\u003e 38 |     super({...unresolvableReference});\n     |            ^\n  39 |   }\n  40 | }\n  41 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/super/call-spread-mult-obj-ident.js-strict:true": "test/language/expressions/super/call-spread-mult-obj-ident.js: SyntaxError: test/language/expressions/super/call-spread-mult-obj-ident.js: Unexpected token (74:23)\n  72 | class Test262ChildClass extends Test262ParentClass {\n  73 |   constructor() {\n\u003e 74 |     super({a: 1, b: 2, ...o});\n     |                        ^\n  75 |   }\n  76 | }\n  77 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/super/call-spread-mult-obj-null.js-strict:true": "test/language/expressions/super/call-spread-mult-obj-null.js: SyntaxError: test/language/expressions/super/call-spread-mult-obj-null.js: Unexpected token (45:23)\n  43 | class Test262ChildClass extends Test262ParentClass {\n  44 |   constructor() {\n\u003e 45 |     super({a: 1, b: 2, ...null});\n     |                        ^\n  46 |   }\n  47 | }\n  48 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/super/call-spread-mult-obj-undefined.js-strict:true": "test/language/expressions/super/call-spread-mult-obj-undefined.js: SyntaxError: test/language/expressions/super/call-spread-mult-obj-undefined.js: Unexpected token (45:23)\n  43 | class Test262ChildClass extends Test262ParentClass {\n  44 |   constructor() {\n\u003e 45 |     super({a: 1, b: 2, ...undefined});\n     |                        ^\n  46 |   }\n  47 | }\n  48 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/super/call-spread-obj-getter-descriptor.js-strict:true": "test/language/expressions/super/call-spread-obj-getter-descriptor.js: SyntaxError: test/language/expressions/super/call-spread-obj-getter-descriptor.js: Unexpected token (59:11)\n  57 | class Test262ChildClass extends Test262ParentClass {\n  58 |   constructor() {\n\u003e 59 |     super({...o, c: 4, d: 5});\n     |            ^\n  60 |   }\n  61 | }\n  62 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/super/call-spread-obj-getter-init.js-strict:true": "test/language/expressions/super/call-spread-obj-getter-init.js: SyntaxError: test/language/expressions/super/call-spread-obj-getter-init.js: Unexpected token (39:11)\n  37 | class Test262ChildClass extends Test262ParentClass {\n  38 |   constructor() {\n\u003e 39 |     super({...o, get c() { executedGetter = true; }});\n     |            ^\n  40 |   }\n  41 | }\n  42 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/super/call-spread-obj-manipulate-outter-obj-in-getter.js-strict:true": "test/language/expressions/super/call-spread-obj-manipulate-outter-obj-in-getter.js: SyntaxError: test/language/expressions/super/call-spread-obj-manipulate-outter-obj-in-getter.js: Unexpected token (53:11)\n  51 | class Test262ChildClass extends Test262ParentClass {\n  52 |   constructor() {\n\u003e 53 |     super({...cthulhu, ...o});\n     |            ^\n  54 |   }\n  55 | }\n  56 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/super/call-spread-obj-mult-spread-getter.js-strict:true": "test/language/expressions/super/call-spread-obj-mult-spread-getter.js: SyntaxError: test/language/expressions/super/call-spread-obj-mult-spread-getter.js: Unexpected token (53:11)\n  51 | class Test262ChildClass extends Test262ParentClass {\n  52 |   constructor() {\n\u003e 53 |     super({...o, c: 4, d: 5, a: 42, ...o});\n     |            ^\n  54 |   }\n  55 | }\n  56 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/super/call-spread-obj-mult-spread.js-strict:true": "test/language/expressions/super/call-spread-obj-mult-spread.js: SyntaxError: test/language/expressions/super/call-spread-obj-mult-spread.js: Unexpected token (51:11)\n  49 | class Test262ChildClass extends Test262ParentClass {\n  50 |   constructor() {\n\u003e 51 |     super({...o, ...o2});\n     |            ^\n  52 |   }\n  53 | }\n  54 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/super/call-spread-obj-null.js-strict:true": "test/language/expressions/super/call-spread-obj-null.js: SyntaxError: test/language/expressions/super/call-spread-obj-null.js: Unexpected token (43:11)\n  41 | class Test262ChildClass extends Test262ParentClass {\n  42 |   constructor() {\n\u003e 43 |     super({...null});\n     |            ^\n  44 |   }\n  45 | }\n  46 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/super/call-spread-obj-override-immutable.js-strict:true": "test/language/expressions/super/call-spread-obj-override-immutable.js: SyntaxError: test/language/expressions/super/call-spread-obj-override-immutable.js: Unexpected token (52:11)\n  50 | class Test262ChildClass extends Test262ParentClass {\n  51 |   constructor() {\n\u003e 52 |     super({...o, a: 3});\n     |            ^\n  53 |   }\n  54 | }\n  55 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/super/call-spread-obj-overrides-prev-properties.js-strict:true": "test/language/expressions/super/call-spread-obj-overrides-prev-properties.js: SyntaxError: test/language/expressions/super/call-spread-obj-overrides-prev-properties.js: Unexpected token (49:23)\n  47 | class Test262ChildClass extends Test262ParentClass {\n  48 |   constructor() {\n\u003e 49 |     super({a: 1, b: 7, ...o});\n     |                        ^\n  50 |   }\n  51 | }\n  52 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/super/call-spread-obj-skip-non-enumerable.js-strict:true": "test/language/expressions/super/call-spread-obj-skip-non-enumerable.js: SyntaxError: test/language/expressions/super/call-spread-obj-skip-non-enumerable.js: Unexpected token (37:11)\n  35 | class Test262ChildClass extends Test262ParentClass {\n  36 |   constructor() {\n\u003e 37 |     super({...o});\n     |            ^\n  38 |   }\n  39 | }\n  40 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/super/call-spread-obj-spread-order.js-strict:true": "test/language/expressions/super/call-spread-obj-spread-order.js: SyntaxError: test/language/expressions/super/call-spread-obj-spread-order.js: Unexpected token (50:11)\n  48 | class Test262ChildClass extends Test262ParentClass {\n  49 |   constructor() {\n\u003e 50 |     super({...o});\n     |            ^\n  51 |   }\n  52 | }\n  53 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/super/call-spread-obj-symbol-property.js-strict:true": "test/language/expressions/super/call-spread-obj-symbol-property.js: SyntaxError: test/language/expressions/super/call-spread-obj-symbol-property.js: Unexpected token (51:11)\n  49 | class Test262ChildClass extends Test262ParentClass {\n  50 |   constructor() {\n\u003e 51 |     super({...o, c: 4, d: 5});\n     |            ^\n  52 |   }\n  53 | }\n  54 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/super/call-spread-obj-undefined.js-strict:true": "test/language/expressions/super/call-spread-obj-undefined.js: SyntaxError: test/language/expressions/super/call-spread-obj-undefined.js: Unexpected token (43:11)\n  41 | class Test262ChildClass extends Test262ParentClass {\n  42 |   constructor() {\n\u003e 43 |     super({...undefined});\n     |            ^\n  44 |   }\n  45 | }\n  46 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/super/call-spread-obj-with-overrides.js-strict:true": "test/language/expressions/super/call-spread-obj-with-overrides.js: SyntaxError: test/language/expressions/super/call-spread-obj-with-overrides.js: Unexpected token (55:11)\n  53 | class Test262ChildClass extends Test262ParentClass {\n  54 |   constructor() {\n\u003e 55 |     super({...o, a: 1, b: 7, d: 5, h: -0, i: Symbol(\"foo\"), j: o});\n     |            ^\n  56 |   }\n  57 | }\n  58 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/super/call-spread-sngl-obj-ident.js-strict:true": "test/language/expressions/super/call-spread-sngl-obj-ident.js: SyntaxError: test/language/expressions/super/call-spread-sngl-obj-ident.js: Unexpected token (60:11)\n  58 | class Test262ChildClass extends Test262ParentClass {\n  59 |   constructor() {\n\u003e 60 |     super({...o});\n     |            ^\n  61 |   }\n  62 | }\n  63 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/super/prop-dot-cls-null-proto.js-strict:true": "test/language/expressions/super/prop-dot-cls-null-proto.js: Test262Error: Expected SameValue(«undefined», «object») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/super/prop-dot-cls-ref-strict.js-strict:true": "test/language/expressions/super/prop-dot-cls-ref-strict.js: Test262Error: Expected SameValue(«undefined», «object») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/super/prop-dot-cls-this-uninit.js-strict:true": "test/language/expressions/super/prop-dot-cls-this-uninit.js: SyntaxError: test/language/expressions/super/prop-dot-cls-this-uninit.js: 'super.*' is not allowed before super()\n  33 |   constructor() {\n  34 |     try {\n\u003e 35 |       super.x;\n     |       ^\n  36 |     } catch (err) {\n  37 |       caught = err;\n  38 |     } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/super/prop-dot-cls-val-from-eval.js-strict:true": "test/language/expressions/super/prop-dot-cls-val-from-eval.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected reserved word at method (test/language/expressions/super/prop-dot-cls-val-from-eval.js:34:19(7))",
  "test/language/expressions/super/prop-dot-obj-null-proto.js-strict:true": "test/language/expressions/super/prop-dot-obj-null-proto.js: Test262Error: Expected SameValue(«undefined», «object») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/super/prop-dot-obj-ref-non-strict.js-strict:false": "test/language/expressions/super/prop-dot-obj-ref-non-strict.js: Test262Error: Expected SameValue(«false», «true») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/super/prop-dot-obj-ref-strict.js-strict:true": "test/language/expressions/super/prop-dot-obj-ref-strict.js: Test262Error: Expected SameValue(«undefined», «object») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/super/prop-dot-obj-val-from-eval.js-strict:true": "test/language/expressions/super/prop-dot-obj-val-from-eval.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected reserved word at method (test/language/expressions/super/prop-dot-obj-val-from-eval.js:36:17(4))",
  "test/language/expressions/super/prop-expr-cls-null-proto.js-strict:true": "test/language/expressions/super/prop-expr-cls-null-proto.js: Test262Error: Expected SameValue(«undefined», «object») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/super/prop-expr-cls-ref-strict.js-strict:true": "test/language/expressions/super/prop-expr-cls-ref-strict.js: Test262Error: Expected SameValue(«undefined», «object») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/super/prop-expr-cls-this-uninit.js-strict:true": "test/language/expressions/super/prop-expr-cls-this-uninit.js: SyntaxError: test/language/expressions/super/prop-expr-cls-this-uninit.js: 'super.*' is not allowed before super()\n  33 |   constructor() {\n  34 |     try {\n\u003e 35 |       super['x'];\n     |       ^\n  36 |     } catch (err) {\n  37 |       caught = err;\n  38 |     } at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/super/prop-expr-cls-val-from-eval.js-strict:true": "test/language/expressions/super/prop-expr-cls-val-from-eval.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected reserved word at method (test/language/expressions/super/prop-expr-cls-val-from-eval.js:33:19(7))",
  "test/language/expressions/super/prop-expr-obj-null-proto.js-strict:true": "test/language/expressions/super/prop-expr-obj-null-proto.js: Test262Error: Expected SameValue(«undefined», «object») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/super/prop-expr-obj-ref-non-strict.js-strict:false": "test/language/expressions/super/prop-expr-obj-ref-non-strict.js: Test262Error: Expected SameValue(«false», «true») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/super/prop-expr-obj-ref-strict.js-strict:true": "test/language/expressions/super/prop-expr-obj-ref-strict.js: Test262Error: Expected SameValue(«undefined», «object») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/super/prop-expr-obj-val-from-eval.js-strict:true": "test/language/expressions/super/prop-expr-obj-val-from-eval.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected reserved word at method (test/language/expressions/super/prop-expr-obj-val-from-eval.js:36:17(4))",
  "test/language/expressions/super/prop-poisoned-underscore-proto.js-strict:true": "test/language/expressions/super/prop-poisoned-underscore-proto.js: Test262Error: should not be called at get (test/language/expressions/super/prop-poisoned-underscore-proto.js:22:11(6))",
  "test/language/expressions/tagged-template/cache-differing-expressions-eval.js-strict:true": "test/language/expressions/tagged-template/cache-differing-expressions-eval.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:4 Unexpected token ILLEGAL (and 4 more errors) at test/language/expressions/tagged-template/cache-differing-expressions-eval.js:25:5(63)",
  "test/language/expressions/tagged-template/cache-differing-expressions-new-function.js-strict:true": "test/language/expressions/tagged-template/cache-differing-expressions-new-function.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:40 Unexpected token ILLEGAL (and 6 more errors) at test/language/expressions/tagged-template/cache-differing-expressions-new-function.js:25:1(67)",
  "test/language/expressions/tagged-template/cache-differing-expressions.js-strict:true": "test/language/expressions/tagged-template/cache-differing-expressions.js: Test262Error: Expected SameValue(«head,tail», «head,tail») to be false at harness/sta.js:22:9(49)",
  "test/language/expressions/tagged-template/cache-eval-inner-function.js-strict:true": "test/language/expressions/tagged-template/cache-eval-inner-function.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:33 Unexpected identifier (and 9 more errors) at test/language/expressions/tagged-template/cache-eval-inner-function.js:24:7(21)",
  "test/language/expressions/tagged-template/cache-identical-source-eval.js-strict:true": "test/language/expressions/tagged-template/cache-identical-source-eval.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:4 Unexpected token ILLEGAL (and 4 more errors) at test/language/expressions/tagged-template/cache-identical-source-eval.js:24:5(58)",
  "test/language/expressions/tagged-template/cache-identical-source-new-function.js-strict:true": "test/language/expressions/tagged-template/cache-identical-source-new-function.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:40 Unexpected token ILLEGAL (and 6 more errors) at test/language/expressions/tagged-template/cache-identical-source-new-function.js:24:1(62)",
  "test/language/expressions/tagged-template/cache-identical-source.js-strict:true": "test/language/expressions/tagged-template/cache-identical-source.js: Test262Error: The realm's template cache is by site, not string contents Expected SameValue(«head,tail», «head,tail») to be false at harness/sta.js:22:9(49)",
  "test/language/expressions/tagged-template/invalid-escape-sequences.js-strict:true": "test/language/expressions/tagged-template/invalid-escape-sequences.js: SyntaxError: test/language/expressions/tagged-template/invalid-escape-sequences.js: Invalid escape sequence in template (12:4)\n  10 |   assert.sameValue(strs[0], undefined, 'Cooked template value should be undefined for illegal escape sequences');\n  11 |   assert.sameValue(strs.raw[0], '\\\\01');\n\u003e 12 | })`\\01`;\n     |     ^\n  13 | \n  14 | (strs =\u003e {\n  15 |   assert.sameValue(strs[0], undefined, 'Cooked template value should be undefined for illegal escape sequences'); at \u003ceval\u003e:2:28542(114)",
  "test/language/expressions/tagged-template/template-object-frozen-non-strict.js-strict:false": "test/language/expressions/tagged-template/template-object-frozen-non-strict.js: TypeError: Cannot add property test262Prop, object is not extensible at test/language/expressions/tagged-template/template-object-frozen-non-strict.js:19:30(38)",
  "test/language/expressions/tagged-template/template-object-template-map.js-strict:true": "test/language/expressions/tagged-template/template-object-template-map.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/expressions/template-literal/invalid-legacy-octal-escape-sequence-8.js-strict:true": "test/language/expressions/template-literal/invalid-legacy-octal-escape-sequence-8.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/template-literal/invalid-legacy-octal-escape-sequence-9.js-strict:true": "test/language/expressions/template-literal/invalid-legacy-octal-escape-sequence-9.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/template-literal/invalid-legacy-octal-escape-sequence.js-strict:true": "test/language/expressions/template-literal/invalid-legacy-octal-escape-sequence.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/template-literal/mongolian-vowel-separator-eval.js-strict:true": "test/language/expressions/template-literal/mongolian-vowel-separator-eval.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected token ILLEGAL (and 3 more errors) at test/language/expressions/template-literal/mongolian-vowel-separator-eval.js:23:22(5)",
  "test/language/expressions/template-literal/tv-line-continuation.js-strict:true": "test/language/expressions/template-literal/tv-line-continuation.js: Test262Error: Line Separator Expected SameValue(«\u2028», «») to be true at harness/sta.js:22:9(49)",
  "test/language/expressions/typeof/proxy.js-strict:true": "test/language/expressions/typeof/proxy.js: Test262Error: Expected SameValue(«object», «function») to be true at harness/sta.js:22:9(49)",
  "test/language/function-code/block-decl-onlystrict.js-strict:true": "test/language/function-code/block-decl-onlystrict.js: TypeError: Cannot read property 'constructor' of undefined at test/language/function-code/block-decl-onlystrict.js:38:18(10)",
  "test/language/function-code/eval-param-env-with-computed-key.js-strict:false": "test/language/function-code/eval-param-env-with-computed-key.js: Test262Error: Expected SameValue(«outer», «inner») to be true at harness/sta.js:22:9(49)",
  "test/language/function-code/eval-param-env-with-prop-initializer.js-strict:false": "test/language/function-code/eval-param-env-with-prop-initializer.js: Test262Error: Expected SameValue(«outer», «inner») to be true at harness/sta.js:22:9(49)",
  "test/language/function-code/switch-case-decl-onlystrict.js-strict:true": "test/language/function-code/switch-case-decl-onlystrict.js: TypeError: Cannot read property 'constructor' of undefined at test/language/function-code/switch-case-decl-onlystrict.js:39:18(10)",
  "test/language/function-code/switch-dflt-decl-onlystrict.js-strict:true": "test/language/function-code/switch-dflt-decl-onlystrict.js: TypeError: Cannot read property 'constructor' of undefined at test/language/function-code/switch-dflt-decl-onlystrict.js:39:18(10)",
  "test/language/global-code/block-decl-strict.js-strict:true": "test/language/global-code/block-decl-strict.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/global-code/decl-lex-configurable-global.js-strict:true": "test/language/global-code/decl-lex-configurable-global.js: TypeError: Cannot read property 'Array' of undefined at test/language/global-code/decl-lex-configurable-global.js:30:25(16)",
  "test/language/global-code/decl-lex-deletion.js-strict:false": "test/language/global-code/decl-lex-deletion.js: SyntaxError: test/language/global-code/decl-lex-deletion.js: Deleting local variable in strict mode (23:0)\n  21 | let test262let;\n  22 | \n\u003e 23 | delete test262let;\n     | ^\n  24 | \n  25 | // Binding values are asserted by a dedicated test. IdentifierReferences serve\n  26 | // to ensure that the entries in the environment record persist. at \u003ceval\u003e:2:28542(114)",
  "test/language/global-code/decl-lex-restricted-global.js-strict:true": "test/language/global-code/decl-lex-restricted-global.js: Expected error: \u003cnil\u003e",
  "test/language/global-code/decl-lex.js-strict:true": "test/language/global-code/decl-lex.js: SyntaxError: test/language/global-code/decl-lex.js: \"test262const\" is read-only\n  33 | \n  34 | assert.throws(TypeError, function() {\n\u003e 35 |   test262const = 4;\n     |   ^\n  36 | }, '`const` binding is strictly immutable');\n  37 | assert.sameValue(test262const, 3, '`const` binding cannot be modified');\n  38 | assert.sameValue( at \u003ceval\u003e:2:28542(114)",
  "test/language/global-code/export.js-strict:true": "test/language/global-code/export.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/global-code/import.js-strict:true": "test/language/global-code/import.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/global-code/new.target-arrow.js-strict:true": "test/language/global-code/new.target-arrow.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/global-code/script-decl-func-dups.js-strict:true": "test/language/global-code/script-decl-func-dups.js: TypeError: Object has no member 'evalScript' at test/language/global-code/script-decl-func-dups.js:28:16(6)",
  "test/language/global-code/script-decl-func.js-strict:true": "test/language/global-code/script-decl-func.js: TypeError: Object has no member 'evalScript' at test/language/global-code/script-decl-func.js:42:16(4)",
  "test/language/global-code/script-decl-lex-deletion.js-strict:false": "test/language/global-code/script-decl-lex-deletion.js: TypeError: Object has no member 'evalScript' at test/language/global-code/script-decl-lex-deletion.js:21:16(4)",
  "test/language/global-code/script-decl-lex-lex.js-strict:true": "test/language/global-code/script-decl-lex-lex.js: Test262Error: `let` binding Expected a SyntaxError but got a TypeError at harness/sta.js:22:9(49)",
  "test/language/global-code/script-decl-lex-restricted-global.js-strict:true": "test/language/global-code/script-decl-lex-restricted-global.js: TypeError: Object has no member 'evalScript' at test/language/global-code/script-decl-lex-restricted-global.js:24:16(24)",
  "test/language/global-code/script-decl-lex-var.js-strict:true": "test/language/global-code/script-decl-lex-var.js: Test262Error: variable Expected a SyntaxError but got a TypeError at harness/sta.js:22:9(49)",
  "test/language/global-code/script-decl-lex.js-strict:true": "test/language/global-code/script-decl-lex.js: TypeError: Object has no member 'evalScript' at test/language/global-code/script-decl-lex.js:25:16(10)",
  "test/language/global-code/script-decl-var-collision.js-strict:true": "test/language/global-code/script-decl-var-collision.js: TypeError: Object has no member 'evalScript' at test/language/global-code/script-decl-var-collision.js:20:16(25)",
  "test/language/global-code/script-decl-var.js-strict:true": "test/language/global-code/script-decl-var.js: TypeError: Object has no member 'evalScript' at test/language/global-code/script-decl-var.js:36:16(4)",
  "test/language/global-code/switch-case-decl-strict.js-strict:true": "test/language/global-code/switch-case-decl-strict.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/global-code/switch-dflt-decl-strict.js-strict:true": "test/language/global-code/switch-dflt-decl-strict.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/identifiers/other_id_continue-escaped.js-strict:true": "test/language/identifiers/other_id_continue-escaped.js: test/language/identifiers/other_id_continue-escaped.js: Line 13:6 Unexpected token ILLEGAL (and 35 more errors)",
  "test/language/identifiers/other_id_continue.js-strict:true": "test/language/identifiers/other_id_continue.js: test/language/identifiers/other_id_continue.js: Line 13:6 Unexpected token ILLEGAL (and 35 more errors)",
  "test/language/identifiers/other_id_start-escaped.js-strict:true": "test/language/identifiers/other_id_start-escaped.js: test/language/identifiers/other_id_start-escaped.js: Line 13:5 Unexpected token ILLEGAL (and 16 more errors)",
  "test/language/identifiers/other_id_start.js-strict:true": "test/language/identifiers/other_id_start.js: test/language/identifiers/other_id_start.js: Line 13:5 Unexpected token ILLEGAL (and 16 more errors)",
  "test/language/identifiers/part-unicode-10.0.0-escaped.js-strict:true": "test/language/identifiers/part-unicode-10.0.0-escaped.js: SyntaxError: test/language/identifiers/part-unicode-10.0.0-escaped.js: Invalid Unicode escape (17:5)\n  15 | ---*/\n  16 | \n\u003e 17 | var _\\u0AFA\\u0AFB\\u0AFC\\u0AFD\\u0AFE\\u0AFF\\u0D00\\u0D3B\\u0D3C\\u1CF7\\u1DF6\\u1DF7\\u1DF8\\u1DF9\\u{11A01}\\u{11A02}\\u{11A03}\\u{11A04}\\u{11A05}\\u{11A06}\\u{11A07}\\u{11A08}\\u{11A09}\\u{11A0A}\\u{11A33}\\u{11A34}\\u{11A35}\\u{11A36}\\u{11A37}\\u{11A38}\\u{11A39}\\u{11A3B}\\u{11A3C}\\u{11A3D}\\u{11A3E}\\u{11A47}\\u{11A51}\\u{11A52}\\u{11A53}\\u{11A54}\\u{11A55}\\u{11A56}\\u{11A57}\\u{11A58}\\u{11A59}\\u{11A5A}\\u{11A5B}\\u{11A8A}\\u{11A8B}\\u{11A8C}\\u{11A8D}\\u{11A8E}\\u{11A8F}\\u{11A90}\\u{11A91}\\u{11A92}\\u{11A93}\\u{11A94}\\u{11A95}\\u{11A96}\\u{11A97}\\u{11A98}\\u{11A99}\\u{11D31}\\u{11D32}\\u{11D33}\\u{11D34}\\u{11D35}\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}\\u{11D40}\\u{11D41}\\u{11D42}\\u{11D43}\\u{11D44}\\u{11D45}\\u{11D47}\\u{11D50}\\u{11D51}\\u{11D52}\\u{11D53}\\u{11D54}\\u{11D55}\\u{11D56}\\u{11D57}\\u{11D58}\\u{11D59};\n     |      ^\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/identifiers/part-unicode-10.0.0.js-strict:true": "test/language/identifiers/part-unicode-10.0.0.js: SyntaxError: test/language/identifiers/part-unicode-10.0.0.js: Unexpected character 'ૺ' (15:5)\n  13 | ---*/\n  14 | \n\u003e 15 | var _ૺૻૼ૽૾૿ഀ഻഼᳷᷹᷷᷸᷶𑨁𑨂𑨃𑨄𑨅𑨆𑨇𑨈𑨉𑨊𑨳𑨴𑨵𑨶𑨷𑨸𑨹𑨻𑨼𑨽𑨾𑩇𑩑𑩒𑩓𑩔𑩕𑩖𑩗𑩘𑩙𑩚𑩛𑪊𑪋𑪌𑪍𑪎𑪏𑪐𑪑𑪒𑪓𑪔𑪕𑪖𑪗𑪘𑪙𑴱𑴲𑴳𑴴𑴵𑴶𑴺𑴼𑴽𑴿𑵀𑵁𑵂𑵃𑵄𑵅𑵇𑵐𑵑𑵒𑵓𑵔𑵕𑵖𑵗𑵘𑵙;\n     |      ^\n  16 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/identifiers/part-unicode-11.0.0-escaped.js-strict:true": "test/language/identifiers/part-unicode-11.0.0-escaped.js: SyntaxError: test/language/identifiers/part-unicode-11.0.0-escaped.js: Invalid Unicode escape (17:5)\n  15 | ---*/\n  16 | \n\u003e 17 | var _\\u07FD\\u08D3\\u09FE\\u0C04\\uA8FF\\u{10D24}\\u{10D25}\\u{10D26}\\u{10D27}\\u{10D30}\\u{10D31}\\u{10D32}\\u{10D33}\\u{10D34}\\u{10D35}\\u{10D36}\\u{10D37}\\u{10D38}\\u{10D39}\\u{10F46}\\u{10F47}\\u{10F48}\\u{10F49}\\u{10F4A}\\u{10F4B}\\u{10F4C}\\u{10F4D}\\u{10F4E}\\u{10F4F}\\u{10F50}\\u{11145}\\u{11146}\\u{111C9}\\u{1133B}\\u{1145E}\\u{1182C}\\u{1182D}\\u{1182E}\\u{1182F}\\u{11830}\\u{11831}\\u{11832}\\u{11833}\\u{11834}\\u{11835}\\u{11836}\\u{11837}\\u{11838}\\u{11839}\\u{1183A}\\u{11D8A}\\u{11D8B}\\u{11D8C}\\u{11D8D}\\u{11D8E}\\u{11D90}\\u{11D91}\\u{11D93}\\u{11D94}\\u{11D95}\\u{11D96}\\u{11D97}\\u{11DA0}\\u{11DA1}\\u{11DA2}\\u{11DA3}\\u{11DA4}\\u{11DA5}\\u{11DA6}\\u{11DA7}\\u{11DA8}\\u{11DA9}\\u{11EF3}\\u{11EF4}\\u{11EF5}\\u{11EF6};\n     |      ^\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/identifiers/part-unicode-11.0.0.js-strict:true": "test/language/identifiers/part-unicode-11.0.0.js: SyntaxError: test/language/identifiers/part-unicode-11.0.0.js: Unexpected character '߽' (15:5)\n  13 | ---*/\n  14 | \n\u003e 15 | var _߽࣓৾ఄꣿ𐴤𐴥𐴦𐴧𐴰𐴱𐴲𐴳𐴴𐴵𐴶𐴷𐴸𐴹𐽆𐽇𐽋𐽍𐽎𐽏𐽐𐽈𐽉𐽊𐽌𑅅𑅆𑇉𑌻𑑞𑠬𑠭𑠮𑠯𑠰𑠱𑠲𑠳𑠴𑠵𑠶𑠷𑠸𑠺𑠹𑶊𑶋𑶌𑶍𑶎𑶐𑶑𑶓𑶔𑶕𑶖𑶗𑶠𑶡𑶢𑶣𑶤𑶥𑶦𑶧𑶨𑶩𑻳𑻴𑻵𑻶;\n     |      ^\n  16 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/identifiers/part-unicode-12.0.0-escaped.js-strict:true": "test/language/identifiers/part-unicode-12.0.0-escaped.js: SyntaxError: test/language/identifiers/part-unicode-12.0.0-escaped.js: Invalid Unicode escape (17:5)\n  15 | ---*/\n  16 | \n\u003e 17 | var _\\u0EBA\\u{119D1}\\u{119D2}\\u{119D3}\\u{119D4}\\u{119D5}\\u{119D6}\\u{119D7}\\u{119DA}\\u{119DB}\\u{119DC}\\u{119DD}\\u{119DE}\\u{119DF}\\u{119E0}\\u{119E4}\\u{16F4F}\\u{16F7F}\\u{16F80}\\u{16F81}\\u{16F82}\\u{16F83}\\u{16F84}\\u{16F85}\\u{16F86}\\u{16F87}\\u{1E130}\\u{1E131}\\u{1E132}\\u{1E133}\\u{1E134}\\u{1E135}\\u{1E136}\\u{1E140}\\u{1E141}\\u{1E142}\\u{1E143}\\u{1E144}\\u{1E145}\\u{1E146}\\u{1E147}\\u{1E148}\\u{1E149}\\u{1E2EC}\\u{1E2ED}\\u{1E2EE}\\u{1E2EF}\\u{1E2F0}\\u{1E2F1}\\u{1E2F2}\\u{1E2F3}\\u{1E2F4}\\u{1E2F5}\\u{1E2F6}\\u{1E2F7}\\u{1E2F8}\\u{1E2F9};\n     |      ^\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/identifiers/part-unicode-12.0.0.js-strict:true": "test/language/identifiers/part-unicode-12.0.0.js: SyntaxError: test/language/identifiers/part-unicode-12.0.0.js: Unexpected character '຺' (15:5)\n  13 | ---*/\n  14 | \n\u003e 15 | var _຺𑧑𑧒𑧓𑧔𑧕𑧖𑧗𑧚𑧛𑧜𑧝𑧞𑧟𑧠𑧤𖽏𖽿𖾀𖾁𖾂𖾃𖾄𖾅𖾆𖾇𞄰𞄱𞄲𞄳𞄴𞄵𞄶𞅀𞅁𞅂𞅃𞅄𞅅𞅆𞅇𞅈𞅉𞋬𞋭𞋮𞋯𞋰𞋱𞋲𞋳𞋴𞋵𞋶𞋷𞋸𞋹;\n     |      ^\n  16 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/identifiers/part-unicode-13.0.0-escaped.js-strict:true": "test/language/identifiers/part-unicode-13.0.0-escaped.js: SyntaxError: test/language/identifiers/part-unicode-13.0.0-escaped.js: Invalid Unicode escape (17:5)\n  15 | ---*/\n  16 | \n\u003e 17 | var _\\u0B55\\u0D81\\u1ABF\\u1AC0\\uA82C\\u{10EAB}\\u{10EAC}\\u{111CE}\\u{111CF}\\u{11930}\\u{11931}\\u{11932}\\u{11933}\\u{11934}\\u{11935}\\u{11937}\\u{11938}\\u{1193B}\\u{1193C}\\u{1193D}\\u{1193E}\\u{11940}\\u{11942}\\u{11943}\\u{11950}\\u{11951}\\u{11952}\\u{11953}\\u{11954}\\u{11955}\\u{11956}\\u{11957}\\u{11958}\\u{11959}\\u{16FE4}\\u{16FF0}\\u{16FF1}\\u{1FBF0}\\u{1FBF1}\\u{1FBF2}\\u{1FBF3}\\u{1FBF4}\\u{1FBF5}\\u{1FBF6}\\u{1FBF7}\\u{1FBF8}\\u{1FBF9};\n     |      ^\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/identifiers/part-unicode-13.0.0.js-strict:true": "test/language/identifiers/part-unicode-13.0.0.js: SyntaxError: test/language/identifiers/part-unicode-13.0.0.js: Unexpected character '୕' (15:5)\n  13 | ---*/\n  14 | \n\u003e 15 | var _୕ඁ꠬ᪿᫀ𐺫𐺬𑇎𑇏𑤰𑤱𑤲𑤳𑤴𑤵𑤷𑤸𑤻𑤼𑤽𑤾𑥀𑥂𑥃𑥐𑥑𑥒𑥓𑥔𑥕𑥖𑥗𑥘𑥙𖿤𖿰𖿱🯰🯱🯲🯳🯴🯵🯶🯷🯸🯹;\n     |      ^\n  16 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/identifiers/part-unicode-5.2.0-escaped.js-strict:true": "test/language/identifiers/part-unicode-5.2.0-escaped.js: test/language/identifiers/part-unicode-5.2.0-escaped.js: Line 17:6 Unexpected token ILLEGAL (and 211 more errors)",
  "test/language/identifiers/part-unicode-5.2.0.js-strict:true": "test/language/identifiers/part-unicode-5.2.0.js: test/language/identifiers/part-unicode-5.2.0.js: Line 15:6 Unexpected token ILLEGAL (and 211 more errors)",
  "test/language/identifiers/part-unicode-6.0.0-escaped.js-strict:true": "test/language/identifiers/part-unicode-6.0.0-escaped.js: test/language/identifiers/part-unicode-6.0.0-escaped.js: Line 17:6 Unexpected token ILLEGAL (and 59 more errors)",
  "test/language/identifiers/part-unicode-6.0.0.js-strict:true": "test/language/identifiers/part-unicode-6.0.0.js: test/language/identifiers/part-unicode-6.0.0.js: Line 15:6 Unexpected token ILLEGAL (and 59 more errors)",
  "test/language/identifiers/part-unicode-6.1.0-escaped.js-strict:true": "test/language/identifiers/part-unicode-6.1.0-escaped.js: test/language/identifiers/part-unicode-6.1.0-escaped.js: Line 17:6 Unexpected token ILLEGAL (and 187 more errors)",
  "test/language/identifiers/part-unicode-6.1.0.js-strict:true": "test/language/identifiers/part-unicode-6.1.0.js: test/language/identifiers/part-unicode-6.1.0.js: Line 15:6 Unexpected token ILLEGAL (and 187 more errors)",
  "test/language/identifiers/part-unicode-7.0.0-escaped.js-strict:true": "test/language/identifiers/part-unicode-7.0.0-escaped.js: test/language/identifiers/part-unicode-7.0.0-escaped.js: Line 17:6 Unexpected token ILLEGAL (and 265 more errors)",
  "test/language/identifiers/part-unicode-7.0.0.js-strict:true": "test/language/identifiers/part-unicode-7.0.0.js: test/language/identifiers/part-unicode-7.0.0.js: Line 15:6 Unexpected token ILLEGAL (and 265 more errors)",
  "test/language/identifiers/part-unicode-8.0.0-escaped.js-strict:true": "test/language/identifiers/part-unicode-8.0.0-escaped.js: test/language/identifiers/part-unicode-8.0.0-escaped.js: Line 17:6 Unexpected token ILLEGAL (and 163 more errors)",
  "test/language/identifiers/part-unicode-8.0.0.js-strict:true": "test/language/identifiers/part-unicode-8.0.0.js: test/language/identifiers/part-unicode-8.0.0.js: Line 15:6 Unexpected token ILLEGAL (and 163 more errors)",
  "test/language/identifiers/part-unicode-9.0.0-escaped.js-strict:true": "test/language/identifiers/part-unicode-9.0.0-escaped.js: test/language/identifiers/part-unicode-9.0.0-escaped.js: Line 17:6 Unexpected token ILLEGAL (and 163 more errors)",
  "test/language/identifiers/part-unicode-9.0.0.js-strict:true": "test/language/identifiers/part-unicode-9.0.0.js: test/language/identifiers/part-unicode-9.0.0.js: Line 15:6 Unexpected token ILLEGAL (and 163 more errors)",
  "test/language/identifiers/part-zwj-zwnj-escaped.js-strict:true": "test/language/identifiers/part-zwj-zwnj-escaped.js: test/language/identifiers/part-zwj-zwnj-escaped.js: Line 12:6 Unexpected token ILLEGAL (and 8 more errors)",
  "test/language/identifiers/vertical-tilde-continue-escaped.js-strict:true": "test/language/identifiers/vertical-tilde-continue-escaped.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/identifiers/vertical-tilde-continue.js-strict:true": "test/language/identifiers/vertical-tilde-continue.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/identifiers/vertical-tilde-start-escaped.js-strict:true": "test/language/identifiers/vertical-tilde-start-escaped.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/identifiers/vertical-tilde-start.js-strict:true": "test/language/identifiers/vertical-tilde-start.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/import/dup-bound-names.js-strict:true": "test/language/import/dup-bound-names.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/import/escaped-as-import-specifier.js-strict:true": "test/language/import/escaped-as-import-specifier.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/import/escaped-as-namespace-import.js-strict:true": "test/language/import/escaped-as-namespace-import.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/import/escaped-from.js-strict:true": "test/language/import/escaped-from.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/keywords/ident-ref-this.js-strict:true": "test/language/keywords/ident-ref-this.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-bil-bd-nsl-bd.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-bil-bd-nsl-bd.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-bil-bd-nsl-bd.js: Identifier directly after number (28:20)\n  26 | ---*/\n  27 | \n\u003e 28 | assert.sameValue(0b0_1, 0b01);\n     |                     ^\n  29 | assert.sameValue(0B0_1, 0B01);\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-bil-bd-nsl-bds.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-bil-bd-nsl-bds.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-bil-bd-nsl-bds.js: Identifier directly after number (28:20)\n  26 | ---*/\n  27 | \n\u003e 28 | assert.sameValue(0b0_10, 0b010);\n     |                     ^\n  29 | assert.sameValue(0B0_10, 0B010);\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-bil-bds-nsl-bd.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-bil-bds-nsl-bd.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-bil-bds-nsl-bd.js: Identifier directly after number (28:21)\n  26 | ---*/\n  27 | \n\u003e 28 | assert.sameValue(0b01_0, 0b010);\n     |                      ^\n  29 | assert.sameValue(0B01_0, 0B010);\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-bil-bds-nsl-bds.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-bil-bds-nsl-bds.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-bil-bds-nsl-bds.js: Identifier directly after number (28:21)\n  26 | ---*/\n  27 | \n\u003e 28 | assert.sameValue(0b01_00, 0b0100);\n     |                      ^\n  29 | assert.sameValue(0B01_00, 0B0100);\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-dd-dot-dd-ep-sign-minus-dd-nsl-dd.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-dd-dot-dd-ep-sign-minus-dd-nsl-dd.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-dd-dot-dd-ep-sign-minus-dd-nsl-dd.js: Identifier directly after number (28:23)\n  26 | ---*/\n  27 | \n\u003e 28 | assert.sameValue(1.0e-1_0, 1.0e-10);\n     |                        ^\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-dd-dot-dd-ep-sign-minus-dds-nsl-dd.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-dd-dot-dd-ep-sign-minus-dds-nsl-dd.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-dd-dot-dd-ep-sign-minus-dds-nsl-dd.js: Identifier directly after number (28:24)\n  26 | ---*/\n  27 | \n\u003e 28 | assert.sameValue(1.0e-10_0, 1.0e-100);\n     |                         ^\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-dd-dot-dd-ep-sign-plus-dd-nsl-dd.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-dd-dot-dd-ep-sign-plus-dd-nsl-dd.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-dd-dot-dd-ep-sign-plus-dd-nsl-dd.js: Identifier directly after number (28:23)\n  26 | ---*/\n  27 | \n\u003e 28 | assert.sameValue(1.0e+1_0, 1.0e+10);\n     |                        ^\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-dd-dot-dd-ep-sign-plus-dds-nsl-dd.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-dd-dot-dd-ep-sign-plus-dds-nsl-dd.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-dd-dot-dd-ep-sign-plus-dds-nsl-dd.js: Identifier directly after number (28:24)\n  26 | ---*/\n  27 | \n\u003e 28 | assert.sameValue(1.0e+10_0, 1.0e+100);\n     |                         ^\n  29 | \n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-dd-nsl-dd-one-of.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-dd-nsl-dd-one-of.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-dd-nsl-dd-one-of.js: Identifier directly after number (27:18)\n  25 | ---*/\n  26 | \n\u003e 27 | assert.sameValue(1_0, 10);\n     |                   ^\n  28 | assert.sameValue(1_1, 11);\n  29 | assert.sameValue(1_2, 12);\n  30 | assert.sameValue(1_3, 13); at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-dds-dot-dd-nsl-dd-ep-dd.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-dds-dot-dd-nsl-dd-ep-dd.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-dds-dot-dd-nsl-dd-ep-dd.js: Identifier directly after number (27:22)\n  25 | ---*/\n  26 | \n\u003e 27 | assert.sameValue(10.00_01e2, 10.0001e2);\n     |                       ^\n  28 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-dds-nsl-dd.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-dds-nsl-dd.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-dds-nsl-dd.js: Identifier directly after number (19:26)\n  17 | ---*/\n  18 | \n\u003e 19 | assert.sameValue(123456789_0, 1234567890);\n     |                           ^\n  20 | assert.sameValue(123456789_1, 1234567891);\n  21 | assert.sameValue(123456789_2, 1234567892);\n  22 | assert.sameValue(123456789_3, 1234567893); at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-dot-dd-nsl-dd-ep.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-dot-dd-nsl-dd-ep.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-dot-dd-nsl-dd-ep.js: Identifier directly after number (27:19)\n  25 | ---*/\n  26 | \n\u003e 27 | assert.sameValue(.0_1e2, .01e2);\n     |                    ^\n  28 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-dot-dd-nsl-dds-ep.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-dot-dd-nsl-dds-ep.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-dot-dd-nsl-dds-ep.js: Identifier directly after number (27:19)\n  25 | ---*/\n  26 | \n\u003e 27 | assert.sameValue(.1_01e2, .101e2);\n     |                    ^\n  28 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-dot-dds-nsl-dd-ep.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-dot-dds-nsl-dd-ep.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-dot-dds-nsl-dd-ep.js: Identifier directly after number (27:20)\n  25 | ---*/\n  26 | \n\u003e 27 | assert.sameValue(.10_1e2, .101e2);\n     |                     ^\n  28 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-dot-dds-nsl-dds-ep.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-dot-dds-nsl-dds-ep.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-dot-dds-nsl-dds-ep.js: Identifier directly after number (27:20)\n  25 | ---*/\n  26 | \n\u003e 27 | assert.sameValue(.00_01e2, .0001e2);\n     |                     ^\n  28 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-hil-hd-nsl-hd.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-hil-hd-nsl-hd.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-hil-hd-nsl-hd.js: Identifier directly after number (28:20)\n  26 | ---*/\n  27 | \n\u003e 28 | assert.sameValue(0x0_1, 0x01);\n     |                     ^\n  29 | assert.sameValue(0X0_1, 0X01);\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-hil-hd-nsl-hds.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-hil-hd-nsl-hds.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-hil-hd-nsl-hds.js: Identifier directly after number (28:20)\n  26 | ---*/\n  27 | \n\u003e 28 | assert.sameValue(0x0_10, 0x010);\n     |                     ^\n  29 | assert.sameValue(0X0_10, 0X010);\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-hil-hds-nsl-hd.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-hil-hds-nsl-hd.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-hil-hds-nsl-hd.js: Identifier directly after number (28:21)\n  26 | ---*/\n  27 | \n\u003e 28 | assert.sameValue(0x01_0, 0x010);\n     |                      ^\n  29 | assert.sameValue(0X01_0, 0X010);\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-hil-hds-nsl-hds.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-hil-hds-nsl-hds.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-hil-hds-nsl-hds.js: Identifier directly after number (28:21)\n  26 | ---*/\n  27 | \n\u003e 28 | assert.sameValue(0x01_00, 0x0100);\n     |                      ^\n  29 | assert.sameValue(0X01_00, 0X0100);\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-hil-od-nsl-od-one-of.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-hil-od-nsl-od-one-of.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-hil-od-nsl-od-one-of.js: Identifier directly after number (28:20)\n  26 | ---*/\n  27 | \n\u003e 28 | assert.sameValue(0x0_0, 0x00);\n     |                     ^\n  29 | assert.sameValue(0x1_1, 0x11);\n  30 | assert.sameValue(0x2_2, 0x22);\n  31 | assert.sameValue(0x3_3, 0x33); at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-nzd-nsl-dd-one-of.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-nzd-nsl-dd-one-of.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-nzd-nsl-dd-one-of.js: Identifier directly after number (29:18)\n  27 | ---*/\n  28 | \n\u003e 29 | assert.sameValue(1_0, 10);\n     |                   ^\n  30 | assert.sameValue(1_1, 11);\n  31 | assert.sameValue(2_2, 22);\n  32 | assert.sameValue(3_3, 33); at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-nzd-nsl-dd.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-nzd-nsl-dd.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-nzd-nsl-dd.js: Identifier directly after number (27:18)\n  25 | ---*/\n  26 | \n\u003e 27 | assert.sameValue(1_1, 11);\n     |                   ^\n  28 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-nzd-nsl-dds.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-nzd-nsl-dds.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-nzd-nsl-dds.js: Identifier directly after number (27:18)\n  25 | ---*/\n  26 | \n\u003e 27 | assert.sameValue(1_0123456789, 10123456789);\n     |                   ^\n  28 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-oil-od-nsl-od-one-of.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-oil-od-nsl-od-one-of.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-oil-od-nsl-od-one-of.js: Identifier directly after number (28:20)\n  26 | ---*/\n  27 | \n\u003e 28 | assert.sameValue(0o0_0, 0o00);\n     |                     ^\n  29 | assert.sameValue(0o1_1, 0o11);\n  30 | assert.sameValue(0o2_2, 0o22);\n  31 | assert.sameValue(0o3_3, 0o33); at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-oil-od-nsl-od.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-oil-od-nsl-od.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-oil-od-nsl-od.js: Identifier directly after number (28:20)\n  26 | ---*/\n  27 | \n\u003e 28 | assert.sameValue(0o0_1, 0o01);\n     |                     ^\n  29 | assert.sameValue(0O0_1, 0O01);\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-oil-od-nsl-ods.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-oil-od-nsl-ods.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-oil-od-nsl-ods.js: Identifier directly after number (28:20)\n  26 | ---*/\n  27 | \n\u003e 28 | assert.sameValue(0o0_10, 0o010);\n     |                     ^\n  29 | assert.sameValue(0O0_10, 0O010);\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-oil-ods-nsl-od.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-oil-ods-nsl-od.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-oil-ods-nsl-od.js: Identifier directly after number (28:21)\n  26 | ---*/\n  27 | \n\u003e 28 | assert.sameValue(0o01_0, 0o010);\n     |                      ^\n  29 | assert.sameValue(0O01_0, 0O010);\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-oil-ods-nsl-ods.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-oil-ods-nsl-ods.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-oil-ods-nsl-ods.js: Identifier directly after number (28:21)\n  26 | ---*/\n  27 | \n\u003e 28 | assert.sameValue(0o01_00, 0o0100);\n     |                      ^\n  29 | assert.sameValue(0O01_00, 0O0100);\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-sign-minus-dds-nsl-dd.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-sign-minus-dds-nsl-dd.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-sign-minus-dds-nsl-dd.js: Identifier directly after number (19:27)\n  17 | ---*/\n  18 | \n\u003e 19 | assert.sameValue(-123456789_0, -1234567890);\n     |                            ^\n  20 | assert.sameValue(-123456789_1, -1234567891);\n  21 | assert.sameValue(-123456789_2, -1234567892);\n  22 | assert.sameValue(-123456789_3, -1234567893); at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/numeric/numeric-separators/numeric-separator-literal-sign-plus-dds-nsl-dd.js-strict:true": "test/language/literals/numeric/numeric-separators/numeric-separator-literal-sign-plus-dds-nsl-dd.js: SyntaxError: test/language/literals/numeric/numeric-separators/numeric-separator-literal-sign-plus-dds-nsl-dd.js: Identifier directly after number (20:27)\n  18 | ---*/\n  19 | \n\u003e 20 | assert.sameValue(+123456789_0, 1234567890);\n     |                            ^\n  21 | assert.sameValue(+123456789_1, 1234567891);\n  22 | assert.sameValue(+123456789_2, 1234567892);\n  23 | assert.sameValue(+123456789_3, 1234567893); at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/regexp/S7.8.5_A1.1_T2.js-strict:true": "test/language/literals/regexp/S7.8.5_A1.1_T2.js: Test262Error: Code unit: d800 Expected SameValue(«\\ud800», «�») to be true at harness/sta.js:22:9(49)",
  "test/language/literals/regexp/S7.8.5_A1.4_T2.js-strict:true": "test/language/literals/regexp/S7.8.5_A1.4_T2.js: Test262Error: Code unit: d800 Expected SameValue(«\\\\\\ud800», «\\�») to be true at harness/sta.js:22:9(49)",
  "test/language/literals/regexp/S7.8.5_A2.1_T2.js-strict:true": "test/language/literals/regexp/S7.8.5_A2.1_T2.js: Test262Error: Code unit: d800 Expected SameValue(«nnnn\\ud800», «nnnn�») to be true at harness/sta.js:22:9(49)",
  "test/language/literals/regexp/S7.8.5_A2.4_T2.js-strict:true": "test/language/literals/regexp/S7.8.5_A2.4_T2.js: Test262Error: Code unit: d800 Expected SameValue(«a\\\\\\ud800», «a\\�») to be true at harness/sta.js:22:9(49)",
  "test/language/literals/regexp/early-err-flags-unicode-escape.js-strict:true": "test/language/literals/regexp/early-err-flags-unicode-escape.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/invalid-optional-lookbehind.js-strict:true": "test/language/literals/regexp/invalid-optional-lookbehind.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/invalid-optional-negative-lookbehind.js-strict:true": "test/language/literals/regexp/invalid-optional-negative-lookbehind.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/invalid-range-lookbehind.js-strict:true": "test/language/literals/regexp/invalid-range-lookbehind.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/invalid-range-negative-lookbehind.js-strict:true": "test/language/literals/regexp/invalid-range-negative-lookbehind.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/named-groups/invalid-dangling-groupname-without-group-u.js-strict:true": "test/language/literals/regexp/named-groups/invalid-dangling-groupname-without-group-u.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/named-groups/invalid-duplicate-groupspecifier-2-u.js-strict:true": "test/language/literals/regexp/named-groups/invalid-duplicate-groupspecifier-2-u.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/named-groups/invalid-duplicate-groupspecifier-2.js-strict:true": "test/language/literals/regexp/named-groups/invalid-duplicate-groupspecifier-2.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/named-groups/invalid-duplicate-groupspecifier-u.js-strict:true": "test/language/literals/regexp/named-groups/invalid-duplicate-groupspecifier-u.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/named-groups/invalid-duplicate-groupspecifier.js-strict:true": "test/language/literals/regexp/named-groups/invalid-duplicate-groupspecifier.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/named-groups/invalid-identity-escape-in-capture-u.js-strict:true": "test/language/literals/regexp/named-groups/invalid-identity-escape-in-capture-u.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/named-groups/invalid-incomplete-groupname-without-group-2-u.js-strict:true": "test/language/literals/regexp/named-groups/invalid-incomplete-groupname-without-group-2-u.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/named-groups/invalid-incomplete-groupname-without-group-3-u.js-strict:true": "test/language/literals/regexp/named-groups/invalid-incomplete-groupname-without-group-3-u.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/named-groups/invalid-incomplete-groupname-without-group-u.js-strict:true": "test/language/literals/regexp/named-groups/invalid-incomplete-groupname-without-group-u.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/named-groups/invalid-non-id-start-groupspecifier-2-u.js-strict:true": "test/language/literals/regexp/named-groups/invalid-non-id-start-groupspecifier-2-u.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-case-mapping.js-strict:true": "test/language/literals/regexp/u-case-mapping.js: Test262Error: Case mapping is not applied in the absence of the `u` flag Expected SameValue(«true», «false») to be true at harness/sta.js:22:9(49)",
  "test/language/literals/regexp/u-invalid-class-escape.js-strict:true": "test/language/literals/regexp/u-invalid-class-escape.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-extended-pattern-char.js-strict:true": "test/language/literals/regexp/u-invalid-extended-pattern-char.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-identity-escape.js-strict:true": "test/language/literals/regexp/u-invalid-identity-escape.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-legacy-octal-escape.js-strict:true": "test/language/literals/regexp/u-invalid-legacy-octal-escape.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-non-empty-class-ranges-no-dash-a.js-strict:true": "test/language/literals/regexp/u-invalid-non-empty-class-ranges-no-dash-a.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-oob-decimal-escape.js-strict:true": "test/language/literals/regexp/u-invalid-oob-decimal-escape.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-optional-lookahead.js-strict:true": "test/language/literals/regexp/u-invalid-optional-lookahead.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-optional-lookbehind.js-strict:true": "test/language/literals/regexp/u-invalid-optional-lookbehind.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-optional-negative-lookahead.js-strict:true": "test/language/literals/regexp/u-invalid-optional-negative-lookahead.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-optional-negative-lookbehind.js-strict:true": "test/language/literals/regexp/u-invalid-optional-negative-lookbehind.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-range-lookahead.js-strict:true": "test/language/literals/regexp/u-invalid-range-lookahead.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-range-lookbehind.js-strict:true": "test/language/literals/regexp/u-invalid-range-lookbehind.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-range-negative-lookahead.js-strict:true": "test/language/literals/regexp/u-invalid-range-negative-lookahead.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-range-negative-lookbehind.js-strict:true": "test/language/literals/regexp/u-invalid-range-negative-lookbehind.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-unicode-esc-non-hex.js-strict:true": "test/language/literals/regexp/u-unicode-esc-non-hex.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-unicode-esc.js-strict:true": "test/language/literals/regexp/u-unicode-esc.js: Test262Error: U+0001 at harness/sta.js:22:9(49)",
  "test/language/literals/regexp/unicode-escape-nls-err.js-strict:true": "test/language/literals/regexp/unicode-escape-nls-err.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/S7.8.4_A4.3_T1.js-strict:true": "test/language/literals/string/S7.8.4_A4.3_T1.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/S7.8.4_A4.3_T2.js-strict:true": "test/language/literals/string/S7.8.4_A4.3_T2.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/legacy-non-octal-escape-sequence-8-strict.js-strict:true": "test/language/literals/string/legacy-non-octal-escape-sequence-8-strict.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/legacy-non-octal-escape-sequence-9-strict.js-strict:true": "test/language/literals/string/legacy-non-octal-escape-sequence-9-strict.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/legacy-non-octal-escape-sequence-strict.js-strict:true": "test/language/literals/string/legacy-non-octal-escape-sequence-strict.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/legacy-octal-escape-sequence-prologue-strict.js-strict:true": "test/language/literals/string/legacy-octal-escape-sequence-prologue-strict.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/legacy-octal-escape-sequence-strict.js-strict:true": "test/language/literals/string/legacy-octal-escape-sequence-strict.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/line-separator-eval.js-strict:true": "test/language/literals/string/line-separator-eval.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected token ILLEGAL at test/language/literals/string/line-separator-eval.js:18:22(5)",
  "test/language/literals/string/line-separator.js-strict:true": "test/language/literals/string/line-separator.js: SyntaxError: test/language/literals/string/line-separator.js: Unterminated string constant (19:17)\n  17 | \n  18 | // U+2028 in strings; UTF8(0x2028) = 0xE2 0x80 0xA8\n\u003e 19 | assert.sameValue(\"\n     |                  ^\n  20 | \", \"\\u2028\");\n  21 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/literals/string/paragraph-separator-eval.js-strict:true": "test/language/literals/string/paragraph-separator-eval.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected token ILLEGAL at test/language/literals/string/paragraph-separator-eval.js:18:22(5)",
  "test/language/literals/string/paragraph-separator.js-strict:true": "test/language/literals/string/paragraph-separator.js: SyntaxError: test/language/literals/string/paragraph-separator.js: Unterminated string constant (19:17)\n  17 | \n  18 | // U+2029 in strings; UTF8(0x2029) = 0xE2 0x80 0xA9\n\u003e 19 | assert.sameValue(\"\n     |                  ^\n  20 | \", \"\\u2029\");\n  21 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/module-code/comment-multi-line-html-close.js-strict:true": "test/language/module-code/comment-multi-line-html-close.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/module-code/comment-single-line-html-close.js-strict:true": "test/language/module-code/comment-single-line-html-close.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/module-code/early-export-global.js-strict:true": "test/language/module-code/early-export-global.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/early-export-unresolvable.js-strict:true": "test/language/module-code/early-export-unresolvable.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/early-lex-and-var.js-strict:true": "test/language/module-code/early-lex-and-var.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/module-code/eval-export-cls-semi.js-strict:true": "test/language/module-code/eval-export-cls-semi.js: ReferenceError: exports is not defined at test/language/module-code/eval-export-cls-semi.js:10:28(10)",
  "test/language/module-code/eval-export-dflt-cls-anon-semi.js-strict:true": "test/language/module-code/eval-export-dflt-cls-anon-semi.js: ReferenceError: exports is not defined at test/language/module-code/eval-export-dflt-cls-anon-semi.js:10:28(10)",
  "test/language/module-code/eval-export-dflt-cls-anon.js-strict:true": "test/language/module-code/eval-export-dflt-cls-anon.js: ReferenceError: exports is not defined at test/language/module-code/eval-export-dflt-cls-anon.js:28:28(17)",
  "test/language/module-code/eval-export-dflt-cls-name-meth.js-strict:true": "test/language/module-code/eval-export-dflt-cls-name-meth.js: ReferenceError: exports is not defined at test/language/module-code/eval-export-dflt-cls-name-meth.js:28:28(17)",
  "test/language/module-code/eval-export-dflt-cls-named-semi.js-strict:true": "test/language/module-code/eval-export-dflt-cls-named-semi.js: ReferenceError: exports is not defined at test/language/module-code/eval-export-dflt-cls-named-semi.js:10:28(10)",
  "test/language/module-code/eval-export-dflt-cls-named.js-strict:true": "test/language/module-code/eval-export-dflt-cls-named.js: ReferenceError: exports is not defined at test/language/module-code/eval-export-dflt-cls-named.js:28:28(17)",
  "test/language/module-code/eval-export-dflt-expr-cls-anon.js-strict:true": "test/language/module-code/eval-export-dflt-expr-cls-anon.js: ReferenceError: exports is not defined at test/language/module-code/eval-export-dflt-expr-cls-anon.js:27:28(16)",
  "test/language/module-code/eval-export-dflt-expr-cls-name-meth.js-strict:true": "test/language/module-code/eval-export-dflt-expr-cls-name-meth.js: ReferenceError: exports is not defined at test/language/module-code/eval-export-dflt-expr-cls-name-meth.js:29:28(16)",
  "test/language/module-code/eval-export-dflt-expr-cls-named.js-strict:true": "test/language/module-code/eval-export-dflt-expr-cls-named.js: ReferenceError: exports is not defined at test/language/module-code/eval-export-dflt-expr-cls-named.js:27:28(16)",
  "test/language/module-code/eval-export-dflt-expr-err-eval.js-strict:true": "test/language/module-code/eval-export-dflt-expr-err-eval.js: unexpected error type (ReferenceError), expected (Test262Error)",
  "test/language/module-code/eval-export-dflt-expr-fn-anon.js-strict:true": "test/language/module-code/eval-export-dflt-expr-fn-anon.js: ReferenceError: exports is not defined at test/language/module-code/eval-export-dflt-expr-fn-anon.js:27:28(10)",
  "test/language/module-code/eval-export-dflt-expr-fn-named.js-strict:true": "test/language/module-code/eval-export-dflt-expr-fn-named.js: ReferenceError: exports is not defined at test/language/module-code/eval-export-dflt-expr-fn-named.js:27:28(10)",
  "test/language/module-code/eval-export-dflt-expr-in.js-strict:true": "test/language/module-code/eval-export-dflt-expr-in.js: ReferenceError: exports is not defined at test/language/module-code/eval-export-dflt-expr-in.js:21:28(11)",
  "test/language/module-code/eval-export-dflt-fun-anon-semi.js-strict:true": "test/language/module-code/eval-export-dflt-fun-anon-semi.js: ReferenceError: exports is not defined at test/language/module-code/eval-export-dflt-fun-anon-semi.js:10:28(4)",
  "test/language/module-code/eval-export-dflt-fun-named-semi.js-strict:true": "test/language/module-code/eval-export-dflt-fun-named-semi.js: ReferenceError: exports is not defined at test/language/module-code/eval-export-dflt-fun-named-semi.js:10:28(9)",
  "test/language/module-code/eval-export-fun-semi.js-strict:true": "test/language/module-code/eval-export-fun-semi.js: ReferenceError: exports is not defined at test/language/module-code/eval-export-fun-semi.js:10:28(9)",
  "test/language/module-code/eval-gtbndng-indirect-trlng-comma.js-strict:true": "test/language/module-code/eval-gtbndng-indirect-trlng-comma.js: ReferenceError: require is not defined at test/language/module-code/eval-gtbndng-indirect-trlng-comma.js:22:53(4)",
  "test/language/module-code/eval-gtbndng-indirect-update-as.js-strict:true": "test/language/module-code/eval-gtbndng-indirect-update-as.js: ReferenceError: require is not defined at test/language/module-code/eval-gtbndng-indirect-update-as.js:24:51(4)",
  "test/language/module-code/eval-gtbndng-indirect-update-dflt.js-strict:true": "test/language/module-code/eval-gtbndng-indirect-update-dflt.js: ReferenceError: require is not defined at test/language/module-code/eval-gtbndng-indirect-update-dflt.js:22:53(10)",
  "test/language/module-code/eval-gtbndng-indirect-update.js-strict:true": "test/language/module-code/eval-gtbndng-indirect-update.js: ReferenceError: require is not defined at test/language/module-code/eval-gtbndng-indirect-update.js:24:49(4)",
  "test/language/module-code/eval-rqstd-abrupt.js-strict:true": "test/language/module-code/eval-rqstd-abrupt.js: unexpected error type (ReferenceError), expected (TypeError)",
  "test/language/module-code/eval-rqstd-once.js-strict:true": "test/language/module-code/eval-rqstd-once.js: SyntaxError: test/language/module-code/eval-rqstd-once.js: Unexpected token (27:9)\n  25 | import dflt2, {} from './eval-rqstd-once_FIXTURE.js';\n  26 | export * from './eval-rqstd-once_FIXTURE.js';\n\u003e 27 | export * as ns2 from './eval-rqstd-once_FIXTURE.js';\n     |          ^\n  28 | export * as class from './eval-rqstd-once_FIXTURE.js';\n  29 | import dflt3, * as ns3 from './eval-rqstd-once_FIXTURE.js';\n  30 | export default null; at \u003ceval\u003e:2:28542(114)",
  "test/language/module-code/eval-rqstd-order.js-strict:true": "test/language/module-code/eval-rqstd-order.js: SyntaxError: test/language/module-code/eval-rqstd-order.js: Unexpected token (41:9)\n  39 | import dflt3, * as ns2 from './eval-rqstd-order-8_FIXTURE.js';\n  40 | \n\u003e 41 | export * as ns3 from './eval-rqstd-order-9_FIXTURE.js';\n     |          ^\n  42 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/module-code/eval-self-once.js-strict:true": "test/language/module-code/eval-self-once.js: SyntaxError: test/language/module-code/eval-self-once.js: Unexpected token (36:9)\n  34 | import dflt2, {} from './eval-self-once.js';\n  35 | export * from './eval-self-once.js';\n\u003e 36 | export * as ns2 from './eval-self-once.js';\n     |          ^\n  37 | import dflt3, * as ns from './eval-self-once.js';\n  38 | export default null;\n  39 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/module-code/eval-this.js-strict:true": "test/language/module-code/eval-this.js: Test262Error: Expected SameValue(«[object global]», «undefined») to be true at harness/sta.js:22:9(49)",
  "test/language/module-code/export-default-asyncfunction-declaration-binding.js-strict:true": "test/language/module-code/export-default-asyncfunction-declaration-binding.js: test/language/module-code/export-default-asyncfunction-declaration-binding.js: Line 18:7 Unexpected token function (and 2 more errors)",
  "test/language/module-code/export-default-asyncgenerator-declaration-binding.js-strict:true": "test/language/module-code/export-default-asyncgenerator-declaration-binding.js: SyntaxError: test/language/module-code/export-default-asyncgenerator-declaration-binding.js: Unexpected token (18:30)\n  16 | ---*/\n  17 | \n\u003e 18 | export default async function * AG() {}\n     |                               ^\n  19 | AG.foo = '';\n  20 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/module-code/export-default-function-declaration-binding-exists.js-strict:true": "test/language/module-code/export-default-function-declaration-binding-exists.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/export-default-function-declaration-binding.js-strict:true": "test/language/module-code/export-default-function-declaration-binding.js: ReferenceError: exports is not defined at test/language/module-code/export-default-function-declaration-binding.js:16:28(8)",
  "test/language/module-code/export-default-generator-declaration-binding.js-strict:true": "test/language/module-code/export-default-generator-declaration-binding.js: test/language/module-code/export-default-generator-declaration-binding.js: Line 18:11 Unexpected token * (and 2 more errors)",
  "test/language/module-code/export-expname-binding-string.js-strict:true": "test/language/module-code/export-expname-binding-string.js: ReferenceError: require is not defined at test/language/module-code/export-expname-binding-string.js:16:37(10)",
  "test/language/module-code/export-expname-from-binding-string.js-strict:true": "test/language/module-code/export-expname-from-binding-string.js: SyntaxError: test/language/module-code/export-expname-from-binding-string.js: Unexpected token (21:20)\n  19 | ---*/\n  20 | import * as Scouts from \"./export-expname-from-binding-string.js\";\n\u003e 21 | export { Mercury as \"☿\" } from \"./export-expname_FIXTURE.js\";\n     |                     ^\n  22 | \n  23 | assert.sameValue(Scouts.Mercury, undefined);\n  24 | assert.sameValue(Scouts[\"☿\"], globalThis.Mercury); at \u003ceval\u003e:2:28542(114)",
  "test/language/module-code/export-expname-from-star-string.js-strict:true": "test/language/module-code/export-expname-from-star-string.js: SyntaxError: test/language/module-code/export-expname-from-star-string.js: Unexpected token (18:9)\n  16 | ---*/\n  17 | import * as Scouts from \"./export-expname-from-star-string.js\";\n\u003e 18 | export * as \"All\" from \"./export-expname_FIXTURE.js\";\n     |          ^\n  19 | \n  20 | assert.sameValue(Scouts[\"☿\"], undefined);\n  21 | assert.sameValue(Scouts.All[\"☿\"], globalThis.Mercury); at \u003ceval\u003e:2:28542(114)",
  "test/language/module-code/export-expname-from-star.js-strict:true": "test/language/module-code/export-expname-from-star.js: ReferenceError: exports is not defined at test/language/module-code/export-expname-from-star.js:14:28(11)",
  "test/language/module-code/export-expname-from-string-binding.js-strict:true": "test/language/module-code/export-expname-from-string-binding.js: SyntaxError: test/language/module-code/export-expname-from-string-binding.js: Unexpected token (19:9)\n  17 | ---*/\n  18 | import * as Scouts from \"./export-expname-from-string-binding.js\";\n\u003e 19 | export { \"☿\" as Ami } from \"./export-expname_FIXTURE.js\";\n     |          ^\n  20 | \n  21 | assert.sameValue(Scouts[\"☿\"], undefined);\n  22 | assert.sameValue(Scouts.Ami, globalThis.Mercury); at \u003ceval\u003e:2:28542(114)",
  "test/language/module-code/export-expname-from-string-string.js-strict:true": "test/language/module-code/export-expname-from-string-string.js: SyntaxError: test/language/module-code/export-expname-from-string-string.js: Unexpected token (19:9)\n  17 | ---*/\n  18 | import * as Scouts from \"./export-expname-from-string-string.js\";\n\u003e 19 | export { \"☿\" as \"Ami\" } from \"./export-expname_FIXTURE.js\";\n     |          ^\n  20 | \n  21 | assert.sameValue(Scouts[\"☿\"], undefined);\n  22 | assert.sameValue(Scouts.Ami, globalThis.Mercury); at \u003ceval\u003e:2:28542(114)",
  "test/language/module-code/export-expname-from-string.js-strict:true": "test/language/module-code/export-expname-from-string.js: SyntaxError: test/language/module-code/export-expname-from-string.js: Unexpected token (21:9)\n  19 | ---*/\n  20 | import * as Scouts from \"./export-expname-from-string.js\";\n\u003e 21 | export { \"☿\" } from \"./export-expname_FIXTURE.js\";\n     |          ^\n  22 | \n  23 | assert.sameValue(typeof Scouts[\"☿\"], \"function\");\n  24 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/module-code/export-expname-import-string-binding.js-strict:true": "test/language/module-code/export-expname-import-string-binding.js: SyntaxError: test/language/module-code/export-expname-import-string-binding.js: Unexpected token (16:9)\n  14 | features: [arbitrary-module-namespace-names]\n  15 | ---*/\n\u003e 16 | import { \"☿\" as Ami } from \"./export-expname_FIXTURE.js\";\n     |          ^\n  17 | \n  18 | assert.sameValue(Ami, globalThis.Mercury);\n  19 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/module-code/export-star-as-dflt.js-strict:true": "test/language/module-code/export-star-as-dflt.js: SyntaxError: test/language/module-code/export-star-as-dflt.js: Unexpected token (22:9)\n  20 | ---*/\n  21 | \n\u003e 22 | export * as default from './export-star-as-dflt_FIXTURE.js';\n     |          ^\n  23 | import Self from './export-star-as-dflt.js';\n  24 | import { default as named } from './export-star-as-dflt.js';\n  25 | import * as ns from './export-star-as-dflt.js'; at \u003ceval\u003e:2:28542(114)",
  "test/language/module-code/instn-iee-bndng-cls.js-strict:true": "test/language/module-code/instn-iee-bndng-cls.js: ReferenceError: exports is not defined at test/language/module-code/instn-iee-bndng-cls.js:41:28(10)",
  "test/language/module-code/instn-iee-bndng-const.js-strict:true": "test/language/module-code/instn-iee-bndng-const.js: ReferenceError: exports is not defined at test/language/module-code/instn-iee-bndng-const.js:41:28(5)",
  "test/language/module-code/instn-iee-bndng-fun.js-strict:true": "test/language/module-code/instn-iee-bndng-fun.js: SyntaxError: test/language/module-code/instn-iee-bndng-fun.js: \"B\" is read-only\n  48 | \n  49 | assert.throws(TypeError, function() {\n\u003e 50 |   B = null;\n     |   ^\n  51 | }, 'binding rejects assignment');\n  52 | \n  53 | assert.sameValue(B(), 77, 'binding value is immutable'); at \u003ceval\u003e:2:28542(114)",
  "test/language/module-code/instn-iee-bndng-let.js-strict:true": "test/language/module-code/instn-iee-bndng-let.js: ReferenceError: exports is not defined at test/language/module-code/instn-iee-bndng-let.js:41:28(5)",
  "test/language/module-code/instn-iee-bndng-var.js-strict:true": "test/language/module-code/instn-iee-bndng-var.js: SyntaxError: test/language/module-code/instn-iee-bndng-var.js: \"B\" is read-only\n  48 | \n  49 | assert.throws(TypeError, function() {\n\u003e 50 |   B = null;\n     |   ^\n  51 | }, 'binding rejects assignment');\n  52 | \n  53 | assert.sameValue(B, undefined, 'binding value is immutable'); at \u003ceval\u003e:2:28542(114)",
  "test/language/module-code/instn-iee-err-ambiguous-as.js-strict:true": "test/language/module-code/instn-iee-err-ambiguous-as.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/instn-iee-err-ambiguous.js-strict:true": "test/language/module-code/instn-iee-err-ambiguous.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/instn-iee-err-circular-as.js-strict:true": "test/language/module-code/instn-iee-err-circular-as.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/instn-iee-err-circular.js-strict:true": "test/language/module-code/instn-iee-err-circular.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/instn-iee-err-dflt-thru-star-as.js-strict:true": "test/language/module-code/instn-iee-err-dflt-thru-star-as.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/instn-iee-err-dflt-thru-star.js-strict:true": "test/language/module-code/instn-iee-err-dflt-thru-star.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/instn-iee-err-not-found-as.js-strict:true": "test/language/module-code/instn-iee-err-not-found-as.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/instn-iee-err-not-found.js-strict:true": "test/language/module-code/instn-iee-err-not-found.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/instn-iee-iee-cycle.js-strict:true": "test/language/module-code/instn-iee-iee-cycle.js: ReferenceError: exports is not defined at test/language/module-code/instn-iee-iee-cycle.js:35:28(5)",
  "test/language/module-code/instn-iee-star-cycle.js-strict:true": "test/language/module-code/instn-iee-star-cycle.js: ReferenceError: exports is not defined at test/language/module-code/instn-iee-star-cycle.js:38:28(11)",
  "test/language/module-code/instn-iee-trlng-comma.js-strict:true": "test/language/module-code/instn-iee-trlng-comma.js: ReferenceError: exports is not defined at test/language/module-code/instn-iee-trlng-comma.js:14:28(5)",
  "test/language/module-code/instn-local-bndng-cls.js-strict:true": "test/language/module-code/instn-local-bndng-cls.js: Test262Error: Binding is created but not initialized. Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/module-code/instn-local-bndng-const.js-strict:true": "test/language/module-code/instn-local-bndng-const.js: SyntaxError: test/language/module-code/instn-local-bndng-const.js: \"test262\" is read-only\n  35 | \n  36 | assert.throws(TypeError, function() {\n\u003e 37 |   test262 = null;\n     |   ^\n  38 | });\n  39 | \n  40 | assert.sameValue(test262, 23, 'binding is not mutable'); at \u003ceval\u003e:2:28542(114)",
  "test/language/module-code/instn-local-bndng-export-cls.js-strict:true": "test/language/module-code/instn-local-bndng-export-cls.js: ReferenceError: exports is not defined at test/language/module-code/instn-local-bndng-export-cls.js:20:28(10)",
  "test/language/module-code/instn-local-bndng-export-const.js-strict:true": "test/language/module-code/instn-local-bndng-export-const.js: ReferenceError: exports is not defined at test/language/module-code/instn-local-bndng-export-const.js:19:28(5)",
  "test/language/module-code/instn-local-bndng-export-fun.js-strict:true": "test/language/module-code/instn-local-bndng-export-fun.js: ReferenceError: exports is not defined at test/language/module-code/instn-local-bndng-export-fun.js:20:28(9)",
  "test/language/module-code/instn-local-bndng-export-gen.js-strict:true": "test/language/module-code/instn-local-bndng-export-gen.js: test/language/module-code/instn-local-bndng-export-gen.js: Line 33:290 Unexpected token * (and 2 more errors)",
  "test/language/module-code/instn-local-bndng-export-let.js-strict:true": "test/language/module-code/instn-local-bndng-export-let.js: ReferenceError: exports is not defined at test/language/module-code/instn-local-bndng-export-let.js:19:28(5)",
  "test/language/module-code/instn-local-bndng-export-var.js-strict:true": "test/language/module-code/instn-local-bndng-export-var.js: ReferenceError: exports is not defined at test/language/module-code/instn-local-bndng-export-var.js:20:28(5)",
  "test/language/module-code/instn-local-bndng-for.js-strict:true": "test/language/module-code/instn-local-bndng-for.js: Test262Error: Expected SameValue(«[object Object]», «undefined») to be true at harness/sta.js:22:9(49)",
  "test/language/module-code/instn-local-bndng-fun.js-strict:true": "test/language/module-code/instn-local-bndng-fun.js: Test262Error: Expected SameValue(«[object Object]», «undefined») to be true at harness/sta.js:22:9(49)",
  "test/language/module-code/instn-local-bndng-gen.js-strict:true": "test/language/module-code/instn-local-bndng-gen.js: test/language/module-code/instn-local-bndng-gen.js: Line 42:9 Unexpected token * (and 2 more errors)",
  "test/language/module-code/instn-local-bndng-let.js-strict:true": "test/language/module-code/instn-local-bndng-let.js: Test262Error: Binding is created but not initialized. Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/module-code/instn-local-bndng-var.js-strict:true": "test/language/module-code/instn-local-bndng-var.js: Test262Error: Expected SameValue(«[object Object]», «undefined») to be true at harness/sta.js:22:9(49)",
  "test/language/module-code/instn-named-bndng-cls.js-strict:true": "test/language/module-code/instn-named-bndng-cls.js: ReferenceError: exports is not defined at test/language/module-code/instn-named-bndng-cls.js:40:28(10)",
  "test/language/module-code/instn-named-bndng-const.js-strict:true": "test/language/module-code/instn-named-bndng-const.js: ReferenceError: exports is not defined at test/language/module-code/instn-named-bndng-const.js:40:28(5)",
  "test/language/module-code/instn-named-bndng-dflt-cls.js-strict:true": "test/language/module-code/instn-named-bndng-dflt-cls.js: ReferenceError: exports is not defined at test/language/module-code/instn-named-bndng-dflt-cls.js:33:28(16)",
  "test/language/module-code/instn-named-bndng-dflt-expr.js-strict:true": "test/language/module-code/instn-named-bndng-dflt-expr.js: ReferenceError: exports is not defined at test/language/module-code/instn-named-bndng-dflt-expr.js:31:28(10)",
  "test/language/module-code/instn-named-bndng-dflt-fun-anon.js-strict:true": "test/language/module-code/instn-named-bndng-dflt-fun-anon.js: ReferenceError: exports is not defined at test/language/module-code/instn-named-bndng-dflt-fun-anon.js:45:28(10)",
  "test/language/module-code/instn-named-bndng-dflt-fun-named.js-strict:true": "test/language/module-code/instn-named-bndng-dflt-fun-named.js: ReferenceError: exports is not defined at test/language/module-code/instn-named-bndng-dflt-fun-named.js:45:28(15)",
  "test/language/module-code/instn-named-bndng-dflt-named.js-strict:true": "test/language/module-code/instn-named-bndng-dflt-named.js: ReferenceError: exports is not defined at test/language/module-code/instn-named-bndng-dflt-named.js:18:28(11)",
  "test/language/module-code/instn-named-bndng-dflt-star.js-strict:true": "test/language/module-code/instn-named-bndng-dflt-star.js: ReferenceError: exports is not defined at test/language/module-code/instn-named-bndng-dflt-star.js:19:28(11)",
  "test/language/module-code/instn-named-bndng-fun.js-strict:true": "test/language/module-code/instn-named-bndng-fun.js: SyntaxError: test/language/module-code/instn-named-bndng-fun.js: \"f2\" is read-only\n  50 | \n  51 | assert.throws(TypeError, function() {\n\u003e 52 |   f2 = null;\n     |   ^\n  53 | }, 'binding rejects assignment');\n  54 | \n  55 | assert.sameValue(f2(), 23, 'binding value is immutable'); at \u003ceval\u003e:2:28542(114)",
  "test/language/module-code/instn-named-bndng-let.js-strict:true": "test/language/module-code/instn-named-bndng-let.js: ReferenceError: exports is not defined at test/language/module-code/instn-named-bndng-let.js:40:28(5)",
  "test/language/module-code/instn-named-bndng-trlng-comma.js-strict:true": "test/language/module-code/instn-named-bndng-trlng-comma.js: SyntaxError: test/language/module-code/instn-named-bndng-trlng-comma.js: \"y\" is read-only\n  47 | \n  48 | assert.throws(TypeError, function() {\n\u003e 49 |   y = null;\n     |   ^\n  50 | }, 'binding rejects assignment');\n  51 | \n  52 | assert.sameValue(y, undefined, 'binding value is immutable'); at \u003ceval\u003e:2:28542(114)",
  "test/language/module-code/instn-named-bndng-var.js-strict:true": "test/language/module-code/instn-named-bndng-var.js: SyntaxError: test/language/module-code/instn-named-bndng-var.js: \"y\" is read-only\n  45 | \n  46 | assert.throws(TypeError, function() {\n\u003e 47 |   y = null;\n     |   ^\n  48 | }, 'binding rejects assignment');\n  49 | \n  50 | assert.sameValue(y, undefined, 'binding value is immutable'); at \u003ceval\u003e:2:28542(114)",
  "test/language/module-code/instn-named-err-ambiguous-as.js-strict:true": "test/language/module-code/instn-named-err-ambiguous-as.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/instn-named-err-ambiguous.js-strict:true": "test/language/module-code/instn-named-err-ambiguous.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/instn-named-err-dflt-thru-star-as.js-strict:true": "test/language/module-code/instn-named-err-dflt-thru-star-as.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/instn-named-err-dflt-thru-star-dflt.js-strict:true": "test/language/module-code/instn-named-err-dflt-thru-star-dflt.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/instn-named-err-not-found-as.js-strict:true": "test/language/module-code/instn-named-err-not-found-as.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/instn-named-err-not-found-dflt.js-strict:true": "test/language/module-code/instn-named-err-not-found-dflt.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/instn-named-err-not-found.js-strict:true": "test/language/module-code/instn-named-err-not-found.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/instn-named-id-name.js-strict:true": "test/language/module-code/instn-named-id-name.js: ReferenceError: exports is not defined at test/language/module-code/instn-named-id-name.js:14:28(18)",
  "test/language/module-code/instn-named-iee-cycle.js-strict:true": "test/language/module-code/instn-named-iee-cycle.js: ReferenceError: exports is not defined at test/language/module-code/instn-named-iee-cycle.js:44:28(5)",
  "test/language/module-code/instn-named-star-cycle.js-strict:true": "test/language/module-code/instn-named-star-cycle.js: ReferenceError: require is not defined at test/language/module-code/instn-named-star-cycle.js:49:44(4)",
  "test/language/module-code/instn-once.js-strict:true": "test/language/module-code/instn-once.js: SyntaxError: test/language/module-code/instn-once.js: Unexpected token (35:9)\n  33 | import dflt2, {} from './instn-once.js';\n  34 | export * from './instn-once.js';\n\u003e 35 | export * as ns2 from './instn-once.js';\n     |          ^\n  36 | import dflt3, * as ns from './instn-once.js';\n  37 | export default null;\n  38 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/module-code/instn-resolve-empty-export.js-strict:true": "test/language/module-code/instn-resolve-empty-export.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/instn-resolve-empty-import.js-strict:true": "test/language/module-code/instn-resolve-empty-import.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/instn-resolve-err-syntax-1.js-strict:true": "test/language/module-code/instn-resolve-err-syntax-1.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/instn-resolve-err-syntax-2.js-strict:true": "test/language/module-code/instn-resolve-err-syntax-2.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/instn-resolve-order-depth.js-strict:true": "test/language/module-code/instn-resolve-order-depth.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/instn-resolve-order-src.js-strict:true": "test/language/module-code/instn-resolve-order-src.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/instn-same-global.js-strict:true": "test/language/module-code/instn-same-global.js: ReferenceError: require is not defined at test/language/module-code/instn-same-global.js:16:8(3)",
  "test/language/module-code/instn-star-ambiguous.js-strict:true": "test/language/module-code/instn-star-ambiguous.js: ReferenceError: require is not defined at test/language/module-code/instn-star-ambiguous.js:32:42(10)",
  "test/language/module-code/instn-star-as-props-dflt-skip.js-strict:true": "test/language/module-code/instn-star-as-props-dflt-skip.js: ReferenceError: require is not defined at test/language/module-code/instn-star-as-props-dflt-skip.js:48:57(5)",
  "test/language/module-code/instn-star-binding.js-strict:true": "test/language/module-code/instn-star-binding.js: SyntaxError: test/language/module-code/instn-star-binding.js: \"ns\" is read-only\n  25 | \n  26 | assert.throws(TypeError, function() {\n\u003e 27 |   ns = null;\n     |   ^\n  28 | }, 'binding rejects assignment');\n  29 | \n  30 | assert.sameValue(ns, original, 'binding value is immutable'); at \u003ceval\u003e:2:28542(114)",
  "test/language/module-code/instn-star-equality.js-strict:true": "test/language/module-code/instn-star-equality.js: ReferenceError: require is not defined at test/language/module-code/instn-star-equality.js:28:33(15)",
  "test/language/module-code/instn-star-err-not-found.js-strict:true": "test/language/module-code/instn-star-err-not-found.js: unexpected error type (ReferenceError), expected (SyntaxError)",
  "test/language/module-code/instn-star-id-name.js-strict:true": "test/language/module-code/instn-star-id-name.js: ReferenceError: exports is not defined at test/language/module-code/instn-star-id-name.js:15:28(18)",
  "test/language/module-code/instn-star-iee-cycle.js-strict:true": "test/language/module-code/instn-star-iee-cycle.js: ReferenceError: exports is not defined at test/language/module-code/instn-star-iee-cycle.js:39:28(11)",
  "test/language/module-code/instn-star-props-circular.js-strict:true": "test/language/module-code/instn-star-props-circular.js: ReferenceError: require is not defined at test/language/module-code/instn-star-props-circular.js:34:47(12)",
  "test/language/module-code/instn-star-props-dflt-keep-indirect.js-strict:true": "test/language/module-code/instn-star-props-dflt-keep-indirect.js: ReferenceError: require is not defined at test/language/module-code/instn-star-props-dflt-keep-indirect.js:34:62(10)",
  "test/language/module-code/instn-star-props-dflt-keep-local.js-strict:true": "test/language/module-code/instn-star-props-dflt-keep-local.js: ReferenceError: require is not defined at test/language/module-code/instn-star-props-dflt-keep-local.js:34:56(12)",
  "test/language/module-code/instn-star-props-dflt-skip.js-strict:true": "test/language/module-code/instn-star-props-dflt-skip.js: ReferenceError: require is not defined at test/language/module-code/instn-star-props-dflt-skip.js:35:55(12)",
  "test/language/module-code/instn-star-props-nrml.js-strict:true": "test/language/module-code/instn-star-props-nrml.js: ReferenceError: require is not defined at test/language/module-code/instn-star-props-nrml.js:32:43(10)",
  "test/language/module-code/instn-star-star-cycle.js-strict:true": "test/language/module-code/instn-star-star-cycle.js: ReferenceError: require is not defined at test/language/module-code/instn-star-star-cycle.js:45:43(10)",
  "test/language/module-code/namespace/Symbol.iterator.js-strict:true": "test/language/module-code/namespace/Symbol.iterator.js: ReferenceError: require is not defined at test/language/module-code/namespace/Symbol.iterator.js:11:30(10)",
  "test/language/module-code/namespace/Symbol.toStringTag.js-strict:true": "test/language/module-code/namespace/Symbol.toStringTag.js: ReferenceError: require is not defined at test/language/module-code/namespace/Symbol.toStringTag.js:19:33(11)",
  "test/language/module-code/namespace/internals/define-own-property.js-strict:true": "test/language/module-code/namespace/internals/define-own-property.js: ReferenceError: exports is not defined at test/language/module-code/namespace/internals/define-own-property.js:11:28(18)",
  "test/language/module-code/namespace/internals/delete-exported-init.js-strict:true": "test/language/module-code/namespace/internals/delete-exported-init.js: ReferenceError: exports is not defined at test/language/module-code/namespace/internals/delete-exported-init.js:15:28(12)",
  "test/language/module-code/namespace/internals/delete-exported-uninit.js-strict:true": "test/language/module-code/namespace/internals/delete-exported-uninit.js: ReferenceError: exports is not defined at test/language/module-code/namespace/internals/delete-exported-uninit.js:15:28(12)",
  "test/language/module-code/namespace/internals/delete-non-exported.js-strict:true": "test/language/module-code/namespace/internals/delete-non-exported.js: ReferenceError: require is not defined at test/language/module-code/namespace/internals/delete-non-exported.js:19:33(11)",
  "test/language/module-code/namespace/internals/enumerate-binding-uninit.js-strict:true": "test/language/module-code/namespace/internals/enumerate-binding-uninit.js: ReferenceError: exports is not defined at test/language/module-code/namespace/internals/enumerate-binding-uninit.js:33:28(10)",
  "test/language/module-code/namespace/internals/get-nested-namespace-dflt-skip.js-strict:true": "test/language/module-code/namespace/internals/get-nested-namespace-dflt-skip.js: ReferenceError: require is not defined at test/language/module-code/namespace/internals/get-nested-namespace-dflt-skip.js:33:55(12)",
  "test/language/module-code/namespace/internals/get-nested-namespace-props-nrml.js-strict:true": "test/language/module-code/namespace/internals/get-nested-namespace-props-nrml.js: ReferenceError: require is not defined at test/language/module-code/namespace/internals/get-nested-namespace-props-nrml.js:32:52(10)",
  "test/language/module-code/namespace/internals/get-own-property-str-found-init.js-strict:true": "test/language/module-code/namespace/internals/get-own-property-str-found-init.js: ReferenceError: exports is not defined at test/language/module-code/namespace/internals/get-own-property-str-found-init.js:17:28(13)",
  "test/language/module-code/namespace/internals/get-own-property-str-found-uninit.js-strict:true": "test/language/module-code/namespace/internals/get-own-property-str-found-uninit.js: ReferenceError: exports is not defined at test/language/module-code/namespace/internals/get-own-property-str-found-uninit.js:16:28(12)",
  "test/language/module-code/namespace/internals/get-own-property-str-not-found.js-strict:true": "test/language/module-code/namespace/internals/get-own-property-str-not-found.js: ReferenceError: exports is not defined at test/language/module-code/namespace/internals/get-own-property-str-not-found.js:14:28(12)",
  "test/language/module-code/namespace/internals/get-own-property-sym.js-strict:true": "test/language/module-code/namespace/internals/get-own-property-sym.js: ReferenceError: require is not defined at test/language/module-code/namespace/internals/get-own-property-sym.js:12:33(12)",
  "test/language/module-code/namespace/internals/get-prototype-of.js-strict:true": "test/language/module-code/namespace/internals/get-prototype-of.js: ReferenceError: require is not defined at test/language/module-code/namespace/internals/get-prototype-of.js:10:30(10)",
  "test/language/module-code/namespace/internals/get-str-found-init.js-strict:true": "test/language/module-code/namespace/internals/get-str-found-init.js: ReferenceError: exports is not defined at test/language/module-code/namespace/internals/get-str-found-init.js:14:28(12)",
  "test/language/module-code/namespace/internals/get-str-found-uninit.js-strict:true": "test/language/module-code/namespace/internals/get-str-found-uninit.js: ReferenceError: exports is not defined at test/language/module-code/namespace/internals/get-str-found-uninit.js:15:28(12)",
  "test/language/module-code/namespace/internals/get-str-initialize.js-strict:true": "test/language/module-code/namespace/internals/get-str-initialize.js: ReferenceError: exports is not defined at test/language/module-code/namespace/internals/get-str-initialize.js:14:28(12)",
  "test/language/module-code/namespace/internals/get-str-not-found.js-strict:true": "test/language/module-code/namespace/internals/get-str-not-found.js: ReferenceError: exports is not defined at test/language/module-code/namespace/internals/get-str-not-found.js:14:28(11)",
  "test/language/module-code/namespace/internals/get-str-update.js-strict:true": "test/language/module-code/namespace/internals/get-str-update.js: ReferenceError: exports is not defined at test/language/module-code/namespace/internals/get-str-update.js:12:28(12)",
  "test/language/module-code/namespace/internals/get-sym-found.js-strict:true": "test/language/module-code/namespace/internals/get-sym-found.js: ReferenceError: require is not defined at test/language/module-code/namespace/internals/get-sym-found.js:17:27(10)",
  "test/language/module-code/namespace/internals/get-sym-not-found.js-strict:true": "test/language/module-code/namespace/internals/get-sym-not-found.js: ReferenceError: require is not defined at test/language/module-code/namespace/internals/get-sym-not-found.js:17:30(10)",
  "test/language/module-code/namespace/internals/has-property-str-found-init.js-strict:true": "test/language/module-code/namespace/internals/has-property-str-found-init.js: ReferenceError: exports is not defined at test/language/module-code/namespace/internals/has-property-str-found-init.js:15:28(12)",
  "test/language/module-code/namespace/internals/has-property-str-found-uninit.js-strict:true": "test/language/module-code/namespace/internals/has-property-str-found-uninit.js: ReferenceError: exports is not defined at test/language/module-code/namespace/internals/has-property-str-found-uninit.js:16:28(12)",
  "test/language/module-code/namespace/internals/has-property-str-not-found.js-strict:true": "test/language/module-code/namespace/internals/has-property-str-not-found.js: ReferenceError: exports is not defined at test/language/module-code/namespace/internals/has-property-str-not-found.js:16:28(11)",
  "test/language/module-code/namespace/internals/has-property-sym-found.js-strict:true": "test/language/module-code/namespace/internals/has-property-sym-found.js: ReferenceError: require is not defined at test/language/module-code/namespace/internals/has-property-sym-found.js:15:35(10)",
  "test/language/module-code/namespace/internals/has-property-sym-not-found.js-strict:true": "test/language/module-code/namespace/internals/has-property-sym-not-found.js: ReferenceError: require is not defined at test/language/module-code/namespace/internals/has-property-sym-not-found.js:15:38(11)",
  "test/language/module-code/namespace/internals/is-extensible.js-strict:true": "test/language/module-code/namespace/internals/is-extensible.js: ReferenceError: require is not defined at test/language/module-code/namespace/internals/is-extensible.js:10:28(10)",
  "test/language/module-code/namespace/internals/object-hasOwnProperty-binding-uninit.js-strict:true": "test/language/module-code/namespace/internals/object-hasOwnProperty-binding-uninit.js: ReferenceError: exports is not defined at test/language/module-code/namespace/internals/object-hasOwnProperty-binding-uninit.js:35:28(10)",
  "test/language/module-code/namespace/internals/object-keys-binding-uninit.js-strict:true": "test/language/module-code/namespace/internals/object-keys-binding-uninit.js: ReferenceError: exports is not defined at test/language/module-code/namespace/internals/object-keys-binding-uninit.js:38:28(10)",
  "test/language/module-code/namespace/internals/object-propertyIsEnumerable-binding-uninit.js-strict:true": "test/language/module-code/namespace/internals/object-propertyIsEnumerable-binding-uninit.js: ReferenceError: exports is not defined at test/language/module-code/namespace/internals/object-propertyIsEnumerable-binding-uninit.js:31:28(10)",
  "test/language/module-code/namespace/internals/own-property-keys-binding-types.js-strict:true": "test/language/module-code/namespace/internals/own-property-keys-binding-types.js: ReferenceError: exports is not defined at test/language/module-code/namespace/internals/own-property-keys-binding-types.js:20:28(18)",
  "test/language/module-code/namespace/internals/own-property-keys-sort.js-strict:true": "test/language/module-code/namespace/internals/own-property-keys-sort.js: ReferenceError: exports is not defined at test/language/module-code/namespace/internals/own-property-keys-sort.js:15:28(13)",
  "test/language/module-code/namespace/internals/prevent-extensions.js-strict:true": "test/language/module-code/namespace/internals/prevent-extensions.js: ReferenceError: require is not defined at test/language/module-code/namespace/internals/prevent-extensions.js:11:33(10)",
  "test/language/module-code/namespace/internals/set-prototype-of-null.js-strict:true": "test/language/module-code/namespace/internals/set-prototype-of-null.js: ReferenceError: require is not defined at test/language/module-code/namespace/internals/set-prototype-of-null.js:12:34(10)",
  "test/language/module-code/namespace/internals/set-prototype-of.js-strict:true": "test/language/module-code/namespace/internals/set-prototype-of.js: ReferenceError: require is not defined at test/language/module-code/namespace/internals/set-prototype-of.js:10:30(11)",
  "test/language/module-code/namespace/internals/set.js-strict:true": "test/language/module-code/namespace/internals/set.js: ReferenceError: exports is not defined at test/language/module-code/namespace/internals/set.js:11:28(13)",
  "test/language/module-code/parse-err-hoist-lex-fun.js-strict:true": "test/language/module-code/parse-err-hoist-lex-fun.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/module-code/parse-export-empty.js-strict:true": "test/language/module-code/parse-export-empty.js: ReferenceError: exports is not defined at test/language/module-code/parse-export-empty.js:26:28(3)",
  "test/language/module-code/privatename-valid-no-earlyerr.js-strict:true": "test/language/module-code/privatename-valid-no-earlyerr.js: SyntaxError: test/language/module-code/privatename-valid-no-earlyerr.js: Unexpected character '#' (33:2)\n  31 | \n  32 | class outer {\n\u003e 33 |   #x = 42;\n     |   ^\n  34 | \n  35 |   f() {\n  36 |     var self = this; at \u003ceval\u003e:2:28542(114)",
  "test/language/reserved-words/await-module.js-strict:true": "test/language/reserved-words/await-module.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/reserved-words/ident-reference-false.js-strict:true": "test/language/reserved-words/ident-reference-false.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/reserved-words/ident-reference-null.js-strict:true": "test/language/reserved-words/ident-reference-null.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/reserved-words/ident-reference-true.js-strict:true": "test/language/reserved-words/ident-reference-true.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/rest-parameters/array-pattern.js-strict:true": "test/language/rest-parameters/array-pattern.js: SyntaxError: test/language/rest-parameters/array-pattern.js: Unexpected token (16:18)\n  14 | ---*/\n  15 | \n\u003e 16 | function empty(...[]) {}\n     |                   ^\n  17 | \n  18 | function emptyWithArray(...[[]]) {}\n  19 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/rest-parameters/object-pattern.js-strict:true": "test/language/rest-parameters/object-pattern.js: SyntaxError: test/language/rest-parameters/object-pattern.js: Unexpected token (16:18)\n  14 | ---*/\n  15 | \n\u003e 16 | function empty(...{}) {}\n     |                   ^\n  17 | \n  18 | function emptyWithArray(...{p: []}) {}\n  19 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statementList/eval-block-arrow-function-assignment-expr.js-strict:true": "test/language/statementList/eval-block-arrow-function-assignment-expr.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:4 Unexpected token ) (and 1 more errors) at test/language/statementList/eval-block-arrow-function-assignment-expr.js:56:18(4)",
  "test/language/statementList/eval-block-arrow-function-functionbody.js-strict:true": "test/language/statementList/eval-block-arrow-function-functionbody.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:4 Unexpected token ) (and 3 more errors) at test/language/statementList/eval-block-arrow-function-functionbody.js:56:18(4)",
  "test/language/statementList/eval-block-expr-arrow-function-boolean-literal.js-strict:true": "test/language/statementList/eval-block-expr-arrow-function-boolean-literal.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:4 Unexpected token ) (and 1 more errors) at test/language/statementList/eval-block-expr-arrow-function-boolean-literal.js:58:18(4)",
  "test/language/statementList/eval-block-let-declaration.js-strict:true": "test/language/statementList/eval-block-let-declaration.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:7 Unexpected identifier (and 1 more errors) at test/language/statementList/eval-block-let-declaration.js:39:18(4)",
  "test/language/statementList/eval-block-with-statment-arrow-function-assignment-expr.js-strict:true": "test/language/statementList/eval-block-with-statment-arrow-function-assignment-expr.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:16 Unexpected token ) (and 1 more errors) at test/language/statementList/eval-block-with-statment-arrow-function-assignment-expr.js:57:18(5)",
  "test/language/statementList/eval-block-with-statment-arrow-function-functionbody.js-strict:true": "test/language/statementList/eval-block-with-statment-arrow-function-functionbody.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:16 Unexpected token ) (and 3 more errors) at test/language/statementList/eval-block-with-statment-arrow-function-functionbody.js:57:18(5)",
  "test/language/statementList/eval-block-with-statment-block.js-strict:true": "test/language/statementList/eval-block-with-statment-block.js: Test262Error: Expected SameValue(«undefined», «3000») to be true at harness/sta.js:22:9(49)",
  "test/language/statementList/eval-block-with-statment-expr-arrow-function-boolean-literal.js-strict:true": "test/language/statementList/eval-block-with-statment-expr-arrow-function-boolean-literal.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:16 Unexpected token ) (and 1 more errors) at test/language/statementList/eval-block-with-statment-expr-arrow-function-boolean-literal.js:59:18(5)",
  "test/language/statementList/eval-block-with-statment-let-declaration.js-strict:true": "test/language/statementList/eval-block-with-statment-let-declaration.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:19 Unexpected identifier (and 1 more errors) at test/language/statementList/eval-block-with-statment-let-declaration.js:40:18(5)",
  "test/language/statementList/eval-class-array-literal-with-item.js-strict:true": "test/language/statementList/eval-class-array-literal-with-item.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected reserved word at test/language/statementList/eval-class-array-literal-with-item.js:41:18(4)",
  "test/language/statementList/eval-class-array-literal.js-strict:true": "test/language/statementList/eval-class-array-literal.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected reserved word at test/language/statementList/eval-class-array-literal.js:41:18(4)",
  "test/language/statementList/eval-class-arrow-function-assignment-expr.js-strict:true": "test/language/statementList/eval-class-arrow-function-assignment-expr.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected reserved word at test/language/statementList/eval-class-arrow-function-assignment-expr.js:51:18(4)",
  "test/language/statementList/eval-class-arrow-function-functionbody.js-strict:true": "test/language/statementList/eval-class-arrow-function-functionbody.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected reserved word (and 2 more errors) at test/language/statementList/eval-class-arrow-function-functionbody.js:51:18(4)",
  "test/language/statementList/eval-class-block-with-labels.js-strict:true": "test/language/statementList/eval-class-block-with-labels.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected reserved word at test/language/statementList/eval-class-block-with-labels.js:37:18(4)",
  "test/language/statementList/eval-class-block.js-strict:true": "test/language/statementList/eval-class-block.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected reserved word at test/language/statementList/eval-class-block.js:37:18(4)",
  "test/language/statementList/eval-class-expr-arrow-function-boolean-literal.js-strict:true": "test/language/statementList/eval-class-expr-arrow-function-boolean-literal.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected reserved word at test/language/statementList/eval-class-expr-arrow-function-boolean-literal.js:53:18(4)",
  "test/language/statementList/eval-class-let-declaration.js-strict:true": "test/language/statementList/eval-class-let-declaration.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected reserved word at test/language/statementList/eval-class-let-declaration.js:35:18(4)",
  "test/language/statementList/eval-class-regexp-literal-flags.js-strict:true": "test/language/statementList/eval-class-regexp-literal-flags.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected reserved word at test/language/statementList/eval-class-regexp-literal-flags.js:39:18(4)",
  "test/language/statementList/eval-class-regexp-literal.js-strict:true": "test/language/statementList/eval-class-regexp-literal.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected reserved word at test/language/statementList/eval-class-regexp-literal.js:39:18(4)",
  "test/language/statementList/eval-fn-arrow-function-assignment-expr.js-strict:true": "test/language/statementList/eval-fn-arrow-function-assignment-expr.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:18 Unexpected token ) (and 1 more errors) at test/language/statementList/eval-fn-arrow-function-assignment-expr.js:53:18(4)",
  "test/language/statementList/eval-fn-arrow-function-functionbody.js-strict:true": "test/language/statementList/eval-fn-arrow-function-functionbody.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:18 Unexpected token ) (and 3 more errors) at test/language/statementList/eval-fn-arrow-function-functionbody.js:53:18(4)",
  "test/language/statementList/eval-fn-expr-arrow-function-boolean-literal.js-strict:true": "test/language/statementList/eval-fn-expr-arrow-function-boolean-literal.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:18 Unexpected token ) (and 1 more errors) at test/language/statementList/eval-fn-expr-arrow-function-boolean-literal.js:55:18(4)",
  "test/language/statementList/eval-fn-let-declaration.js-strict:true": "test/language/statementList/eval-fn-let-declaration.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:21 Unexpected identifier (and 1 more errors) at test/language/statementList/eval-fn-let-declaration.js:36:18(4)",
  "test/language/statements/async-function/cptn-decl.js-strict:true": "test/language/statements/async-function/cptn-decl.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:7 Unexpected token function (and 2 more errors) at test/language/statements/async-function/cptn-decl.js:13:22(5)",
  "test/language/statements/async-function/declaration-returns-promise.js-strict:true": "test/language/statements/async-function/declaration-returns-promise.js: test/language/statements/async-function/declaration-returns-promise.js: Line 12:7 Unexpected token function (and 3 more errors)",
  "test/language/statements/async-function/early-errors-declaration-formals-body-duplicate.js-strict:true": "test/language/statements/async-function/early-errors-declaration-formals-body-duplicate.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/statements/async-function/evaluation-body.js-strict:true": "test/language/statements/async-function/evaluation-body.js: test/language/statements/async-function/evaluation-body.js: Line 13:7 Unexpected token function (and 3 more errors)",
  "test/language/statements/async-function/syntax-declaration-line-terminators-allowed.js-strict:true": "test/language/statements/async-function/syntax-declaration-line-terminators-allowed.js: test/language/statements/async-function/syntax-declaration-line-terminators-allowed.js: Line 12:7 Unexpected token function",
  "test/language/statements/async-generator/dflt-params-abrupt.js-strict:true": "test/language/statements/async-generator/dflt-params-abrupt.js: SyntaxError: test/language/statements/async-generator/dflt-params-abrupt.js: Unexpected token (34:14)\n  32 | \n  33 | var callCount = 0;\n\u003e 34 | async function* f(_ = (function() { throw new Test262Error(); }())) {\n     |               ^\n  35 |   \n  36 |   callCount = callCount + 1;\n  37 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dflt-params-ref-later.js-strict:true": "test/language/statements/async-generator/dflt-params-ref-later.js: SyntaxError: test/language/statements/async-generator/dflt-params-ref-later.js: Unexpected token (35:14)\n  33 | \n  34 | var callCount = 0;\n\u003e 35 | async function* f(x = y, y) {\n     |               ^\n  36 |   \n  37 |   callCount = callCount + 1;\n  38 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dflt-params-ref-self.js-strict:true": "test/language/statements/async-generator/dflt-params-ref-self.js: SyntaxError: test/language/statements/async-generator/dflt-params-ref-self.js: Unexpected token (35:14)\n  33 | \n  34 | var callCount = 0;\n\u003e 35 | async function* f(x = x) {\n     |               ^\n  36 |   \n  37 |   callCount = callCount + 1;\n  38 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/statements/async-generator/dstr/ary-init-iter-get-err-array-prototype.js: SyntaxError: test/language/statements/async-generator/dstr/ary-init-iter-get-err-array-prototype.js: Unexpected token (39:14)\n  37 | \n  38 | \n\u003e 39 | async function* f([x, y, z]) {\n     |               ^\n  40 |   \n  41 | };\n  42 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/ary-init-iter-get-err.js-strict:true": "test/language/statements/async-generator/dstr/ary-init-iter-get-err.js: SyntaxError: test/language/statements/async-generator/dstr/ary-init-iter-get-err.js: Unexpected token (33:14)\n  31 | \n  32 | \n\u003e 33 | async function* f([x]) {\n     |               ^\n  34 |   \n  35 | };\n  36 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/ary-ptrn-elem-ary-val-null.js-strict:true": "test/language/statements/async-generator/dstr/ary-ptrn-elem-ary-val-null.js: SyntaxError: test/language/statements/async-generator/dstr/ary-ptrn-elem-ary-val-null.js: Unexpected token (40:14)\n  38 | \n  39 | \n\u003e 40 | async function* f([[x]]) {\n     |               ^\n  41 |   \n  42 | };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/ary-ptrn-elem-id-init-throws.js-strict:true": "test/language/statements/async-generator/dstr/ary-ptrn-elem-id-init-throws.js: SyntaxError: test/language/statements/async-generator/dstr/ary-ptrn-elem-id-init-throws.js: Unexpected token (31:14)\n  29 | \n  30 | \n\u003e 31 | async function* f([x = (function() { throw new Test262Error(); })()]) {\n     |               ^\n  32 |   \n  33 | };\n  34 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/ary-ptrn-elem-id-init-unresolvable.js-strict:true": "test/language/statements/async-generator/dstr/ary-ptrn-elem-id-init-unresolvable.js: SyntaxError: test/language/statements/async-generator/dstr/ary-ptrn-elem-id-init-unresolvable.js: Unexpected token (38:14)\n  36 | \n  37 | \n\u003e 38 | async function* f([ x = unresolvableReference ]) {\n     |               ^\n  39 |   \n  40 | };\n  41 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/ary-ptrn-elem-id-iter-step-err.js-strict:true": "test/language/statements/async-generator/dstr/ary-ptrn-elem-id-iter-step-err.js: SyntaxError: test/language/statements/async-generator/dstr/ary-ptrn-elem-id-iter-step-err.js: Unexpected token (40:14)\n  38 | \n  39 | \n\u003e 40 | async function* f([x]) {\n     |               ^\n  41 |   \n  42 | };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/ary-ptrn-elem-id-iter-val-err.js-strict:true": "test/language/statements/async-generator/dstr/ary-ptrn-elem-id-iter-val-err.js: SyntaxError: test/language/statements/async-generator/dstr/ary-ptrn-elem-id-iter-val-err.js: Unexpected token (51:14)\n  49 | \n  50 | \n\u003e 51 | async function* f([x]) {\n     |               ^\n  52 |   \n  53 | };\n  54 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/ary-ptrn-elem-obj-val-null.js-strict:true": "test/language/statements/async-generator/dstr/ary-ptrn-elem-obj-val-null.js: SyntaxError: test/language/statements/async-generator/dstr/ary-ptrn-elem-obj-val-null.js: Unexpected token (40:14)\n  38 | \n  39 | \n\u003e 40 | async function* f([{ x }]) {\n     |               ^\n  41 |   \n  42 | };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/ary-ptrn-elem-obj-val-undef.js-strict:true": "test/language/statements/async-generator/dstr/ary-ptrn-elem-obj-val-undef.js: SyntaxError: test/language/statements/async-generator/dstr/ary-ptrn-elem-obj-val-undef.js: Unexpected token (40:14)\n  38 | \n  39 | \n\u003e 40 | async function* f([{ x }]) {\n     |               ^\n  41 |   \n  42 | };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/ary-ptrn-rest-id-iter-val-err.js-strict:true": "test/language/statements/async-generator/dstr/ary-ptrn-rest-id-iter-val-err.js: SyntaxError: test/language/statements/async-generator/dstr/ary-ptrn-rest-id-iter-val-err.js: Unexpected token (46:14)\n  44 | \n  45 | \n\u003e 46 | async function* f([...x]) {\n     |               ^\n  47 |   \n  48 | };\n  49 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/dflt-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/statements/async-generator/dstr/dflt-ary-init-iter-get-err-array-prototype.js: SyntaxError: test/language/statements/async-generator/dstr/dflt-ary-init-iter-get-err-array-prototype.js: Unexpected token (39:14)\n  37 | \n  38 | \n\u003e 39 | async function* f([x, y, z] = [1, 2, 3]) {\n     |               ^\n  40 |   \n  41 | };\n  42 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/dflt-ary-init-iter-get-err.js-strict:true": "test/language/statements/async-generator/dstr/dflt-ary-init-iter-get-err.js: SyntaxError: test/language/statements/async-generator/dstr/dflt-ary-init-iter-get-err.js: Unexpected token (33:14)\n  31 | \n  32 | \n\u003e 33 | async function* f([x] = iter) {\n     |               ^\n  34 |   \n  35 | };\n  36 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/dflt-ary-ptrn-elem-ary-val-null.js-strict:true": "test/language/statements/async-generator/dstr/dflt-ary-ptrn-elem-ary-val-null.js: SyntaxError: test/language/statements/async-generator/dstr/dflt-ary-ptrn-elem-ary-val-null.js: Unexpected token (40:14)\n  38 | \n  39 | \n\u003e 40 | async function* f([[x]] = [null]) {\n     |               ^\n  41 |   \n  42 | };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/dflt-ary-ptrn-elem-id-init-throws.js-strict:true": "test/language/statements/async-generator/dstr/dflt-ary-ptrn-elem-id-init-throws.js: SyntaxError: test/language/statements/async-generator/dstr/dflt-ary-ptrn-elem-id-init-throws.js: Unexpected token (31:14)\n  29 | \n  30 | \n\u003e 31 | async function* f([x = (function() { throw new Test262Error(); })()] = [undefined]) {\n     |               ^\n  32 |   \n  33 | };\n  34 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/dflt-ary-ptrn-elem-id-init-unresolvable.js-strict:true": "test/language/statements/async-generator/dstr/dflt-ary-ptrn-elem-id-init-unresolvable.js: SyntaxError: test/language/statements/async-generator/dstr/dflt-ary-ptrn-elem-id-init-unresolvable.js: Unexpected token (38:14)\n  36 | \n  37 | \n\u003e 38 | async function* f([ x = unresolvableReference ] = []) {\n     |               ^\n  39 |   \n  40 | };\n  41 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/dflt-ary-ptrn-elem-id-iter-step-err.js-strict:true": "test/language/statements/async-generator/dstr/dflt-ary-ptrn-elem-id-iter-step-err.js: SyntaxError: test/language/statements/async-generator/dstr/dflt-ary-ptrn-elem-id-iter-step-err.js: Unexpected token (40:14)\n  38 | \n  39 | \n\u003e 40 | async function* f([x] = g) {\n     |               ^\n  41 |   \n  42 | };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/dflt-ary-ptrn-elem-id-iter-val-err.js-strict:true": "test/language/statements/async-generator/dstr/dflt-ary-ptrn-elem-id-iter-val-err.js: SyntaxError: test/language/statements/async-generator/dstr/dflt-ary-ptrn-elem-id-iter-val-err.js: Unexpected token (51:14)\n  49 | \n  50 | \n\u003e 51 | async function* f([x] = g) {\n     |               ^\n  52 |   \n  53 | };\n  54 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/dflt-ary-ptrn-elem-obj-val-null.js-strict:true": "test/language/statements/async-generator/dstr/dflt-ary-ptrn-elem-obj-val-null.js: SyntaxError: test/language/statements/async-generator/dstr/dflt-ary-ptrn-elem-obj-val-null.js: Unexpected token (40:14)\n  38 | \n  39 | \n\u003e 40 | async function* f([{ x }] = [null]) {\n     |               ^\n  41 |   \n  42 | };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/dflt-ary-ptrn-elem-obj-val-undef.js-strict:true": "test/language/statements/async-generator/dstr/dflt-ary-ptrn-elem-obj-val-undef.js: SyntaxError: test/language/statements/async-generator/dstr/dflt-ary-ptrn-elem-obj-val-undef.js: Unexpected token (40:14)\n  38 | \n  39 | \n\u003e 40 | async function* f([{ x }] = []) {\n     |               ^\n  41 |   \n  42 | };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/dflt-ary-ptrn-rest-id-iter-val-err.js-strict:true": "test/language/statements/async-generator/dstr/dflt-ary-ptrn-rest-id-iter-val-err.js: SyntaxError: test/language/statements/async-generator/dstr/dflt-ary-ptrn-rest-id-iter-val-err.js: Unexpected token (46:14)\n  44 | \n  45 | \n\u003e 46 | async function* f([...x] = iter) {\n     |               ^\n  47 |   \n  48 | };\n  49 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/dflt-obj-init-null.js-strict:true": "test/language/statements/async-generator/dstr/dflt-obj-init-null.js: SyntaxError: test/language/statements/async-generator/dstr/dflt-obj-init-null.js: Unexpected token (27:14)\n  25 | \n  26 | \n\u003e 27 | async function* f({} = null) {\n     |               ^\n  28 |   \n  29 | };\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/dflt-obj-init-undefined.js-strict:true": "test/language/statements/async-generator/dstr/dflt-obj-init-undefined.js: SyntaxError: test/language/statements/async-generator/dstr/dflt-obj-init-undefined.js: Unexpected token (27:14)\n  25 | \n  26 | \n\u003e 27 | async function* f({} = undefined) {\n     |               ^\n  28 |   \n  29 | };\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/dflt-obj-ptrn-id-get-value-err.js-strict:true": "test/language/statements/async-generator/dstr/dflt-obj-ptrn-id-get-value-err.js: SyntaxError: test/language/statements/async-generator/dstr/dflt-obj-ptrn-id-get-value-err.js: Unexpected token (34:14)\n  32 | \n  33 | \n\u003e 34 | async function* f({ poisoned } = poisonedProperty) {\n     |               ^\n  35 |   \n  36 | };\n  37 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/dflt-obj-ptrn-id-init-throws.js-strict:true": "test/language/statements/async-generator/dstr/dflt-obj-ptrn-id-init-throws.js: SyntaxError: test/language/statements/async-generator/dstr/dflt-obj-ptrn-id-init-throws.js: Unexpected token (34:14)\n  32 | \n  33 | \n\u003e 34 | async function* f({ x = thrower() } = {}) {\n     |               ^\n  35 |   \n  36 | };\n  37 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/dflt-obj-ptrn-id-init-unresolvable.js-strict:true": "test/language/statements/async-generator/dstr/dflt-obj-ptrn-id-init-unresolvable.js: SyntaxError: test/language/statements/async-generator/dstr/dflt-obj-ptrn-id-init-unresolvable.js: Unexpected token (38:14)\n  36 | \n  37 | \n\u003e 38 | async function* f({ x = unresolvableReference } = {}) {\n     |               ^\n  39 |   \n  40 | };\n  41 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/dflt-obj-ptrn-list-err.js-strict:true": "test/language/statements/async-generator/dstr/dflt-obj-ptrn-list-err.js: SyntaxError: test/language/statements/async-generator/dstr/dflt-obj-ptrn-list-err.js: Unexpected token (33:14)\n  31 | \n  32 | \n\u003e 33 | async function* f({ a, b = thrower(), c = ++initCount } = {}) {\n     |               ^\n  34 |   \n  35 | };\n  36 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/dflt-obj-ptrn-prop-ary-value-null.js-strict:true": "test/language/statements/async-generator/dstr/dflt-obj-ptrn-prop-ary-value-null.js: SyntaxError: test/language/statements/async-generator/dstr/dflt-obj-ptrn-prop-ary-value-null.js: Unexpected token (29:14)\n  27 | \n  28 | \n\u003e 29 | async function* f({ w: [x, y, z] = [4, 5, 6] } = { w: null }) {\n     |               ^\n  30 |   \n  31 | };\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/dflt-obj-ptrn-prop-eval-err.js-strict:true": "test/language/statements/async-generator/dstr/dflt-obj-ptrn-prop-eval-err.js: SyntaxError: test/language/statements/async-generator/dstr/dflt-obj-ptrn-prop-eval-err.js: Unexpected token (31:14)\n  29 | \n  30 | \n\u003e 31 | async function* f({ [thrower()]: x } = {}) {\n     |               ^\n  32 |   \n  33 | };\n  34 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/dflt-obj-ptrn-prop-id-get-value-err.js-strict:true": "test/language/statements/async-generator/dstr/dflt-obj-ptrn-prop-id-get-value-err.js: SyntaxError: test/language/statements/async-generator/dstr/dflt-obj-ptrn-prop-id-get-value-err.js: Unexpected token (34:14)\n  32 | \n  33 | \n\u003e 34 | async function* f({ poisoned: x = ++initEvalCount } = poisonedProperty) {\n     |               ^\n  35 |   \n  36 | };\n  37 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/dflt-obj-ptrn-prop-id-init-throws.js-strict:true": "test/language/statements/async-generator/dstr/dflt-obj-ptrn-prop-id-init-throws.js: SyntaxError: test/language/statements/async-generator/dstr/dflt-obj-ptrn-prop-id-init-throws.js: Unexpected token (34:14)\n  32 | \n  33 | \n\u003e 34 | async function* f({ x: y = thrower() } = {}) {\n     |               ^\n  35 |   \n  36 | };\n  37 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/dflt-obj-ptrn-prop-id-init-unresolvable.js-strict:true": "test/language/statements/async-generator/dstr/dflt-obj-ptrn-prop-id-init-unresolvable.js: SyntaxError: test/language/statements/async-generator/dstr/dflt-obj-ptrn-prop-id-init-unresolvable.js: Unexpected token (38:14)\n  36 | \n  37 | \n\u003e 38 | async function* f({ x: y = unresolvableReference } = {}) {\n     |               ^\n  39 |   \n  40 | };\n  41 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/dflt-obj-ptrn-prop-obj-value-null.js-strict:true": "test/language/statements/async-generator/dstr/dflt-obj-ptrn-prop-obj-value-null.js: SyntaxError: test/language/statements/async-generator/dstr/dflt-obj-ptrn-prop-obj-value-null.js: Unexpected token (29:14)\n  27 | \n  28 | \n\u003e 29 | async function* f({ w: { x, y, z } = { x: 4, y: 5, z: 6 } } = { w: null }) {\n     |               ^\n  30 |   \n  31 | };\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/dflt-obj-ptrn-prop-obj-value-undef.js-strict:true": "test/language/statements/async-generator/dstr/dflt-obj-ptrn-prop-obj-value-undef.js: SyntaxError: test/language/statements/async-generator/dstr/dflt-obj-ptrn-prop-obj-value-undef.js: Unexpected token (29:14)\n  27 | \n  28 | \n\u003e 29 | async function* f({ w: { x, y, z } = undefined } = { }) {\n     |               ^\n  30 |   \n  31 | };\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/obj-init-null.js-strict:true": "test/language/statements/async-generator/dstr/obj-init-null.js: SyntaxError: test/language/statements/async-generator/dstr/obj-init-null.js: Unexpected token (27:14)\n  25 | \n  26 | \n\u003e 27 | async function* f({}) {\n     |               ^\n  28 |   \n  29 | };\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/obj-init-undefined.js-strict:true": "test/language/statements/async-generator/dstr/obj-init-undefined.js: SyntaxError: test/language/statements/async-generator/dstr/obj-init-undefined.js: Unexpected token (27:14)\n  25 | \n  26 | \n\u003e 27 | async function* f({}) {\n     |               ^\n  28 |   \n  29 | };\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/obj-ptrn-id-get-value-err.js-strict:true": "test/language/statements/async-generator/dstr/obj-ptrn-id-get-value-err.js: SyntaxError: test/language/statements/async-generator/dstr/obj-ptrn-id-get-value-err.js: Unexpected token (34:14)\n  32 | \n  33 | \n\u003e 34 | async function* f({ poisoned }) {\n     |               ^\n  35 |   \n  36 | };\n  37 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/obj-ptrn-id-init-throws.js-strict:true": "test/language/statements/async-generator/dstr/obj-ptrn-id-init-throws.js: SyntaxError: test/language/statements/async-generator/dstr/obj-ptrn-id-init-throws.js: Unexpected token (34:14)\n  32 | \n  33 | \n\u003e 34 | async function* f({ x = thrower() }) {\n     |               ^\n  35 |   \n  36 | };\n  37 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/obj-ptrn-id-init-unresolvable.js-strict:true": "test/language/statements/async-generator/dstr/obj-ptrn-id-init-unresolvable.js: SyntaxError: test/language/statements/async-generator/dstr/obj-ptrn-id-init-unresolvable.js: Unexpected token (38:14)\n  36 | \n  37 | \n\u003e 38 | async function* f({ x = unresolvableReference }) {\n     |               ^\n  39 |   \n  40 | };\n  41 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/obj-ptrn-list-err.js-strict:true": "test/language/statements/async-generator/dstr/obj-ptrn-list-err.js: SyntaxError: test/language/statements/async-generator/dstr/obj-ptrn-list-err.js: Unexpected token (33:14)\n  31 | \n  32 | \n\u003e 33 | async function* f({ a, b = thrower(), c = ++initCount }) {\n     |               ^\n  34 |   \n  35 | };\n  36 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/obj-ptrn-prop-ary-value-null.js-strict:true": "test/language/statements/async-generator/dstr/obj-ptrn-prop-ary-value-null.js: SyntaxError: test/language/statements/async-generator/dstr/obj-ptrn-prop-ary-value-null.js: Unexpected token (29:14)\n  27 | \n  28 | \n\u003e 29 | async function* f({ w: [x, y, z] = [4, 5, 6] }) {\n     |               ^\n  30 |   \n  31 | };\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/obj-ptrn-prop-eval-err.js-strict:true": "test/language/statements/async-generator/dstr/obj-ptrn-prop-eval-err.js: SyntaxError: test/language/statements/async-generator/dstr/obj-ptrn-prop-eval-err.js: Unexpected token (31:14)\n  29 | \n  30 | \n\u003e 31 | async function* f({ [thrower()]: x }) {\n     |               ^\n  32 |   \n  33 | };\n  34 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/obj-ptrn-prop-id-get-value-err.js-strict:true": "test/language/statements/async-generator/dstr/obj-ptrn-prop-id-get-value-err.js: SyntaxError: test/language/statements/async-generator/dstr/obj-ptrn-prop-id-get-value-err.js: Unexpected token (34:14)\n  32 | \n  33 | \n\u003e 34 | async function* f({ poisoned: x = ++initEvalCount }) {\n     |               ^\n  35 |   \n  36 | };\n  37 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/obj-ptrn-prop-id-init-throws.js-strict:true": "test/language/statements/async-generator/dstr/obj-ptrn-prop-id-init-throws.js: SyntaxError: test/language/statements/async-generator/dstr/obj-ptrn-prop-id-init-throws.js: Unexpected token (34:14)\n  32 | \n  33 | \n\u003e 34 | async function* f({ x: y = thrower() }) {\n     |               ^\n  35 |   \n  36 | };\n  37 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/obj-ptrn-prop-id-init-unresolvable.js-strict:true": "test/language/statements/async-generator/dstr/obj-ptrn-prop-id-init-unresolvable.js: SyntaxError: test/language/statements/async-generator/dstr/obj-ptrn-prop-id-init-unresolvable.js: Unexpected token (38:14)\n  36 | \n  37 | \n\u003e 38 | async function* f({ x: y = unresolvableReference }) {\n     |               ^\n  39 |   \n  40 | };\n  41 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/obj-ptrn-prop-obj-value-null.js-strict:true": "test/language/statements/async-generator/dstr/obj-ptrn-prop-obj-value-null.js: SyntaxError: test/language/statements/async-generator/dstr/obj-ptrn-prop-obj-value-null.js: Unexpected token (29:14)\n  27 | \n  28 | \n\u003e 29 | async function* f({ w: { x, y, z } = { x: 4, y: 5, z: 6 } }) {\n     |               ^\n  30 |   \n  31 | };\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/dstr/obj-ptrn-prop-obj-value-undef.js-strict:true": "test/language/statements/async-generator/dstr/obj-ptrn-prop-obj-value-undef.js: SyntaxError: test/language/statements/async-generator/dstr/obj-ptrn-prop-obj-value-undef.js: Unexpected token (29:14)\n  27 | \n  28 | \n\u003e 29 | async function* f({ w: { x, y, z } = undefined }) {\n     |               ^\n  30 |   \n  31 | };\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/eval-var-scope-syntax-err.js-strict:false": "test/language/statements/async-generator/eval-var-scope-syntax-err.js: SyntaxError: test/language/statements/async-generator/eval-var-scope-syntax-err.js: Unexpected token (29:14)\n  27 | \n  28 | var callCount = 0;\n\u003e 29 | async function* f(a = eval(\"var a = 42\")) {\n     |               ^\n  30 |   \n  31 |   callCount = callCount + 1;\n  32 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/async-generator/generator-created-after-decl-inst.js-strict:true": "test/language/statements/async-generator/generator-created-after-decl-inst.js: SyntaxError: test/language/statements/async-generator/generator-created-after-decl-inst.js: Unexpected token (21:14)\n  19 | ---*/\n  20 | \n\u003e 21 | async function* g(a = (g.prototype = null)) {}\n     |               ^\n  22 | var oldPrototype = g.prototype;\n  23 | var it = g();\n  24 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/async-gen-method-static/dflt-params-abrupt.js-strict:true": "test/language/statements/class/async-gen-method-static/dflt-params-abrupt.js: SyntaxError: test/language/statements/class/async-gen-method-static/dflt-params-abrupt.js: Unexpected token (58:15)\n  56 | var callCount = 0;\n  57 | class C {\n\u003e 58 |   static async *method(_ = (function() { throw new Test262Error(); }())) {\n     |                ^\n  59 |     \n  60 |     callCount = callCount + 1;\n  61 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/async-gen-method-static/dflt-params-ref-later.js-strict:true": "test/language/statements/class/async-gen-method-static/dflt-params-ref-later.js: SyntaxError: test/language/statements/class/async-gen-method-static/dflt-params-ref-later.js: Unexpected token (59:15)\n  57 | var callCount = 0;\n  58 | class C {\n\u003e 59 |   static async *method(x = y, y) {\n     |                ^\n  60 |     \n  61 |     callCount = callCount + 1;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/async-gen-method-static/dflt-params-ref-self.js-strict:true": "test/language/statements/class/async-gen-method-static/dflt-params-ref-self.js: SyntaxError: test/language/statements/class/async-gen-method-static/dflt-params-ref-self.js: Unexpected token (59:15)\n  57 | var callCount = 0;\n  58 | class C {\n\u003e 59 |   static async *method(x = x) {\n     |                ^\n  60 |     \n  61 |     callCount = callCount + 1;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/async-gen-method/dflt-params-abrupt.js-strict:true": "test/language/statements/class/async-gen-method/dflt-params-abrupt.js: SyntaxError: test/language/statements/class/async-gen-method/dflt-params-abrupt.js: Unexpected token (57:8)\n  55 | var callCount = 0;\n  56 | class C {\n\u003e 57 |   async *method(_ = (function() { throw new Test262Error(); }())) {\n     |         ^\n  58 |     \n  59 |     callCount = callCount + 1;\n  60 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/async-gen-method/dflt-params-ref-later.js-strict:true": "test/language/statements/class/async-gen-method/dflt-params-ref-later.js: SyntaxError: test/language/statements/class/async-gen-method/dflt-params-ref-later.js: Unexpected token (58:8)\n  56 | var callCount = 0;\n  57 | class C {\n\u003e 58 |   async *method(x = y, y) {\n     |         ^\n  59 |     \n  60 |     callCount = callCount + 1;\n  61 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/async-gen-method/dflt-params-ref-self.js-strict:true": "test/language/statements/class/async-gen-method/dflt-params-ref-self.js: SyntaxError: test/language/statements/class/async-gen-method/dflt-params-ref-self.js: Unexpected token (58:8)\n  56 | var callCount = 0;\n  57 | class C {\n\u003e 58 |   async *method(x = x) {\n     |         ^\n  59 |     \n  60 |     callCount = callCount + 1;\n  61 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/class-name-ident-await-escaped.js-strict:true": "test/language/statements/class/class-name-ident-await-escaped.js: SyntaxError: test/language/statements/class/class-name-ident-await-escaped.js: await is a reserved word (18:6)\n  16 | ---*/\n  17 | \n\u003e 18 | class aw\\u0061it {}\n     |       ^\n  19 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/class-name-ident-await.js-strict:true": "test/language/statements/class/class-name-ident-await.js: SyntaxError: test/language/statements/class/class-name-ident-await.js: await is a reserved word (17:6)\n  15 | ---*/\n  16 | \n\u003e 17 | class await {}\n     |       ^\n  18 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/classelementname-abrupt-completion.js-strict:true": "test/language/statements/class/classelementname-abrupt-completion.js: SyntaxError: test/language/statements/class/classelementname-abrupt-completion.js: Missing class properties transform.\n  39 | assert.throws(Test262Error, function() {\n  40 |   class C {\n\u003e 41 |     [f()]\n     |     ^\n  42 |   }\n  43 | });\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/constructor-inferred-observable-iteration.js-strict:true": "test/language/statements/class/constructor-inferred-observable-iteration.js: TypeError: Cannot convert undefined or null to object at getPrototypeOf (native)",
  "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-arrow-function-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-arrow-function-expression.js: Test262Error: Expected SameValue(«undefined», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-assignment-expression-coalesce.js-strict:true": "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-assignment-expression-coalesce.js: SyntaxError: test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-assignment-expression-coalesce.js: Unexpected token (41:10)\n  39 | \n  40 | class C {\n\u003e 41 |   get [x ??= 1]() {\n     |           ^\n  42 |     return 2;\n  43 |   }\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-assignment-expression-logical-and.js-strict:true": "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-assignment-expression-logical-and.js: SyntaxError: test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-assignment-expression-logical-and.js: Unexpected token (41:11)\n  39 | \n  40 | class C {\n\u003e 41 |   get [x \u0026\u0026= 1]() {\n     |            ^\n  42 |     return 2;\n  43 |   }\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-assignment-expression-logical-or.js-strict:true": "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-assignment-expression-logical-or.js: SyntaxError: test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-assignment-expression-logical-or.js: Unexpected token (41:11)\n  39 | \n  40 | class C {\n\u003e 41 |   get [x ||= 1]() {\n     |            ^\n  42 |     return 2;\n  43 |   }\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-async-arrow-function-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-async-arrow-function-expression.js: test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-async-arrow-function-expression.js: Line 44:11 Unexpected token function (and 4 more errors)",
  "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-expression-coalesce.js-strict:true": "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-expression-coalesce.js: SyntaxError: test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-expression-coalesce.js: Unexpected token (41:10)\n  39 | \n  40 | class C {\n\u003e 41 |   get [x ?? 1]() {\n     |           ^\n  42 |     return 2;\n  43 |   }\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-function-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-function-expression.js: Test262Error: Expected SameValue(«undefined», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-generator-function-declaration.js-strict:true": "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-generator-function-declaration.js: test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-generator-function-declaration.js: Line 37:9 Unexpected token * (and 2 more errors)",
  "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-integer-separators.js-strict:true": "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-integer-separators.js: SyntaxError: test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-integer-separators.js: Identifier directly after number (40:8)\n  38 | \n  39 | class C {\n\u003e 40 |   get [1_2_3_4_5_6_7_8]() {\n     |         ^\n  41 |     return 1_2_3_4_5_6_7_8;\n  42 |   }\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-yield-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-yield-expression.js: test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-yield-expression.js: Line 37:9 Unexpected token * (and 37 more errors)",
  "test/language/statements/class/cpn-class-decl-computed-property-name-from-arrow-function-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-computed-property-name-from-arrow-function-expression.js: TypeError: Object has no member 'function () {}' at test/language/statements/class/cpn-class-decl-computed-property-name-from-arrow-function-expression.js:51:18(32)",
  "test/language/statements/class/cpn-class-decl-computed-property-name-from-assignment-expression-coalesce.js-strict:true": "test/language/statements/class/cpn-class-decl-computed-property-name-from-assignment-expression-coalesce.js: SyntaxError: test/language/statements/class/cpn-class-decl-computed-property-name-from-assignment-expression-coalesce.js: Unexpected token (41:6)\n  39 | \n  40 | class C {\n\u003e 41 |   [x ??= 1]() {\n     |       ^\n  42 |     return 2;\n  43 |   }\n  44 |   static [x ??= 1]() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-computed-property-name-from-assignment-expression-logical-and.js-strict:true": "test/language/statements/class/cpn-class-decl-computed-property-name-from-assignment-expression-logical-and.js: SyntaxError: test/language/statements/class/cpn-class-decl-computed-property-name-from-assignment-expression-logical-and.js: Unexpected token (41:7)\n  39 | \n  40 | class C {\n\u003e 41 |   [x \u0026\u0026= 1]() {\n     |        ^\n  42 |     return 2;\n  43 |   }\n  44 |   static [x \u0026\u0026= 1]() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-computed-property-name-from-assignment-expression-logical-or.js-strict:true": "test/language/statements/class/cpn-class-decl-computed-property-name-from-assignment-expression-logical-or.js: SyntaxError: test/language/statements/class/cpn-class-decl-computed-property-name-from-assignment-expression-logical-or.js: Unexpected token (41:7)\n  39 | \n  40 | class C {\n\u003e 41 |   [x ||= 1]() {\n     |        ^\n  42 |     return 2;\n  43 |   }\n  44 |   static [x ||= 1]() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-computed-property-name-from-async-arrow-function-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-computed-property-name-from-async-arrow-function-expression.js: test/language/statements/class/cpn-class-decl-computed-property-name-from-async-arrow-function-expression.js: Line 40:11 Unexpected token function (and 4 more errors)",
  "test/language/statements/class/cpn-class-decl-computed-property-name-from-expression-coalesce.js-strict:true": "test/language/statements/class/cpn-class-decl-computed-property-name-from-expression-coalesce.js: SyntaxError: test/language/statements/class/cpn-class-decl-computed-property-name-from-expression-coalesce.js: Unexpected token (41:6)\n  39 | \n  40 | class C {\n\u003e 41 |   [x ?? 1]() {\n     |       ^\n  42 |     return 2;\n  43 |   }\n  44 |   static [x ?? 1]() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-computed-property-name-from-function-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-computed-property-name-from-function-expression.js: TypeError: Object has no member 'function () {}' at test/language/statements/class/cpn-class-decl-computed-property-name-from-function-expression.js:51:18(32)",
  "test/language/statements/class/cpn-class-decl-computed-property-name-from-generator-function-declaration.js-strict:true": "test/language/statements/class/cpn-class-decl-computed-property-name-from-generator-function-declaration.js: test/language/statements/class/cpn-class-decl-computed-property-name-from-generator-function-declaration.js: Line 37:9 Unexpected token * (and 2 more errors)",
  "test/language/statements/class/cpn-class-decl-computed-property-name-from-integer-separators.js-strict:true": "test/language/statements/class/cpn-class-decl-computed-property-name-from-integer-separators.js: SyntaxError: test/language/statements/class/cpn-class-decl-computed-property-name-from-integer-separators.js: Identifier directly after number (40:4)\n  38 | \n  39 | class C {\n\u003e 40 |   [1_2_3_4_5_6_7_8]() {\n     |     ^\n  41 |     return 1_2_3_4_5_6_7_8;\n  42 |   }\n  43 |   static [1_2_3_4_5_6_7_8]() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-computed-property-name-from-yield-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-computed-property-name-from-yield-expression.js: test/language/statements/class/cpn-class-decl-computed-property-name-from-yield-expression.js: Line 37:9 Unexpected token * (and 31 more errors)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-additive-expression-add.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-additive-expression-add.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-additive-expression-add.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1 + 1] = 2;\n     |           ^\n  41 | \n  42 |   static [1 + 1] = 2;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-additive-expression-subtract.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-additive-expression-subtract.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-additive-expression-subtract.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1 - 1] = 0;\n     |           ^\n  41 | \n  42 |   static [1 - 1] = 0;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-arrow-function-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-arrow-function-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-arrow-function-expression.js: Unexpected token (40:14)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [() =\u003e { }] = 1;\n     |               ^\n  41 | \n  42 |   static [() =\u003e { }] = 1;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-assignment-expression-assignment.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-assignment-expression-assignment.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-assignment-expression-assignment.js: Unexpected token (41:10)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x = 1] = 2;\n     |           ^\n  42 | \n  43 |   static [x = 1] = 2;\n  44 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-assignment-expression-bitwise-or.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-assignment-expression-bitwise-or.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-assignment-expression-bitwise-or.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x |= 1] = 2;\n     |            ^\n  42 | \n  43 |   static [x |= 1] = 2;\n  44 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-assignment-expression-coalesce.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-assignment-expression-coalesce.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-assignment-expression-coalesce.js: Unexpected token (41:6)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x ??= 1] = 2;\n     |       ^\n  42 | \n  43 |   static [x ??= 1] = 2;\n  44 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-assignment-expression-logical-and.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-assignment-expression-logical-and.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-assignment-expression-logical-and.js: Unexpected token (41:7)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x \u0026\u0026= 1] = 2;\n     |        ^\n  42 | \n  43 |   static [x \u0026\u0026= 1] = 2;\n  44 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-assignment-expression-logical-or.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-assignment-expression-logical-or.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-assignment-expression-logical-or.js: Unexpected token (41:7)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x ||= 1] = 2;\n     |        ^\n  42 | \n  43 |   static [x ||= 1] = 2;\n  44 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-async-arrow-function-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-async-arrow-function-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-async-arrow-function-expression.js: Unexpected token (40:19)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [async () =\u003e {}] = 1;\n     |                    ^\n  41 | \n  42 |   static [async () =\u003e {}] = 1;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-condition-expression-false.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-condition-expression-false.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-condition-expression-false.js: Unexpected token (40:18)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [false ? 1 : 2] = 1;\n     |                   ^\n  41 | \n  42 |   static [false ? 1 : 2] = 1;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-condition-expression-true.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-condition-expression-true.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-condition-expression-true.js: Unexpected token (40:17)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [true ? 1 : 2] = 2;\n     |                  ^\n  41 | \n  42 |   static [true ? 1 : 2] = 2;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-decimal-e-notational-literal.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-decimal-e-notational-literal.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-decimal-e-notational-literal.js: Unexpected token (40:9)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1.e1] = 2;\n     |          ^\n  41 | \n  42 |   static [1.e1] = 2;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-decimal-literal.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-decimal-literal.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-decimal-literal.js: Unexpected token (40:8)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1.1] = 2;\n     |         ^\n  41 | \n  42 |   static [1.1] = 2;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-exponetiation-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-exponetiation-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-exponetiation-expression.js: Unexpected token (40:11)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [2 ** 2] = 4;\n     |            ^\n  41 | \n  42 |   static [2 ** 2] = 4;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-expression-coalesce.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-expression-coalesce.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-expression-coalesce.js: Unexpected token (41:6)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x ?? 1] = 2;\n     |       ^\n  42 | \n  43 |   static [x ?? 1] = 2;\n  44 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-expression-logical-and.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-expression-logical-and.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-expression-logical-and.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x \u0026\u0026 1] = 2;\n     |            ^\n  42 | \n  43 |   static [x \u0026\u0026 1] = 2;\n  44 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-expression-logical-or.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-expression-logical-or.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-expression-logical-or.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x || 1] = 2;\n     |            ^\n  42 | \n  43 |   static [x || 1] = 2;\n  44 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-function-declaration.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-function-declaration.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-function-declaration.js: Unexpected token (41:8)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [f()] = 1;\n     |         ^\n  42 | \n  43 |   static [f()] = 1;\n  44 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-function-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-function-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-function-expression.js: Unexpected token (40:19)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [function () {}] = 1;\n     |                    ^\n  41 | \n  42 |   static [function () {}] = 1;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-generator-function-declaration.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-generator-function-declaration.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-generator-function-declaration.js: Unexpected token (41:8)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [g()] = 1;\n     |         ^\n  42 | \n  43 |   static [g()] = 1;\n  44 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-identifier.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-identifier.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-identifier.js: Unexpected token (42:6)\n  40 | \n  41 | let C = class {\n\u003e 42 |   [x] = '2';\n     |       ^\n  43 | \n  44 |   static [x] = '2';\n  45 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-integer-e-notational-literal.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-integer-e-notational-literal.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-integer-e-notational-literal.js: Unexpected token (40:6)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1] = 2;\n     |       ^\n  41 | \n  42 |   static [1] = 2;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-integer-separators.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-integer-separators.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-integer-separators.js: Identifier directly after number (40:4)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1_2_3_4_5_6_7_8] = 1_2_3_4_5_6_7_8;\n     |     ^\n  41 | \n  42 |   static [1_2_3_4_5_6_7_8] = 1_2_3_4_5_6_7_8;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-math.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-math.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-math.js: Unexpected token (40:27)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1 + 2 - 3 * 4 / 5 ** 6] = 2.999232;\n     |                            ^\n  41 | \n  42 |   static [1 + 2 - 3 * 4 / 5 ** 6] = 2.999232;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-multiplicative-expression-div.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-multiplicative-expression-div.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-multiplicative-expression-div.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1 / 1] = 1;\n     |           ^\n  41 | \n  42 |   static [1 / 1] = 1;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-multiplicative-expression-mult.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-multiplicative-expression-mult.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-multiplicative-expression-mult.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1 * 1] = 1;\n     |           ^\n  41 | \n  42 |   static [1 * 1] = 1;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-null.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-null.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-null.js: Unexpected token (40:9)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [null] = null;\n     |          ^\n  41 | \n  42 |   static [null] = null;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-numeric-literal.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-numeric-literal.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-numeric-literal.js: Unexpected token (40:6)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1] = 2;\n     |       ^\n  41 | \n  42 |   static [1] = 2;\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-string-literal.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-string-literal.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-string-literal.js: Unexpected token (40:8)\n  38 | \n  39 | let C = class {\n\u003e 40 |   ['1'] = '2';\n     |         ^\n  41 | \n  42 |   static ['1'] = '2';\n  43 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-yield-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-yield-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-yield-expression.js: Unexpected token (41:12)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [yield 9] = 9;\n     |             ^\n  42 | \n  43 |   static [yield 9] = 9;\n  44 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-additive-expression-add.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-additive-expression-add.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-additive-expression-add.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1 + 1] = () =\u003e {\n     |           ^\n  41 |     return 2;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-additive-expression-subtract.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-additive-expression-subtract.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-additive-expression-subtract.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1 - 1] = () =\u003e {\n     |           ^\n  41 |     return 0;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-arrow-function-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-arrow-function-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-arrow-function-expression.js: Unexpected token (40:14)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [() =\u003e { }] = () =\u003e {\n     |               ^\n  41 |     return 1;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-assignment-expression-assignment.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-assignment-expression-assignment.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-assignment-expression-assignment.js: Unexpected token (41:10)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x = 1] = () =\u003e {\n     |           ^\n  42 |     return 2;\n  43 |   };\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-assignment-expression-bitwise-or.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-assignment-expression-bitwise-or.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-assignment-expression-bitwise-or.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x |= 1] = () =\u003e {\n     |            ^\n  42 |     return 2;\n  43 |   };\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-assignment-expression-coalesce.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-assignment-expression-coalesce.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-assignment-expression-coalesce.js: Unexpected token (41:6)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x ??= 1] = () =\u003e {\n     |       ^\n  42 |     return 2;\n  43 |   };\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-assignment-expression-logical-and.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-assignment-expression-logical-and.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-assignment-expression-logical-and.js: Unexpected token (41:7)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x \u0026\u0026= 1] = () =\u003e {\n     |        ^\n  42 |     return 2;\n  43 |   };\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-assignment-expression-logical-or.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-assignment-expression-logical-or.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-assignment-expression-logical-or.js: Unexpected token (41:7)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x ||= 1] = () =\u003e {\n     |        ^\n  42 |     return 2;\n  43 |   };\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-async-arrow-function-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-async-arrow-function-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-async-arrow-function-expression.js: Unexpected token (40:19)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [async () =\u003e {}] = () =\u003e {\n     |                    ^\n  41 |     return 1;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-condition-expression-false.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-condition-expression-false.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-condition-expression-false.js: Unexpected token (40:18)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [false ? 1 : 2] = () =\u003e {\n     |                   ^\n  41 |     return 1;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-condition-expression-true.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-condition-expression-true.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-condition-expression-true.js: Unexpected token (40:17)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [true ? 1 : 2] = () =\u003e {\n     |                  ^\n  41 |     return 2;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-decimal-e-notational-literal.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-decimal-e-notational-literal.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-decimal-e-notational-literal.js: Unexpected token (40:9)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1.e1] = () =\u003e {\n     |          ^\n  41 |     return 2;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-decimal-literal.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-decimal-literal.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-decimal-literal.js: Unexpected token (40:8)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1.1] = () =\u003e {\n     |         ^\n  41 |     return 2;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-exponetiation-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-exponetiation-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-exponetiation-expression.js: Unexpected token (40:11)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [2 ** 2] = () =\u003e {\n     |            ^\n  41 |     return 4;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-expression-coalesce.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-expression-coalesce.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-expression-coalesce.js: Unexpected token (41:6)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x ?? 1] = () =\u003e {\n     |       ^\n  42 |     return 2;\n  43 |   };\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-expression-logical-and.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-expression-logical-and.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-expression-logical-and.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x \u0026\u0026 1] = () =\u003e {\n     |            ^\n  42 |     return 2;\n  43 |   };\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-expression-logical-or.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-expression-logical-or.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-expression-logical-or.js: Unexpected token (41:11)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [x || 1] = () =\u003e {\n     |            ^\n  42 |     return 2;\n  43 |   };\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-function-declaration.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-function-declaration.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-function-declaration.js: Unexpected token (41:8)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [f()] = () =\u003e {\n     |         ^\n  42 |     return 1;\n  43 |   };\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-function-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-function-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-function-expression.js: Unexpected token (40:19)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [function () {}] = () =\u003e {\n     |                    ^\n  41 |     return 1;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-generator-function-declaration.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-generator-function-declaration.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-generator-function-declaration.js: Unexpected token (41:8)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [g()] = () =\u003e {\n     |         ^\n  42 |     return 1;\n  43 |   };\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-identifier.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-identifier.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-identifier.js: Unexpected token (42:6)\n  40 | \n  41 | let C = class {\n\u003e 42 |   [x] = () =\u003e {\n     |       ^\n  43 |     return '2';\n  44 |   };\n  45 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-integer-e-notational-literal.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-integer-e-notational-literal.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-integer-e-notational-literal.js: Unexpected token (40:6)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1] = () =\u003e {\n     |       ^\n  41 |     return 2;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-integer-separators.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-integer-separators.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-integer-separators.js: Identifier directly after number (40:4)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1_2_3_4_5_6_7_8] = () =\u003e {\n     |     ^\n  41 |     return 1_2_3_4_5_6_7_8;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-math.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-math.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-math.js: Unexpected token (40:27)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1 + 2 - 3 * 4 / 5 ** 6] = () =\u003e {\n     |                            ^\n  41 |     return 2.999232;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-multiplicative-expression-div.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-multiplicative-expression-div.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-multiplicative-expression-div.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1 / 1] = () =\u003e {\n     |           ^\n  41 |     return 1;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-multiplicative-expression-mult.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-multiplicative-expression-mult.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-multiplicative-expression-mult.js: Unexpected token (40:10)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1 * 1] = () =\u003e {\n     |           ^\n  41 |     return 1;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-null.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-null.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-null.js: Unexpected token (40:9)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [null] = () =\u003e {\n     |          ^\n  41 |     return null;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-numeric-literal.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-numeric-literal.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-numeric-literal.js: Unexpected token (40:6)\n  38 | \n  39 | let C = class {\n\u003e 40 |   [1] = () =\u003e {\n     |       ^\n  41 |     return 2;\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-string-literal.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-string-literal.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-string-literal.js: Unexpected token (40:8)\n  38 | \n  39 | let C = class {\n\u003e 40 |   ['1'] = () =\u003e {\n     |         ^\n  41 |     return '2';\n  42 |   };\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-yield-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-yield-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-yield-expression.js: Unexpected token (41:12)\n  39 | \n  40 | let C = class {\n\u003e 41 |   [yield 9] = () =\u003e {\n     |             ^\n  42 |     return 9;\n  43 |   };\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/cptn-decl.js-strict:true": "test/language/statements/class/cptn-decl.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected reserved word at test/language/statements/class/cptn-decl.js:14:22(5)",
  "test/language/statements/class/definition/accessors.js-strict:true": "test/language/statements/class/definition/accessors.js: Test262Error: The result of `'prototype' in desc.get` is `false` Expected SameValue(«true», «false») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/definition/class-method-returns-promise.js-strict:true": "test/language/statements/class/definition/class-method-returns-promise.js: test/language/statements/class/definition/class-method-returns-promise.js: Line 12:113 Unexpected token function",
  "test/language/statements/class/definition/fn-name-accessor-get.js-strict:true": "test/language/statements/class/definition/fn-name-accessor-get.js: Test262Error: Expected SameValue(«get», «get id») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/definition/fn-name-accessor-set.js-strict:true": "test/language/statements/class/definition/fn-name-accessor-set.js: Test262Error: Expected SameValue(«set», «set id») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/definition/fn-name-method.js-strict:true": "test/language/statements/class/definition/fn-name-method.js: Test262Error: via anonymous Symbol Expected SameValue(«value», «») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/definition/getters-prop-desc.js-strict:true": "test/language/statements/class/definition/getters-prop-desc.js: Test262Error: The result of `'prototype' in desc.get` is `false` Expected SameValue(«true», «false») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/definition/getters-restricted-ids.js-strict:true": "test/language/statements/class/definition/getters-restricted-ids.js: TypeError: Cannot redefine property: arguments at defineProperty (native)",
  "test/language/statements/class/definition/methods-named-eval-arguments.js-strict:true": "test/language/statements/class/definition/methods-named-eval-arguments.js: TypeError: Cannot redefine property: arguments at defineProperty (native)",
  "test/language/statements/class/definition/methods-restricted-properties.js-strict:true": "test/language/statements/class/definition/methods-restricted-properties.js: Test262Error: No \"caller\" own property (method) Expected SameValue(«true», «false») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/definition/methods.js-strict:true": "test/language/statements/class/definition/methods.js: Test262Error: The result of `'prototype' in desc.value` is `false` Expected SameValue(«true», «false») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/definition/numeric-property-names.js-strict:true": "test/language/statements/class/definition/numeric-property-names.js: Test262Error: The result of `'prototype' in desc.value` is `false` Expected SameValue(«true», «false») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/definition/prototype-property.js-strict:true": "test/language/statements/class/definition/prototype-property.js: Test262Error: The value of `descr.writable` is `false` Expected SameValue(«true», «false») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/definition/setters-prop-desc.js-strict:true": "test/language/statements/class/definition/setters-prop-desc.js: Test262Error: The result of `'prototype' in descr.set` is `false` Expected SameValue(«true», «false») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/definition/setters-restricted-ids.js-strict:true": "test/language/statements/class/definition/setters-restricted-ids.js: TypeError: Cannot redefine property: arguments at defineProperty (native)",
  "test/language/statements/class/definition/this-access-restriction-2.js-strict:true": "test/language/statements/class/definition/this-access-restriction-2.js: SyntaxError: test/language/statements/class/definition/this-access-restriction-2.js: 'this' is not allowed before super()\n  19 |     var exn;\n  20 |     try {\n\u003e 21 |       this.prp1 = 3;\n     |       ^\n  22 |     } catch (e) {\n  23 |       exn = e;\n  24 |     } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/definition/this-access-restriction.js-strict:true": "test/language/statements/class/definition/this-access-restriction.js: SyntaxError: test/language/statements/class/definition/this-access-restriction.js: 'this' is not allowed before super()\n  19 |   class C extends Base {\n  20 |     constructor() {\n\u003e 21 |       super(this.x);\n     |             ^\n  22 |     }\n  23 |   }; new C();\n  24 | }); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/definition/this-check-ordering.js-strict:true": "test/language/statements/class/definition/this-check-ordering.js: test/language/statements/class/definition/this-check-ordering.js: Line 43:7 Unexpected reserved word (and 15 more errors)",
  "test/language/statements/class/dstr/async-gen-meth-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-ary-init-iter-get-err-array-prototype.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-ary-init-iter-get-err-array-prototype.js: Unexpected token (63:8)\n  61 | \n  62 | class C {\n\u003e 63 |   async *method([x, y, z]) {\n     |         ^\n  64 |     \n  65 |   }\n  66 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-ary-init-iter-get-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-ary-init-iter-get-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-ary-init-iter-get-err.js: Unexpected token (57:8)\n  55 | \n  56 | class C {\n\u003e 57 |   async *method([x]) {\n     |         ^\n  58 |     \n  59 |   }\n  60 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-ary-ptrn-elem-ary-val-null.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-ary-ptrn-elem-ary-val-null.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-ary-ptrn-elem-ary-val-null.js: Unexpected token (64:8)\n  62 | \n  63 | class C {\n\u003e 64 |   async *method([[x]]) {\n     |         ^\n  65 |     \n  66 |   }\n  67 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-ary-ptrn-elem-id-init-throws.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-ary-ptrn-elem-id-init-throws.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-ary-ptrn-elem-id-init-throws.js: Unexpected token (55:8)\n  53 | \n  54 | class C {\n\u003e 55 |   async *method([x = (function() { throw new Test262Error(); })()]) {\n     |         ^\n  56 |     \n  57 |   }\n  58 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-ary-ptrn-elem-id-init-unresolvable.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-ary-ptrn-elem-id-init-unresolvable.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-ary-ptrn-elem-id-init-unresolvable.js: Unexpected token (62:8)\n  60 | \n  61 | class C {\n\u003e 62 |   async *method([ x = unresolvableReference ]) {\n     |         ^\n  63 |     \n  64 |   }\n  65 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-ary-ptrn-elem-id-iter-step-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-ary-ptrn-elem-id-iter-step-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-ary-ptrn-elem-id-iter-step-err.js: Unexpected token (64:8)\n  62 | \n  63 | class C {\n\u003e 64 |   async *method([x]) {\n     |         ^\n  65 |     \n  66 |   }\n  67 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-ary-ptrn-elem-id-iter-val-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-ary-ptrn-elem-id-iter-val-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-ary-ptrn-elem-id-iter-val-err.js: Unexpected token (75:8)\n  73 | \n  74 | class C {\n\u003e 75 |   async *method([x]) {\n     |         ^\n  76 |     \n  77 |   }\n  78 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-ary-ptrn-elem-obj-val-null.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-ary-ptrn-elem-obj-val-null.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-ary-ptrn-elem-obj-val-null.js: Unexpected token (64:8)\n  62 | \n  63 | class C {\n\u003e 64 |   async *method([{ x }]) {\n     |         ^\n  65 |     \n  66 |   }\n  67 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-ary-ptrn-elem-obj-val-undef.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-ary-ptrn-elem-obj-val-undef.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-ary-ptrn-elem-obj-val-undef.js: Unexpected token (64:8)\n  62 | \n  63 | class C {\n\u003e 64 |   async *method([{ x }]) {\n     |         ^\n  65 |     \n  66 |   }\n  67 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-ary-ptrn-rest-id-iter-val-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-ary-ptrn-rest-id-iter-val-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-ary-ptrn-rest-id-iter-val-err.js: Unexpected token (70:8)\n  68 | \n  69 | class C {\n\u003e 70 |   async *method([...x]) {\n     |         ^\n  71 |     \n  72 |   }\n  73 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-dflt-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-dflt-ary-init-iter-get-err-array-prototype.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-dflt-ary-init-iter-get-err-array-prototype.js: Unexpected token (63:8)\n  61 | \n  62 | class C {\n\u003e 63 |   async *method([x, y, z] = [1, 2, 3]) {\n     |         ^\n  64 |     \n  65 |   }\n  66 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-dflt-ary-init-iter-get-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-dflt-ary-init-iter-get-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-dflt-ary-init-iter-get-err.js: Unexpected token (57:8)\n  55 | \n  56 | class C {\n\u003e 57 |   async *method([x] = iter) {\n     |         ^\n  58 |     \n  59 |   }\n  60 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-ary-val-null.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-ary-val-null.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-ary-val-null.js: Unexpected token (64:8)\n  62 | \n  63 | class C {\n\u003e 64 |   async *method([[x]] = [null]) {\n     |         ^\n  65 |     \n  66 |   }\n  67 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-id-init-throws.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-id-init-throws.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-id-init-throws.js: Unexpected token (55:8)\n  53 | \n  54 | class C {\n\u003e 55 |   async *method([x = (function() { throw new Test262Error(); })()] = [undefined]) {\n     |         ^\n  56 |     \n  57 |   }\n  58 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-id-init-unresolvable.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-id-init-unresolvable.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-id-init-unresolvable.js: Unexpected token (62:8)\n  60 | \n  61 | class C {\n\u003e 62 |   async *method([ x = unresolvableReference ] = []) {\n     |         ^\n  63 |     \n  64 |   }\n  65 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-id-iter-step-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-id-iter-step-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-id-iter-step-err.js: Unexpected token (64:8)\n  62 | \n  63 | class C {\n\u003e 64 |   async *method([x] = g) {\n     |         ^\n  65 |     \n  66 |   }\n  67 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-id-iter-val-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-id-iter-val-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-id-iter-val-err.js: Unexpected token (75:8)\n  73 | \n  74 | class C {\n\u003e 75 |   async *method([x] = g) {\n     |         ^\n  76 |     \n  77 |   }\n  78 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-obj-val-null.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-obj-val-null.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-obj-val-null.js: Unexpected token (64:8)\n  62 | \n  63 | class C {\n\u003e 64 |   async *method([{ x }] = [null]) {\n     |         ^\n  65 |     \n  66 |   }\n  67 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-obj-val-undef.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-obj-val-undef.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-elem-obj-val-undef.js: Unexpected token (64:8)\n  62 | \n  63 | class C {\n\u003e 64 |   async *method([{ x }] = []) {\n     |         ^\n  65 |     \n  66 |   }\n  67 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-rest-id-iter-val-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-rest-id-iter-val-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-rest-id-iter-val-err.js: Unexpected token (70:8)\n  68 | \n  69 | class C {\n\u003e 70 |   async *method([...x] = iter) {\n     |         ^\n  71 |     \n  72 |   }\n  73 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-dflt-obj-init-null.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-dflt-obj-init-null.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-dflt-obj-init-null.js: Unexpected token (51:8)\n  49 | \n  50 | class C {\n\u003e 51 |   async *method({} = null) {\n     |         ^\n  52 |     \n  53 |   }\n  54 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-dflt-obj-init-undefined.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-dflt-obj-init-undefined.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-dflt-obj-init-undefined.js: Unexpected token (51:8)\n  49 | \n  50 | class C {\n\u003e 51 |   async *method({} = undefined) {\n     |         ^\n  52 |     \n  53 |   }\n  54 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-id-get-value-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-id-get-value-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-id-get-value-err.js: Unexpected token (58:8)\n  56 | \n  57 | class C {\n\u003e 58 |   async *method({ poisoned } = poisonedProperty) {\n     |         ^\n  59 |     \n  60 |   }\n  61 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-id-init-throws.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-id-init-throws.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-id-init-throws.js: Unexpected token (58:8)\n  56 | \n  57 | class C {\n\u003e 58 |   async *method({ x = thrower() } = {}) {\n     |         ^\n  59 |     \n  60 |   }\n  61 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-id-init-unresolvable.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-id-init-unresolvable.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-id-init-unresolvable.js: Unexpected token (62:8)\n  60 | \n  61 | class C {\n\u003e 62 |   async *method({ x = unresolvableReference } = {}) {\n     |         ^\n  63 |     \n  64 |   }\n  65 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-list-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-list-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-list-err.js: Unexpected token (57:8)\n  55 | \n  56 | class C {\n\u003e 57 |   async *method({ a, b = thrower(), c = ++initCount } = {}) {\n     |         ^\n  58 |     \n  59 |   }\n  60 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-ary-value-null.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-ary-value-null.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-ary-value-null.js: Unexpected token (53:8)\n  51 | \n  52 | class C {\n\u003e 53 |   async *method({ w: [x, y, z] = [4, 5, 6] } = { w: null }) {\n     |         ^\n  54 |     \n  55 |   }\n  56 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-eval-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-eval-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-eval-err.js: Unexpected token (55:8)\n  53 | \n  54 | class C {\n\u003e 55 |   async *method({ [thrower()]: x } = {}) {\n     |         ^\n  56 |     \n  57 |   }\n  58 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-id-get-value-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-id-get-value-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-id-get-value-err.js: Unexpected token (58:8)\n  56 | \n  57 | class C {\n\u003e 58 |   async *method({ poisoned: x = ++initEvalCount } = poisonedProperty) {\n     |         ^\n  59 |     \n  60 |   }\n  61 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-id-init-throws.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-id-init-throws.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-id-init-throws.js: Unexpected token (58:8)\n  56 | \n  57 | class C {\n\u003e 58 |   async *method({ x: y = thrower() } = {}) {\n     |         ^\n  59 |     \n  60 |   }\n  61 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-id-init-unresolvable.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-id-init-unresolvable.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-id-init-unresolvable.js: Unexpected token (62:8)\n  60 | \n  61 | class C {\n\u003e 62 |   async *method({ x: y = unresolvableReference } = {}) {\n     |         ^\n  63 |     \n  64 |   }\n  65 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-obj-value-null.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-obj-value-null.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-obj-value-null.js: Unexpected token (53:8)\n  51 | \n  52 | class C {\n\u003e 53 |   async *method({ w: { x, y, z } = { x: 4, y: 5, z: 6 } } = { w: null }) {\n     |         ^\n  54 |     \n  55 |   }\n  56 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-obj-value-undef.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-obj-value-undef.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-dflt-obj-ptrn-prop-obj-value-undef.js: Unexpected token (53:8)\n  51 | \n  52 | class C {\n\u003e 53 |   async *method({ w: { x, y, z } = undefined } = { }) {\n     |         ^\n  54 |     \n  55 |   }\n  56 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-obj-init-null.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-obj-init-null.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-obj-init-null.js: Unexpected token (51:8)\n  49 | \n  50 | class C {\n\u003e 51 |   async *method({}) {\n     |         ^\n  52 |     \n  53 |   }\n  54 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-obj-init-undefined.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-obj-init-undefined.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-obj-init-undefined.js: Unexpected token (51:8)\n  49 | \n  50 | class C {\n\u003e 51 |   async *method({}) {\n     |         ^\n  52 |     \n  53 |   }\n  54 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-obj-ptrn-id-get-value-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-obj-ptrn-id-get-value-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-obj-ptrn-id-get-value-err.js: Unexpected token (58:8)\n  56 | \n  57 | class C {\n\u003e 58 |   async *method({ poisoned }) {\n     |         ^\n  59 |     \n  60 |   }\n  61 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-obj-ptrn-id-init-throws.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-obj-ptrn-id-init-throws.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-obj-ptrn-id-init-throws.js: Unexpected token (58:8)\n  56 | \n  57 | class C {\n\u003e 58 |   async *method({ x = thrower() }) {\n     |         ^\n  59 |     \n  60 |   }\n  61 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-obj-ptrn-id-init-unresolvable.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-obj-ptrn-id-init-unresolvable.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-obj-ptrn-id-init-unresolvable.js: Unexpected token (62:8)\n  60 | \n  61 | class C {\n\u003e 62 |   async *method({ x = unresolvableReference }) {\n     |         ^\n  63 |     \n  64 |   }\n  65 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-obj-ptrn-list-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-obj-ptrn-list-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-obj-ptrn-list-err.js: Unexpected token (57:8)\n  55 | \n  56 | class C {\n\u003e 57 |   async *method({ a, b = thrower(), c = ++initCount }) {\n     |         ^\n  58 |     \n  59 |   }\n  60 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-obj-ptrn-prop-ary-value-null.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-obj-ptrn-prop-ary-value-null.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-obj-ptrn-prop-ary-value-null.js: Unexpected token (53:8)\n  51 | \n  52 | class C {\n\u003e 53 |   async *method({ w: [x, y, z] = [4, 5, 6] }) {\n     |         ^\n  54 |     \n  55 |   }\n  56 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-obj-ptrn-prop-eval-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-obj-ptrn-prop-eval-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-obj-ptrn-prop-eval-err.js: Unexpected token (55:8)\n  53 | \n  54 | class C {\n\u003e 55 |   async *method({ [thrower()]: x }) {\n     |         ^\n  56 |     \n  57 |   }\n  58 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-obj-ptrn-prop-id-get-value-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-obj-ptrn-prop-id-get-value-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-obj-ptrn-prop-id-get-value-err.js: Unexpected token (58:8)\n  56 | \n  57 | class C {\n\u003e 58 |   async *method({ poisoned: x = ++initEvalCount }) {\n     |         ^\n  59 |     \n  60 |   }\n  61 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-obj-ptrn-prop-id-init-throws.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-obj-ptrn-prop-id-init-throws.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-obj-ptrn-prop-id-init-throws.js: Unexpected token (58:8)\n  56 | \n  57 | class C {\n\u003e 58 |   async *method({ x: y = thrower() }) {\n     |         ^\n  59 |     \n  60 |   }\n  61 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-obj-ptrn-prop-id-init-unresolvable.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-obj-ptrn-prop-id-init-unresolvable.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-obj-ptrn-prop-id-init-unresolvable.js: Unexpected token (62:8)\n  60 | \n  61 | class C {\n\u003e 62 |   async *method({ x: y = unresolvableReference }) {\n     |         ^\n  63 |     \n  64 |   }\n  65 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-obj-ptrn-prop-obj-value-null.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-obj-ptrn-prop-obj-value-null.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-obj-ptrn-prop-obj-value-null.js: Unexpected token (53:8)\n  51 | \n  52 | class C {\n\u003e 53 |   async *method({ w: { x, y, z } = { x: 4, y: 5, z: 6 } }) {\n     |         ^\n  54 |     \n  55 |   }\n  56 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-obj-ptrn-prop-obj-value-undef.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-obj-ptrn-prop-obj-value-undef.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-obj-ptrn-prop-obj-value-undef.js: Unexpected token (53:8)\n  51 | \n  52 | class C {\n\u003e 53 |   async *method({ w: { x, y, z } = undefined }) {\n     |         ^\n  54 |     \n  55 |   }\n  56 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-ary-init-iter-get-err-array-prototype.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-ary-init-iter-get-err-array-prototype.js: Unexpected token (63:15)\n  61 | \n  62 | class C {\n\u003e 63 |   static async *method([x, y, z]) {\n     |                ^\n  64 |     \n  65 |   }\n  66 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-ary-init-iter-get-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-ary-init-iter-get-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-ary-init-iter-get-err.js: Unexpected token (57:15)\n  55 | \n  56 | class C {\n\u003e 57 |   static async *method([x]) {\n     |                ^\n  58 |     \n  59 |   }\n  60 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-elem-ary-val-null.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-elem-ary-val-null.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-elem-ary-val-null.js: Unexpected token (64:15)\n  62 | \n  63 | class C {\n\u003e 64 |   static async *method([[x]]) {\n     |                ^\n  65 |     \n  66 |   }\n  67 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-elem-id-init-throws.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-elem-id-init-throws.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-elem-id-init-throws.js: Unexpected token (55:15)\n  53 | \n  54 | class C {\n\u003e 55 |   static async *method([x = (function() { throw new Test262Error(); })()]) {\n     |                ^\n  56 |     \n  57 |   }\n  58 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-elem-id-init-unresolvable.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-elem-id-init-unresolvable.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-elem-id-init-unresolvable.js: Unexpected token (62:15)\n  60 | \n  61 | class C {\n\u003e 62 |   static async *method([ x = unresolvableReference ]) {\n     |                ^\n  63 |     \n  64 |   }\n  65 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-elem-id-iter-step-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-elem-id-iter-step-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-elem-id-iter-step-err.js: Unexpected token (64:15)\n  62 | \n  63 | class C {\n\u003e 64 |   static async *method([x]) {\n     |                ^\n  65 |     \n  66 |   }\n  67 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-elem-id-iter-val-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-elem-id-iter-val-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-elem-id-iter-val-err.js: Unexpected token (75:15)\n  73 | \n  74 | class C {\n\u003e 75 |   static async *method([x]) {\n     |                ^\n  76 |     \n  77 |   }\n  78 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-elem-obj-val-null.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-elem-obj-val-null.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-elem-obj-val-null.js: Unexpected token (64:15)\n  62 | \n  63 | class C {\n\u003e 64 |   static async *method([{ x }]) {\n     |                ^\n  65 |     \n  66 |   }\n  67 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-elem-obj-val-undef.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-elem-obj-val-undef.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-elem-obj-val-undef.js: Unexpected token (64:15)\n  62 | \n  63 | class C {\n\u003e 64 |   static async *method([{ x }]) {\n     |                ^\n  65 |     \n  66 |   }\n  67 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-rest-id-iter-val-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-rest-id-iter-val-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-rest-id-iter-val-err.js: Unexpected token (70:15)\n  68 | \n  69 | class C {\n\u003e 70 |   static async *method([...x]) {\n     |                ^\n  71 |     \n  72 |   }\n  73 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-init-iter-get-err-array-prototype.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-init-iter-get-err-array-prototype.js: Unexpected token (63:15)\n  61 | \n  62 | class C {\n\u003e 63 |   static async *method([x, y, z] = [1, 2, 3]) {\n     |                ^\n  64 |     \n  65 |   }\n  66 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-init-iter-get-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-init-iter-get-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-init-iter-get-err.js: Unexpected token (57:15)\n  55 | \n  56 | class C {\n\u003e 57 |   static async *method([x] = iter) {\n     |                ^\n  58 |     \n  59 |   }\n  60 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-ary-val-null.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-ary-val-null.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-ary-val-null.js: Unexpected token (64:15)\n  62 | \n  63 | class C {\n\u003e 64 |   static async *method([[x]] = [null]) {\n     |                ^\n  65 |     \n  66 |   }\n  67 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-id-init-throws.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-id-init-throws.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-id-init-throws.js: Unexpected token (55:15)\n  53 | \n  54 | class C {\n\u003e 55 |   static async *method([x = (function() { throw new Test262Error(); })()] = [undefined]) {\n     |                ^\n  56 |     \n  57 |   }\n  58 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-id-init-unresolvable.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-id-init-unresolvable.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-id-init-unresolvable.js: Unexpected token (62:15)\n  60 | \n  61 | class C {\n\u003e 62 |   static async *method([ x = unresolvableReference ] = []) {\n     |                ^\n  63 |     \n  64 |   }\n  65 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-id-iter-step-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-id-iter-step-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-id-iter-step-err.js: Unexpected token (64:15)\n  62 | \n  63 | class C {\n\u003e 64 |   static async *method([x] = g) {\n     |                ^\n  65 |     \n  66 |   }\n  67 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-id-iter-val-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-id-iter-val-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-id-iter-val-err.js: Unexpected token (75:15)\n  73 | \n  74 | class C {\n\u003e 75 |   static async *method([x] = g) {\n     |                ^\n  76 |     \n  77 |   }\n  78 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-obj-val-null.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-obj-val-null.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-obj-val-null.js: Unexpected token (64:15)\n  62 | \n  63 | class C {\n\u003e 64 |   static async *method([{ x }] = [null]) {\n     |                ^\n  65 |     \n  66 |   }\n  67 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-obj-val-undef.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-obj-val-undef.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-elem-obj-val-undef.js: Unexpected token (64:15)\n  62 | \n  63 | class C {\n\u003e 64 |   static async *method([{ x }] = []) {\n     |                ^\n  65 |     \n  66 |   }\n  67 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-rest-id-iter-val-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-rest-id-iter-val-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-rest-id-iter-val-err.js: Unexpected token (70:15)\n  68 | \n  69 | class C {\n\u003e 70 |   static async *method([...x] = iter) {\n     |                ^\n  71 |     \n  72 |   }\n  73 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-init-null.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-init-null.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-init-null.js: Unexpected token (51:15)\n  49 | \n  50 | class C {\n\u003e 51 |   static async *method({} = null) {\n     |                ^\n  52 |     \n  53 |   }\n  54 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-init-undefined.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-init-undefined.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-init-undefined.js: Unexpected token (51:15)\n  49 | \n  50 | class C {\n\u003e 51 |   static async *method({} = undefined) {\n     |                ^\n  52 |     \n  53 |   }\n  54 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-id-get-value-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-id-get-value-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-id-get-value-err.js: Unexpected token (58:15)\n  56 | \n  57 | class C {\n\u003e 58 |   static async *method({ poisoned } = poisonedProperty) {\n     |                ^\n  59 |     \n  60 |   }\n  61 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-id-init-throws.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-id-init-throws.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-id-init-throws.js: Unexpected token (58:15)\n  56 | \n  57 | class C {\n\u003e 58 |   static async *method({ x = thrower() } = {}) {\n     |                ^\n  59 |     \n  60 |   }\n  61 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-id-init-unresolvable.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-id-init-unresolvable.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-id-init-unresolvable.js: Unexpected token (62:15)\n  60 | \n  61 | class C {\n\u003e 62 |   static async *method({ x = unresolvableReference } = {}) {\n     |                ^\n  63 |     \n  64 |   }\n  65 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-list-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-list-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-list-err.js: Unexpected token (57:15)\n  55 | \n  56 | class C {\n\u003e 57 |   static async *method({ a, b = thrower(), c = ++initCount } = {}) {\n     |                ^\n  58 |     \n  59 |   }\n  60 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-ary-value-null.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-ary-value-null.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-ary-value-null.js: Unexpected token (53:15)\n  51 | \n  52 | class C {\n\u003e 53 |   static async *method({ w: [x, y, z] = [4, 5, 6] } = { w: null }) {\n     |                ^\n  54 |     \n  55 |   }\n  56 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-eval-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-eval-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-eval-err.js: Unexpected token (55:15)\n  53 | \n  54 | class C {\n\u003e 55 |   static async *method({ [thrower()]: x } = {}) {\n     |                ^\n  56 |     \n  57 |   }\n  58 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-id-get-value-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-id-get-value-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-id-get-value-err.js: Unexpected token (58:15)\n  56 | \n  57 | class C {\n\u003e 58 |   static async *method({ poisoned: x = ++initEvalCount } = poisonedProperty) {\n     |                ^\n  59 |     \n  60 |   }\n  61 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-id-init-throws.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-id-init-throws.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-id-init-throws.js: Unexpected token (58:15)\n  56 | \n  57 | class C {\n\u003e 58 |   static async *method({ x: y = thrower() } = {}) {\n     |                ^\n  59 |     \n  60 |   }\n  61 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-id-init-unresolvable.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-id-init-unresolvable.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-id-init-unresolvable.js: Unexpected token (62:15)\n  60 | \n  61 | class C {\n\u003e 62 |   static async *method({ x: y = unresolvableReference } = {}) {\n     |                ^\n  63 |     \n  64 |   }\n  65 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-obj-value-null.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-obj-value-null.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-obj-value-null.js: Unexpected token (53:15)\n  51 | \n  52 | class C {\n\u003e 53 |   static async *method({ w: { x, y, z } = { x: 4, y: 5, z: 6 } } = { w: null }) {\n     |                ^\n  54 |     \n  55 |   }\n  56 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-obj-value-undef.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-obj-value-undef.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-dflt-obj-ptrn-prop-obj-value-undef.js: Unexpected token (53:15)\n  51 | \n  52 | class C {\n\u003e 53 |   static async *method({ w: { x, y, z } = undefined } = { }) {\n     |                ^\n  54 |     \n  55 |   }\n  56 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-obj-init-null.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-obj-init-null.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-obj-init-null.js: Unexpected token (51:15)\n  49 | \n  50 | class C {\n\u003e 51 |   static async *method({}) {\n     |                ^\n  52 |     \n  53 |   }\n  54 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-obj-init-undefined.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-obj-init-undefined.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-obj-init-undefined.js: Unexpected token (51:15)\n  49 | \n  50 | class C {\n\u003e 51 |   static async *method({}) {\n     |                ^\n  52 |     \n  53 |   }\n  54 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-id-get-value-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-id-get-value-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-id-get-value-err.js: Unexpected token (58:15)\n  56 | \n  57 | class C {\n\u003e 58 |   static async *method({ poisoned }) {\n     |                ^\n  59 |     \n  60 |   }\n  61 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-id-init-throws.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-id-init-throws.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-id-init-throws.js: Unexpected token (58:15)\n  56 | \n  57 | class C {\n\u003e 58 |   static async *method({ x = thrower() }) {\n     |                ^\n  59 |     \n  60 |   }\n  61 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-id-init-unresolvable.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-id-init-unresolvable.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-id-init-unresolvable.js: Unexpected token (62:15)\n  60 | \n  61 | class C {\n\u003e 62 |   static async *method({ x = unresolvableReference }) {\n     |                ^\n  63 |     \n  64 |   }\n  65 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-list-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-list-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-list-err.js: Unexpected token (57:15)\n  55 | \n  56 | class C {\n\u003e 57 |   static async *method({ a, b = thrower(), c = ++initCount }) {\n     |                ^\n  58 |     \n  59 |   }\n  60 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-prop-ary-value-null.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-prop-ary-value-null.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-prop-ary-value-null.js: Unexpected token (53:15)\n  51 | \n  52 | class C {\n\u003e 53 |   static async *method({ w: [x, y, z] = [4, 5, 6] }) {\n     |                ^\n  54 |     \n  55 |   }\n  56 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-prop-eval-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-prop-eval-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-prop-eval-err.js: Unexpected token (55:15)\n  53 | \n  54 | class C {\n\u003e 55 |   static async *method({ [thrower()]: x }) {\n     |                ^\n  56 |     \n  57 |   }\n  58 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-prop-id-get-value-err.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-prop-id-get-value-err.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-prop-id-get-value-err.js: Unexpected token (58:15)\n  56 | \n  57 | class C {\n\u003e 58 |   static async *method({ poisoned: x = ++initEvalCount }) {\n     |                ^\n  59 |     \n  60 |   }\n  61 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-prop-id-init-throws.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-prop-id-init-throws.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-prop-id-init-throws.js: Unexpected token (58:15)\n  56 | \n  57 | class C {\n\u003e 58 |   static async *method({ x: y = thrower() }) {\n     |                ^\n  59 |     \n  60 |   }\n  61 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-prop-id-init-unresolvable.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-prop-id-init-unresolvable.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-prop-id-init-unresolvable.js: Unexpected token (62:15)\n  60 | \n  61 | class C {\n\u003e 62 |   static async *method({ x: y = unresolvableReference }) {\n     |                ^\n  63 |     \n  64 |   }\n  65 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-prop-obj-value-null.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-prop-obj-value-null.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-prop-obj-value-null.js: Unexpected token (53:15)\n  51 | \n  52 | class C {\n\u003e 53 |   static async *method({ w: { x, y, z } = { x: 4, y: 5, z: 6 } }) {\n     |                ^\n  54 |     \n  55 |   }\n  56 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-prop-obj-value-undef.js-strict:true": "test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-prop-obj-value-undef.js: SyntaxError: test/language/statements/class/dstr/async-gen-meth-static-obj-ptrn-prop-obj-value-undef.js: Unexpected token (53:15)\n  51 | \n  52 | class C {\n\u003e 53 |   static async *method({ w: { x, y, z } = undefined }) {\n     |                ^\n  54 |     \n  55 |   }\n  56 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/statements/class/dstr/meth-ary-init-iter-get-err-array-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/statements/class/dstr/meth-ary-ptrn-elem-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/meth-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/statements/class/dstr/meth-ary-ptrn-elem-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/statements/class/dstr/meth-ary-ptrn-elem-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/class/dstr/meth-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/class/dstr/meth-ary-ptrn-rest-ary-elem.js: Unexpected token (96:13)\n  94 | var callCount = 0;\n  95 | class C {\n\u003e 96 |   method([...[x, y, z]]) {\n     |              ^\n  97 |     assert.sameValue(x, 3);\n  98 |     assert.sameValue(y, 4);\n  99 |     assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/class/dstr/meth-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/class/dstr/meth-ary-ptrn-rest-ary-rest.js: Unexpected token (77:13)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   method([...[...x]]) {\n     |              ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.sameValue(x.length, 3);\n  80 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/class/dstr/meth-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/class/dstr/meth-ary-ptrn-rest-obj-id.js: Unexpected token (76:13)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   method([...{ length }]) {\n     |              ^\n  77 |     assert.sameValue(length, 3);\n  78 |     callCount = callCount + 1;\n  79 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/class/dstr/meth-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/class/dstr/meth-ary-ptrn-rest-obj-prop-id.js: Unexpected token (77:13)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   method([...{ 0: v, 1: w, 2: x, 3: y, length: z }]) {\n     |              ^\n  78 |     assert.sameValue(v, 7);\n  79 |     assert.sameValue(w, 8);\n  80 |     assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-dflt-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/statements/class/dstr/meth-dflt-ary-init-iter-get-err-array-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/statements/class/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/statements/class/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/statements/class/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-ary-elem.js: Unexpected token (96:13)\n  94 | var callCount = 0;\n  95 | class C {\n\u003e 96 |   method([...[x, y, z]] = [3, 4, 5]) {\n     |              ^\n  97 |     assert.sameValue(x, 3);\n  98 |     assert.sameValue(y, 4);\n  99 |     assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-ary-rest.js: Unexpected token (77:13)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   method([...[...x]] = values) {\n     |              ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.sameValue(x.length, 3);\n  80 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-obj-id.js: Unexpected token (76:13)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   method([...{ length }] = [1, 2, 3]) {\n     |              ^\n  77 |     assert.sameValue(length, 3);\n  78 |     callCount = callCount + 1;\n  79 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-obj-prop-id.js: Unexpected token (77:13)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   method([...{ 0: v, 1: w, 2: x, 3: y, length: z }] = [7, 8, 9]) {\n     |              ^\n  78 |     assert.sameValue(v, 7);\n  79 |     assert.sameValue(w, 8);\n  80 |     assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-dflt-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/statements/class/dstr/meth-dflt-obj-ptrn-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-dflt-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/meth-dflt-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-dflt-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/statements/class/dstr/meth-dflt-obj-ptrn-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-dflt-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/statements/class/dstr/meth-dflt-obj-ptrn-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-dflt-obj-ptrn-rest-getter.js-strict:true": "test/language/statements/class/dstr/meth-dflt-obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/class/dstr/meth-dflt-obj-ptrn-rest-getter.js: Unexpected token (65:10)\n  63 | var callCount = 0;\n  64 | class C {\n\u003e 65 |   method({...x} = { get v() { count++; return 2; } }) {\n     |           ^\n  66 |     assert.sameValue(count, 1);\n  67 | \n  68 |     verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-dflt-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/class/dstr/meth-dflt-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/class/dstr/meth-dflt-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (66:10)\n  64 | var callCount = 0;\n  65 | class C {\n\u003e 66 |   method({...rest} = o) {\n     |           ^\n  67 |     assert.sameValue(rest.x, undefined);\n  68 | \n  69 |     verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-dflt-obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/class/dstr/meth-dflt-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/class/dstr/meth-dflt-obj-ptrn-rest-val-obj.js: Unexpected token (64:16)\n  62 | var callCount = 0;\n  63 | class C {\n\u003e 64 |   method({a, b, ...rest} = {x: 1, y: 2, a: 5, b: 3}) {\n     |                 ^\n  65 |     assert.sameValue(rest.a, undefined);\n  66 |     assert.sameValue(rest.b, undefined);\n  67 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/statements/class/dstr/meth-obj-ptrn-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/meth-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/statements/class/dstr/meth-obj-ptrn-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/statements/class/dstr/meth-obj-ptrn-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-obj-ptrn-rest-getter.js-strict:true": "test/language/statements/class/dstr/meth-obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/class/dstr/meth-obj-ptrn-rest-getter.js: Unexpected token (65:10)\n  63 | var callCount = 0;\n  64 | class C {\n\u003e 65 |   method({...x}) {\n     |           ^\n  66 |     assert.sameValue(count, 1);\n  67 | \n  68 |     verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/class/dstr/meth-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/class/dstr/meth-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (66:10)\n  64 | var callCount = 0;\n  65 | class C {\n\u003e 66 |   method({...rest}) {\n     |           ^\n  67 |     assert.sameValue(rest.x, undefined);\n  68 | \n  69 |     verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/class/dstr/meth-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/class/dstr/meth-obj-ptrn-rest-val-obj.js: Unexpected token (64:16)\n  62 | var callCount = 0;\n  63 | class C {\n\u003e 64 |   method({a, b, ...rest}) {\n     |                 ^\n  65 |     assert.sameValue(rest.a, undefined);\n  66 |     assert.sameValue(rest.b, undefined);\n  67 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-static-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/statements/class/dstr/meth-static-ary-init-iter-get-err-array-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-static-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/statements/class/dstr/meth-static-ary-ptrn-elem-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-static-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/meth-static-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-static-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/statements/class/dstr/meth-static-ary-ptrn-elem-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-static-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/statements/class/dstr/meth-static-ary-ptrn-elem-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-static-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/class/dstr/meth-static-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/class/dstr/meth-static-ary-ptrn-rest-ary-elem.js: Unexpected token (96:20)\n  94 | var callCount = 0;\n  95 | class C {\n\u003e 96 |   static method([...[x, y, z]]) {\n     |                     ^\n  97 |     assert.sameValue(x, 3);\n  98 |     assert.sameValue(y, 4);\n  99 |     assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-static-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/class/dstr/meth-static-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/class/dstr/meth-static-ary-ptrn-rest-ary-rest.js: Unexpected token (77:20)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   static method([...[...x]]) {\n     |                     ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.sameValue(x.length, 3);\n  80 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-static-ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/class/dstr/meth-static-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/class/dstr/meth-static-ary-ptrn-rest-obj-id.js: Unexpected token (76:20)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   static method([...{ length }]) {\n     |                     ^\n  77 |     assert.sameValue(length, 3);\n  78 |     callCount = callCount + 1;\n  79 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-static-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/class/dstr/meth-static-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/class/dstr/meth-static-ary-ptrn-rest-obj-prop-id.js: Unexpected token (77:20)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   static method([...{ 0: v, 1: w, 2: x, 3: y, length: z }]) {\n     |                     ^\n  78 |     assert.sameValue(v, 7);\n  79 |     assert.sameValue(w, 8);\n  80 |     assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-static-dflt-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-ary-init-iter-get-err-array-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-elem-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-elem-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-elem.js: Unexpected token (96:20)\n  94 | var callCount = 0;\n  95 | class C {\n\u003e 96 |   static method([...[x, y, z]] = [3, 4, 5]) {\n     |                     ^\n  97 |     assert.sameValue(x, 3);\n  98 |     assert.sameValue(y, 4);\n  99 |     assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-rest.js: Unexpected token (77:20)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   static method([...[...x]] = values) {\n     |                     ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.sameValue(x.length, 3);\n  80 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-obj-id.js: Unexpected token (76:20)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   static method([...{ length }] = [1, 2, 3]) {\n     |                     ^\n  77 |     assert.sameValue(length, 3);\n  78 |     callCount = callCount + 1;\n  79 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-obj-prop-id.js: Unexpected token (77:20)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   static method([...{ 0: v, 1: w, 2: x, 3: y, length: z }] = [7, 8, 9]) {\n     |                     ^\n  78 |     assert.sameValue(v, 7);\n  79 |     assert.sameValue(w, 8);\n  80 |     assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-rest-getter.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-rest-getter.js: Unexpected token (65:17)\n  63 | var callCount = 0;\n  64 | class C {\n\u003e 65 |   static method({...x} = { get v() { count++; return 2; } }) {\n     |                  ^\n  66 |     assert.sameValue(count, 1);\n  67 | \n  68 |     verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (66:17)\n  64 | var callCount = 0;\n  65 | class C {\n\u003e 66 |   static method({...rest} = o) {\n     |                  ^\n  67 |     assert.sameValue(rest.x, undefined);\n  68 | \n  69 |     verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-rest-val-obj.js: Unexpected token (64:23)\n  62 | var callCount = 0;\n  63 | class C {\n\u003e 64 |   static method({a, b, ...rest} = {x: 1, y: 2, a: 5, b: 3}) {\n     |                        ^\n  65 |     assert.sameValue(rest.a, undefined);\n  66 |     assert.sameValue(rest.b, undefined);\n  67 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-static-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/statements/class/dstr/meth-static-obj-ptrn-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-static-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/meth-static-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-static-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/statements/class/dstr/meth-static-obj-ptrn-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-static-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/statements/class/dstr/meth-static-obj-ptrn-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/dstr/meth-static-obj-ptrn-rest-getter.js-strict:true": "test/language/statements/class/dstr/meth-static-obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/class/dstr/meth-static-obj-ptrn-rest-getter.js: Unexpected token (65:17)\n  63 | var callCount = 0;\n  64 | class C {\n\u003e 65 |   static method({...x}) {\n     |                  ^\n  66 |     assert.sameValue(count, 1);\n  67 | \n  68 |     verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-static-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/class/dstr/meth-static-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/class/dstr/meth-static-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (66:17)\n  64 | var callCount = 0;\n  65 | class C {\n\u003e 66 |   static method({...rest}) {\n     |                  ^\n  67 |     assert.sameValue(rest.x, undefined);\n  68 | \n  69 |     verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/meth-static-obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/class/dstr/meth-static-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/class/dstr/meth-static-obj-ptrn-rest-val-obj.js: Unexpected token (64:23)\n  62 | var callCount = 0;\n  63 | class C {\n\u003e 64 |   static method({a, b, ...rest}) {\n     |                        ^\n  65 |     assert.sameValue(rest.a, undefined);\n  66 |     assert.sameValue(rest.b, undefined);\n  67 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-init-iter-close.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-init-iter-close.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-init-iter-close.js: Unexpected character '#' (86:2)\n  84 | var callCount = 0;\n  85 | class C {\n\u003e 86 |   #method([x]) {\n     |   ^\n  87 |     assert.sameValue(doneCallCount, 1);\n  88 |     callCount = callCount + 1;\n  89 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-init-iter-no-close.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-init-iter-no-close.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-init-iter-no-close.js: Unexpected character '#' (86:2)\n  84 | var callCount = 0;\n  85 | class C {\n\u003e 86 |   #method([x]) {\n     |   ^\n  87 |     assert.sameValue(doneCallCount, 0);\n  88 |     callCount = callCount + 1;\n  89 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-name-iter-val.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-name-iter-val.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-name-iter-val.js: Unexpected character '#' (83:2)\n  81 | var callCount = 0;\n  82 | class C {\n\u003e 83 |   #method([x, y, z]) {\n     |   ^\n  84 |     assert.sameValue(x, 1);\n  85 |     assert.sameValue(y, 2);\n  86 |     assert.sameValue(z, 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-elem-init.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-elem-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-elem-init.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   #method([[x, y, z] = [4, 5, 6]]) {\n     |   ^\n  76 |     assert.sameValue(x, 4);\n  77 |     assert.sameValue(y, 5);\n  78 |     assert.sameValue(z, 6); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-elem-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-elem-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-elem-iter.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   #method([[x, y, z] = [4, 5, 6]]) {\n     |   ^\n  77 |     assert.sameValue(x, 7);\n  78 |     assert.sameValue(y, 8);\n  79 |     assert.sameValue(z, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-empty-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-empty-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-empty-iter.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   #method([[] = function() { initCount += 1; }()]) {\n     |   ^\n  78 |     assert.sameValue(initCount, 0);\n  79 |     callCount = callCount + 1;\n  80 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-rest-init.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-rest-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-rest-init.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   #method([[...x] = values]) {\n     |   ^\n  77 |     assert(Array.isArray(x));\n  78 |     assert.sameValue(x[0], 2);\n  79 |     assert.sameValue(x[1], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-rest-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-rest-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-rest-iter.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | class C {\n\u003e 78 |   #method([[...x] = function() { initCount += 1; }()]) {\n     |   ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.sameValue(x[0], 2);\n  81 |     assert.sameValue(x[1], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-exhausted.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-exhausted.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-exhausted.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   #method([x = 23]) {\n     |   ^\n  77 |     assert.sameValue(x, 23);\n  78 |     callCount = callCount + 1;\n  79 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-arrow.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-arrow.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   #method([arrow = () =\u003e {}]) {\n     |   ^\n  78 |     assert.sameValue(arrow.name, 'arrow');\n  79 |     callCount = callCount + 1;\n  80 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-class.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-class.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   #method([cls = class {}, xCls = class X {}, xCls2 = class { static name() {} }]) {\n     |   ^\n  78 |     assert.sameValue(cls.name, 'cls');\n  79 |     assert.notSameValue(xCls.name, 'xCls');\n  80 |     assert.notSameValue(xCls2.name, 'xCls2'); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-cover.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-cover.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   #method([cover = (function () {}), xCover = (0, function() {})]) {\n     |   ^\n  78 |     assert.sameValue(cover.name, 'cover');\n  79 |     assert.notSameValue(xCover.name, 'xCover');\n  80 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-fn.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-fn.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   #method([fn = function () {}, xFn = function x() {}]) {\n     |   ^\n  78 |     assert.sameValue(fn.name, 'fn');\n  79 |     assert.notSameValue(xFn.name, 'xFn');\n  80 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-hole.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-hole.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-hole.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | class C {\n\u003e 71 |   #method([x = 23]) {\n     |   ^\n  72 |     assert.sameValue(x, 23);\n  73 |     // another statement\n  74 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-skipped.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-skipped.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-skipped.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   #method([w = counter(), x = counter(), y = counter(), z = counter()]) {\n     |   ^\n  78 |     assert.sameValue(w, null);\n  79 |     assert.sameValue(x, 0);\n  80 |     assert.sameValue(y, false); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-undef.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-undef.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-undef.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   #method([x = 23]) {\n     |   ^\n  76 |     assert.sameValue(x, 23);\n  77 |     callCount = callCount + 1;\n  78 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-iter-complete.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-iter-complete.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-iter-complete.js: Unexpected character '#' (79:2)\n  77 | var callCount = 0;\n  78 | class C {\n\u003e 79 |   #method([x]) {\n     |   ^\n  80 |     assert.sameValue(x, undefined);\n  81 |     callCount = callCount + 1;\n  82 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-iter-done.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-iter-done.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-iter-done.js: Unexpected character '#' (74:2)\n  72 | var callCount = 0;\n  73 | class C {\n\u003e 74 |   #method([_, x]) {\n     |   ^\n  75 |     assert.sameValue(x, undefined);\n  76 |     callCount = callCount + 1;\n  77 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-iter-val.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-iter-val.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-iter-val.js: Unexpected character '#' (83:2)\n  81 | var callCount = 0;\n  82 | class C {\n\u003e 83 |   #method([x, y, z]) {\n     |   ^\n  84 |     assert.sameValue(x, 1);\n  85 |     assert.sameValue(y, 2);\n  86 |     assert.sameValue(z, 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-obj-id-init.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-obj-id-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-obj-id-init.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   #method([{ x, y, z } = { x: 44, y: 55, z: 66 }]) {\n     |   ^\n  76 |     assert.sameValue(x, 44);\n  77 |     assert.sameValue(y, 55);\n  78 |     assert.sameValue(z, 66); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-obj-id.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-obj-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-obj-id.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   #method([{ x, y, z } = { x: 44, y: 55, z: 66 }]) {\n     |   ^\n  76 |     assert.sameValue(x, 11);\n  77 |     assert.sameValue(y, 22);\n  78 |     assert.sameValue(z, 33); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-obj-prop-id-init.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-obj-prop-id-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-obj-prop-id-init.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   #method([{ u: v, w: x, y: z } = { u: 444, w: 555, y: 666 }]) {\n     |   ^\n  76 |     assert.sameValue(v, 444);\n  77 |     assert.sameValue(x, 555);\n  78 |     assert.sameValue(z, 666); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-obj-prop-id.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-obj-prop-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-obj-prop-id.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   #method([{ u: v, w: x, y: z } = { u: 444, w: 555, y: 666 }]) {\n     |   ^\n  76 |     assert.sameValue(v, 777);\n  77 |     assert.sameValue(x, 888);\n  78 |     assert.sameValue(z, 999); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-rest-ary-elem.js: Unexpected character '#' (96:2)\n  94 | var callCount = 0;\n  95 | class C {\n\u003e 96 |   #method([...[x, y, z]]) {\n     |   ^\n  97 |     assert.sameValue(x, 3);\n  98 |     assert.sameValue(y, 4);\n  99 |     assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-rest-ary-rest.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   #method([...[...x]]) {\n     |   ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.sameValue(x.length, 3);\n  80 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-id-direct.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-id-direct.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-rest-id-direct.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   #method([...x]) {\n     |   ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.compareArray(x, [1]);\n  80 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-id-elision.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-id-elision.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-rest-id-elision.js: Unexpected character '#' (74:2)\n  72 | var callCount = 0;\n  73 | class C {\n\u003e 74 |   #method([ , , ...x]) {\n     |   ^\n  75 |     assert(Array.isArray(x));\n  76 |     assert.sameValue(x.length, 3);\n  77 |     assert.sameValue(x[0], 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-id-exhausted.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-id-exhausted.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-rest-id-exhausted.js: Unexpected character '#' (74:2)\n  72 | var callCount = 0;\n  73 | class C {\n\u003e 74 |   #method([, , ...x]) {\n     |   ^\n  75 |     assert(Array.isArray(x));\n  76 |     assert.sameValue(x.length, 0);\n  77 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-id.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-rest-id.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | class C {\n\u003e 71 |   #method([...x]) {\n     |   ^\n  72 |     assert(Array.isArray(x));\n  73 |     assert.sameValue(x.length, 3);\n  74 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-rest-obj-id.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   #method([...{ length }]) {\n     |   ^\n  77 |     assert.sameValue(length, 3);\n  78 |     callCount = callCount + 1;\n  79 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-rest-obj-prop-id.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   #method([...{ 0: v, 1: w, 2: x, 3: y, length: z }]) {\n     |   ^\n  78 |     assert.sameValue(v, 7);\n  79 |     assert.sameValue(w, 8);\n  80 |     assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-init-iter-close.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-init-iter-close.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-init-iter-close.js: Unexpected character '#' (86:2)\n  84 | var callCount = 0;\n  85 | class C {\n\u003e 86 |   #method([x] = iter) {\n     |   ^\n  87 |     assert.sameValue(doneCallCount, 1);\n  88 |     callCount = callCount + 1;\n  89 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-init-iter-no-close.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-init-iter-no-close.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-init-iter-no-close.js: Unexpected character '#' (86:2)\n  84 | var callCount = 0;\n  85 | class C {\n\u003e 86 |   #method([x] = iter) {\n     |   ^\n  87 |     assert.sameValue(doneCallCount, 0);\n  88 |     callCount = callCount + 1;\n  89 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-name-iter-val.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-name-iter-val.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-name-iter-val.js: Unexpected character '#' (83:2)\n  81 | var callCount = 0;\n  82 | class C {\n\u003e 83 |   #method([x, y, z] = [1, 2, 3]) {\n     |   ^\n  84 |     assert.sameValue(x, 1);\n  85 |     assert.sameValue(y, 2);\n  86 |     assert.sameValue(z, 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elem-init.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elem-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elem-init.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   #method([[x, y, z] = [4, 5, 6]] = []) {\n     |   ^\n  76 |     assert.sameValue(x, 4);\n  77 |     assert.sameValue(y, 5);\n  78 |     assert.sameValue(z, 6); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elem-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elem-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elem-iter.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   #method([[x, y, z] = [4, 5, 6]] = [[7, 8, 9]]) {\n     |   ^\n  77 |     assert.sameValue(x, 7);\n  78 |     assert.sameValue(y, 8);\n  79 |     assert.sameValue(z, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-empty-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-empty-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-empty-iter.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   #method([[] = function() { initCount += 1; }()] = [[23]]) {\n     |   ^\n  78 |     assert.sameValue(initCount, 0);\n  79 |     callCount = callCount + 1;\n  80 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-rest-init.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-rest-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-rest-init.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   #method([[...x] = values] = []) {\n     |   ^\n  77 |     assert(Array.isArray(x));\n  78 |     assert.sameValue(x[0], 2);\n  79 |     assert.sameValue(x[1], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-rest-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-rest-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-rest-iter.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | class C {\n\u003e 78 |   #method([[...x] = function() { initCount += 1; }()] = [values]) {\n     |   ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.sameValue(x[0], 2);\n  81 |     assert.sameValue(x[1], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-exhausted.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-exhausted.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-exhausted.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   #method([x = 23] = []) {\n     |   ^\n  77 |     assert.sameValue(x, 23);\n  78 |     callCount = callCount + 1;\n  79 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   #method([arrow = () =\u003e {}] = []) {\n     |   ^\n  78 |     assert.sameValue(arrow.name, 'arrow');\n  79 |     callCount = callCount + 1;\n  80 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   #method([cls = class {}, xCls = class X {}, xCls2 = class { static name() {} }] = []) {\n     |   ^\n  78 |     assert.sameValue(cls.name, 'cls');\n  79 |     assert.notSameValue(xCls.name, 'xCls');\n  80 |     assert.notSameValue(xCls2.name, 'xCls2'); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-cover.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-cover.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   #method([cover = (function () {}), xCover = (0, function() {})] = []) {\n     |   ^\n  78 |     assert.sameValue(cover.name, 'cover');\n  79 |     assert.notSameValue(xCover.name, 'xCover');\n  80 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-fn.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-fn.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   #method([fn = function () {}, xFn = function x() {}] = []) {\n     |   ^\n  78 |     assert.sameValue(fn.name, 'fn');\n  79 |     assert.notSameValue(xFn.name, 'xFn');\n  80 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-hole.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-hole.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-hole.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | class C {\n\u003e 71 |   #method([x = 23] = [,]) {\n     |   ^\n  72 |     assert.sameValue(x, 23);\n  73 |     // another statement\n  74 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-skipped.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-skipped.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-skipped.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   #method([w = counter(), x = counter(), y = counter(), z = counter()] = [null, 0, false, '']) {\n     |   ^\n  78 |     assert.sameValue(w, null);\n  79 |     assert.sameValue(x, 0);\n  80 |     assert.sameValue(y, false); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-undef.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-undef.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-undef.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   #method([x = 23] = [undefined]) {\n     |   ^\n  76 |     assert.sameValue(x, 23);\n  77 |     callCount = callCount + 1;\n  78 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-complete.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-complete.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-complete.js: Unexpected character '#' (79:2)\n  77 | var callCount = 0;\n  78 | class C {\n\u003e 79 |   #method([x] = []) {\n     |   ^\n  80 |     assert.sameValue(x, undefined);\n  81 |     callCount = callCount + 1;\n  82 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-done.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-done.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-done.js: Unexpected character '#' (74:2)\n  72 | var callCount = 0;\n  73 | class C {\n\u003e 74 |   #method([_, x] = []) {\n     |   ^\n  75 |     assert.sameValue(x, undefined);\n  76 |     callCount = callCount + 1;\n  77 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-val.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-val.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-val.js: Unexpected character '#' (83:2)\n  81 | var callCount = 0;\n  82 | class C {\n\u003e 83 |   #method([x, y, z] = [1, 2, 3]) {\n     |   ^\n  84 |     assert.sameValue(x, 1);\n  85 |     assert.sameValue(y, 2);\n  86 |     assert.sameValue(z, 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-id-init.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-id-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-id-init.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   #method([{ x, y, z } = { x: 44, y: 55, z: 66 }] = []) {\n     |   ^\n  76 |     assert.sameValue(x, 44);\n  77 |     assert.sameValue(y, 55);\n  78 |     assert.sameValue(z, 66); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-id.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-id.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   #method([{ x, y, z } = { x: 44, y: 55, z: 66 }] = [{ x: 11, y: 22, z: 33 }]) {\n     |   ^\n  76 |     assert.sameValue(x, 11);\n  77 |     assert.sameValue(y, 22);\n  78 |     assert.sameValue(z, 33); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-prop-id-init.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-prop-id-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-prop-id-init.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   #method([{ u: v, w: x, y: z } = { u: 444, w: 555, y: 666 }] = []) {\n     |   ^\n  76 |     assert.sameValue(v, 444);\n  77 |     assert.sameValue(x, 555);\n  78 |     assert.sameValue(z, 666); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-prop-id.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-prop-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-obj-prop-id.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   #method([{ u: v, w: x, y: z } = { u: 444, w: 555, y: 666 }] = [{ u: 777, w: 888, y: 999 }]) {\n     |   ^\n  76 |     assert.sameValue(v, 777);\n  77 |     assert.sameValue(x, 888);\n  78 |     assert.sameValue(z, 999); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-elem.js: Unexpected character '#' (96:2)\n  94 | var callCount = 0;\n  95 | class C {\n\u003e 96 |   #method([...[x, y, z]] = [3, 4, 5]) {\n     |   ^\n  97 |     assert.sameValue(x, 3);\n  98 |     assert.sameValue(y, 4);\n  99 |     assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-rest.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   #method([...[...x]] = values) {\n     |   ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.sameValue(x.length, 3);\n  80 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-id-direct.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-id-direct.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-id-direct.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   #method([...x] = [1]) {\n     |   ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.compareArray(x, [1]);\n  80 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-id-elision.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-id-elision.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-id-elision.js: Unexpected character '#' (74:2)\n  72 | var callCount = 0;\n  73 | class C {\n\u003e 74 |   #method([ , , ...x] = values) {\n     |   ^\n  75 |     assert(Array.isArray(x));\n  76 |     assert.sameValue(x.length, 3);\n  77 |     assert.sameValue(x[0], 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-id-exhausted.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-id-exhausted.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-id-exhausted.js: Unexpected character '#' (74:2)\n  72 | var callCount = 0;\n  73 | class C {\n\u003e 74 |   #method([, , ...x] = [1, 2]) {\n     |   ^\n  75 |     assert(Array.isArray(x));\n  76 |     assert.sameValue(x.length, 0);\n  77 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-id.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-id.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | class C {\n\u003e 71 |   #method([...x] = values) {\n     |   ^\n  72 |     assert(Array.isArray(x));\n  73 |     assert.sameValue(x.length, 3);\n  74 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-obj-id.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   #method([...{ length }] = [1, 2, 3]) {\n     |   ^\n  77 |     assert.sameValue(length, 3);\n  78 |     callCount = callCount + 1;\n  79 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-obj-prop-id.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   #method([...{ 0: v, 1: w, 2: x, 3: y, length: z }] = [7, 8, 9]) {\n     |   ^\n  78 |     assert.sameValue(v, 7);\n  79 |     assert.sameValue(w, 8);\n  80 |     assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-empty.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-empty.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-empty.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   #method({} = obj) {\n     |   ^\n  76 |     assert.sameValue(accessCount, 0);\n  77 |     callCount = callCount + 1;\n  78 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-arrow.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-arrow.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   #method({ arrow = () =\u003e {} } = {}) {\n     |   ^\n  77 |     assert.sameValue(arrow.name, 'arrow');\n  78 |     callCount = callCount + 1;\n  79 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-class.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-class.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   #method({ cls = class {}, xCls = class X {}, xCls2 = class { static name() {} } } = {}) {\n     |   ^\n  77 |     assert.sameValue(cls.name, 'cls');\n  78 |     assert.notSameValue(xCls.name, 'xCls');\n  79 |     assert.notSameValue(xCls2.name, 'xCls2'); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-cover.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-cover.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   #method({ cover = (function () {}), xCover = (0, function() {})  } = {}) {\n     |   ^\n  77 |     assert.sameValue(cover.name, 'cover');\n  78 |     assert.notSameValue(xCover.name, 'xCover');\n  79 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-fn.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-fn.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   #method({ fn = function () {}, xFn = function x() {} } = {}) {\n     |   ^\n  77 |     assert.sameValue(fn.name, 'fn');\n  78 |     assert.notSameValue(xFn.name, 'xFn');\n  79 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-skipped.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-skipped.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-skipped.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   #method({ w = counter(), x = counter(), y = counter(), z = counter() } = { w: null, x: 0, y: false, z: '' }) {\n     |   ^\n  77 |     assert.sameValue(w, null);\n  78 |     assert.sameValue(x, 0);\n  79 |     assert.sameValue(y, false); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-trailing-comma.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-trailing-comma.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-trailing-comma.js: Unexpected character '#' (70:2)\n  68 | var callCount = 0;\n  69 | class C {\n\u003e 70 |   #method({ x, } = { x: 23 }) {\n     |   ^\n  71 |     assert.sameValue(x, 23);\n  72 |     callCount = callCount + 1;\n  73 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-ary-init.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-ary-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-ary-init.js: Unexpected character '#' (73:2)\n  71 | var callCount = 0;\n  72 | class C {\n\u003e 73 |   #method({ w: [x, y, z] = [4, 5, 6] } = {}) {\n     |   ^\n  74 |     assert.sameValue(x, 4);\n  75 |     assert.sameValue(y, 5);\n  76 |     assert.sameValue(z, 6); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-ary-trailing-comma.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-ary-trailing-comma.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-ary-trailing-comma.js: Unexpected character '#' (70:2)\n  68 | var callCount = 0;\n  69 | class C {\n\u003e 70 |   #method({ x: [y], } = { x: [45] }) {\n     |   ^\n  71 |     assert.sameValue(y,45);\n  72 |     callCount = callCount + 1;\n  73 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-ary.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-ary.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-ary.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | class C {\n\u003e 71 |   #method({ w: [x, y, z] = [4, 5, 6] } = { w: [7, undefined, ] }) {\n     |   ^\n  72 |     assert.sameValue(x, 7);\n  73 |     assert.sameValue(y, undefined);\n  74 |     assert.sameValue(z, undefined); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-id-init-skipped.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-id-init-skipped.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-id-init-skipped.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   #method({ s: t = counter(), u: v = counter(), w: x = counter(), y: z = counter() } = { s: null, u: 0, w: false, y: '' }) {\n     |   ^\n  76 |     assert.sameValue(t, null);\n  77 |     assert.sameValue(v, 0);\n  78 |     assert.sameValue(x, false); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-id-init.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-id-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-id-init.js: Unexpected character '#' (70:2)\n  68 | var callCount = 0;\n  69 | class C {\n\u003e 70 |   #method({ x: y = 33 } = { }) {\n     |   ^\n  71 |     assert.sameValue(y, 33);\n  72 |     assert.throws(ReferenceError, function() {\n  73 |       x; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-id-trailing-comma.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-id-trailing-comma.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-id-trailing-comma.js: Unexpected character '#' (70:2)\n  68 | var callCount = 0;\n  69 | class C {\n\u003e 70 |   #method({ x: y, } = { x: 23 }) {\n     |   ^\n  71 |     assert.sameValue(y, 23);\n  72 | \n  73 |     assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-id.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-id.js: Unexpected character '#' (70:2)\n  68 | var callCount = 0;\n  69 | class C {\n\u003e 70 |   #method({ x: y } = { x: 23 }) {\n     |   ^\n  71 |     assert.sameValue(y, 23);\n  72 |     assert.throws(ReferenceError, function() {\n  73 |       x; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-obj-init.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-obj-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-obj-init.js: Unexpected character '#' (73:2)\n  71 | var callCount = 0;\n  72 | class C {\n\u003e 73 |   #method({ w: { x, y, z } = { x: 4, y: 5, z: 6 } } = { w: undefined }) {\n     |   ^\n  74 |     assert.sameValue(x, 4);\n  75 |     assert.sameValue(y, 5);\n  76 |     assert.sameValue(z, 6); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-obj.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-obj.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-prop-obj.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | class C {\n\u003e 71 |   #method({ w: { x, y, z } = { x: 4, y: 5, z: 6 } } = { w: { x: undefined, z: 7 } }) {\n     |   ^\n  72 |     assert.sameValue(x, undefined);\n  73 |     assert.sameValue(y, undefined);\n  74 |     assert.sameValue(z, 7); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-rest-getter.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-rest-getter.js: Unexpected character '#' (65:2)\n  63 | var callCount = 0;\n  64 | class C {\n\u003e 65 |   #method({...x} = { get v() { count++; return 2; } }) {\n     |   ^\n  66 |     assert.sameValue(count, 1);\n  67 | \n  68 |     verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-rest-skip-non-enumerable.js: Unexpected character '#' (66:2)\n  64 | var callCount = 0;\n  65 | class C {\n\u003e 66 |   #method({...rest} = o) {\n     |   ^\n  67 |     assert.sameValue(rest.x, undefined);\n  68 | \n  69 |     verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-rest-val-obj.js: Unexpected character '#' (64:2)\n  62 | var callCount = 0;\n  63 | class C {\n\u003e 64 |   #method({a, b, ...rest} = {x: 1, y: 2, a: 5, b: 3}) {\n     |   ^\n  65 |     assert.sameValue(rest.a, undefined);\n  66 |     assert.sameValue(rest.b, undefined);\n  67 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-empty.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-empty.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-empty.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   #method({}) {\n     |   ^\n  76 |     assert.sameValue(accessCount, 0);\n  77 |     callCount = callCount + 1;\n  78 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-arrow.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-arrow.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   #method({ arrow = () =\u003e {} }) {\n     |   ^\n  77 |     assert.sameValue(arrow.name, 'arrow');\n  78 |     callCount = callCount + 1;\n  79 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-class.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-class.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   #method({ cls = class {}, xCls = class X {}, xCls2 = class { static name() {} } }) {\n     |   ^\n  77 |     assert.sameValue(cls.name, 'cls');\n  78 |     assert.notSameValue(xCls.name, 'xCls');\n  79 |     assert.notSameValue(xCls2.name, 'xCls2'); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-cover.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-cover.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   #method({ cover = (function () {}), xCover = (0, function() {})  }) {\n     |   ^\n  77 |     assert.sameValue(cover.name, 'cover');\n  78 |     assert.notSameValue(xCover.name, 'xCover');\n  79 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-fn.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-fn.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   #method({ fn = function () {}, xFn = function x() {} }) {\n     |   ^\n  77 |     assert.sameValue(fn.name, 'fn');\n  78 |     assert.notSameValue(xFn.name, 'xFn');\n  79 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-skipped.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-skipped.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-skipped.js: Unexpected character '#' (76:2)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   #method({ w = counter(), x = counter(), y = counter(), z = counter() }) {\n     |   ^\n  77 |     assert.sameValue(w, null);\n  78 |     assert.sameValue(x, 0);\n  79 |     assert.sameValue(y, false); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-id-trailing-comma.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-id-trailing-comma.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-id-trailing-comma.js: Unexpected character '#' (70:2)\n  68 | var callCount = 0;\n  69 | class C {\n\u003e 70 |   #method({ x, }) {\n     |   ^\n  71 |     assert.sameValue(x, 23);\n  72 |     callCount = callCount + 1;\n  73 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-ary-init.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-ary-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-prop-ary-init.js: Unexpected character '#' (73:2)\n  71 | var callCount = 0;\n  72 | class C {\n\u003e 73 |   #method({ w: [x, y, z] = [4, 5, 6] }) {\n     |   ^\n  74 |     assert.sameValue(x, 4);\n  75 |     assert.sameValue(y, 5);\n  76 |     assert.sameValue(z, 6); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-ary-trailing-comma.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-ary-trailing-comma.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-prop-ary-trailing-comma.js: Unexpected character '#' (70:2)\n  68 | var callCount = 0;\n  69 | class C {\n\u003e 70 |   #method({ x: [y], }) {\n     |   ^\n  71 |     assert.sameValue(y,45);\n  72 |     callCount = callCount + 1;\n  73 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-ary.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-ary.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-prop-ary.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | class C {\n\u003e 71 |   #method({ w: [x, y, z] = [4, 5, 6] }) {\n     |   ^\n  72 |     assert.sameValue(x, 7);\n  73 |     assert.sameValue(y, undefined);\n  74 |     assert.sameValue(z, undefined); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-id-init-skipped.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-id-init-skipped.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-prop-id-init-skipped.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   #method({ s: t = counter(), u: v = counter(), w: x = counter(), y: z = counter() }) {\n     |   ^\n  76 |     assert.sameValue(t, null);\n  77 |     assert.sameValue(v, 0);\n  78 |     assert.sameValue(x, false); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-id-init.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-id-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-prop-id-init.js: Unexpected character '#' (70:2)\n  68 | var callCount = 0;\n  69 | class C {\n\u003e 70 |   #method({ x: y = 33 }) {\n     |   ^\n  71 |     assert.sameValue(y, 33);\n  72 |     assert.throws(ReferenceError, function() {\n  73 |       x; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-id-trailing-comma.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-id-trailing-comma.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-prop-id-trailing-comma.js: Unexpected character '#' (70:2)\n  68 | var callCount = 0;\n  69 | class C {\n\u003e 70 |   #method({ x: y, }) {\n     |   ^\n  71 |     assert.sameValue(y, 23);\n  72 | \n  73 |     assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-id.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-prop-id.js: Unexpected character '#' (70:2)\n  68 | var callCount = 0;\n  69 | class C {\n\u003e 70 |   #method({ x: y }) {\n     |   ^\n  71 |     assert.sameValue(y, 23);\n  72 |     assert.throws(ReferenceError, function() {\n  73 |       x; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-obj-init.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-obj-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-prop-obj-init.js: Unexpected character '#' (73:2)\n  71 | var callCount = 0;\n  72 | class C {\n\u003e 73 |   #method({ w: { x, y, z } = { x: 4, y: 5, z: 6 } }) {\n     |   ^\n  74 |     assert.sameValue(x, 4);\n  75 |     assert.sameValue(y, 5);\n  76 |     assert.sameValue(z, 6); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-obj.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-prop-obj.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-prop-obj.js: Unexpected character '#' (71:2)\n  69 | var callCount = 0;\n  70 | class C {\n\u003e 71 |   #method({ w: { x, y, z } = { x: 4, y: 5, z: 6 } }) {\n     |   ^\n  72 |     assert.sameValue(x, undefined);\n  73 |     assert.sameValue(y, undefined);\n  74 |     assert.sameValue(z, 7); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-rest-getter.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-rest-getter.js: Unexpected character '#' (65:2)\n  63 | var callCount = 0;\n  64 | class C {\n\u003e 65 |   #method({...x}) {\n     |   ^\n  66 |     assert.sameValue(count, 1);\n  67 | \n  68 |     verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-rest-skip-non-enumerable.js: Unexpected character '#' (66:2)\n  64 | var callCount = 0;\n  65 | class C {\n\u003e 66 |   #method({...rest}) {\n     |   ^\n  67 |     assert.sameValue(rest.x, undefined);\n  68 | \n  69 |     verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-rest-val-obj.js: Unexpected character '#' (64:2)\n  62 | var callCount = 0;\n  63 | class C {\n\u003e 64 |   #method({a, b, ...rest}) {\n     |   ^\n  65 |     assert.sameValue(rest.a, undefined);\n  66 |     assert.sameValue(rest.b, undefined);\n  67 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-init-iter-close.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-init-iter-close.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-init-iter-close.js: Unexpected character '#' (86:9)\n  84 | var callCount = 0;\n  85 | class C {\n\u003e 86 |   static #method([x]) {\n     |          ^\n  87 |     assert.sameValue(doneCallCount, 1);\n  88 |     callCount = callCount + 1;\n  89 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-init-iter-no-close.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-init-iter-no-close.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-init-iter-no-close.js: Unexpected character '#' (86:9)\n  84 | var callCount = 0;\n  85 | class C {\n\u003e 86 |   static #method([x]) {\n     |          ^\n  87 |     assert.sameValue(doneCallCount, 0);\n  88 |     callCount = callCount + 1;\n  89 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-name-iter-val.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-name-iter-val.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-name-iter-val.js: Unexpected character '#' (83:9)\n  81 | var callCount = 0;\n  82 | class C {\n\u003e 83 |   static #method([x, y, z]) {\n     |          ^\n  84 |     assert.sameValue(x, 1);\n  85 |     assert.sameValue(y, 2);\n  86 |     assert.sameValue(z, 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-elem-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-elem-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-elem-init.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   static #method([[x, y, z] = [4, 5, 6]]) {\n     |          ^\n  76 |     assert.sameValue(x, 4);\n  77 |     assert.sameValue(y, 5);\n  78 |     assert.sameValue(z, 6); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-elem-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-elem-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-elem-iter.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   static #method([[x, y, z] = [4, 5, 6]]) {\n     |          ^\n  77 |     assert.sameValue(x, 7);\n  78 |     assert.sameValue(y, 8);\n  79 |     assert.sameValue(z, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-empty-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-empty-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-empty-iter.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   static #method([[] = function() { initCount += 1; }()]) {\n     |          ^\n  78 |     assert.sameValue(initCount, 0);\n  79 |     callCount = callCount + 1;\n  80 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-rest-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-rest-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-rest-init.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   static #method([[...x] = values]) {\n     |          ^\n  77 |     assert(Array.isArray(x));\n  78 |     assert.sameValue(x[0], 2);\n  79 |     assert.sameValue(x[1], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-rest-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-rest-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-rest-iter.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | class C {\n\u003e 78 |   static #method([[...x] = function() { initCount += 1; }()]) {\n     |          ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.sameValue(x[0], 2);\n  81 |     assert.sameValue(x[1], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-exhausted.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-exhausted.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-exhausted.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   static #method([x = 23]) {\n     |          ^\n  77 |     assert.sameValue(x, 23);\n  78 |     callCount = callCount + 1;\n  79 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-arrow.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-arrow.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   static #method([arrow = () =\u003e {}]) {\n     |          ^\n  78 |     assert.sameValue(arrow.name, 'arrow');\n  79 |     callCount = callCount + 1;\n  80 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-class.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-class.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   static #method([cls = class {}, xCls = class X {}, xCls2 = class { static name() {} }]) {\n     |          ^\n  78 |     assert.sameValue(cls.name, 'cls');\n  79 |     assert.notSameValue(xCls.name, 'xCls');\n  80 |     assert.notSameValue(xCls2.name, 'xCls2'); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-cover.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-cover.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   static #method([cover = (function () {}), xCover = (0, function() {})]) {\n     |          ^\n  78 |     assert.sameValue(cover.name, 'cover');\n  79 |     assert.notSameValue(xCover.name, 'xCover');\n  80 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-fn.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-fn.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   static #method([fn = function () {}, xFn = function x() {}]) {\n     |          ^\n  78 |     assert.sameValue(fn.name, 'fn');\n  79 |     assert.notSameValue(xFn.name, 'xFn');\n  80 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-hole.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-hole.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-hole.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | class C {\n\u003e 71 |   static #method([x = 23]) {\n     |          ^\n  72 |     assert.sameValue(x, 23);\n  73 |     // another statement\n  74 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-skipped.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-skipped.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-skipped.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   static #method([w = counter(), x = counter(), y = counter(), z = counter()]) {\n     |          ^\n  78 |     assert.sameValue(w, null);\n  79 |     assert.sameValue(x, 0);\n  80 |     assert.sameValue(y, false); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-undef.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-undef.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-undef.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   static #method([x = 23]) {\n     |          ^\n  76 |     assert.sameValue(x, 23);\n  77 |     callCount = callCount + 1;\n  78 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-complete.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-complete.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-complete.js: Unexpected character '#' (79:9)\n  77 | var callCount = 0;\n  78 | class C {\n\u003e 79 |   static #method([x]) {\n     |          ^\n  80 |     assert.sameValue(x, undefined);\n  81 |     callCount = callCount + 1;\n  82 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-done.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-done.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-done.js: Unexpected character '#' (74:9)\n  72 | var callCount = 0;\n  73 | class C {\n\u003e 74 |   static #method([_, x]) {\n     |          ^\n  75 |     assert.sameValue(x, undefined);\n  76 |     callCount = callCount + 1;\n  77 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-val.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-val.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-val.js: Unexpected character '#' (83:9)\n  81 | var callCount = 0;\n  82 | class C {\n\u003e 83 |   static #method([x, y, z]) {\n     |          ^\n  84 |     assert.sameValue(x, 1);\n  85 |     assert.sameValue(y, 2);\n  86 |     assert.sameValue(z, 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-obj-id-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-obj-id-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-obj-id-init.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   static #method([{ x, y, z } = { x: 44, y: 55, z: 66 }]) {\n     |          ^\n  76 |     assert.sameValue(x, 44);\n  77 |     assert.sameValue(y, 55);\n  78 |     assert.sameValue(z, 66); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-obj-id.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-obj-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-obj-id.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   static #method([{ x, y, z } = { x: 44, y: 55, z: 66 }]) {\n     |          ^\n  76 |     assert.sameValue(x, 11);\n  77 |     assert.sameValue(y, 22);\n  78 |     assert.sameValue(z, 33); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-obj-prop-id-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-obj-prop-id-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-obj-prop-id-init.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   static #method([{ u: v, w: x, y: z } = { u: 444, w: 555, y: 666 }]) {\n     |          ^\n  76 |     assert.sameValue(v, 444);\n  77 |     assert.sameValue(x, 555);\n  78 |     assert.sameValue(z, 666); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-obj-prop-id.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-obj-prop-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-obj-prop-id.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   static #method([{ u: v, w: x, y: z } = { u: 444, w: 555, y: 666 }]) {\n     |          ^\n  76 |     assert.sameValue(v, 777);\n  77 |     assert.sameValue(x, 888);\n  78 |     assert.sameValue(z, 999); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-ary-elem.js: Unexpected character '#' (96:9)\n  94 | var callCount = 0;\n  95 | class C {\n\u003e 96 |   static #method([...[x, y, z]]) {\n     |          ^\n  97 |     assert.sameValue(x, 3);\n  98 |     assert.sameValue(y, 4);\n  99 |     assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-ary-rest.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   static #method([...[...x]]) {\n     |          ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.sameValue(x.length, 3);\n  80 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-id-direct.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-id-direct.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-id-direct.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   static #method([...x]) {\n     |          ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.compareArray(x, [1]);\n  80 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-id-elision.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-id-elision.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-id-elision.js: Unexpected character '#' (74:9)\n  72 | var callCount = 0;\n  73 | class C {\n\u003e 74 |   static #method([ , , ...x]) {\n     |          ^\n  75 |     assert(Array.isArray(x));\n  76 |     assert.sameValue(x.length, 3);\n  77 |     assert.sameValue(x[0], 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-id-exhausted.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-id-exhausted.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-id-exhausted.js: Unexpected character '#' (74:9)\n  72 | var callCount = 0;\n  73 | class C {\n\u003e 74 |   static #method([, , ...x]) {\n     |          ^\n  75 |     assert(Array.isArray(x));\n  76 |     assert.sameValue(x.length, 0);\n  77 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-id.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-id.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | class C {\n\u003e 71 |   static #method([...x]) {\n     |          ^\n  72 |     assert(Array.isArray(x));\n  73 |     assert.sameValue(x.length, 3);\n  74 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-obj-id.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   static #method([...{ length }]) {\n     |          ^\n  77 |     assert.sameValue(length, 3);\n  78 |     callCount = callCount + 1;\n  79 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-obj-prop-id.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   static #method([...{ 0: v, 1: w, 2: x, 3: y, length: z }]) {\n     |          ^\n  78 |     assert.sameValue(v, 7);\n  79 |     assert.sameValue(w, 8);\n  80 |     assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-init-iter-close.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-init-iter-close.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-init-iter-close.js: Unexpected character '#' (86:9)\n  84 | var callCount = 0;\n  85 | class C {\n\u003e 86 |   static #method([x] = iter) {\n     |          ^\n  87 |     assert.sameValue(doneCallCount, 1);\n  88 |     callCount = callCount + 1;\n  89 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-init-iter-no-close.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-init-iter-no-close.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-init-iter-no-close.js: Unexpected character '#' (86:9)\n  84 | var callCount = 0;\n  85 | class C {\n\u003e 86 |   static #method([x] = iter) {\n     |          ^\n  87 |     assert.sameValue(doneCallCount, 0);\n  88 |     callCount = callCount + 1;\n  89 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-name-iter-val.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-name-iter-val.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-name-iter-val.js: Unexpected character '#' (83:9)\n  81 | var callCount = 0;\n  82 | class C {\n\u003e 83 |   static #method([x, y, z] = [1, 2, 3]) {\n     |          ^\n  84 |     assert.sameValue(x, 1);\n  85 |     assert.sameValue(y, 2);\n  86 |     assert.sameValue(z, 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elem-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elem-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elem-init.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   static #method([[x, y, z] = [4, 5, 6]] = []) {\n     |          ^\n  76 |     assert.sameValue(x, 4);\n  77 |     assert.sameValue(y, 5);\n  78 |     assert.sameValue(z, 6); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elem-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elem-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elem-iter.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   static #method([[x, y, z] = [4, 5, 6]] = [[7, 8, 9]]) {\n     |          ^\n  77 |     assert.sameValue(x, 7);\n  78 |     assert.sameValue(y, 8);\n  79 |     assert.sameValue(z, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-empty-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-empty-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-empty-iter.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   static #method([[] = function() { initCount += 1; }()] = [[23]]) {\n     |          ^\n  78 |     assert.sameValue(initCount, 0);\n  79 |     callCount = callCount + 1;\n  80 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-rest-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-rest-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-rest-init.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   static #method([[...x] = values] = []) {\n     |          ^\n  77 |     assert(Array.isArray(x));\n  78 |     assert.sameValue(x[0], 2);\n  79 |     assert.sameValue(x[1], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-rest-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-rest-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-rest-iter.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | class C {\n\u003e 78 |   static #method([[...x] = function() { initCount += 1; }()] = [values]) {\n     |          ^\n  79 |     assert(Array.isArray(x));\n  80 |     assert.sameValue(x[0], 2);\n  81 |     assert.sameValue(x[1], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-exhausted.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-exhausted.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-exhausted.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   static #method([x = 23] = []) {\n     |          ^\n  77 |     assert.sameValue(x, 23);\n  78 |     callCount = callCount + 1;\n  79 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   static #method([arrow = () =\u003e {}] = []) {\n     |          ^\n  78 |     assert.sameValue(arrow.name, 'arrow');\n  79 |     callCount = callCount + 1;\n  80 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-class.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-class.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   static #method([cls = class {}, xCls = class X {}, xCls2 = class { static name() {} }] = []) {\n     |          ^\n  78 |     assert.sameValue(cls.name, 'cls');\n  79 |     assert.notSameValue(xCls.name, 'xCls');\n  80 |     assert.notSameValue(xCls2.name, 'xCls2'); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-cover.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-cover.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   static #method([cover = (function () {}), xCover = (0, function() {})] = []) {\n     |          ^\n  78 |     assert.sameValue(cover.name, 'cover');\n  79 |     assert.notSameValue(xCover.name, 'xCover');\n  80 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-fn.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-fn.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   static #method([fn = function () {}, xFn = function x() {}] = []) {\n     |          ^\n  78 |     assert.sameValue(fn.name, 'fn');\n  79 |     assert.notSameValue(xFn.name, 'xFn');\n  80 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-hole.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-hole.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-hole.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | class C {\n\u003e 71 |   static #method([x = 23] = [,]) {\n     |          ^\n  72 |     assert.sameValue(x, 23);\n  73 |     // another statement\n  74 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-skipped.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-skipped.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-skipped.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   static #method([w = counter(), x = counter(), y = counter(), z = counter()] = [null, 0, false, '']) {\n     |          ^\n  78 |     assert.sameValue(w, null);\n  79 |     assert.sameValue(x, 0);\n  80 |     assert.sameValue(y, false); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-undef.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-undef.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-undef.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   static #method([x = 23] = [undefined]) {\n     |          ^\n  76 |     assert.sameValue(x, 23);\n  77 |     callCount = callCount + 1;\n  78 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-complete.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-complete.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-complete.js: Unexpected character '#' (79:9)\n  77 | var callCount = 0;\n  78 | class C {\n\u003e 79 |   static #method([x] = []) {\n     |          ^\n  80 |     assert.sameValue(x, undefined);\n  81 |     callCount = callCount + 1;\n  82 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-done.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-done.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-done.js: Unexpected character '#' (74:9)\n  72 | var callCount = 0;\n  73 | class C {\n\u003e 74 |   static #method([_, x] = []) {\n     |          ^\n  75 |     assert.sameValue(x, undefined);\n  76 |     callCount = callCount + 1;\n  77 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-val.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-val.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-val.js: Unexpected character '#' (83:9)\n  81 | var callCount = 0;\n  82 | class C {\n\u003e 83 |   static #method([x, y, z] = [1, 2, 3]) {\n     |          ^\n  84 |     assert.sameValue(x, 1);\n  85 |     assert.sameValue(y, 2);\n  86 |     assert.sameValue(z, 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-id-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-id-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-id-init.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   static #method([{ x, y, z } = { x: 44, y: 55, z: 66 }] = []) {\n     |          ^\n  76 |     assert.sameValue(x, 44);\n  77 |     assert.sameValue(y, 55);\n  78 |     assert.sameValue(z, 66); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-id.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-id.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   static #method([{ x, y, z } = { x: 44, y: 55, z: 66 }] = [{ x: 11, y: 22, z: 33 }]) {\n     |          ^\n  76 |     assert.sameValue(x, 11);\n  77 |     assert.sameValue(y, 22);\n  78 |     assert.sameValue(z, 33); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-prop-id-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-prop-id-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-prop-id-init.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   static #method([{ u: v, w: x, y: z } = { u: 444, w: 555, y: 666 }] = []) {\n     |          ^\n  76 |     assert.sameValue(v, 444);\n  77 |     assert.sameValue(x, 555);\n  78 |     assert.sameValue(z, 666); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-prop-id.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-prop-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-obj-prop-id.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   static #method([{ u: v, w: x, y: z } = { u: 444, w: 555, y: 666 }] = [{ u: 777, w: 888, y: 999 }]) {\n     |          ^\n  76 |     assert.sameValue(v, 777);\n  77 |     assert.sameValue(x, 888);\n  78 |     assert.sameValue(z, 999); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-elem.js: Unexpected character '#' (96:9)\n  94 | var callCount = 0;\n  95 | class C {\n\u003e 96 |   static #method([...[x, y, z]] = [3, 4, 5]) {\n     |          ^\n  97 |     assert.sameValue(x, 3);\n  98 |     assert.sameValue(y, 4);\n  99 |     assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-rest.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   static #method([...[...x]] = values) {\n     |          ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.sameValue(x.length, 3);\n  80 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-direct.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-direct.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-direct.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   static #method([...x] = [1]) {\n     |          ^\n  78 |     assert(Array.isArray(x));\n  79 |     assert.compareArray(x, [1]);\n  80 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-elision.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-elision.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-elision.js: Unexpected character '#' (74:9)\n  72 | var callCount = 0;\n  73 | class C {\n\u003e 74 |   static #method([ , , ...x] = values) {\n     |          ^\n  75 |     assert(Array.isArray(x));\n  76 |     assert.sameValue(x.length, 3);\n  77 |     assert.sameValue(x[0], 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-exhausted.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-exhausted.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id-exhausted.js: Unexpected character '#' (74:9)\n  72 | var callCount = 0;\n  73 | class C {\n\u003e 74 |   static #method([, , ...x] = [1, 2]) {\n     |          ^\n  75 |     assert(Array.isArray(x));\n  76 |     assert.sameValue(x.length, 0);\n  77 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-id.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | class C {\n\u003e 71 |   static #method([...x] = values) {\n     |          ^\n  72 |     assert(Array.isArray(x));\n  73 |     assert.sameValue(x.length, 3);\n  74 |     assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-obj-id.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   static #method([...{ length }] = [1, 2, 3]) {\n     |          ^\n  77 |     assert.sameValue(length, 3);\n  78 |     callCount = callCount + 1;\n  79 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-obj-prop-id.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C {\n\u003e 77 |   static #method([...{ 0: v, 1: w, 2: x, 3: y, length: z }] = [7, 8, 9]) {\n     |          ^\n  78 |     assert.sameValue(v, 7);\n  79 |     assert.sameValue(w, 8);\n  80 |     assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-empty.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-empty.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-empty.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   static #method({} = obj) {\n     |          ^\n  76 |     assert.sameValue(accessCount, 0);\n  77 |     callCount = callCount + 1;\n  78 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-arrow.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-arrow.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   static #method({ arrow = () =\u003e {} } = {}) {\n     |          ^\n  77 |     assert.sameValue(arrow.name, 'arrow');\n  78 |     callCount = callCount + 1;\n  79 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-class.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-class.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   static #method({ cls = class {}, xCls = class X {}, xCls2 = class { static name() {} } } = {}) {\n     |          ^\n  77 |     assert.sameValue(cls.name, 'cls');\n  78 |     assert.notSameValue(xCls.name, 'xCls');\n  79 |     assert.notSameValue(xCls2.name, 'xCls2'); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-cover.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-cover.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   static #method({ cover = (function () {}), xCover = (0, function() {})  } = {}) {\n     |          ^\n  77 |     assert.sameValue(cover.name, 'cover');\n  78 |     assert.notSameValue(xCover.name, 'xCover');\n  79 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-fn.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-fn.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   static #method({ fn = function () {}, xFn = function x() {} } = {}) {\n     |          ^\n  77 |     assert.sameValue(fn.name, 'fn');\n  78 |     assert.notSameValue(xFn.name, 'xFn');\n  79 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-skipped.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-skipped.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-skipped.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   static #method({ w = counter(), x = counter(), y = counter(), z = counter() } = { w: null, x: 0, y: false, z: '' }) {\n     |          ^\n  77 |     assert.sameValue(w, null);\n  78 |     assert.sameValue(x, 0);\n  79 |     assert.sameValue(y, false); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-trailing-comma.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-trailing-comma.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-trailing-comma.js: Unexpected character '#' (70:9)\n  68 | var callCount = 0;\n  69 | class C {\n\u003e 70 |   static #method({ x, } = { x: 23 }) {\n     |          ^\n  71 |     assert.sameValue(x, 23);\n  72 |     callCount = callCount + 1;\n  73 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary-init.js: Unexpected character '#' (73:9)\n  71 | var callCount = 0;\n  72 | class C {\n\u003e 73 |   static #method({ w: [x, y, z] = [4, 5, 6] } = {}) {\n     |          ^\n  74 |     assert.sameValue(x, 4);\n  75 |     assert.sameValue(y, 5);\n  76 |     assert.sameValue(z, 6); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary-trailing-comma.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary-trailing-comma.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary-trailing-comma.js: Unexpected character '#' (70:9)\n  68 | var callCount = 0;\n  69 | class C {\n\u003e 70 |   static #method({ x: [y], } = { x: [45] }) {\n     |          ^\n  71 |     assert.sameValue(y,45);\n  72 |     callCount = callCount + 1;\n  73 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-ary.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | class C {\n\u003e 71 |   static #method({ w: [x, y, z] = [4, 5, 6] } = { w: [7, undefined, ] }) {\n     |          ^\n  72 |     assert.sameValue(x, 7);\n  73 |     assert.sameValue(y, undefined);\n  74 |     assert.sameValue(z, undefined); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-init-skipped.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-init-skipped.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-init-skipped.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   static #method({ s: t = counter(), u: v = counter(), w: x = counter(), y: z = counter() } = { s: null, u: 0, w: false, y: '' }) {\n     |          ^\n  76 |     assert.sameValue(t, null);\n  77 |     assert.sameValue(v, 0);\n  78 |     assert.sameValue(x, false); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-init.js: Unexpected character '#' (70:9)\n  68 | var callCount = 0;\n  69 | class C {\n\u003e 70 |   static #method({ x: y = 33 } = { }) {\n     |          ^\n  71 |     assert.sameValue(y, 33);\n  72 |     assert.throws(ReferenceError, function() {\n  73 |       x; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-trailing-comma.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-trailing-comma.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id-trailing-comma.js: Unexpected character '#' (70:9)\n  68 | var callCount = 0;\n  69 | class C {\n\u003e 70 |   static #method({ x: y, } = { x: 23 }) {\n     |          ^\n  71 |     assert.sameValue(y, 23);\n  72 | \n  73 |     assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-id.js: Unexpected character '#' (70:9)\n  68 | var callCount = 0;\n  69 | class C {\n\u003e 70 |   static #method({ x: y } = { x: 23 }) {\n     |          ^\n  71 |     assert.sameValue(y, 23);\n  72 |     assert.throws(ReferenceError, function() {\n  73 |       x; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-obj-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-obj-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-obj-init.js: Unexpected character '#' (73:9)\n  71 | var callCount = 0;\n  72 | class C {\n\u003e 73 |   static #method({ w: { x, y, z } = { x: 4, y: 5, z: 6 } } = { w: undefined }) {\n     |          ^\n  74 |     assert.sameValue(x, 4);\n  75 |     assert.sameValue(y, 5);\n  76 |     assert.sameValue(z, 6); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-obj.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-obj.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-prop-obj.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | class C {\n\u003e 71 |   static #method({ w: { x, y, z } = { x: 4, y: 5, z: 6 } } = { w: { x: undefined, z: 7 } }) {\n     |          ^\n  72 |     assert.sameValue(x, undefined);\n  73 |     assert.sameValue(y, undefined);\n  74 |     assert.sameValue(z, 7); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-rest-getter.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-rest-getter.js: Unexpected character '#' (65:9)\n  63 | var callCount = 0;\n  64 | class C {\n\u003e 65 |   static #method({...x} = { get v() { count++; return 2; } }) {\n     |          ^\n  66 |     assert.sameValue(count, 1);\n  67 | \n  68 |     verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js: Unexpected character '#' (66:9)\n  64 | var callCount = 0;\n  65 | class C {\n\u003e 66 |   static #method({...rest} = o) {\n     |          ^\n  67 |     assert.sameValue(rest.x, undefined);\n  68 | \n  69 |     verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-rest-val-obj.js: Unexpected character '#' (64:9)\n  62 | var callCount = 0;\n  63 | class C {\n\u003e 64 |   static #method({a, b, ...rest} = {x: 1, y: 2, a: 5, b: 3}) {\n     |          ^\n  65 |     assert.sameValue(rest.a, undefined);\n  66 |     assert.sameValue(rest.b, undefined);\n  67 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-empty.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-empty.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-empty.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   static #method({}) {\n     |          ^\n  76 |     assert.sameValue(accessCount, 0);\n  77 |     callCount = callCount + 1;\n  78 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-arrow.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-arrow.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   static #method({ arrow = () =\u003e {} }) {\n     |          ^\n  77 |     assert.sameValue(arrow.name, 'arrow');\n  78 |     callCount = callCount + 1;\n  79 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-class.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-class.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   static #method({ cls = class {}, xCls = class X {}, xCls2 = class { static name() {} } }) {\n     |          ^\n  77 |     assert.sameValue(cls.name, 'cls');\n  78 |     assert.notSameValue(xCls.name, 'xCls');\n  79 |     assert.notSameValue(xCls2.name, 'xCls2'); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-cover.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-cover.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   static #method({ cover = (function () {}), xCover = (0, function() {})  }) {\n     |          ^\n  77 |     assert.sameValue(cover.name, 'cover');\n  78 |     assert.notSameValue(xCover.name, 'xCover');\n  79 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-fn.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-fn.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   static #method({ fn = function () {}, xFn = function x() {} }) {\n     |          ^\n  77 |     assert.sameValue(fn.name, 'fn');\n  78 |     assert.notSameValue(xFn.name, 'xFn');\n  79 |     callCount = callCount + 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-skipped.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-skipped.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-skipped.js: Unexpected character '#' (76:9)\n  74 | var callCount = 0;\n  75 | class C {\n\u003e 76 |   static #method({ w = counter(), x = counter(), y = counter(), z = counter() }) {\n     |          ^\n  77 |     assert.sameValue(w, null);\n  78 |     assert.sameValue(x, 0);\n  79 |     assert.sameValue(y, false); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-trailing-comma.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-trailing-comma.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-trailing-comma.js: Unexpected character '#' (70:9)\n  68 | var callCount = 0;\n  69 | class C {\n\u003e 70 |   static #method({ x, }) {\n     |          ^\n  71 |     assert.sameValue(x, 23);\n  72 |     callCount = callCount + 1;\n  73 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-ary-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-ary-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-ary-init.js: Unexpected character '#' (73:9)\n  71 | var callCount = 0;\n  72 | class C {\n\u003e 73 |   static #method({ w: [x, y, z] = [4, 5, 6] }) {\n     |          ^\n  74 |     assert.sameValue(x, 4);\n  75 |     assert.sameValue(y, 5);\n  76 |     assert.sameValue(z, 6); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-ary-trailing-comma.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-ary-trailing-comma.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-ary-trailing-comma.js: Unexpected character '#' (70:9)\n  68 | var callCount = 0;\n  69 | class C {\n\u003e 70 |   static #method({ x: [y], }) {\n     |          ^\n  71 |     assert.sameValue(y,45);\n  72 |     callCount = callCount + 1;\n  73 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-ary.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-ary.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-ary.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | class C {\n\u003e 71 |   static #method({ w: [x, y, z] = [4, 5, 6] }) {\n     |          ^\n  72 |     assert.sameValue(x, 7);\n  73 |     assert.sameValue(y, undefined);\n  74 |     assert.sameValue(z, undefined); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-id-init-skipped.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-id-init-skipped.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-id-init-skipped.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | class C {\n\u003e 75 |   static #method({ s: t = counter(), u: v = counter(), w: x = counter(), y: z = counter() }) {\n     |          ^\n  76 |     assert.sameValue(t, null);\n  77 |     assert.sameValue(v, 0);\n  78 |     assert.sameValue(x, false); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-id-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-id-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-id-init.js: Unexpected character '#' (70:9)\n  68 | var callCount = 0;\n  69 | class C {\n\u003e 70 |   static #method({ x: y = 33 }) {\n     |          ^\n  71 |     assert.sameValue(y, 33);\n  72 |     assert.throws(ReferenceError, function() {\n  73 |       x; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-id-trailing-comma.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-id-trailing-comma.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-id-trailing-comma.js: Unexpected character '#' (70:9)\n  68 | var callCount = 0;\n  69 | class C {\n\u003e 70 |   static #method({ x: y, }) {\n     |          ^\n  71 |     assert.sameValue(y, 23);\n  72 | \n  73 |     assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-id.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-id.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-id.js: Unexpected character '#' (70:9)\n  68 | var callCount = 0;\n  69 | class C {\n\u003e 70 |   static #method({ x: y }) {\n     |          ^\n  71 |     assert.sameValue(y, 23);\n  72 |     assert.throws(ReferenceError, function() {\n  73 |       x; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-obj-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-obj-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-obj-init.js: Unexpected character '#' (73:9)\n  71 | var callCount = 0;\n  72 | class C {\n\u003e 73 |   static #method({ w: { x, y, z } = { x: 4, y: 5, z: 6 } }) {\n     |          ^\n  74 |     assert.sameValue(x, 4);\n  75 |     assert.sameValue(y, 5);\n  76 |     assert.sameValue(z, 6); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-obj.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-obj.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-prop-obj.js: Unexpected character '#' (71:9)\n  69 | var callCount = 0;\n  70 | class C {\n\u003e 71 |   static #method({ w: { x, y, z } = { x: 4, y: 5, z: 6 } }) {\n     |          ^\n  72 |     assert.sameValue(x, undefined);\n  73 |     assert.sameValue(y, undefined);\n  74 |     assert.sameValue(z, 7); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-rest-getter.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-rest-getter.js: Unexpected character '#' (65:9)\n  63 | var callCount = 0;\n  64 | class C {\n\u003e 65 |   static #method({...x}) {\n     |          ^\n  66 |     assert.sameValue(count, 1);\n  67 | \n  68 |     verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-rest-skip-non-enumerable.js: Unexpected character '#' (66:9)\n  64 | var callCount = 0;\n  65 | class C {\n\u003e 66 |   static #method({...rest}) {\n     |          ^\n  67 |     assert.sameValue(rest.x, undefined);\n  68 | \n  69 |     verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-rest-val-obj.js: Unexpected character '#' (64:9)\n  62 | var callCount = 0;\n  63 | class C {\n\u003e 64 |   static #method({a, b, ...rest}) {\n     |          ^\n  65 |     assert.sameValue(rest.a, undefined);\n  66 |     assert.sameValue(rest.b, undefined);\n  67 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/abrupt-completition-on-field-initializer.js-strict:true": "test/language/statements/class/elements/abrupt-completition-on-field-initializer.js: SyntaxError: test/language/statements/class/elements/abrupt-completition-on-field-initializer.js: Unexpected token (39:4)\n  37 | \n  38 | class C {\n\u003e 39 |   a = abruptCompletion();\n     |     ^\n  40 |   b = sideEffect();\n  41 | }\n  42 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-computed-names.js-strict:true": "test/language/statements/class/elements/after-same-line-method-computed-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-computed-names.js: Unexpected token (28:25)\n  26 | \n  27 | class C {\n\u003e 28 |   m() { return 42; } [x] = 42; [10] = \"meep\"; [\"not initialized\"];\n     |                          ^\n  29 |   \n  30 | }\n  31 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-computed-symbol-names.js-strict:true": "test/language/statements/class/elements/after-same-line-method-computed-symbol-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-computed-symbol-names.js: Unexpected token (29:30)\n  27 | \n  28 | class C {\n\u003e 29 |   m() { return 42; } [x]; [y] = 42;\n     |                               ^\n  30 |   \n  31 | }\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/statements/class/elements/after-same-line-method-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:21)\n  66 | \n  67 | class C {\n\u003e 68 |   m() { return 42; } #\\u{6F};\n     |                      ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J;; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-literal-names-asi.js-strict:true": "test/language/statements/class/elements/after-same-line-method-literal-names-asi.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-literal-names-asi.js: Unexpected token (27:4)\n  25 | class C {\n  26 |   m() { return 42; } a\n\u003e 27 |   b = 42;;\n     |     ^\n  28 |   \n  29 | }\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-literal-names.js-strict:true": "test/language/statements/class/elements/after-same-line-method-literal-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-literal-names.js: Unexpected token (28:26)\n  26 | \n  27 | class C {\n\u003e 28 |   m() { return 42; } a; b = 42;\n     |                           ^\n  29 |   c = fn;\n  30 |   \n  31 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-private-field-usage.js-strict:true": "test/language/statements/class/elements/after-same-line-method-private-field-usage.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-private-field-usage.js: Unexpected character '#' (27:21)\n  25 | \n  26 | class C {\n\u003e 27 |   m() { return 42; } #m = 'test262';;\n     |                      ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-private-method-getter-usage.js-strict:true": "test/language/statements/class/elements/after-same-line-method-private-method-getter-usage.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-private-method-getter-usage.js: Unexpected character '#' (27:25)\n  25 | \n  26 | class C {\n\u003e 27 |   m() { return 42; } get #m() { return 'test262'; };\n     |                          ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-private-method-usage.js-strict:true": "test/language/statements/class/elements/after-same-line-method-private-method-usage.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-private-method-usage.js: Unexpected character '#' (27:21)\n  25 | \n  26 | class C {\n\u003e 27 |   m() { return 42; } #m() { return 'test262'; };\n     |                      ^\n  28 |   method() {\n  29 |     return this.#m();\n  30 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-private-names.js-strict:true": "test/language/statements/class/elements/after-same-line-method-private-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-private-names.js: Unexpected character '#' (29:21)\n  27 | \n  28 | class C {\n\u003e 29 |   m() { return 42; } #x; #y;\n     |                      ^\n  30 |   x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-rs-field-identifier-initializer.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-field-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-field-identifier-initializer.js: Unexpected token (62:23)\n  60 | \n  61 | class C {\n\u003e 62 |   m() { return 42; } $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;\n     |                        ^\n  63 |   \n  64 | }\n  65 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-rs-field-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-field-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-field-identifier.js: Missing class properties transform.\n  60 | \n  61 | class C {\n\u003e 62 |   m() { return 42; } $; _; \\u{6F}; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J;\n     |                      ^\n  63 |   \n  64 | }\n  65 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-rs-private-getter-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-private-getter-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-private-getter-alt.js: Unexpected character '#' (60:21)\n  58 | \n  59 | class C {\n\u003e 60 |   m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                      ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-rs-private-getter.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-private-getter.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-private-getter.js: Unexpected character '#' (60:21)\n  58 | \n  59 | class C {\n\u003e 60 |   m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                      ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-rs-private-method-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-private-method-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-private-method-alt.js: Unexpected character '#' (59:21)\n  57 | \n  58 | class C {\n\u003e 59 |   m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                      ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-rs-private-method.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-private-method.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-private-method.js: Unexpected character '#' (59:21)\n  57 | \n  58 | class C {\n\u003e 59 |   m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                      ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-rs-private-setter-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-private-setter-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-private-setter-alt.js: Unexpected character '#' (59:21)\n  57 | \n  58 | class C {\n\u003e 59 |   m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                      ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-rs-private-setter.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-private-setter.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-private-setter.js: Unexpected character '#' (59:21)\n  57 | \n  58 | class C {\n\u003e 59 |   m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                      ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-rs-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-privatename-identifier-alt.js: Unexpected character '#' (60:21)\n  58 | \n  59 | class C {\n\u003e 60 |   m() { return 42; } #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J;\n     |                      ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:21)\n  58 | \n  59 | class C {\n\u003e 60 |   m() { return 42; } #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1;\n     |                      ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-rs-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:21)\n  58 | \n  59 | class C {\n\u003e 60 |   m() { return 42; } #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1;\n     |                      ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-rs-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-privatename-identifier.js: Unexpected character '#' (60:21)\n  58 | \n  59 | class C {\n\u003e 60 |   m() { return 42; } #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J;\n     |                      ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:30)\n  62 | \n  63 | class C {\n\u003e 64 |   m() { return 42; } static * #$(value) {\n     |                               ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:30)\n  62 | \n  63 | class C {\n\u003e 64 |   m() { return 42; } static * #$(value) {\n     |                               ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:28)\n  59 | \n  60 | class C {\n\u003e 61 |   m() { return 42; } static #$(value) {\n     |                             ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-rs-static-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:28)\n  59 | \n  60 | class C {\n\u003e 61 |   m() { return 42; } static #$(value) {\n     |                             ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:28)\n  59 | \n  60 | class C {\n\u003e 61 |   m() { return 42; } static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                             ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:28)\n  59 | \n  60 | class C {\n\u003e 61 |   m() { return 42; } static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                             ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:28)\n  59 | \n  60 | class C {\n\u003e 61 |   m() { return 42; } static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                             ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:28)\n  59 | \n  60 | class C {\n\u003e 61 |   m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                             ^\n  62 |   static $() {\n  63 |     return C.#$;\n  64 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:28)\n  59 | \n  60 | class C {\n\u003e 61 |   m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                             ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:28)\n  59 | \n  60 | class C {\n\u003e 61 |   m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;\n     |                             ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-privatename-identifier.js: Unexpected character '#' (61:28)\n  59 | \n  60 | class C {\n\u003e 61 |   m() { return 42; } static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                             ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-static-private-fields.js-strict:true": "test/language/statements/class/elements/after-same-line-method-static-private-fields.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-static-private-fields.js: Unexpected character '#' (29:28)\n  27 | \n  28 | class C {\n\u003e 29 |   m() { return 42; } static #x; static #y;\n     |                             ^\n  30 |   static x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-static-private-methods-with-fields.js-strict:true": "test/language/statements/class/elements/after-same-line-method-static-private-methods-with-fields.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-static-private-methods-with-fields.js: Unexpected character '#' (29:28)\n  27 | \n  28 | class C {\n\u003e 29 |   m() { return 42; } static #xVal; static #yVal;\n     |                             ^\n  30 |   static #x(value) {\n  31 |     this.#xVal = value;\n  32 |     return this.#xVal; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-static-private-methods.js-strict:true": "test/language/statements/class/elements/after-same-line-method-static-private-methods.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-static-private-methods.js: Unexpected character '#' (30:9)\n  28 | class C {\n  29 |   m() { return 42; } ;\n\u003e 30 |   static #x(value) {\n     |          ^\n  31 |     return value / 2;\n  32 |   }\n  33 |   static #y(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-method-string-literal-names.js-strict:true": "test/language/statements/class/elements/after-same-line-method-string-literal-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-string-literal-names.js: Unexpected token (26:35)\n  24 | \n  25 | class C {\n\u003e 26 |   m() { return 42; } 'a'; \"b\"; 'c' = 39;\n     |                                    ^\n  27 |   \"d\" = 42;\n  28 |   \n  29 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-computed-names.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-computed-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-computed-names.js: Unexpected token (28:32)\n  26 | \n  27 | class C {\n\u003e 28 |   static m() { return 42; } [x] = 42; [10] = \"meep\"; [\"not initialized\"];\n     |                                 ^\n  29 |   \n  30 | }\n  31 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-computed-symbol-names.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-computed-symbol-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-computed-symbol-names.js: Unexpected token (29:37)\n  27 | \n  28 | class C {\n\u003e 29 |   static m() { return 42; } [x]; [y] = 42;\n     |                                      ^\n  30 |   \n  31 | }\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:28)\n  66 | \n  67 | class C {\n\u003e 68 |   static m() { return 42; } #\\u{6F};\n     |                             ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J;; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-literal-names-asi.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-literal-names-asi.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-literal-names-asi.js: Unexpected token (27:4)\n  25 | class C {\n  26 |   static m() { return 42; } a\n\u003e 27 |   b = 42;;\n     |     ^\n  28 |   \n  29 | }\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-literal-names.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-literal-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-literal-names.js: Unexpected token (28:33)\n  26 | \n  27 | class C {\n\u003e 28 |   static m() { return 42; } a; b = 42;\n     |                                  ^\n  29 |   c = fn;\n  30 |   \n  31 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-private-field-usage.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-private-field-usage.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-private-field-usage.js: Unexpected character '#' (27:28)\n  25 | \n  26 | class C {\n\u003e 27 |   static m() { return 42; } #m = 'test262';;\n     |                             ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-private-method-getter-usage.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-private-method-getter-usage.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-private-method-getter-usage.js: Unexpected character '#' (27:32)\n  25 | \n  26 | class C {\n\u003e 27 |   static m() { return 42; } get #m() { return 'test262'; };\n     |                                 ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-private-method-usage.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-private-method-usage.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-private-method-usage.js: Unexpected character '#' (27:28)\n  25 | \n  26 | class C {\n\u003e 27 |   static m() { return 42; } #m() { return 'test262'; };\n     |                             ^\n  28 |   method() {\n  29 |     return this.#m();\n  30 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-private-names.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-private-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-private-names.js: Unexpected character '#' (29:28)\n  27 | \n  28 | class C {\n\u003e 29 |   static m() { return 42; } #x; #y;\n     |                             ^\n  30 |   x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-rs-field-identifier-initializer.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-field-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-field-identifier-initializer.js: Unexpected token (62:30)\n  60 | \n  61 | class C {\n\u003e 62 |   static m() { return 42; } $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;\n     |                               ^\n  63 |   \n  64 | }\n  65 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-rs-field-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-field-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-field-identifier.js: Missing class properties transform.\n  60 | \n  61 | class C {\n\u003e 62 |   static m() { return 42; } $; _; \\u{6F}; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J;\n     |                             ^\n  63 |   \n  64 | }\n  65 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-rs-private-getter-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-private-getter-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-private-getter-alt.js: Unexpected character '#' (60:28)\n  58 | \n  59 | class C {\n\u003e 60 |   static m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                             ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-rs-private-getter.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-private-getter.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-private-getter.js: Unexpected character '#' (60:28)\n  58 | \n  59 | class C {\n\u003e 60 |   static m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                             ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-rs-private-method-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-private-method-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-private-method-alt.js: Unexpected character '#' (59:28)\n  57 | \n  58 | class C {\n\u003e 59 |   static m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                             ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-rs-private-method.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-private-method.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-private-method.js: Unexpected character '#' (59:28)\n  57 | \n  58 | class C {\n\u003e 59 |   static m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                             ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-rs-private-setter-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-private-setter-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-private-setter-alt.js: Unexpected character '#' (59:28)\n  57 | \n  58 | class C {\n\u003e 59 |   static m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                             ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-rs-private-setter.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-private-setter.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-private-setter.js: Unexpected character '#' (59:28)\n  57 | \n  58 | class C {\n\u003e 59 |   static m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                             ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-rs-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-privatename-identifier-alt.js: Unexpected character '#' (60:28)\n  58 | \n  59 | class C {\n\u003e 60 |   static m() { return 42; } #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J;\n     |                             ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:28)\n  58 | \n  59 | class C {\n\u003e 60 |   static m() { return 42; } #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1;\n     |                             ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-rs-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:28)\n  58 | \n  59 | class C {\n\u003e 60 |   static m() { return 42; } #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1;\n     |                             ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-rs-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-privatename-identifier.js: Unexpected character '#' (60:28)\n  58 | \n  59 | class C {\n\u003e 60 |   static m() { return 42; } #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J;\n     |                             ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:37)\n  62 | \n  63 | class C {\n\u003e 64 |   static m() { return 42; } static * #$(value) {\n     |                                      ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:37)\n  62 | \n  63 | class C {\n\u003e 64 |   static m() { return 42; } static * #$(value) {\n     |                                      ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:35)\n  59 | \n  60 | class C {\n\u003e 61 |   static m() { return 42; } static #$(value) {\n     |                                    ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:35)\n  59 | \n  60 | class C {\n\u003e 61 |   static m() { return 42; } static #$(value) {\n     |                                    ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:35)\n  59 | \n  60 | class C {\n\u003e 61 |   static m() { return 42; } static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                                    ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:35)\n  59 | \n  60 | class C {\n\u003e 61 |   static m() { return 42; } static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                                    ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:35)\n  59 | \n  60 | class C {\n\u003e 61 |   static m() { return 42; } static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                                    ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:35)\n  59 | \n  60 | class C {\n\u003e 61 |   static m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                                    ^\n  62 |   static $() {\n  63 |     return C.#$;\n  64 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:35)\n  59 | \n  60 | class C {\n\u003e 61 |   static m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                                    ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:35)\n  59 | \n  60 | class C {\n\u003e 61 |   static m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;\n     |                                    ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-privatename-identifier.js: Unexpected character '#' (61:35)\n  59 | \n  60 | class C {\n\u003e 61 |   static m() { return 42; } static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                                    ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-static-private-fields.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-static-private-fields.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-static-private-fields.js: Unexpected character '#' (29:35)\n  27 | \n  28 | class C {\n\u003e 29 |   static m() { return 42; } static #x; static #y;\n     |                                    ^\n  30 |   static x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-static-private-methods-with-fields.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-static-private-methods-with-fields.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-static-private-methods-with-fields.js: Unexpected character '#' (29:35)\n  27 | \n  28 | class C {\n\u003e 29 |   static m() { return 42; } static #xVal; static #yVal;\n     |                                    ^\n  30 |   static #x(value) {\n  31 |     this.#xVal = value;\n  32 |     return this.#xVal; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-static-private-methods.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-static-private-methods.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-static-private-methods.js: Unexpected character '#' (30:9)\n  28 | class C {\n  29 |   static m() { return 42; } ;\n\u003e 30 |   static #x(value) {\n     |          ^\n  31 |     return value / 2;\n  32 |   }\n  33 |   static #y(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/after-same-line-static-method-string-literal-names.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-string-literal-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-string-literal-names.js: Unexpected token (26:42)\n  24 | \n  25 | class C {\n\u003e 26 |   static m() { return 42; } 'a'; \"b\"; 'c' = 39;\n     |                                           ^\n  27 |   \"d\" = 42;\n  28 |   \n  29 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-contains-superproperty-1.js-strict:true": "test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-contains-superproperty-1.js: SyntaxError: test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-contains-superproperty-1.js: Unexpected token (30:4)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   x = eval('executed = true; () =\u003e super.x;');\n     |     ^\n  31 | }\n  32 | \n  33 | new C().x(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-contains-superproperty-2.js-strict:true": "test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-contains-superproperty-2.js: SyntaxError: test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-contains-superproperty-2.js: Unexpected token (27:4)\n  25 | class A {}\n  26 | class C extends A {\n\u003e 27 |   x = eval('executed = true; () =\u003e super[\"x\"];');\n     |     ^\n  28 | }\n  29 | \n  30 | new C().x(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall-1.js-strict:true": "test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall-1.js: SyntaxError: test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall-1.js: Unexpected token (30:4)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   x = eval('executed = true; () =\u003e super()[\"x\"];');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall-2.js-strict:true": "test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall-2.js: SyntaxError: test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall-2.js: Unexpected token (23:4)\n  21 | class A {}\n  22 | class C extends A {\n\u003e 23 |   x = eval('executed = true; () =\u003e super().x;');\n     |     ^\n  24 | }\n  25 | \n  26 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall.js-strict:true": "test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall.js: SyntaxError: test/language/statements/class/elements/arrow-body-derived-cls-direct-eval-err-contains-supercall.js: Unexpected token (30:4)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   x = eval('executed = true; () =\u003e super();');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-contains-superproperty-1.js-strict:true": "test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-contains-superproperty-1.js: SyntaxError: test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-contains-superproperty-1.js: Unexpected token (29:4)\n  27 | class A {}\n  28 | class C extends A {\n\u003e 29 |   x = (0, eval)('() =\u003e super.x;');\n     |     ^\n  30 | }\n  31 | \n  32 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-contains-superproperty-2.js-strict:true": "test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-contains-superproperty-2.js: SyntaxError: test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-contains-superproperty-2.js: Unexpected token (26:4)\n  24 | class A {}\n  25 | class C extends A {\n\u003e 26 |   x = (0, eval)('() =\u003e super[\"x\"];');\n     |     ^\n  27 | }\n  28 | \n  29 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall-1.js-strict:true": "test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall-1.js: SyntaxError: test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall-1.js: Unexpected token (29:4)\n  27 | class A {}\n  28 | class C extends A {\n\u003e 29 |   x = (0, eval)('() =\u003e super()[\"x\"];');\n     |     ^\n  30 | }\n  31 | \n  32 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall-2.js-strict:true": "test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall-2.js: SyntaxError: test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall-2.js: Unexpected token (22:4)\n  20 | class A {}\n  21 | class C extends A {\n\u003e 22 |   x = (0, eval)('() =\u003e super().x;');\n     |     ^\n  23 | }\n  24 | \n  25 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall.js-strict:true": "test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall.js: SyntaxError: test/language/statements/class/elements/arrow-body-derived-cls-indirect-eval-err-contains-supercall.js: Unexpected token (29:4)\n  27 | class A {}\n  28 | class C extends A {\n\u003e 29 |   x = (0, eval)('() =\u003e super();');\n     |     ^\n  30 | }\n  31 | \n  32 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-direct-eval-err-contains-arguments.js-strict:true": "test/language/statements/class/elements/arrow-body-direct-eval-err-contains-arguments.js: SyntaxError: test/language/statements/class/elements/arrow-body-direct-eval-err-contains-arguments.js: Unexpected token (30:4)\n  28 | var executed = false;\n  29 | class C {\n\u003e 30 |   x = eval('executed = true; () =\u003e arguments;');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-direct-eval-err-contains-newtarget.js-strict:true": "test/language/statements/class/elements/arrow-body-direct-eval-err-contains-newtarget.js: SyntaxError: test/language/statements/class/elements/arrow-body-direct-eval-err-contains-newtarget.js: Unexpected token (29:4)\n  27 | var executed = false;\n  28 | class C {\n\u003e 29 |   x = eval('executed = true; () =\u003e new.target;');\n     |     ^\n  30 | }\n  31 | \n  32 | var c = new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-indirect-eval-err-contains-arguments.js-strict:true": "test/language/statements/class/elements/arrow-body-indirect-eval-err-contains-arguments.js: SyntaxError: test/language/statements/class/elements/arrow-body-indirect-eval-err-contains-arguments.js: Unexpected token (29:4)\n  27 | \n  28 | class C {\n\u003e 29 |   x = (0, eval)('() =\u003e arguments;');\n     |     ^\n  30 | }\n  31 | \n  32 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-indirect-eval-err-contains-newtarget.js-strict:true": "test/language/statements/class/elements/arrow-body-indirect-eval-err-contains-newtarget.js: SyntaxError: test/language/statements/class/elements/arrow-body-indirect-eval-err-contains-newtarget.js: Unexpected token (28:4)\n  26 | \n  27 | class C {\n\u003e 28 |   x = (0, eval)('() =\u003e new.target;');\n     |     ^\n  29 | }\n  30 | \n  31 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-private-derived-cls-direct-eval-contains-superproperty-1.js-strict:true": "test/language/statements/class/elements/arrow-body-private-derived-cls-direct-eval-contains-superproperty-1.js: SyntaxError: test/language/statements/class/elements/arrow-body-private-derived-cls-direct-eval-contains-superproperty-1.js: Unexpected character '#' (30:2)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   #x = eval('executed = true; () =\u003e super.x;');\n     |   ^\n  31 |   x() {\n  32 |     this.#x();\n  33 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-private-derived-cls-direct-eval-contains-superproperty-2.js-strict:true": "test/language/statements/class/elements/arrow-body-private-derived-cls-direct-eval-contains-superproperty-2.js: SyntaxError: test/language/statements/class/elements/arrow-body-private-derived-cls-direct-eval-contains-superproperty-2.js: Unexpected character '#' (27:2)\n  25 | class A {}\n  26 | class C extends A {\n\u003e 27 |   #x = eval('executed = true; () =\u003e super[\"x\"];');\n     |   ^\n  28 |   x() {\n  29 |     this.#x();\n  30 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-private-derived-cls-direct-eval-err-contains-supercall-1.js-strict:true": "test/language/statements/class/elements/arrow-body-private-derived-cls-direct-eval-err-contains-supercall-1.js: SyntaxError: test/language/statements/class/elements/arrow-body-private-derived-cls-direct-eval-err-contains-supercall-1.js: Unexpected character '#' (30:2)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   #x = eval('executed = true; () =\u003e super()[\"x\"];');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-private-derived-cls-direct-eval-err-contains-supercall-2.js-strict:true": "test/language/statements/class/elements/arrow-body-private-derived-cls-direct-eval-err-contains-supercall-2.js: SyntaxError: test/language/statements/class/elements/arrow-body-private-derived-cls-direct-eval-err-contains-supercall-2.js: Unexpected character '#' (23:2)\n  21 | class A {}\n  22 | class C extends A {\n\u003e 23 |   #x = eval('executed = true; () =\u003e super().x;');\n     |   ^\n  24 | }\n  25 | \n  26 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-private-derived-cls-direct-eval-err-contains-supercall.js-strict:true": "test/language/statements/class/elements/arrow-body-private-derived-cls-direct-eval-err-contains-supercall.js: SyntaxError: test/language/statements/class/elements/arrow-body-private-derived-cls-direct-eval-err-contains-supercall.js: Unexpected character '#' (30:2)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   #x = eval('executed = true; () =\u003e super();');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-private-derived-cls-indirect-eval-contains-superproperty-1.js-strict:true": "test/language/statements/class/elements/arrow-body-private-derived-cls-indirect-eval-contains-superproperty-1.js: SyntaxError: test/language/statements/class/elements/arrow-body-private-derived-cls-indirect-eval-contains-superproperty-1.js: Unexpected character '#' (29:2)\n  27 | class A {}\n  28 | class C extends A {\n\u003e 29 |   #x = (0, eval)('() =\u003e super.x;');\n     |   ^\n  30 | }\n  31 | \n  32 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-private-derived-cls-indirect-eval-contains-superproperty-2.js-strict:true": "test/language/statements/class/elements/arrow-body-private-derived-cls-indirect-eval-contains-superproperty-2.js: SyntaxError: test/language/statements/class/elements/arrow-body-private-derived-cls-indirect-eval-contains-superproperty-2.js: Unexpected character '#' (26:2)\n  24 | class A {}\n  25 | class C extends A {\n\u003e 26 |   #x = (0, eval)('() =\u003e super[\"x\"];');\n     |   ^\n  27 | }\n  28 | \n  29 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-private-derived-cls-indirect-eval-err-contains-supercall-1.js-strict:true": "test/language/statements/class/elements/arrow-body-private-derived-cls-indirect-eval-err-contains-supercall-1.js: SyntaxError: test/language/statements/class/elements/arrow-body-private-derived-cls-indirect-eval-err-contains-supercall-1.js: Unexpected character '#' (29:2)\n  27 | class A {}\n  28 | class C extends A {\n\u003e 29 |   #x = (0, eval)('() =\u003e super()[\"x\"];');\n     |   ^\n  30 | }\n  31 | \n  32 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-private-derived-cls-indirect-eval-err-contains-supercall-2.js-strict:true": "test/language/statements/class/elements/arrow-body-private-derived-cls-indirect-eval-err-contains-supercall-2.js: SyntaxError: test/language/statements/class/elements/arrow-body-private-derived-cls-indirect-eval-err-contains-supercall-2.js: Unexpected character '#' (22:2)\n  20 | class A {}\n  21 | class C extends A {\n\u003e 22 |   #x = (0, eval)('() =\u003e super().x;');\n     |   ^\n  23 | }\n  24 | \n  25 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-private-derived-cls-indirect-eval-err-contains-supercall.js-strict:true": "test/language/statements/class/elements/arrow-body-private-derived-cls-indirect-eval-err-contains-supercall.js: SyntaxError: test/language/statements/class/elements/arrow-body-private-derived-cls-indirect-eval-err-contains-supercall.js: Unexpected character '#' (29:2)\n  27 | class A {}\n  28 | class C extends A {\n\u003e 29 |   #x = (0, eval)('() =\u003e super();');\n     |   ^\n  30 | }\n  31 | \n  32 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-private-direct-eval-err-contains-arguments.js-strict:true": "test/language/statements/class/elements/arrow-body-private-direct-eval-err-contains-arguments.js: SyntaxError: test/language/statements/class/elements/arrow-body-private-direct-eval-err-contains-arguments.js: Unexpected character '#' (30:2)\n  28 | var executed = false;\n  29 | class C {\n\u003e 30 |   #x = eval('executed = true; () =\u003e arguments;');\n     |   ^\n  31 |   constructor() {\n  32 |     this.#x();\n  33 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-private-direct-eval-err-contains-newtarget.js-strict:true": "test/language/statements/class/elements/arrow-body-private-direct-eval-err-contains-newtarget.js: SyntaxError: test/language/statements/class/elements/arrow-body-private-direct-eval-err-contains-newtarget.js: Unexpected character '#' (29:2)\n  27 | var executed = false;\n  28 | class C {\n\u003e 29 |   #x = eval('executed = true; () =\u003e new.target;');\n     |   ^\n  30 |   x() {\n  31 |     this.#x();\n  32 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-private-indirect-eval-err-contains-arguments.js-strict:true": "test/language/statements/class/elements/arrow-body-private-indirect-eval-err-contains-arguments.js: SyntaxError: test/language/statements/class/elements/arrow-body-private-indirect-eval-err-contains-arguments.js: Unexpected character '#' (29:2)\n  27 | \n  28 | class C {\n\u003e 29 |   #x = (0, eval)('() =\u003e arguments;');\n     |   ^\n  30 |   x() {\n  31 |     this.#x();\n  32 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/arrow-body-private-indirect-eval-err-contains-newtarget.js-strict:true": "test/language/statements/class/elements/arrow-body-private-indirect-eval-err-contains-newtarget.js: SyntaxError: test/language/statements/class/elements/arrow-body-private-indirect-eval-err-contains-newtarget.js: Unexpected character '#' (28:2)\n  26 | \n  27 | class C {\n\u003e 28 |   #x = (0, eval)('() =\u003e new.target;');\n     |   ^\n  29 | }\n  30 | \n  31 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/class-field-is-observable-by-proxy.js-strict:true": "test/language/statements/class/elements/class-field-is-observable-by-proxy.js: SyntaxError: test/language/statements/class/elements/class-field-is-observable-by-proxy.js: Unexpected token (39:4)\n  37 | \n  38 | class Test extends ProxyBase {\n\u003e 39 |   f = 3;\n     |     ^\n  40 |   g = \"Test262\";\n  41 | }\n  42 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/class-field-on-frozen-objects.js-strict:true": "test/language/statements/class/elements/class-field-on-frozen-objects.js: SyntaxError: test/language/statements/class/elements/class-field-on-frozen-objects.js: Unexpected token (22:4)\n  20 | \n  21 | class Test {\n\u003e 22 |   f = Object.freeze(this);\n     |     ^\n  23 |   g = \"Test262\";\n  24 | }\n  25 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/computed-name-toprimitive-symbol.js-strict:true": "test/language/statements/class/elements/computed-name-toprimitive-symbol.js: SyntaxError: test/language/statements/class/elements/computed-name-toprimitive-symbol.js: Unexpected token (69:9)\n  67 | \n  68 | class C {\n\u003e 69 |   [obj1] = 42;\n     |          ^\n  70 |   [obj2] = 43;\n  71 |   [obj3] = 44;\n  72 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/computed-name-toprimitive.js-strict:true": "test/language/statements/class/elements/computed-name-toprimitive.js: SyntaxError: test/language/statements/class/elements/computed-name-toprimitive.js: Unexpected token (66:9)\n  64 | \n  65 | class C {\n\u003e 66 |   [obj1] = 42;\n     |          ^\n  67 |   [obj2] = 43;\n  68 |   [obj3] = 44;\n  69 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/computed-property-abrupt-completition.js-strict:true": "test/language/statements/class/elements/computed-property-abrupt-completition.js: SyntaxError: test/language/statements/class/elements/computed-property-abrupt-completition.js: Missing class properties transform.\n  30 | assert.throws(Test262Error, function() {\n  31 |   class C {\n\u003e 32 |     [abruptCompletion()];\n     |     ^\n  33 |     [neverExecuted = true];\n  34 |   }\n  35 | }, 'computed property should have abrupt completion'); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/ctor-called-after-fields-init.js-strict:true": "test/language/statements/class/elements/ctor-called-after-fields-init.js: SyntaxError: test/language/statements/class/elements/ctor-called-after-fields-init.js: Unexpected token (29:6)\n  27 |     ctor = this.foo;\n  28 |   }\n\u003e 29 |   foo = 42;\n     |       ^\n  30 | }\n  31 | \n  32 | var c = new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/derived-cls-direct-eval-contains-superproperty-1.js-strict:true": "test/language/statements/class/elements/derived-cls-direct-eval-contains-superproperty-1.js: SyntaxError: test/language/statements/class/elements/derived-cls-direct-eval-contains-superproperty-1.js: Unexpected token (30:4)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   x = eval('executed = true; super.x;');\n     |     ^\n  31 | }\n  32 | \n  33 | new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/derived-cls-direct-eval-contains-superproperty-2.js-strict:true": "test/language/statements/class/elements/derived-cls-direct-eval-contains-superproperty-2.js: SyntaxError: test/language/statements/class/elements/derived-cls-direct-eval-contains-superproperty-2.js: Unexpected token (27:4)\n  25 | class A {}\n  26 | class C extends A {\n\u003e 27 |   x = eval('executed = true; super[\"x\"];');\n     |     ^\n  28 | }\n  29 | \n  30 | new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/derived-cls-direct-eval-err-contains-supercall-1.js-strict:true": "test/language/statements/class/elements/derived-cls-direct-eval-err-contains-supercall-1.js: SyntaxError: test/language/statements/class/elements/derived-cls-direct-eval-err-contains-supercall-1.js: Unexpected token (30:4)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   x = eval('executed = true; super()[\"x\"];');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/derived-cls-direct-eval-err-contains-supercall-2.js-strict:true": "test/language/statements/class/elements/derived-cls-direct-eval-err-contains-supercall-2.js: SyntaxError: test/language/statements/class/elements/derived-cls-direct-eval-err-contains-supercall-2.js: Unexpected token (23:4)\n  21 | class A {}\n  22 | class C extends A {\n\u003e 23 |   x = eval('executed = true; super().x;');\n     |     ^\n  24 | }\n  25 | \n  26 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/derived-cls-direct-eval-err-contains-supercall.js-strict:true": "test/language/statements/class/elements/derived-cls-direct-eval-err-contains-supercall.js: SyntaxError: test/language/statements/class/elements/derived-cls-direct-eval-err-contains-supercall.js: Unexpected token (30:4)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   x = eval('executed = true; super();');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/derived-cls-indirect-eval-contains-superproperty-1.js-strict:true": "test/language/statements/class/elements/derived-cls-indirect-eval-contains-superproperty-1.js: SyntaxError: test/language/statements/class/elements/derived-cls-indirect-eval-contains-superproperty-1.js: Unexpected token (30:4)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   x = (0, eval)('executed = true; super.x;');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/derived-cls-indirect-eval-contains-superproperty-2.js-strict:true": "test/language/statements/class/elements/derived-cls-indirect-eval-contains-superproperty-2.js: SyntaxError: test/language/statements/class/elements/derived-cls-indirect-eval-contains-superproperty-2.js: Unexpected token (27:4)\n  25 | class A {}\n  26 | class C extends A {\n\u003e 27 |   x = (0, eval)('executed = true; super[\"x\"];');\n     |     ^\n  28 | }\n  29 | \n  30 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/derived-cls-indirect-eval-err-contains-supercall-1.js-strict:true": "test/language/statements/class/elements/derived-cls-indirect-eval-err-contains-supercall-1.js: SyntaxError: test/language/statements/class/elements/derived-cls-indirect-eval-err-contains-supercall-1.js: Unexpected token (30:4)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   x = (0, eval)('executed = true; super()[\"x\"];');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/derived-cls-indirect-eval-err-contains-supercall-2.js-strict:true": "test/language/statements/class/elements/derived-cls-indirect-eval-err-contains-supercall-2.js: SyntaxError: test/language/statements/class/elements/derived-cls-indirect-eval-err-contains-supercall-2.js: Unexpected token (23:4)\n  21 | class A {}\n  22 | class C extends A {\n\u003e 23 |   x = (0, eval)('executed = true; super().x;');\n     |     ^\n  24 | }\n  25 | \n  26 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/derived-cls-indirect-eval-err-contains-supercall.js-strict:true": "test/language/statements/class/elements/derived-cls-indirect-eval-err-contains-supercall.js: SyntaxError: test/language/statements/class/elements/derived-cls-indirect-eval-err-contains-supercall.js: Unexpected token (30:4)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   x = (0, eval)('executed = true; super();');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/direct-eval-err-contains-arguments.js-strict:true": "test/language/statements/class/elements/direct-eval-err-contains-arguments.js: SyntaxError: test/language/statements/class/elements/direct-eval-err-contains-arguments.js: Unexpected token (30:4)\n  28 | var executed = false;\n  29 | class C {\n\u003e 30 |   x = eval('executed = true; arguments;');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/direct-eval-err-contains-newtarget.js-strict:true": "test/language/statements/class/elements/direct-eval-err-contains-newtarget.js: SyntaxError: test/language/statements/class/elements/direct-eval-err-contains-newtarget.js: Unexpected token (29:4)\n  27 | var executed = false;\n  28 | class C {\n\u003e 29 |   x = eval('executed = true; new.target;');\n     |     ^\n  30 | }\n  31 | \n  32 | var c = new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/evaluation-error/computed-name-referenceerror.js-strict:true": "test/language/statements/class/elements/evaluation-error/computed-name-referenceerror.js: SyntaxError: test/language/statements/class/elements/evaluation-error/computed-name-referenceerror.js: Unexpected token (53:12)\n  51 | function evaluate() {\n  52 |   class C {\n\u003e 53 |     [noRef] = fn();\n     |             ^\n  54 |   }\n  55 | }\n  56 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/evaluation-error/computed-name-toprimitive-err.js-strict:true": "test/language/statements/class/elements/evaluation-error/computed-name-toprimitive-err.js: SyntaxError: test/language/statements/class/elements/evaluation-error/computed-name-toprimitive-err.js: Missing class properties transform.\n  53 | function evaluate() {\n  54 |   class C {\n\u003e 55 |     [obj]\n     |     ^\n  56 |   }\n  57 | }\n  58 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/evaluation-error/computed-name-toprimitive-returns-noncallable.js-strict:true": "test/language/statements/class/elements/evaluation-error/computed-name-toprimitive-returns-noncallable.js: SyntaxError: test/language/statements/class/elements/evaluation-error/computed-name-toprimitive-returns-noncallable.js: Unexpected token (53:10)\n  51 | function evaluate() {\n  52 |   class C {\n\u003e 53 |     [obj] = refErrorIfEvaluated;\n     |           ^\n  54 |   }\n  55 | }\n  56 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/evaluation-error/computed-name-toprimitive-returns-nonobject.js-strict:true": "test/language/statements/class/elements/evaluation-error/computed-name-toprimitive-returns-nonobject.js: SyntaxError: test/language/statements/class/elements/evaluation-error/computed-name-toprimitive-returns-nonobject.js: Unexpected token (53:10)\n  51 | function evaluate() {\n  52 |   class C {\n\u003e 53 |     [obj] = refErrorIfEvaluated;\n     |           ^\n  54 |   }\n  55 | }\n  56 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/evaluation-error/computed-name-tostring-err.js-strict:true": "test/language/statements/class/elements/evaluation-error/computed-name-tostring-err.js: SyntaxError: test/language/statements/class/elements/evaluation-error/computed-name-tostring-err.js: Missing class properties transform.\n  53 | function evaluate() {\n  54 |   class C {\n\u003e 55 |     [obj]\n     |     ^\n  56 |   }\n  57 | }\n  58 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/evaluation-error/computed-name-valueof-err.js-strict:true": "test/language/statements/class/elements/evaluation-error/computed-name-valueof-err.js: SyntaxError: test/language/statements/class/elements/evaluation-error/computed-name-valueof-err.js: Missing class properties transform.\n  54 | function evaluate() {\n  55 |   class C {\n\u003e 56 |     [obj]\n     |     ^\n  57 |   }\n  58 | }\n  59 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/field-declaration.js-strict:true": "test/language/statements/class/elements/field-declaration.js: SyntaxError: test/language/statements/class/elements/field-declaration.js: Unexpected token (54:4)\n  52 | \n  53 | class C {\n\u003e 54 |   f = 'test262';\n     |     ^\n  55 |   'g';\n  56 |   0 = 'bar';\n  57 |   [computed]; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/fielddefinition-initializer-abrupt-completion.js-strict:true": "test/language/statements/class/elements/fielddefinition-initializer-abrupt-completion.js: SyntaxError: test/language/statements/class/elements/fielddefinition-initializer-abrupt-completion.js: Unexpected token (42:4)\n  40 | \n  41 | class C {\n\u003e 42 |   x = f();\n     |     ^\n  43 | }\n  44 | \n  45 | assert.throws(Test262Error, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/fields-anonymous-function-length.js-strict:true": "test/language/statements/class/elements/fields-anonymous-function-length.js: SyntaxError: test/language/statements/class/elements/fields-anonymous-function-length.js: Unexpected token (37:8)\n  35 | \n  36 | class C {\n\u003e 37 |   field = function() {};\n     |         ^\n  38 |   #field = (a, b, c, d) =\u003e undefined;\n  39 | \n  40 |   accessPrivateField() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/fields-asi-1.js-strict:true": "test/language/statements/class/elements/fields-asi-1.js: SyntaxError: test/language/statements/class/elements/fields-asi-1.js: Unexpected token (13:4)\n  11 | var obj = {}\n  12 | class C {\n\u003e 13 |   x = obj\n     |     ^\n  14 |   ['lol'] = 42\n  15 | }\n  16 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/fields-asi-2.js-strict:true": "test/language/statements/class/elements/fields-asi-2.js: SyntaxError: test/language/statements/class/elements/fields-asi-2.js: Unexpected token (12:4)\n  10 | \n  11 | class C {\n\u003e 12 |   x = \"lol\"\n     |     ^\n  13 |   [1]\n  14 | }\n  15 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/fields-asi-5.js-strict:true": "test/language/statements/class/elements/fields-asi-5.js: SyntaxError: test/language/statements/class/elements/fields-asi-5.js: Unexpected token (16:4)\n  14 | \n  15 | class C {\n\u003e 16 |   a = x\n     |     ^\n  17 |   in\n  18 |   z\n  19 |   b = y at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/fields-computed-name-propname-constructor.js-strict:true": "test/language/statements/class/elements/fields-computed-name-propname-constructor.js: SyntaxError: test/language/statements/class/elements/fields-computed-name-propname-constructor.js: Missing class properties transform.\n  45 | var x = \"constructor\";\n  46 | class C1 {\n\u003e 47 |   [x];\n     |   ^\n  48 | }\n  49 | \n  50 | var c1 = new C1(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/fields-computed-name-static-computed-var-propname-constructor.js-strict:true": "test/language/statements/class/elements/fields-computed-name-static-computed-var-propname-constructor.js: SyntaxError: test/language/statements/class/elements/fields-computed-name-static-computed-var-propname-constructor.js: Unexpected token (73:13)\n  71 | \n  72 | class C2 {\n\u003e 73 |   static [x] = 42;\n     |              ^\n  74 | }\n  75 | \n  76 | verifyProperty(C2, 'constructor', { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/fields-computed-name-static-computed-var-propname-prototype.js-strict:true": "test/language/statements/class/elements/fields-computed-name-static-computed-var-propname-prototype.js: SyntaxError: test/language/statements/class/elements/fields-computed-name-static-computed-var-propname-prototype.js: Unexpected token (25:15)\n  23 | assert.throws(TypeError, function() {\n  24 |   class C {\n\u003e 25 |     static [x] = 42;\n     |                ^\n  26 |   }\n  27 | });\n  28 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/fields-computed-name-static-propname-constructor.js-strict:true": "test/language/statements/class/elements/fields-computed-name-static-propname-constructor.js: SyntaxError: test/language/statements/class/elements/fields-computed-name-static-propname-constructor.js: Unexpected token (72:25)\n  70 | \n  71 | class C2 {\n\u003e 72 |   static ['constructor'] = 42;\n     |                          ^\n  73 | }\n  74 | \n  75 | verifyProperty(C2, 'constructor', { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/fields-computed-name-static-propname-prototype.js-strict:true": "test/language/statements/class/elements/fields-computed-name-static-propname-prototype.js: SyntaxError: test/language/statements/class/elements/fields-computed-name-static-propname-prototype.js: Unexpected token (23:25)\n  21 | assert.throws(TypeError, function() {\n  22 |   class C {\n\u003e 23 |     static ['prototype'] = 42;\n     |                          ^\n  24 |   }\n  25 | });\n  26 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/fields-hash-constructor-is-a-valid-name.js-strict:true": "test/language/statements/class/elements/fields-hash-constructor-is-a-valid-name.js: SyntaxError: test/language/statements/class/elements/fields-hash-constructor-is-a-valid-name.js: Unexpected token (30:19)\n  28 | \n  29 | class C2 {\n\u003e 30 |   [\"#constructor\"] = 42;\n     |                    ^\n  31 | }\n  32 | \n  33 | var c2 = new C2(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/get-access-of-missing-private-getter.js-strict:true": "test/language/statements/class/elements/get-access-of-missing-private-getter.js: SyntaxError: test/language/statements/class/elements/get-access-of-missing-private-getter.js: Unexpected character '#' (28:6)\n  26 | \n  27 | class C {\n\u003e 28 |   set #f(v) {\n     |       ^\n  29 |     throw new Test262Error();\n  30 |   }\n  31 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/get-access-of-missing-shadowed-private-getter.js-strict:true": "test/language/statements/class/elements/get-access-of-missing-shadowed-private-getter.js: SyntaxError: test/language/statements/class/elements/get-access-of-missing-shadowed-private-getter.js: Unexpected character '#' (28:6)\n  26 | \n  27 | class A {\n\u003e 28 |   get #f() {\n     |       ^\n  29 |     throw new Test262Error();\n  30 |   }\n  31 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/grammar-private-field-optional-chaining.js-strict:true": "test/language/statements/class/elements/grammar-private-field-optional-chaining.js: SyntaxError: test/language/statements/class/elements/grammar-private-field-optional-chaining.js: Unexpected character '#' (24:2)\n  22 | \n  23 | class C {\n\u003e 24 |   #m = 'test262';\n     |   ^\n  25 | \n  26 |   static access(obj) {\n  27 |     return obj?.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/indirect-eval-err-contains-arguments.js-strict:true": "test/language/statements/class/elements/indirect-eval-err-contains-arguments.js: SyntaxError: test/language/statements/class/elements/indirect-eval-err-contains-arguments.js: Unexpected token (30:4)\n  28 | var executed = false;\n  29 | class C {\n\u003e 30 |   x = (0, eval)('executed = true; arguments;');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/indirect-eval-err-contains-newtarget.js-strict:true": "test/language/statements/class/elements/indirect-eval-err-contains-newtarget.js: SyntaxError: test/language/statements/class/elements/indirect-eval-err-contains-newtarget.js: Unexpected token (29:4)\n  27 | var executed = false;\n  28 | class C {\n\u003e 29 |   x = (0, eval)('executed = true; new.target;');\n     |     ^\n  30 | }\n  31 | \n  32 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/init-err-evaluation.js-strict:true": "test/language/statements/class/elements/init-err-evaluation.js: SyntaxError: test/language/statements/class/elements/init-err-evaluation.js: Unexpected token (28:4)\n  26 | \n  27 | class C {\n\u003e 28 |   x = fn1();\n     |     ^\n  29 |   y = fn2();\n  30 |   z = fn1();\n  31 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/init-value-defined-after-class.js-strict:true": "test/language/statements/class/elements/init-value-defined-after-class.js: SyntaxError: test/language/statements/class/elements/init-value-defined-after-class.js: Unexpected token (27:6)\n  25 | \n  26 | class C {\n\u003e 27 |   [x] = x;\n     |       ^\n  28 | }\n  29 | \n  30 | var c1 = new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/init-value-incremental.js-strict:true": "test/language/statements/class/elements/init-value-incremental.js: SyntaxError: test/language/statements/class/elements/init-value-incremental.js: Unexpected token (36:8)\n  34 | \n  35 | class C {\n\u003e 36 |   [x++] = x++;\n     |         ^\n  37 |   [x++] = x++;\n  38 | }\n  39 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/intercalated-static-non-static-computed-fields.js-strict:true": "test/language/statements/class/elements/intercalated-static-non-static-computed-fields.js: SyntaxError: test/language/statements/class/elements/intercalated-static-non-static-computed-fields.js: Unexpected token (44:8)\n  42 | \n  43 | class C {\n\u003e 44 |   [i++] = i++;\n     |         ^\n  45 |   static [i++] = i++;\n  46 |   [i++] = i++;\n  47 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-computed-names.js-strict:true": "test/language/statements/class/elements/multiple-definitions-computed-names.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | class C {\n\u003e 28 |   foo = \"foobar\";\n     |       ^\n  29 |   m() { return 42 }\n  30 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"]\n  31 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-computed-symbol-names.js-strict:true": "test/language/statements/class/elements/multiple-definitions-computed-symbol-names.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-computed-symbol-names.js: Unexpected token (29:6)\n  27 | \n  28 | class C {\n\u003e 29 |   foo = \"foobar\";\n     |       ^\n  30 |   m() { return 42 }\n  31 |   [x]; [y] = 42\n  32 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/statements/class/elements/multiple-definitions-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected token (68:6)\n  66 | \n  67 | class C {\n\u003e 68 |   foo = \"foobar\";\n     |       ^\n  69 |   m() { return 42 }\n  70 |   #\\u{6F};\n  71 |   #\\u2118; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-literal-names-asi.js-strict:true": "test/language/statements/class/elements/multiple-definitions-literal-names-asi.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-literal-names-asi.js: Unexpected token (26:6)\n  24 | \n  25 | class C {\n\u003e 26 |   foo = \"foobar\";\n     |       ^\n  27 |   m() { return 42 }\n  28 |   a\n  29 |   b = 42; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-literal-names.js-strict:true": "test/language/statements/class/elements/multiple-definitions-literal-names.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-literal-names.js: Unexpected token (28:6)\n  26 | \n  27 | class C {\n\u003e 28 |   foo = \"foobar\";\n     |       ^\n  29 |   m() { return 42 }\n  30 |   a; b = 42;\n  31 |   c = fn at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-private-field-usage.js-strict:true": "test/language/statements/class/elements/multiple-definitions-private-field-usage.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-private-field-usage.js: Unexpected token (27:6)\n  25 | \n  26 | class C {\n\u003e 27 |   foo = \"foobar\";\n     |       ^\n  28 |   m() { return 42 }\n  29 |   #m = 'test262';\n  30 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-private-method-getter-usage.js-strict:true": "test/language/statements/class/elements/multiple-definitions-private-method-getter-usage.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-private-method-getter-usage.js: Unexpected token (27:6)\n  25 | \n  26 | class C {\n\u003e 27 |   foo = \"foobar\";\n     |       ^\n  28 |   m() { return 42 }\n  29 |   get #m() { return 'test262'; }\n  30 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-private-method-usage.js-strict:true": "test/language/statements/class/elements/multiple-definitions-private-method-usage.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-private-method-usage.js: Unexpected token (27:6)\n  25 | \n  26 | class C {\n\u003e 27 |   foo = \"foobar\";\n     |       ^\n  28 |   m() { return 42 }\n  29 |   #m() { return 'test262'; }\n  30 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-private-names.js-strict:true": "test/language/statements/class/elements/multiple-definitions-private-names.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-private-names.js: Unexpected token (29:6)\n  27 | \n  28 | class C {\n\u003e 29 |   foo = \"foobar\";\n     |       ^\n  30 |   m() { return 42 }\n  31 |   #x; #y\n  32 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-rs-field-identifier-initializer.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-field-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-field-identifier-initializer.js: Unexpected token (62:6)\n  60 | \n  61 | class C {\n\u003e 62 |   foo = \"foobar\";\n     |       ^\n  63 |   m() { return 42 }\n  64 |   $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1\n  65 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-rs-field-identifier.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-field-identifier.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-field-identifier.js: Unexpected token (62:6)\n  60 | \n  61 | class C {\n\u003e 62 |   foo = \"foobar\";\n     |       ^\n  63 |   m() { return 42 }\n  64 |   $; _; \\u{6F}; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J\n  65 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-rs-private-getter-alt.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-private-getter-alt.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-private-getter-alt.js: Unexpected token (60:6)\n  58 | \n  59 | class C {\n\u003e 60 |   foo = \"foobar\";\n     |       ^\n  61 |   m() { return 42 }\n  62 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n  63 |   get #$() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-rs-private-getter.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-private-getter.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-private-getter.js: Unexpected token (60:6)\n  58 | \n  59 | class C {\n\u003e 60 |   foo = \"foobar\";\n     |       ^\n  61 |   m() { return 42 }\n  62 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n  63 |   get #$() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-rs-private-method-alt.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-private-method-alt.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-private-method-alt.js: Unexpected token (59:6)\n  57 | \n  58 | class C {\n\u003e 59 |   foo = \"foobar\";\n     |       ^\n  60 |   m() { return 42 }\n  61 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n  62 |   #$() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-rs-private-method.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-private-method.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-private-method.js: Unexpected token (59:6)\n  57 | \n  58 | class C {\n\u003e 59 |   foo = \"foobar\";\n     |       ^\n  60 |   m() { return 42 }\n  61 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n  62 |   #$() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-rs-private-setter-alt.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-private-setter-alt.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-private-setter-alt.js: Unexpected token (59:6)\n  57 | \n  58 | class C {\n\u003e 59 |   foo = \"foobar\";\n     |       ^\n  60 |   m() { return 42 }\n  61 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n  62 |   set #$(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-rs-private-setter.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-private-setter.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-private-setter.js: Unexpected token (59:6)\n  57 | \n  58 | class C {\n\u003e 59 |   foo = \"foobar\";\n     |       ^\n  60 |   m() { return 42 }\n  61 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n  62 |   set #$(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-rs-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-privatename-identifier-alt.js: Unexpected token (60:6)\n  58 | \n  59 | class C {\n\u003e 60 |   foo = \"foobar\";\n     |       ^\n  61 |   m() { return 42 }\n  62 |   #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J\n  63 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-privatename-identifier-initializer-alt.js: Unexpected token (60:6)\n  58 | \n  59 | class C {\n\u003e 60 |   foo = \"foobar\";\n     |       ^\n  61 |   m() { return 42 }\n  62 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1\n  63 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-rs-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-privatename-identifier-initializer.js: Unexpected token (60:6)\n  58 | \n  59 | class C {\n\u003e 60 |   foo = \"foobar\";\n     |       ^\n  61 |   m() { return 42 }\n  62 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1\n  63 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-rs-privatename-identifier.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-privatename-identifier.js: Unexpected token (60:6)\n  58 | \n  59 | class C {\n\u003e 60 |   foo = \"foobar\";\n     |       ^\n  61 |   m() { return 42 }\n  62 |   #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J\n  63 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-generator-method-privatename-identifier-alt.js: Unexpected token (64:6)\n  62 | \n  63 | class C {\n\u003e 64 |   foo = \"foobar\";\n     |       ^\n  65 |   m() { return 42 }\n  66 |   static * #$(value) {\n  67 |     yield * value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-generator-method-privatename-identifier.js: Unexpected token (64:6)\n  62 | \n  63 | class C {\n\u003e 64 |   foo = \"foobar\";\n     |       ^\n  65 |   m() { return 42 }\n  66 |   static * #$(value) {\n  67 |     yield * value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-method-privatename-identifier-alt.js: Unexpected token (61:6)\n  59 | \n  60 | class C {\n\u003e 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() { return 42 }\n  63 |   static #$(value) {\n  64 |     return value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-rs-static-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-method-privatename-identifier.js: Unexpected token (61:6)\n  59 | \n  60 | class C {\n\u003e 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() { return 42 }\n  63 |   static #$(value) {\n  64 |     return value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-alt-by-classname.js: Unexpected token (61:6)\n  59 | \n  60 | class C {\n\u003e 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() { return 42 }\n  63 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n  64 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-alt.js: Unexpected token (61:6)\n  59 | \n  60 | class C {\n\u003e 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() { return 42 }\n  63 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n  64 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-by-classname.js: Unexpected token (61:6)\n  59 | \n  60 | class C {\n\u003e 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() { return 42 }\n  63 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n  64 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected token (61:6)\n  59 | \n  60 | class C {\n\u003e 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() { return 42 }\n  63 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n  64 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer-alt.js: Unexpected token (61:6)\n  59 | \n  60 | class C {\n\u003e 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() { return 42 }\n  63 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n  64 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier-initializer.js: Unexpected token (61:6)\n  59 | \n  60 | class C {\n\u003e 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() { return 42 }\n  63 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1\n  64 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-privatename-identifier.js: Unexpected token (61:6)\n  59 | \n  60 | class C {\n\u003e 61 |   foo = \"foobar\";\n     |       ^\n  62 |   m() { return 42 }\n  63 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n  64 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-static-private-fields.js-strict:true": "test/language/statements/class/elements/multiple-definitions-static-private-fields.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-static-private-fields.js: Unexpected token (29:6)\n  27 | \n  28 | class C {\n\u003e 29 |   foo = \"foobar\";\n     |       ^\n  30 |   m() { return 42 }\n  31 |   static #x; static #y\n  32 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-static-private-methods-with-fields.js-strict:true": "test/language/statements/class/elements/multiple-definitions-static-private-methods-with-fields.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-static-private-methods-with-fields.js: Unexpected token (29:6)\n  27 | \n  28 | class C {\n\u003e 29 |   foo = \"foobar\";\n     |       ^\n  30 |   m() { return 42 }\n  31 |   static #xVal; static #yVal\n  32 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-static-private-methods.js-strict:true": "test/language/statements/class/elements/multiple-definitions-static-private-methods.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-static-private-methods.js: Unexpected token (29:6)\n  27 | \n  28 | class C {\n\u003e 29 |   foo = \"foobar\";\n     |       ^\n  30 |   m() { return 42 }\n  31 |   \n  32 |   m2() { return 39 } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-definitions-string-literal-names.js-strict:true": "test/language/statements/class/elements/multiple-definitions-string-literal-names.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-string-literal-names.js: Unexpected token (26:6)\n  24 | \n  25 | class C {\n\u003e 26 |   foo = \"foobar\";\n     |       ^\n  27 |   m() { return 42 }\n  28 |   'a'; \"b\"; 'c' = 39;\n  29 |   \"d\" = 42 at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-computed-names.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-computed-names.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | class C {\n\u003e 28 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"]\n     |       ^\n  29 |   foo = \"foobar\"\n  30 |   bar = \"barbaz\";\n  31 |    at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-computed-symbol-names.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-computed-symbol-names.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-computed-symbol-names.js: Unexpected token (29:11)\n  27 | \n  28 | class C {\n\u003e 29 |   [x]; [y] = 42\n     |            ^\n  30 |   foo = \"foobar\"\n  31 |   bar = \"barbaz\";\n  32 |    at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:2)\n  66 | \n  67 | class C {\n\u003e 68 |   #\\u{6F};\n     |   ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-literal-names-asi.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-literal-names-asi.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-literal-names-asi.js: Unexpected token (27:4)\n  25 | class C {\n  26 |   a\n\u003e 27 |   b = 42;\n     |     ^\n  28 |   foo = \"foobar\"\n  29 |   bar = \"barbaz\";\n  30 |    at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-literal-names.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-literal-names.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-literal-names.js: Unexpected token (28:7)\n  26 | \n  27 | class C {\n\u003e 28 |   a; b = 42;\n     |        ^\n  29 |   c = fn\n  30 |   foo = \"foobar\"\n  31 |   bar = \"barbaz\"; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-private-field-usage.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-private-field-usage.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-private-field-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | class C {\n\u003e 27 |   #m = 'test262';\n     |   ^\n  28 |   foo = \"foobar\"\n  29 |   bar = \"barbaz\";\n  30 |   method() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-private-method-getter-usage.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-private-method-getter-usage.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-private-method-getter-usage.js: Unexpected character '#' (27:6)\n  25 | \n  26 | class C {\n\u003e 27 |   get #m() { return 'test262'; }\n     |       ^\n  28 |   foo = \"foobar\"\n  29 |   bar = \"barbaz\";\n  30 |   method() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-private-method-usage.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-private-method-usage.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-private-method-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | class C {\n\u003e 27 |   #m() { return 'test262'; }\n     |   ^\n  28 |   foo = \"foobar\"\n  29 |   bar = \"barbaz\";\n  30 |   method() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-private-names.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-private-names.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-private-names.js: Unexpected character '#' (29:2)\n  27 | \n  28 | class C {\n\u003e 29 |   #x; #y\n     |   ^\n  30 |   foo = \"foobar\"\n  31 |   bar = \"barbaz\";\n  32 |   x() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-field-identifier-initializer.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-field-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-field-identifier-initializer.js: Unexpected token (62:4)\n  60 | \n  61 | class C {\n\u003e 62 |   $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1\n     |     ^\n  63 |   foo = \"foobar\"\n  64 |   bar = \"barbaz\";\n  65 |    at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-field-identifier.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-field-identifier.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-field-identifier.js: Unexpected token (63:6)\n  61 | class C {\n  62 |   $; _; \\u{6F}; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J\n\u003e 63 |   foo = \"foobar\"\n     |       ^\n  64 |   bar = \"barbaz\";\n  65 |   \n  66 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-private-getter-alt.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-private-getter-alt.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-private-getter-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n\u003e 60 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-private-getter.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-private-getter.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-private-getter.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n\u003e 60 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-private-method-alt.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-private-method-alt.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-private-method-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-private-method.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-private-method.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-private-method.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-private-setter-alt.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-private-setter-alt.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-private-setter-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-private-setter.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-private-setter.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-private-setter.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-privatename-identifier-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n\u003e 60 |   #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J\n     |   ^\n  61 |   foo = \"foobar\"\n  62 |   bar = \"barbaz\";\n  63 |   $(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n\u003e 60 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1\n     |   ^\n  61 |   foo = \"foobar\"\n  62 |   bar = \"barbaz\";\n  63 |   $() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n\u003e 60 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1\n     |   ^\n  61 |   foo = \"foobar\"\n  62 |   bar = \"barbaz\";\n  63 |   $() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-privatename-identifier.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-privatename-identifier.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n\u003e 60 |   #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J\n     |   ^\n  61 |   foo = \"foobar\"\n  62 |   bar = \"barbaz\";\n  63 |   $(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:11)\n  62 | \n  63 | class C {\n\u003e 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:11)\n  62 | \n  63 | class C {\n\u003e 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$(value) {\n     |          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$(value) {\n     |          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n     |          ^\n  62 |   foo = \"foobar\"\n  63 |   bar = \"barbaz\";\n  64 |   static $(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-static-private-fields.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-static-private-fields.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-static-private-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C {\n\u003e 29 |   static #x; static #y\n     |          ^\n  30 |   foo = \"foobar\"\n  31 |   bar = \"barbaz\";\n  32 |   static x() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-static-private-methods-with-fields.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-static-private-methods-with-fields.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-static-private-methods-with-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C {\n\u003e 29 |   static #xVal; static #yVal\n     |          ^\n  30 |   foo = \"foobar\"\n  31 |   bar = \"barbaz\";\n  32 |   static #x(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-static-private-methods.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-static-private-methods.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-static-private-methods.js: Unexpected token (30:6)\n  28 | class C {\n  29 |   \n\u003e 30 |   foo = \"foobar\"\n     |       ^\n  31 |   bar = \"barbaz\";\n  32 |   static #x(value) {\n  33 |     return value / 2; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/multiple-stacked-definitions-string-literal-names.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-string-literal-names.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-string-literal-names.js: Unexpected token (26:16)\n  24 | \n  25 | class C {\n\u003e 26 |   'a'; \"b\"; 'c' = 39;\n     |                 ^\n  27 |   \"d\" = 42\n  28 |   foo = \"foobar\"\n  29 |   bar = \"barbaz\"; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-derived-cls-direct-eval-contains-superproperty-1.js-strict:true": "test/language/statements/class/elements/nested-derived-cls-direct-eval-contains-superproperty-1.js: SyntaxError: test/language/statements/class/elements/nested-derived-cls-direct-eval-contains-superproperty-1.js: Unexpected token (30:4)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   x = eval('executed = true; super.x;');\n     |     ^\n  31 | }\n  32 | \n  33 | new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-derived-cls-direct-eval-contains-superproperty-2.js-strict:true": "test/language/statements/class/elements/nested-derived-cls-direct-eval-contains-superproperty-2.js: SyntaxError: test/language/statements/class/elements/nested-derived-cls-direct-eval-contains-superproperty-2.js: Unexpected token (27:4)\n  25 | class A {}\n  26 | class C extends A {\n\u003e 27 |   x = eval('executed = true; super[\"x\"];');\n     |     ^\n  28 | }\n  29 | \n  30 | new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-derived-cls-direct-eval-err-contains-supercall-1.js-strict:true": "test/language/statements/class/elements/nested-derived-cls-direct-eval-err-contains-supercall-1.js: SyntaxError: test/language/statements/class/elements/nested-derived-cls-direct-eval-err-contains-supercall-1.js: Unexpected token (30:4)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   x = eval('executed = true; super()[\"x\"];');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-derived-cls-direct-eval-err-contains-supercall-2.js-strict:true": "test/language/statements/class/elements/nested-derived-cls-direct-eval-err-contains-supercall-2.js: SyntaxError: test/language/statements/class/elements/nested-derived-cls-direct-eval-err-contains-supercall-2.js: Unexpected token (23:4)\n  21 | class A {}\n  22 | class C extends A {\n\u003e 23 |   x = eval('executed = true; super().x;');\n     |     ^\n  24 | }\n  25 | \n  26 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-derived-cls-direct-eval-err-contains-supercall.js-strict:true": "test/language/statements/class/elements/nested-derived-cls-direct-eval-err-contains-supercall.js: SyntaxError: test/language/statements/class/elements/nested-derived-cls-direct-eval-err-contains-supercall.js: Unexpected token (30:4)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   x = eval('executed = true; super();');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-derived-cls-indirect-eval-contains-superproperty-1.js-strict:true": "test/language/statements/class/elements/nested-derived-cls-indirect-eval-contains-superproperty-1.js: SyntaxError: test/language/statements/class/elements/nested-derived-cls-indirect-eval-contains-superproperty-1.js: Unexpected token (30:4)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   x = (0, eval)('executed = true; super.x;');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-derived-cls-indirect-eval-contains-superproperty-2.js-strict:true": "test/language/statements/class/elements/nested-derived-cls-indirect-eval-contains-superproperty-2.js: SyntaxError: test/language/statements/class/elements/nested-derived-cls-indirect-eval-contains-superproperty-2.js: Unexpected token (27:4)\n  25 | class A {}\n  26 | class C extends A {\n\u003e 27 |   x = (0, eval)('executed = true; super[\"x\"];');\n     |     ^\n  28 | }\n  29 | \n  30 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall-1.js-strict:true": "test/language/statements/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall-1.js: SyntaxError: test/language/statements/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall-1.js: Unexpected token (30:4)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   x = (0, eval)('executed = true; super()[\"x\"];');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall-2.js-strict:true": "test/language/statements/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall-2.js: SyntaxError: test/language/statements/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall-2.js: Unexpected token (23:4)\n  21 | class A {}\n  22 | class C extends A {\n\u003e 23 |   x = (0, eval)('executed = true; super().x;');\n     |     ^\n  24 | }\n  25 | \n  26 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall.js-strict:true": "test/language/statements/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall.js: SyntaxError: test/language/statements/class/elements/nested-derived-cls-indirect-eval-err-contains-supercall.js: Unexpected token (30:4)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   x = (0, eval)('executed = true; super();');\n     |     ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-direct-eval-err-contains-arguments.js-strict:true": "test/language/statements/class/elements/nested-direct-eval-err-contains-arguments.js: SyntaxError: test/language/statements/class/elements/nested-direct-eval-err-contains-arguments.js: Unexpected token (30:4)\n  28 | var executed = false;\n  29 | class C {\n\u003e 30 |   x = () =\u003e {\n     |     ^\n  31 |     var t = () =\u003e { eval('executed = true; arguments;'); };\n  32 |     t();\n  33 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-direct-eval-err-contains-newtarget.js-strict:true": "test/language/statements/class/elements/nested-direct-eval-err-contains-newtarget.js: SyntaxError: test/language/statements/class/elements/nested-direct-eval-err-contains-newtarget.js: Unexpected token (29:4)\n  27 | var executed = false;\n  28 | class C {\n\u003e 29 |   x = eval('executed = true; new.target;');\n     |     ^\n  30 | }\n  31 | \n  32 | var c = new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-indirect-eval-err-contains-arguments.js-strict:true": "test/language/statements/class/elements/nested-indirect-eval-err-contains-arguments.js: SyntaxError: test/language/statements/class/elements/nested-indirect-eval-err-contains-arguments.js: Unexpected token (30:4)\n  28 | var executed = false;\n  29 | class C {\n\u003e 30 |   x = () =\u003e {\n     |     ^\n  31 |     var t = () =\u003e { (0, eval)('executed = true; arguments;'); };\n  32 |     t();\n  33 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-indirect-eval-err-contains-newtarget.js-strict:true": "test/language/statements/class/elements/nested-indirect-eval-err-contains-newtarget.js: SyntaxError: test/language/statements/class/elements/nested-indirect-eval-err-contains-newtarget.js: Unexpected token (29:4)\n  27 | var executed = false;\n  28 | class C {\n\u003e 29 |   x = (0, eval)('executed = true; new.target;');\n     |     ^\n  30 | }\n  31 | \n  32 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-private-derived-cls-direct-eval-contains-superproperty-1.js-strict:true": "test/language/statements/class/elements/nested-private-derived-cls-direct-eval-contains-superproperty-1.js: SyntaxError: test/language/statements/class/elements/nested-private-derived-cls-direct-eval-contains-superproperty-1.js: Unexpected character '#' (30:2)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   #x = eval('executed = true; super.x;');\n     |   ^\n  31 | }\n  32 | \n  33 | new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-private-derived-cls-direct-eval-contains-superproperty-2.js-strict:true": "test/language/statements/class/elements/nested-private-derived-cls-direct-eval-contains-superproperty-2.js: SyntaxError: test/language/statements/class/elements/nested-private-derived-cls-direct-eval-contains-superproperty-2.js: Unexpected character '#' (27:2)\n  25 | class A {}\n  26 | class C extends A {\n\u003e 27 |   #x = eval('executed = true; super[\"x\"];');\n     |   ^\n  28 | }\n  29 | \n  30 | new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-private-derived-cls-direct-eval-err-contains-supercall-1.js-strict:true": "test/language/statements/class/elements/nested-private-derived-cls-direct-eval-err-contains-supercall-1.js: SyntaxError: test/language/statements/class/elements/nested-private-derived-cls-direct-eval-err-contains-supercall-1.js: Unexpected character '#' (30:2)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   #x = eval('executed = true; super()[\"x\"];');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-private-derived-cls-direct-eval-err-contains-supercall-2.js-strict:true": "test/language/statements/class/elements/nested-private-derived-cls-direct-eval-err-contains-supercall-2.js: SyntaxError: test/language/statements/class/elements/nested-private-derived-cls-direct-eval-err-contains-supercall-2.js: Unexpected character '#' (23:2)\n  21 | class A {}\n  22 | class C extends A {\n\u003e 23 |   #x = eval('executed = true; super().x;');\n     |   ^\n  24 | }\n  25 | \n  26 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-private-derived-cls-direct-eval-err-contains-supercall.js-strict:true": "test/language/statements/class/elements/nested-private-derived-cls-direct-eval-err-contains-supercall.js: SyntaxError: test/language/statements/class/elements/nested-private-derived-cls-direct-eval-err-contains-supercall.js: Unexpected character '#' (30:2)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   #x = eval('executed = true; super();');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-private-derived-cls-indirect-eval-contains-superproperty-1.js-strict:true": "test/language/statements/class/elements/nested-private-derived-cls-indirect-eval-contains-superproperty-1.js: SyntaxError: test/language/statements/class/elements/nested-private-derived-cls-indirect-eval-contains-superproperty-1.js: Unexpected character '#' (30:2)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   #x = (0, eval)('executed = true; super.x;');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-private-derived-cls-indirect-eval-contains-superproperty-2.js-strict:true": "test/language/statements/class/elements/nested-private-derived-cls-indirect-eval-contains-superproperty-2.js: SyntaxError: test/language/statements/class/elements/nested-private-derived-cls-indirect-eval-contains-superproperty-2.js: Unexpected character '#' (27:2)\n  25 | class A {}\n  26 | class C extends A {\n\u003e 27 |   #x = (0, eval)('executed = true; super[\"x\"];');\n     |   ^\n  28 | }\n  29 | \n  30 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-private-derived-cls-indirect-eval-err-contains-supercall-1.js-strict:true": "test/language/statements/class/elements/nested-private-derived-cls-indirect-eval-err-contains-supercall-1.js: SyntaxError: test/language/statements/class/elements/nested-private-derived-cls-indirect-eval-err-contains-supercall-1.js: Unexpected character '#' (30:2)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   #x = (0, eval)('executed = true; super()[\"x\"];');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-private-derived-cls-indirect-eval-err-contains-supercall-2.js-strict:true": "test/language/statements/class/elements/nested-private-derived-cls-indirect-eval-err-contains-supercall-2.js: SyntaxError: test/language/statements/class/elements/nested-private-derived-cls-indirect-eval-err-contains-supercall-2.js: Unexpected character '#' (23:2)\n  21 | class A {}\n  22 | class C extends A {\n\u003e 23 |   #x = (0, eval)('executed = true; super().x;');\n     |   ^\n  24 | }\n  25 | \n  26 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-private-derived-cls-indirect-eval-err-contains-supercall.js-strict:true": "test/language/statements/class/elements/nested-private-derived-cls-indirect-eval-err-contains-supercall.js: SyntaxError: test/language/statements/class/elements/nested-private-derived-cls-indirect-eval-err-contains-supercall.js: Unexpected character '#' (30:2)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   #x = (0, eval)('executed = true; super();');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-private-direct-eval-err-contains-arguments.js-strict:true": "test/language/statements/class/elements/nested-private-direct-eval-err-contains-arguments.js: SyntaxError: test/language/statements/class/elements/nested-private-direct-eval-err-contains-arguments.js: Unexpected character '#' (30:2)\n  28 | var executed = false;\n  29 | class C {\n\u003e 30 |   #x = () =\u003e {\n     |   ^\n  31 |     var t = () =\u003e { eval('executed = true; arguments;'); };\n  32 |     t();\n  33 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-private-direct-eval-err-contains-newtarget.js-strict:true": "test/language/statements/class/elements/nested-private-direct-eval-err-contains-newtarget.js: SyntaxError: test/language/statements/class/elements/nested-private-direct-eval-err-contains-newtarget.js: Unexpected character '#' (29:2)\n  27 | var executed = false;\n  28 | class C {\n\u003e 29 |   #x = eval('executed = true; new.target;');\n     |   ^\n  30 | }\n  31 | \n  32 | var c = new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-private-indirect-eval-err-contains-arguments.js-strict:true": "test/language/statements/class/elements/nested-private-indirect-eval-err-contains-arguments.js: SyntaxError: test/language/statements/class/elements/nested-private-indirect-eval-err-contains-arguments.js: Unexpected character '#' (30:2)\n  28 | var executed = false;\n  29 | class C {\n\u003e 30 |   #x = (0, eval)('executed = true; arguments;');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/nested-private-indirect-eval-err-contains-newtarget.js-strict:true": "test/language/statements/class/elements/nested-private-indirect-eval-err-contains-newtarget.js: SyntaxError: test/language/statements/class/elements/nested-private-indirect-eval-err-contains-newtarget.js: Unexpected character '#' (29:2)\n  27 | var executed = false;\n  28 | class C {\n\u003e 29 |   #x = (0, eval)('executed = true; new.target;');\n     |   ^\n  30 | }\n  31 | \n  32 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-computed-names.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-computed-names.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | class C {\n\u003e 28 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"]\n     |       ^\n  29 |   m() { return 42; }\n  30 |   \n  31 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-computed-symbol-names.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-computed-symbol-names.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-computed-symbol-names.js: Unexpected token (29:11)\n  27 | \n  28 | class C {\n\u003e 29 |   [x]; [y] = 42\n     |            ^\n  30 |   m() { return 42; }\n  31 |   \n  32 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:2)\n  66 | \n  67 | class C {\n\u003e 68 |   #\\u{6F};\n     |   ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-literal-names-asi.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-literal-names-asi.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-literal-names-asi.js: Unexpected token (27:4)\n  25 | class C {\n  26 |   a\n\u003e 27 |   b = 42;\n     |     ^\n  28 |   m() { return 42; }\n  29 |   \n  30 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-literal-names.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-literal-names.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-literal-names.js: Unexpected token (28:7)\n  26 | \n  27 | class C {\n\u003e 28 |   a; b = 42;\n     |        ^\n  29 |   c = fn\n  30 |   m() { return 42; }\n  31 |    at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-private-field-usage.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-private-field-usage.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-private-field-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | class C {\n\u003e 27 |   #m = 'test262';\n     |   ^\n  28 |   m() { return 42; }\n  29 |   method() {\n  30 |     return this.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-private-method-getter-usage.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-private-method-getter-usage.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-private-method-getter-usage.js: Unexpected character '#' (27:6)\n  25 | \n  26 | class C {\n\u003e 27 |   get #m() { return 'test262'; }\n     |       ^\n  28 |   m() { return 42; }\n  29 |   method() {\n  30 |     return this.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-private-method-usage.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-private-method-usage.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-private-method-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | class C {\n\u003e 27 |   #m() { return 'test262'; }\n     |   ^\n  28 |   m() { return 42; }\n  29 |   method() {\n  30 |     return this.#m(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-private-names.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-private-names.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-private-names.js: Unexpected character '#' (29:2)\n  27 | \n  28 | class C {\n\u003e 29 |   #x; #y\n     |   ^\n  30 |   m() { return 42; }\n  31 |   x() {\n  32 |     this.#x = 42; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-field-identifier-initializer.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-field-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-field-identifier-initializer.js: Unexpected token (62:4)\n  60 | \n  61 | class C {\n\u003e 62 |   $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1\n     |     ^\n  63 |   m() { return 42; }\n  64 |   \n  65 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-field-identifier.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-field-identifier.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-field-identifier.js: Missing class properties transform.\n  60 | \n  61 | class C {\n\u003e 62 |   $; _; \\u{6F}; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J\n     |   ^\n  63 |   m() { return 42; }\n  64 |   \n  65 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-private-getter-alt.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-private-getter-alt.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-private-getter-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n\u003e 60 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-private-getter.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-private-getter.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-private-getter.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n\u003e 60 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-private-method-alt.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-private-method-alt.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-private-method-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-private-method.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-private-method.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-private-method.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-private-setter-alt.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-private-setter-alt.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-private-setter-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-private-setter.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-private-setter.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-private-setter.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-privatename-identifier-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n\u003e 60 |   #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J\n     |   ^\n  61 |   m() { return 42; }\n  62 |   $(value) {\n  63 |     this.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n\u003e 60 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1\n     |   ^\n  61 |   m() { return 42; }\n  62 |   $() {\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n\u003e 60 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1\n     |   ^\n  61 |   m() { return 42; }\n  62 |   $() {\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-privatename-identifier.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n\u003e 60 |   #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J\n     |   ^\n  61 |   m() { return 42; }\n  62 |   $(value) {\n  63 |     this.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:11)\n  62 | \n  63 | class C {\n\u003e 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:11)\n  62 | \n  63 | class C {\n\u003e 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$(value) {\n     |          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$(value) {\n     |          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $(value) {\n  64 |     C.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $(value) {\n  64 |     this.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $(value) {\n  64 |     C.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $() {\n  64 |     return C.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $() {\n  64 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $() {\n  64 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $(value) {\n  64 |     this.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-static-private-fields.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-static-private-fields.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-static-private-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C {\n\u003e 29 |   static #x; static #y\n     |          ^\n  30 |   m() { return 42; }\n  31 |   static x() {\n  32 |     this.#x = 42; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-static-private-methods-with-fields.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-static-private-methods-with-fields.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-static-private-methods-with-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C {\n\u003e 29 |   static #xVal; static #yVal\n     |          ^\n  30 |   m() { return 42; }\n  31 |   static #x(value) {\n  32 |     this.#xVal = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-static-private-methods.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-static-private-methods.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-static-private-methods.js: Unexpected character '#' (31:9)\n  29 |   \n  30 |   m() { return 42; }\n\u003e 31 |   static #x(value) {\n     |          ^\n  32 |     return value / 2;\n  33 |   }\n  34 |   static #y(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-no-sc-line-method-string-literal-names.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-string-literal-names.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-string-literal-names.js: Unexpected token (26:16)\n  24 | \n  25 | class C {\n\u003e 26 |   'a'; \"b\"; 'c' = 39;\n     |                 ^\n  27 |   \"d\" = 42\n  28 |   m() { return 42; }\n  29 |    at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-computed-names.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-computed-names.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | class C {\n\u003e 28 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"];\n     |       ^\n  29 |   m() { return 42; }\n  30 |   \n  31 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-computed-symbol-names.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-computed-symbol-names.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-computed-symbol-names.js: Unexpected token (29:11)\n  27 | \n  28 | class C {\n\u003e 29 |   [x]; [y] = 42;\n     |            ^\n  30 |   m() { return 42; }\n  31 |   \n  32 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:2)\n  66 | \n  67 | class C {\n\u003e 68 |   #\\u{6F};\n     |   ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J;; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-literal-names-asi.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-literal-names-asi.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-literal-names-asi.js: Unexpected token (27:4)\n  25 | class C {\n  26 |   a\n\u003e 27 |   b = 42;;\n     |     ^\n  28 |   m() { return 42; }\n  29 |   \n  30 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-literal-names.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-literal-names.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-literal-names.js: Unexpected token (28:7)\n  26 | \n  27 | class C {\n\u003e 28 |   a; b = 42;\n     |        ^\n  29 |   c = fn;\n  30 |   m() { return 42; }\n  31 |    at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-private-field-usage.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-private-field-usage.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-private-field-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | class C {\n\u003e 27 |   #m = 'test262';;\n     |   ^\n  28 |   m() { return 42; }\n  29 |   method() {\n  30 |     return this.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-private-method-getter-usage.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-private-method-getter-usage.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-private-method-getter-usage.js: Unexpected character '#' (27:6)\n  25 | \n  26 | class C {\n\u003e 27 |   get #m() { return 'test262'; };\n     |       ^\n  28 |   m() { return 42; }\n  29 |   method() {\n  30 |     return this.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-private-method-usage.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-private-method-usage.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-private-method-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | class C {\n\u003e 27 |   #m() { return 'test262'; };\n     |   ^\n  28 |   m() { return 42; }\n  29 |   method() {\n  30 |     return this.#m(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-private-names.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-private-names.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-private-names.js: Unexpected character '#' (29:2)\n  27 | \n  28 | class C {\n\u003e 29 |   #x; #y;\n     |   ^\n  30 |   m() { return 42; }\n  31 |   x() {\n  32 |     this.#x = 42; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-rs-field-identifier-initializer.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-field-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-field-identifier-initializer.js: Unexpected token (62:4)\n  60 | \n  61 | class C {\n\u003e 62 |   $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;\n     |     ^\n  63 |   m() { return 42; }\n  64 |   \n  65 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-rs-field-identifier.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-field-identifier.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-field-identifier.js: Missing class properties transform.\n  60 | \n  61 | class C {\n\u003e 62 |   $; _; \\u{6F}; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J;\n     |   ^\n  63 |   m() { return 42; }\n  64 |   \n  65 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-rs-private-getter-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-private-getter-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-private-getter-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n\u003e 60 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-rs-private-getter.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-private-getter.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-private-getter.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n\u003e 60 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-rs-private-method-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-private-method-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-private-method-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-rs-private-method.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-private-method.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-private-method.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-rs-private-setter-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-private-setter-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-private-setter-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-rs-private-setter.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-private-setter.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-private-setter.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-rs-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-privatename-identifier-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n\u003e 60 |   #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J;\n     |   ^\n  61 |   m() { return 42; }\n  62 |   $(value) {\n  63 |     this.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n\u003e 60 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1;\n     |   ^\n  61 |   m() { return 42; }\n  62 |   $() {\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-rs-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n\u003e 60 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1;\n     |   ^\n  61 |   m() { return 42; }\n  62 |   $() {\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-rs-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-privatename-identifier.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n\u003e 60 |   #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J;\n     |   ^\n  61 |   m() { return 42; }\n  62 |   $(value) {\n  63 |     this.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:11)\n  62 | \n  63 | class C {\n\u003e 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:11)\n  62 | \n  63 | class C {\n\u003e 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$(value) {\n     |          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$(value) {\n     |          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $(value) {\n  64 |     C.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $(value) {\n  64 |     this.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $(value) {\n  64 |     C.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $() {\n  64 |     return C.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $() {\n  64 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $() {\n  64 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |          ^\n  62 |   m() { return 42; }\n  63 |   static $(value) {\n  64 |     this.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-static-private-fields.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-static-private-fields.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-static-private-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C {\n\u003e 29 |   static #x; static #y;\n     |          ^\n  30 |   m() { return 42; }\n  31 |   static x() {\n  32 |     this.#x = 42; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-static-private-methods-with-fields.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-static-private-methods-with-fields.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-static-private-methods-with-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C {\n\u003e 29 |   static #xVal; static #yVal;\n     |          ^\n  30 |   m() { return 42; }\n  31 |   static #x(value) {\n  32 |     this.#xVal = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-static-private-methods.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-static-private-methods.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-static-private-methods.js: Unexpected character '#' (31:9)\n  29 |   ;\n  30 |   m() { return 42; }\n\u003e 31 |   static #x(value) {\n     |          ^\n  32 |     return value / 2;\n  33 |   }\n  34 |   static #y(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/new-sc-line-method-string-literal-names.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-string-literal-names.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-string-literal-names.js: Unexpected token (26:16)\n  24 | \n  25 | class C {\n\u003e 26 |   'a'; \"b\"; 'c' = 39;\n     |                 ^\n  27 |   \"d\" = 42;\n  28 |   m() { return 42; }\n  29 |    at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-accessor-is-visible-in-computed-properties.js-strict:true": "test/language/statements/class/elements/private-accessor-is-visible-in-computed-properties.js: SyntaxError: test/language/statements/class/elements/private-accessor-is-visible-in-computed-properties.js: Unexpected character '#' (26:8)\n  24 | assert.throws(TypeError, function() {\n  25 |   class C {\n\u003e 26 |     get #f() {\n     |         ^\n  27 |       throw new Test262Error();\n  28 |     }\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-accessor-name/inst-private-escape-sequence-ZWJ.js-strict:true": "test/language/statements/class/elements/private-accessor-name/inst-private-escape-sequence-ZWJ.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/inst-private-escape-sequence-ZWJ.js: Unexpected character '#' (62:6)\n  60 | \n  61 | class C {\n\u003e 62 |   get #ZW_\\u200D_J() { return 'get string'; }\n     |       ^\n  63 |   set #ZW_\\u200D_J(param) { stringSet = param; }\n  64 | \n  65 |   getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-accessor-name/inst-private-escape-sequence-ZWNJ.js-strict:true": "test/language/statements/class/elements/private-accessor-name/inst-private-escape-sequence-ZWNJ.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/inst-private-escape-sequence-ZWNJ.js: Unexpected character '#' (62:6)\n  60 | \n  61 | class C {\n\u003e 62 |   get #ZW_\\u200C_NJ() { return 'get string'; }\n     |       ^\n  63 |   set #ZW_\\u200C_NJ(param) { stringSet = param; }\n  64 | \n  65 |   getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-accessor-name/inst-private-escape-sequence-u2118.js-strict:true": "test/language/statements/class/elements/private-accessor-name/inst-private-escape-sequence-u2118.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/inst-private-escape-sequence-u2118.js: Unexpected character '#' (62:6)\n  60 | \n  61 | class C {\n\u003e 62 |   get #\\u2118() { return 'get string'; }\n     |       ^\n  63 |   set #\\u2118(param) { stringSet = param; }\n  64 | \n  65 |   getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-accessor-name/inst-private-escape-sequence-u6F.js-strict:true": "test/language/statements/class/elements/private-accessor-name/inst-private-escape-sequence-u6F.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/inst-private-escape-sequence-u6F.js: Unexpected character '#' (62:6)\n  60 | \n  61 | class C {\n\u003e 62 |   get #\\u{6F}() { return 'get string'; }\n     |       ^\n  63 |   set #\\u{6F}(param) { stringSet = param; }\n  64 | \n  65 |   getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-accessor-name/inst-private-name-ZWJ.js-strict:true": "test/language/statements/class/elements/private-accessor-name/inst-private-name-ZWJ.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/inst-private-name-ZWJ.js: Unexpected character '#' (62:6)\n  60 | \n  61 | class C {\n\u003e 62 |   get #ZW_‍_J() { return 'get string'; }\n     |       ^\n  63 |   set #ZW_‍_J(param) { stringSet = param; }\n  64 | \n  65 |   getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-accessor-name/inst-private-name-ZWNJ.js-strict:true": "test/language/statements/class/elements/private-accessor-name/inst-private-name-ZWNJ.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/inst-private-name-ZWNJ.js: Unexpected character '#' (62:6)\n  60 | \n  61 | class C {\n\u003e 62 |   get #ZW_‌_NJ() { return 'get string'; }\n     |       ^\n  63 |   set #ZW_‌_NJ(param) { stringSet = param; }\n  64 | \n  65 |   getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-accessor-name/inst-private-name-common.js-strict:true": "test/language/statements/class/elements/private-accessor-name/inst-private-name-common.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/inst-private-name-common.js: Unexpected character '#' (62:6)\n  60 | \n  61 | class C {\n\u003e 62 |   get #test262() { return 'get string'; }\n     |       ^\n  63 |   set #test262(param) { stringSet = param; }\n  64 | \n  65 |   getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-accessor-name/inst-private-name-dollar.js-strict:true": "test/language/statements/class/elements/private-accessor-name/inst-private-name-dollar.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/inst-private-name-dollar.js: Unexpected character '#' (62:6)\n  60 | \n  61 | class C {\n\u003e 62 |   get #$() { return 'get string'; }\n     |       ^\n  63 |   set #$(param) { stringSet = param; }\n  64 | \n  65 |   getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-accessor-name/inst-private-name-u2118.js-strict:true": "test/language/statements/class/elements/private-accessor-name/inst-private-name-u2118.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/inst-private-name-u2118.js: Unexpected character '#' (62:6)\n  60 | \n  61 | class C {\n\u003e 62 |   get #℘() { return 'get string'; }\n     |       ^\n  63 |   set #℘(param) { stringSet = param; }\n  64 | \n  65 |   getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-accessor-name/inst-private-name-underscore.js-strict:true": "test/language/statements/class/elements/private-accessor-name/inst-private-name-underscore.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/inst-private-name-underscore.js: Unexpected character '#' (62:6)\n  60 | \n  61 | class C {\n\u003e 62 |   get #_() { return 'get string'; }\n     |       ^\n  63 |   set #_(param) { stringSet = param; }\n  64 | \n  65 |   getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-accessor-name/static-private-escape-sequence-ZWJ.js-strict:true": "test/language/statements/class/elements/private-accessor-name/static-private-escape-sequence-ZWJ.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/static-private-escape-sequence-ZWJ.js: Unexpected character '#' (62:13)\n  60 | \n  61 | class C {\n\u003e 62 |   static get #ZW_\\u200D_J() { return 'get string'; }\n     |              ^\n  63 |   static set #ZW_\\u200D_J(param) { stringSet = param; }\n  64 | \n  65 |   static getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-accessor-name/static-private-escape-sequence-ZWNJ.js-strict:true": "test/language/statements/class/elements/private-accessor-name/static-private-escape-sequence-ZWNJ.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/static-private-escape-sequence-ZWNJ.js: Unexpected character '#' (62:13)\n  60 | \n  61 | class C {\n\u003e 62 |   static get #ZW_\\u200C_NJ() { return 'get string'; }\n     |              ^\n  63 |   static set #ZW_\\u200C_NJ(param) { stringSet = param; }\n  64 | \n  65 |   static getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-accessor-name/static-private-escape-sequence-u2118.js-strict:true": "test/language/statements/class/elements/private-accessor-name/static-private-escape-sequence-u2118.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/static-private-escape-sequence-u2118.js: Unexpected character '#' (62:13)\n  60 | \n  61 | class C {\n\u003e 62 |   static get #\\u2118() { return 'get string'; }\n     |              ^\n  63 |   static set #\\u2118(param) { stringSet = param; }\n  64 | \n  65 |   static getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-accessor-name/static-private-escape-sequence-u6F.js-strict:true": "test/language/statements/class/elements/private-accessor-name/static-private-escape-sequence-u6F.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/static-private-escape-sequence-u6F.js: Unexpected character '#' (62:13)\n  60 | \n  61 | class C {\n\u003e 62 |   static get #\\u{6F}() { return 'get string'; }\n     |              ^\n  63 |   static set #\\u{6F}(param) { stringSet = param; }\n  64 | \n  65 |   static getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-accessor-name/static-private-name-ZWJ.js-strict:true": "test/language/statements/class/elements/private-accessor-name/static-private-name-ZWJ.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/static-private-name-ZWJ.js: Unexpected character '#' (62:13)\n  60 | \n  61 | class C {\n\u003e 62 |   static get #ZW_‍_J() { return 'get string'; }\n     |              ^\n  63 |   static set #ZW_‍_J(param) { stringSet = param; }\n  64 | \n  65 |   static getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-accessor-name/static-private-name-ZWNJ.js-strict:true": "test/language/statements/class/elements/private-accessor-name/static-private-name-ZWNJ.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/static-private-name-ZWNJ.js: Unexpected character '#' (62:13)\n  60 | \n  61 | class C {\n\u003e 62 |   static get #ZW_‌_NJ() { return 'get string'; }\n     |              ^\n  63 |   static set #ZW_‌_NJ(param) { stringSet = param; }\n  64 | \n  65 |   static getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-accessor-name/static-private-name-common.js-strict:true": "test/language/statements/class/elements/private-accessor-name/static-private-name-common.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/static-private-name-common.js: Unexpected character '#' (62:13)\n  60 | \n  61 | class C {\n\u003e 62 |   static get #test262() { return 'get string'; }\n     |              ^\n  63 |   static set #test262(param) { stringSet = param; }\n  64 | \n  65 |   static getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-accessor-name/static-private-name-dollar.js-strict:true": "test/language/statements/class/elements/private-accessor-name/static-private-name-dollar.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/static-private-name-dollar.js: Unexpected character '#' (62:13)\n  60 | \n  61 | class C {\n\u003e 62 |   static get #$() { return 'get string'; }\n     |              ^\n  63 |   static set #$(param) { stringSet = param; }\n  64 | \n  65 |   static getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-accessor-name/static-private-name-u2118.js-strict:true": "test/language/statements/class/elements/private-accessor-name/static-private-name-u2118.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/static-private-name-u2118.js: Unexpected character '#' (62:13)\n  60 | \n  61 | class C {\n\u003e 62 |   static get #℘() { return 'get string'; }\n     |              ^\n  63 |   static set #℘(param) { stringSet = param; }\n  64 | \n  65 |   static getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-accessor-name/static-private-name-underscore.js-strict:true": "test/language/statements/class/elements/private-accessor-name/static-private-name-underscore.js: SyntaxError: test/language/statements/class/elements/private-accessor-name/static-private-name-underscore.js: Unexpected character '#' (62:13)\n  60 | \n  61 | class C {\n\u003e 62 |   static get #_() { return 'get string'; }\n     |              ^\n  63 |   static set #_(param) { stringSet = param; }\n  64 | \n  65 |   static getPrivateReference() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-async-generator-method-name.js-strict:true": "test/language/statements/class/elements/private-async-generator-method-name.js: SyntaxError: test/language/statements/class/elements/private-async-generator-method-name.js: Unexpected token (52:8)\n  50 | \n  51 | class C {\n\u003e 52 |   async * #method() {};\n     |         ^\n  53 | \n  54 |   getPrivateMethod() {\n  55 |     return this.#method; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-async-method-name.js-strict:true": "test/language/statements/class/elements/private-async-method-name.js: SyntaxError: test/language/statements/class/elements/private-async-method-name.js: Unexpected character '#' (52:8)\n  50 | \n  51 | class C {\n\u003e 52 |   async #method() {};\n     |         ^\n  53 | \n  54 |   getPrivateMethod() {\n  55 |     return this.#method; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-class-field-on-frozen-objects.js-strict:true": "test/language/statements/class/elements/private-class-field-on-frozen-objects.js: SyntaxError: test/language/statements/class/elements/private-class-field-on-frozen-objects.js: Unexpected token (22:4)\n  20 | \n  21 | class Test {\n\u003e 22 |   f = this;\n     |     ^\n  23 |   #g = (Object.freeze(this), \"Test262\");\n  24 | \n  25 |   get g() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-derived-cls-direct-eval-contains-superproperty-1.js-strict:true": "test/language/statements/class/elements/private-derived-cls-direct-eval-contains-superproperty-1.js: SyntaxError: test/language/statements/class/elements/private-derived-cls-direct-eval-contains-superproperty-1.js: Unexpected character '#' (30:2)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   #x = eval('executed = true; super.x;');\n     |   ^\n  31 | }\n  32 | \n  33 | new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-derived-cls-direct-eval-contains-superproperty-2.js-strict:true": "test/language/statements/class/elements/private-derived-cls-direct-eval-contains-superproperty-2.js: SyntaxError: test/language/statements/class/elements/private-derived-cls-direct-eval-contains-superproperty-2.js: Unexpected character '#' (27:2)\n  25 | class A {}\n  26 | class C extends A {\n\u003e 27 |   #x = eval('executed = true; super[\"x\"];');\n     |   ^\n  28 | }\n  29 | \n  30 | new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-derived-cls-direct-eval-err-contains-supercall-1.js-strict:true": "test/language/statements/class/elements/private-derived-cls-direct-eval-err-contains-supercall-1.js: SyntaxError: test/language/statements/class/elements/private-derived-cls-direct-eval-err-contains-supercall-1.js: Unexpected character '#' (30:2)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   #x = eval('executed = true; super()[\"x\"];');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-derived-cls-direct-eval-err-contains-supercall-2.js-strict:true": "test/language/statements/class/elements/private-derived-cls-direct-eval-err-contains-supercall-2.js: SyntaxError: test/language/statements/class/elements/private-derived-cls-direct-eval-err-contains-supercall-2.js: Unexpected character '#' (23:2)\n  21 | class A {}\n  22 | class C extends A {\n\u003e 23 |   #x = eval('executed = true; super().x;');\n     |   ^\n  24 | }\n  25 | \n  26 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-derived-cls-direct-eval-err-contains-supercall.js-strict:true": "test/language/statements/class/elements/private-derived-cls-direct-eval-err-contains-supercall.js: SyntaxError: test/language/statements/class/elements/private-derived-cls-direct-eval-err-contains-supercall.js: Unexpected character '#' (30:2)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   #x = eval('executed = true; super();');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-derived-cls-indirect-eval-contains-superproperty-1.js-strict:true": "test/language/statements/class/elements/private-derived-cls-indirect-eval-contains-superproperty-1.js: SyntaxError: test/language/statements/class/elements/private-derived-cls-indirect-eval-contains-superproperty-1.js: Unexpected character '#' (30:2)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   #x = (0, eval)('executed = true; super.x;');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-derived-cls-indirect-eval-contains-superproperty-2.js-strict:true": "test/language/statements/class/elements/private-derived-cls-indirect-eval-contains-superproperty-2.js: SyntaxError: test/language/statements/class/elements/private-derived-cls-indirect-eval-contains-superproperty-2.js: Unexpected character '#' (27:2)\n  25 | class A {}\n  26 | class C extends A {\n\u003e 27 |   #x = (0, eval)('executed = true; super[\"x\"];');\n     |   ^\n  28 | }\n  29 | \n  30 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-derived-cls-indirect-eval-err-contains-supercall-1.js-strict:true": "test/language/statements/class/elements/private-derived-cls-indirect-eval-err-contains-supercall-1.js: SyntaxError: test/language/statements/class/elements/private-derived-cls-indirect-eval-err-contains-supercall-1.js: Unexpected character '#' (30:2)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   #x = (0, eval)('executed = true; super()[\"x\"];');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-derived-cls-indirect-eval-err-contains-supercall-2.js-strict:true": "test/language/statements/class/elements/private-derived-cls-indirect-eval-err-contains-supercall-2.js: SyntaxError: test/language/statements/class/elements/private-derived-cls-indirect-eval-err-contains-supercall-2.js: Unexpected character '#' (23:2)\n  21 | class A {}\n  22 | class C extends A {\n\u003e 23 |   #x = (0, eval)('executed = true; super().x;');\n     |   ^\n  24 | }\n  25 | \n  26 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-derived-cls-indirect-eval-err-contains-supercall.js-strict:true": "test/language/statements/class/elements/private-derived-cls-indirect-eval-err-contains-supercall.js: SyntaxError: test/language/statements/class/elements/private-derived-cls-indirect-eval-err-contains-supercall.js: Unexpected character '#' (30:2)\n  28 | class A {}\n  29 | class C extends A {\n\u003e 30 |   #x = (0, eval)('executed = true; super();');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-direct-eval-err-contains-arguments.js-strict:true": "test/language/statements/class/elements/private-direct-eval-err-contains-arguments.js: SyntaxError: test/language/statements/class/elements/private-direct-eval-err-contains-arguments.js: Unexpected character '#' (30:2)\n  28 | var executed = false;\n  29 | class C {\n\u003e 30 |   #x = eval('executed = true; arguments;');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-direct-eval-err-contains-newtarget.js-strict:true": "test/language/statements/class/elements/private-direct-eval-err-contains-newtarget.js: SyntaxError: test/language/statements/class/elements/private-direct-eval-err-contains-newtarget.js: Unexpected character '#' (29:2)\n  27 | var executed = false;\n  28 | class C {\n\u003e 29 |   #x = eval('executed = true; new.target;');\n     |   ^\n  30 | }\n  31 | \n  32 | var c = new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-field-access-on-inner-arrow-function.js-strict:true": "test/language/statements/class/elements/private-field-access-on-inner-arrow-function.js: SyntaxError: test/language/statements/class/elements/private-field-access-on-inner-arrow-function.js: Unexpected character '#' (26:2)\n  24 | \n  25 | class C {\n\u003e 26 |   #f = 'Test262';\n     |   ^\n  27 | \n  28 |   method() {\n  29 |     let arrowFunction = () =\u003e { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-field-access-on-inner-function.js-strict:true": "test/language/statements/class/elements/private-field-access-on-inner-function.js: SyntaxError: test/language/statements/class/elements/private-field-access-on-inner-function.js: Unexpected character '#' (26:2)\n  24 | \n  25 | class C {\n\u003e 26 |   #f = 'Test262';\n     |   ^\n  27 | \n  28 |   method() {\n  29 |     let self = this; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-field-after-optional-chain.js-strict:true": "test/language/statements/class/elements/private-field-after-optional-chain.js: SyntaxError: test/language/statements/class/elements/private-field-after-optional-chain.js: Unexpected character '#' (28:2)\n  26 | \n  27 | class C {\n\u003e 28 |   #f = 'Test262';\n     |   ^\n  29 | \n  30 |   method(o) {\n  31 |     return o?.c.#f; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-field-as-arrow-function.js-strict:true": "test/language/statements/class/elements/private-field-as-arrow-function.js: SyntaxError: test/language/statements/class/elements/private-field-as-arrow-function.js: Unexpected character '#' (26:2)\n  24 | \n  25 | class C {\n\u003e 26 |   #m = () =\u003e 'test262';\n     |   ^\n  27 | \n  28 |   method() {\n  29 |     return this.#m(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-field-as-function.js-strict:true": "test/language/statements/class/elements/private-field-as-function.js: SyntaxError: test/language/statements/class/elements/private-field-as-function.js: Unexpected character '#' (26:2)\n  24 | \n  25 | class C {\n\u003e 26 |   #m = function () { return 'test262'; };\n     |   ^\n  27 | \n  28 |   method() {\n  29 |     return this.#m(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-field-is-not-clobbered-by-computed-property.js-strict:true": "test/language/statements/class/elements/private-field-is-not-clobbered-by-computed-property.js: SyntaxError: test/language/statements/class/elements/private-field-is-not-clobbered-by-computed-property.js: Unexpected character '#' (28:2)\n  26 | \n  27 | class C {\n\u003e 28 |   #m = 44;\n     |   ^\n  29 |   [\"#m\"] = this.#m / 11;\n  30 | \n  31 |   checkPrivateField() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-field-is-visible-in-computed-properties.js-strict:true": "test/language/statements/class/elements/private-field-is-visible-in-computed-properties.js: SyntaxError: test/language/statements/class/elements/private-field-is-visible-in-computed-properties.js: Unexpected character '#' (46:10)\n  44 | assert.throws(TypeError, function() {\n  45 |   class C {\n\u003e 46 |     [self.#f] = 'Test262';\n     |           ^\n  47 |     #f = 'foo';\n  48 |   }\n  49 | }, 'access to a not defined private field in object should throw a TypeError'); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-field-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-field-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-field-on-nested-class.js: Unexpected character '#' (26:2)\n  24 | \n  25 | class C {\n\u003e 26 |   #outer = 'test262';\n     |   ^\n  27 | \n  28 |   B_withoutPrivateField = class {\n  29 |     method(o) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-field-visible-to-direct-eval-on-initializer.js-strict:true": "test/language/statements/class/elements/private-field-visible-to-direct-eval-on-initializer.js: SyntaxError: test/language/statements/class/elements/private-field-visible-to-direct-eval-on-initializer.js: Unexpected character '#' (43:2)\n  41 | \n  42 | class C {\n\u003e 43 |   #m = 44;\n     |   ^\n  44 |   v = eval(\"this.#m\");\n  45 | }\n  46 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-field-visible-to-direct-eval.js-strict:true": "test/language/statements/class/elements/private-field-visible-to-direct-eval.js: SyntaxError: test/language/statements/class/elements/private-field-visible-to-direct-eval.js: Unexpected character '#' (43:2)\n  41 | \n  42 | class C {\n\u003e 43 |   #m = 44;\n     |   ^\n  44 | \n  45 |   getWithEval() {\n  46 |     return eval(\"this.#m\"); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-field-with-initialized-id-is-visible-in-computed-properties.js-strict:true": "test/language/statements/class/elements/private-field-with-initialized-id-is-visible-in-computed-properties.js: SyntaxError: test/language/statements/class/elements/private-field-with-initialized-id-is-visible-in-computed-properties.js: Unexpected character '#' (73:4)\n  71 | assert.throws(TypeError, function() {\n  72 |   class C {\n\u003e 73 |     #f = 'foo';\n     |     ^\n  74 |     [self.#f] = 'Test262';\n  75 |   }\n  76 | }, 'access to a not defined private field in object should throw a TypeError'); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-generator-method-name.js-strict:true": "test/language/statements/class/elements/private-generator-method-name.js: SyntaxError: test/language/statements/class/elements/private-generator-method-name.js: Unexpected character '#' (52:4)\n  50 | \n  51 | class C {\n\u003e 52 |   * #method() {};\n     |     ^\n  53 | \n  54 |   getPrivateMethod() {\n  55 |     return this.#method; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-getter-access-on-inner-arrow-function.js-strict:true": "test/language/statements/class/elements/private-getter-access-on-inner-arrow-function.js: SyntaxError: test/language/statements/class/elements/private-getter-access-on-inner-arrow-function.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C {\n\u003e 26 |   get #m() { return 'Test262'; }\n     |       ^\n  27 | \n  28 |   method() {\n  29 |     let arrowFunction = () =\u003e { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-getter-access-on-inner-function.js-strict:true": "test/language/statements/class/elements/private-getter-access-on-inner-function.js: SyntaxError: test/language/statements/class/elements/private-getter-access-on-inner-function.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C {\n\u003e 26 |   get #m() { return 'Test262'; }\n     |       ^\n  27 | \n  28 |   method() {\n  29 |     let self = this; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-getter-brand-check-multiple-evaluations-of-class.js-strict:true": "test/language/statements/class/elements/private-getter-brand-check-multiple-evaluations-of-class.js: SyntaxError: test/language/statements/class/elements/private-getter-brand-check-multiple-evaluations-of-class.js: Unexpected character '#' (25:8)\n  23 | let createAndInstantiateClass = function () {\n  24 |   class C {\n\u003e 25 |     get #m() { return 'test262'; }\n     |         ^\n  26 | \n  27 |     access(o) {\n  28 |       return o.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-getter-brand-check-super-class.js-strict:true": "test/language/statements/class/elements/private-getter-brand-check-super-class.js: SyntaxError: test/language/statements/class/elements/private-getter-brand-check-super-class.js: Unexpected character '#' (27:6)\n  25 | \n  26 | class S {\n\u003e 27 |   get #m() { return 'super class'; }\n     |       ^\n  28 |   \n  29 |   superAccess() { return this.#m; }\n  30 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-getter-brand-check.js-strict:true": "test/language/statements/class/elements/private-getter-brand-check.js: SyntaxError: test/language/statements/class/elements/private-getter-brand-check.js: Unexpected character '#' (32:6)\n  30 | \n  31 | class C {\n\u003e 32 |   get #m() { return 'test262'; }\n     |       ^\n  33 |   \n  34 |   access(o) {\n  35 |     return o.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-getter-is-not-a-own-property.js-strict:true": "test/language/statements/class/elements/private-getter-is-not-a-own-property.js: SyntaxError: test/language/statements/class/elements/private-getter-is-not-a-own-property.js: Unexpected character '#' (31:6)\n  29 | \n  30 | class C {\n\u003e 31 |   get #m() { return \"Test262\"; }\n     |       ^\n  32 | \n  33 |   checkPrivateGetter() {\n  34 |     assert.sameValue(this.hasOwnProperty(\"#m\"), false); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-getter-is-not-clobbered-by-computed-property.js-strict:true": "test/language/statements/class/elements/private-getter-is-not-clobbered-by-computed-property.js: SyntaxError: test/language/statements/class/elements/private-getter-is-not-clobbered-by-computed-property.js: Unexpected character '#' (28:6)\n  26 | \n  27 | class C {\n\u003e 28 |   get #m() { return \"Test262\"; }\n     |       ^\n  29 |   [\"#m\"] = 0;\n  30 |   \n  31 |   checkPrivateGetter() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-getter-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-getter-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-getter-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C {\n\u003e 26 |   get #m() { return 'test262'; }\n     |       ^\n  27 | \n  28 |   B = class {\n  29 |     method(o) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-getter-shadowed-by-field-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-getter-shadowed-by-field-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-getter-shadowed-by-field-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C {\n\u003e 26 |   get #m() { return 'outer class'; }\n     |       ^\n  27 | \n  28 |   method() { return this.#m; }\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-getter-shadowed-by-getter-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-getter-shadowed-by-getter-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-getter-shadowed-by-getter-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C {\n\u003e 26 |   get #m() { return 'outer class'; }\n     |       ^\n  27 | \n  28 |   method() { return this.#m; }\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-getter-shadowed-by-method-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-getter-shadowed-by-method-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-getter-shadowed-by-method-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C {\n\u003e 26 |   get #m() { throw new Test262Error(); }\n     |       ^\n  27 | \n  28 |   B = class {\n  29 |     method(o) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-getter-shadowed-by-setter-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-getter-shadowed-by-setter-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-getter-shadowed-by-setter-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C {\n\u003e 26 |   get #m() { return 'outer class'; }\n     |       ^\n  27 | \n  28 |   method() { return this.#m; }\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-getter-visible-to-direct-eval-on-initializer.js-strict:true": "test/language/statements/class/elements/private-getter-visible-to-direct-eval-on-initializer.js: SyntaxError: test/language/statements/class/elements/private-getter-visible-to-direct-eval-on-initializer.js: Unexpected character '#' (43:6)\n  41 | \n  42 | class C {\n\u003e 43 |   get #m() { return \"Test262\"; };\n     |       ^\n  44 |   v = eval(\"this.#m\");\n  45 | }\n  46 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-getter-visible-to-direct-eval.js-strict:true": "test/language/statements/class/elements/private-getter-visible-to-direct-eval.js: SyntaxError: test/language/statements/class/elements/private-getter-visible-to-direct-eval.js: Unexpected character '#' (43:6)\n  41 | \n  42 | class C {\n\u003e 43 |   get #m() { return \"Test262\"; };\n     |       ^\n  44 | \n  45 |   getWithEval() {\n  46 |     return eval(\"this.#m\"); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-indirect-eval-err-contains-arguments.js-strict:true": "test/language/statements/class/elements/private-indirect-eval-err-contains-arguments.js: SyntaxError: test/language/statements/class/elements/private-indirect-eval-err-contains-arguments.js: Unexpected character '#' (30:2)\n  28 | var executed = false;\n  29 | class C {\n\u003e 30 |   #x = (0, eval)('executed = true; arguments;');\n     |   ^\n  31 | }\n  32 | \n  33 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-indirect-eval-err-contains-newtarget.js-strict:true": "test/language/statements/class/elements/private-indirect-eval-err-contains-newtarget.js: SyntaxError: test/language/statements/class/elements/private-indirect-eval-err-contains-newtarget.js: Unexpected character '#' (29:2)\n  27 | var executed = false;\n  28 | class C {\n\u003e 29 |   #x = (0, eval)('executed = true; new.target;');\n     |   ^\n  30 | }\n  31 | \n  32 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-method-access-on-inner-arrow-function.js-strict:true": "test/language/statements/class/elements/private-method-access-on-inner-arrow-function.js: SyntaxError: test/language/statements/class/elements/private-method-access-on-inner-arrow-function.js: Unexpected character '#' (26:2)\n  24 | \n  25 | class C {\n\u003e 26 |   #m() { return 'Test262'; }\n     |   ^\n  27 | \n  28 |   method() {\n  29 |     let arrowFunction = () =\u003e { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-method-access-on-inner-function.js-strict:true": "test/language/statements/class/elements/private-method-access-on-inner-function.js: SyntaxError: test/language/statements/class/elements/private-method-access-on-inner-function.js: Unexpected character '#' (26:2)\n  24 | \n  25 | class C {\n\u003e 26 |   #m() { return 'Test262'; }\n     |   ^\n  27 | \n  28 |   method() {\n  29 |     let self = this; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-method-brand-check-multiple-evaluations-of-class.js-strict:true": "test/language/statements/class/elements/private-method-brand-check-multiple-evaluations-of-class.js: SyntaxError: test/language/statements/class/elements/private-method-brand-check-multiple-evaluations-of-class.js: Unexpected character '#' (25:4)\n  23 | let createAndInstantiateClass = function () {\n  24 |   class C {\n\u003e 25 |     #m() { return 'test262'; }\n     |     ^\n  26 |     \n  27 |     access(o) {\n  28 |       return o.#m(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-method-brand-check-super-class.js-strict:true": "test/language/statements/class/elements/private-method-brand-check-super-class.js: SyntaxError: test/language/statements/class/elements/private-method-brand-check-super-class.js: Unexpected character '#' (27:2)\n  25 | \n  26 | class S {\n\u003e 27 |   #method() { return 'super class'; }\n     |   ^\n  28 |   \n  29 |   superAccess() { return this.#method(); }\n  30 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-method-brand-check.js-strict:true": "test/language/statements/class/elements/private-method-brand-check.js: SyntaxError: test/language/statements/class/elements/private-method-brand-check.js: Unexpected character '#' (32:2)\n  30 | \n  31 | class C {\n\u003e 32 |   #m() { return 'test262'; }\n     |   ^\n  33 |   \n  34 |   access(o) {\n  35 |     return o.#m(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-method-comparison-multiple-evaluations-of-class.js-strict:true": "test/language/statements/class/elements/private-method-comparison-multiple-evaluations-of-class.js: SyntaxError: test/language/statements/class/elements/private-method-comparison-multiple-evaluations-of-class.js: Unexpected character '#' (33:4)\n  31 | let createAndInstantiateClass = function () {\n  32 |   class C {\n\u003e 33 |     #m() { return 'test262'; }\n     |     ^\n  34 |     \n  35 |     getPrivateMethod() {\n  36 |       return this.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-method-comparison.js-strict:true": "test/language/statements/class/elements/private-method-comparison.js: SyntaxError: test/language/statements/class/elements/private-method-comparison.js: Unexpected character '#' (35:2)\n  33 | \n  34 | class C {\n\u003e 35 |   #m() { return 'test262'; }\n     |   ^\n  36 |     \n  37 |   getPrivateMethod() {\n  38 |       return this.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-method-get-and-call.js-strict:true": "test/language/statements/class/elements/private-method-get-and-call.js: SyntaxError: test/language/statements/class/elements/private-method-get-and-call.js: Unexpected character '#' (35:2)\n  33 | \n  34 | class C {\n\u003e 35 |   #m() { return this._v; }\n     |   ^\n  36 |     \n  37 |   getPrivateMethod() {\n  38 |       return this.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-method-is-not-a-own-property.js-strict:true": "test/language/statements/class/elements/private-method-is-not-a-own-property.js: SyntaxError: test/language/statements/class/elements/private-method-is-not-a-own-property.js: Unexpected character '#' (31:2)\n  29 | \n  30 | class C {\n\u003e 31 |   #m() { return \"Test262\"; }\n     |   ^\n  32 | \n  33 |   checkPrivateMethod() {\n  34 |     assert.sameValue(this.hasOwnProperty(\"#m\"), false); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-method-is-not-clobbered-by-computed-property.js-strict:true": "test/language/statements/class/elements/private-method-is-not-clobbered-by-computed-property.js: SyntaxError: test/language/statements/class/elements/private-method-is-not-clobbered-by-computed-property.js: Unexpected character '#' (28:2)\n  26 | \n  27 | class C {\n\u003e 28 |   #m() { return \"Test262\"; }\n     |   ^\n  29 |   [\"#m\"] = 0;\n  30 |   \n  31 |   checkPrivateMethod() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-method-is-visible-in-computed-properties.js-strict:true": "test/language/statements/class/elements/private-method-is-visible-in-computed-properties.js: SyntaxError: test/language/statements/class/elements/private-method-is-visible-in-computed-properties.js: Unexpected character '#' (26:4)\n  24 | assert.throws(TypeError, function() {\n  25 |   class C {\n\u003e 26 |     #m() {\n     |     ^\n  27 |       throw new Test262Error();\n  28 |     }\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-method-length.js-strict:true": "test/language/statements/class/elements/private-method-length.js: SyntaxError: test/language/statements/class/elements/private-method-length.js: Unexpected character '#' (39:2)\n  37 | \n  38 | class C {\n\u003e 39 |   #method(a) {};\n     |   ^\n  40 | \n  41 |   getPrivateMethod() {\n  42 |     return this.#method; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-method-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-method-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-method-on-nested-class.js: Unexpected character '#' (26:2)\n  24 | \n  25 | class C {\n\u003e 26 |   #m() { return 'test262'; }\n     |   ^\n  27 | \n  28 |   B = class {\n  29 |     method(o) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-method-referenced-from-static-method.js-strict:true": "test/language/statements/class/elements/private-method-referenced-from-static-method.js: SyntaxError: test/language/statements/class/elements/private-method-referenced-from-static-method.js: Unexpected character '#' (29:2)\n  27 | \n  28 | class C {\n\u003e 29 |   #f() { return 42; }\n     |   ^\n  30 |   static g() {\n  31 |     return this.#f();\n  32 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-method-shadowed-by-field-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-method-shadowed-by-field-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-method-shadowed-by-field-on-nested-class.js: Unexpected character '#' (26:2)\n  24 | \n  25 | class C {\n\u003e 26 |   #m() { return 'outer class'; }\n     |   ^\n  27 | \n  28 |   method() { return this.#m(); }\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-method-shadowed-by-getter-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-method-shadowed-by-getter-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-method-shadowed-by-getter-on-nested-class.js: Unexpected character '#' (26:2)\n  24 | \n  25 | class C {\n\u003e 26 |   #m() { return 'outer class'; }\n     |   ^\n  27 | \n  28 |   method() { return this.#m(); }\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-method-shadowed-by-setter-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-method-shadowed-by-setter-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-method-shadowed-by-setter-on-nested-class.js: Unexpected character '#' (26:2)\n  24 | \n  25 | class C {\n\u003e 26 |   #m() { return 'outer class'; }\n     |   ^\n  27 | \n  28 |   method() { return this.#m(); }\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-method-shadowed-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-method-shadowed-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-method-shadowed-on-nested-class.js: Unexpected character '#' (26:2)\n  24 | \n  25 | class C {\n\u003e 26 |   #m() { throw new Test262Error(); }\n     |   ^\n  27 | \n  28 |   B = class {\n  29 |     method() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-method-visible-to-direct-eval-on-initializer.js-strict:true": "test/language/statements/class/elements/private-method-visible-to-direct-eval-on-initializer.js: SyntaxError: test/language/statements/class/elements/private-method-visible-to-direct-eval-on-initializer.js: Unexpected character '#' (43:2)\n  41 | \n  42 | class C {\n\u003e 43 |   #m() { return \"Test262\"; };\n     |   ^\n  44 |   v = eval(\"this.#m()\");\n  45 | }\n  46 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-method-visible-to-direct-eval.js-strict:true": "test/language/statements/class/elements/private-method-visible-to-direct-eval.js: SyntaxError: test/language/statements/class/elements/private-method-visible-to-direct-eval.js: Unexpected character '#' (43:2)\n  41 | \n  42 | class C {\n\u003e 43 |   #m() { return \"Test262\"; };\n     |   ^\n  44 | \n  45 |   getWithEval() {\n  46 |     return eval(\"this.#m()\"); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-methods/prod-private-method-initialize-order.js-strict:true": "test/language/statements/class/elements/private-methods/prod-private-method-initialize-order.js: SyntaxError: test/language/statements/class/elements/private-methods/prod-private-method-initialize-order.js: Unexpected token (102:4)\n  100 | \n  101 | class C {\n\u003e 102 |   a = this.#m();\n      |     ^\n  103 | \n  104 |   #m() { return 42; }\n  105 |   get bGetter() { return this.#b; } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-methods/prod-private-method.js-strict:true": "test/language/statements/class/elements/private-methods/prod-private-method.js: SyntaxError: test/language/statements/class/elements/private-methods/prod-private-method.js: Unexpected character '#' (87:2)\n  85 | \n  86 | class C {\n\u003e 87 |   #m() { return 42; }\n     |   ^\n  88 | \n  89 | \n  90 |   get ref() { return this.#m; } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-setter-access-on-inner-arrow-function.js-strict:true": "test/language/statements/class/elements/private-setter-access-on-inner-arrow-function.js: SyntaxError: test/language/statements/class/elements/private-setter-access-on-inner-arrow-function.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C {\n\u003e 26 |   set #m(v) { this._v = v; }\n     |       ^\n  27 | \n  28 |   method() {\n  29 |     let arrowFunction = () =\u003e { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-setter-access-on-inner-function.js-strict:true": "test/language/statements/class/elements/private-setter-access-on-inner-function.js: SyntaxError: test/language/statements/class/elements/private-setter-access-on-inner-function.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C {\n\u003e 26 |   set #m(v) { this._v = v; }\n     |       ^\n  27 | \n  28 |   method() {\n  29 |     let self = this; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-setter-brand-check-multiple-evaluations-of-class.js-strict:true": "test/language/statements/class/elements/private-setter-brand-check-multiple-evaluations-of-class.js: SyntaxError: test/language/statements/class/elements/private-setter-brand-check-multiple-evaluations-of-class.js: Unexpected character '#' (25:8)\n  23 | let createAndInstantiateClass = function () {\n  24 |   class C {\n\u003e 25 |     set #m(v) { this._v = v; }\n     |         ^\n  26 |     \n  27 |     access(o, v) {\n  28 |       o.#m = v; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-setter-brand-check-super-class.js-strict:true": "test/language/statements/class/elements/private-setter-brand-check-super-class.js: SyntaxError: test/language/statements/class/elements/private-setter-brand-check-super-class.js: Unexpected character '#' (27:6)\n  25 | \n  26 | class S {\n\u003e 27 |   set #m(v) { this._v = v }\n     |       ^\n  28 |   \n  29 |   superAccess(v) { this.#m = v; }\n  30 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-setter-brand-check.js-strict:true": "test/language/statements/class/elements/private-setter-brand-check.js: SyntaxError: test/language/statements/class/elements/private-setter-brand-check.js: Unexpected character '#' (32:6)\n  30 | \n  31 | class C {\n\u003e 32 |   set #m(v) { this._v = v; }\n     |       ^\n  33 |   \n  34 |   access(o, v) {\n  35 |     return o.#m = v; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-setter-is-not-a-own-property.js-strict:true": "test/language/statements/class/elements/private-setter-is-not-a-own-property.js: SyntaxError: test/language/statements/class/elements/private-setter-is-not-a-own-property.js: Unexpected character '#' (31:6)\n  29 | \n  30 | class C {\n\u003e 31 |   set #m(v) { this._v = v; }\n     |       ^\n  32 | \n  33 |   checkPrivateSetter() {\n  34 |     assert.sameValue(this.hasOwnProperty(\"#m\"), false); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-setter-is-not-clobbered-by-computed-property.js-strict:true": "test/language/statements/class/elements/private-setter-is-not-clobbered-by-computed-property.js: SyntaxError: test/language/statements/class/elements/private-setter-is-not-clobbered-by-computed-property.js: Unexpected character '#' (28:6)\n  26 | \n  27 | class C {\n\u003e 28 |   set #m(v) { this._v = v; }\n     |       ^\n  29 |   [\"#m\"] = 0;\n  30 |   \n  31 |   checkPrivateSetter() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-setter-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-setter-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-setter-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C {\n\u003e 26 |   set #m(v) { this._v = v; }\n     |       ^\n  27 | \n  28 |   B = class {\n  29 |     method(o, v) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-setter-shadowed-by-field-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-setter-shadowed-by-field-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-setter-shadowed-by-field-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C {\n\u003e 26 |   set #m(v) { this._v = v; }\n     |       ^\n  27 | \n  28 |   method(v) { this.#m = v; }\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-setter-shadowed-by-getter-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-setter-shadowed-by-getter-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-setter-shadowed-by-getter-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C {\n\u003e 26 |   set #m(v) { this._v = v; }\n     |       ^\n  27 | \n  28 |   method(v) { this.#m = v; }\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-setter-shadowed-by-method-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-setter-shadowed-by-method-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-setter-shadowed-by-method-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C {\n\u003e 26 |   set #m(v) { this._v = v; }\n     |       ^\n  27 | \n  28 |   method(v) { this.#m = v; }\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-setter-shadowed-by-setter-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-setter-shadowed-by-setter-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-setter-shadowed-by-setter-on-nested-class.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C {\n\u003e 26 |   set #m(v) { this._v = v; }\n     |       ^\n  27 | \n  28 |   method(v) { this.#m = v; }\n  29 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-setter-visible-to-direct-eval-on-initializer.js-strict:true": "test/language/statements/class/elements/private-setter-visible-to-direct-eval-on-initializer.js: SyntaxError: test/language/statements/class/elements/private-setter-visible-to-direct-eval-on-initializer.js: Unexpected character '#' (44:6)\n  42 | \n  43 | class C {\n\u003e 44 |   set #m(v) { this._v = v; };\n     |       ^\n  45 |   v = (eval(\"this.#m = 53\"), this._v);\n  46 | }\n  47 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-setter-visible-to-direct-eval.js-strict:true": "test/language/statements/class/elements/private-setter-visible-to-direct-eval.js: SyntaxError: test/language/statements/class/elements/private-setter-visible-to-direct-eval.js: Unexpected character '#' (44:6)\n  42 | \n  43 | class C {\n\u003e 44 |   set #m(v) { this._v = v; };\n     |       ^\n  45 | \n  46 |   setWithEval(v) {\n  47 |     eval(\"this.#m = v\"); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-static-async-generator-method-name.js-strict:true": "test/language/statements/class/elements/private-static-async-generator-method-name.js: SyntaxError: test/language/statements/class/elements/private-static-async-generator-method-name.js: Unexpected token (54:15)\n  52 | \n  53 | class C {\n\u003e 54 |   static async * #method() {};\n     |                ^\n  55 | \n  56 |   static getPrivateMethod() {\n  57 |     return this.#method; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-static-async-method-name.js-strict:true": "test/language/statements/class/elements/private-static-async-method-name.js: SyntaxError: test/language/statements/class/elements/private-static-async-method-name.js: Unexpected character '#' (54:15)\n  52 | \n  53 | class C {\n\u003e 54 |   static async #method() {};\n     |                ^\n  55 | \n  56 |   static getPrivateMethod() {\n  57 |     return this.#method; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-static-field-shadowed-by-field-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-static-field-shadowed-by-field-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-static-field-shadowed-by-field-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | class C {\n\u003e 68 |   static #m = 'outer class';\n     |          ^\n  69 | \n  70 |   static fieldAccess() {\n  71 |     return this.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-static-field-shadowed-by-getter-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-static-field-shadowed-by-getter-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-static-field-shadowed-by-getter-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | class C {\n\u003e 68 |   static #m = 'outer class';\n     |          ^\n  69 | \n  70 |   static fieldAccess() {\n  71 |     return this.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-static-field-shadowed-by-method-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-static-field-shadowed-by-method-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-static-field-shadowed-by-method-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | class C {\n\u003e 68 |   static #m = () =\u003e 'outer class';\n     |          ^\n  69 | \n  70 |   static fieldAccess() {\n  71 |     return this.#m(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-static-field-shadowed-by-setter-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-static-field-shadowed-by-setter-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-static-field-shadowed-by-setter-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | class C {\n\u003e 68 |   static #m = 'outer class';\n     |          ^\n  69 | \n  70 |   static fieldAccess() {\n  71 |     return this.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-static-field-usage-inside-nested-class.js-strict:true": "test/language/statements/class/elements/private-static-field-usage-inside-nested-class.js: SyntaxError: test/language/statements/class/elements/private-static-field-usage-inside-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | class C {\n\u003e 68 |   static #m = 'outer class';\n     |          ^\n  69 | \n  70 |   static B = class {\n  71 |     static fieldAccess(o) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-static-field-visible-to-direct-eval.js-strict:true": "test/language/statements/class/elements/private-static-field-visible-to-direct-eval.js: SyntaxError: test/language/statements/class/elements/private-static-field-visible-to-direct-eval.js: Unexpected character '#' (43:9)\n  41 | \n  42 | class C {\n\u003e 43 |   static #m = 44;\n     |          ^\n  44 | \n  45 |   static getWithEval() {\n  46 |     return eval(\"this.#m\"); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-static-generator-method-name.js-strict:true": "test/language/statements/class/elements/private-static-generator-method-name.js: SyntaxError: test/language/statements/class/elements/private-static-generator-method-name.js: Unexpected character '#' (54:11)\n  52 | \n  53 | class C {\n\u003e 54 |   static * #method() {};\n     |            ^\n  55 | \n  56 |   static getPrivateMethod() {\n  57 |     return this.#method; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-static-getter-abrupt-completition.js-strict:true": "test/language/statements/class/elements/private-static-getter-abrupt-completition.js: SyntaxError: test/language/statements/class/elements/private-static-getter-abrupt-completition.js: Unexpected character '#' (28:6)\n  26 | \n  27 | class C {\n\u003e 28 |   get #m() {\n     |       ^\n  29 |     throw new Test262Error();\n  30 |   }\n  31 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-static-getter-visible-to-direct-eval.js-strict:true": "test/language/statements/class/elements/private-static-getter-visible-to-direct-eval.js: SyntaxError: test/language/statements/class/elements/private-static-getter-visible-to-direct-eval.js: Unexpected character '#' (43:13)\n  41 | \n  42 | class C {\n\u003e 43 |   static get #m() {\n     |              ^\n  44 |     return 'Test262';\n  45 |   }\n  46 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-static-method-length.js-strict:true": "test/language/statements/class/elements/private-static-method-length.js: SyntaxError: test/language/statements/class/elements/private-static-method-length.js: Unexpected character '#' (39:9)\n  37 | \n  38 | class C {\n\u003e 39 |   static #method(a, b, c) {};\n     |          ^\n  40 | \n  41 |   static getPrivateMethod() {\n  42 |     return this.#method; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-static-method-name.js-strict:true": "test/language/statements/class/elements/private-static-method-name.js: SyntaxError: test/language/statements/class/elements/private-static-method-name.js: Unexpected character '#' (62:9)\n  60 | \n  61 | class C {\n\u003e 62 |   static #method() {\n     |          ^\n  63 |     return 'Test262';\n  64 |   };\n  65 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-static-method-shadowed-by-field-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-static-method-shadowed-by-field-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-static-method-shadowed-by-field-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | class C {\n\u003e 68 |   static #m() { return 'outer class'; }\n     |          ^\n  69 | \n  70 |   static methodAccess() {\n  71 |     return this.#m(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-static-method-shadowed-by-getter-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-static-method-shadowed-by-getter-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-static-method-shadowed-by-getter-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | class C {\n\u003e 68 |   static #m() { return 'outer class'; }\n     |          ^\n  69 | \n  70 |   static methodAccess() {\n  71 |     return this.#m(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-static-method-shadowed-by-method-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-static-method-shadowed-by-method-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-static-method-shadowed-by-method-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | class C {\n\u003e 68 |   static #m() { return 'outer class'; }\n     |          ^\n  69 | \n  70 |   static methodAccess() {\n  71 |     return this.#m(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-static-method-shadowed-by-setter-on-nested-class.js-strict:true": "test/language/statements/class/elements/private-static-method-shadowed-by-setter-on-nested-class.js: SyntaxError: test/language/statements/class/elements/private-static-method-shadowed-by-setter-on-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | class C {\n\u003e 68 |   static #m() { return 'outer class'; }\n     |          ^\n  69 | \n  70 |   static methodAccess() {\n  71 |     return this.#m(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-static-method-usage-inside-nested-class.js-strict:true": "test/language/statements/class/elements/private-static-method-usage-inside-nested-class.js: SyntaxError: test/language/statements/class/elements/private-static-method-usage-inside-nested-class.js: Unexpected character '#' (68:9)\n  66 | \n  67 | class C {\n\u003e 68 |   static #m() {\n     |          ^\n  69 |     return 'outer class';\n  70 |   }\n  71 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-static-method-visible-to-direct-eval.js-strict:true": "test/language/statements/class/elements/private-static-method-visible-to-direct-eval.js: SyntaxError: test/language/statements/class/elements/private-static-method-visible-to-direct-eval.js: Unexpected character '#' (43:9)\n  41 | \n  42 | class C {\n\u003e 43 |   static #m() {\n     |          ^\n  44 |     return \"Test262\";\n  45 |   }\n  46 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-static-setter-abrupt-completition.js-strict:true": "test/language/statements/class/elements/private-static-setter-abrupt-completition.js: SyntaxError: test/language/statements/class/elements/private-static-setter-abrupt-completition.js: Unexpected character '#' (29:6)\n  27 | \n  28 | class C {\n\u003e 29 |   set #m(_) {\n     |       ^\n  30 |     throw new Test262Error();\n  31 |   }\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/private-static-setter-visible-to-direct-eval.js-strict:true": "test/language/statements/class/elements/private-static-setter-visible-to-direct-eval.js: SyntaxError: test/language/statements/class/elements/private-static-setter-visible-to-direct-eval.js: Unexpected character '#' (43:13)\n  41 | \n  42 | class C {\n\u003e 43 |   static set #m(v) {\n     |              ^\n  44 |     this._v = v;\n  45 |   }\n  46 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/privatefield-on-proxy.js-strict:true": "test/language/statements/class/elements/privatefield-on-proxy.js: SyntaxError: test/language/statements/class/elements/privatefield-on-proxy.js: Unexpected character '#' (43:2)\n  41 | \n  42 | class Test extends ProxyBase {\n\u003e 43 |   #f = 3;\n     |   ^\n  44 |   method() {\n  45 |     return this.#f;\n  46 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/privatefieldadd-typeerror.js-strict:true": "test/language/statements/class/elements/privatefieldadd-typeerror.js: SyntaxError: test/language/statements/class/elements/privatefieldadd-typeerror.js: Unexpected character '#' (49:2)\n  47 | \n  48 | class C extends A {\n\u003e 49 |   #x;\n     |   ^\n  50 | \n  51 |   constructor(arg) {\n  52 |     super(arg); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/privatefieldget-success-1.js-strict:true": "test/language/statements/class/elements/privatefieldget-success-1.js: SyntaxError: test/language/statements/class/elements/privatefieldget-success-1.js: Unexpected character '#' (30:2)\n  28 | \n  29 | class Outer {\n\u003e 30 |   #x = 42;\n     |   ^\n  31 | \n  32 |   innerclass() {\n  33 |     var self = this; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/privatefieldget-success-2.js-strict:true": "test/language/statements/class/elements/privatefieldget-success-2.js: SyntaxError: test/language/statements/class/elements/privatefieldget-success-2.js: Unexpected character '#' (31:2)\n  29 | \n  30 | class A {\n\u003e 31 |   #x = 'Avalue';\n     |   ^\n  32 |   x() {\n  33 |     return this.#x;\n  34 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/privatefieldget-success-3.js-strict:true": "test/language/statements/class/elements/privatefieldget-success-3.js: SyntaxError: test/language/statements/class/elements/privatefieldget-success-3.js: Unexpected character '#' (31:2)\n  29 | \n  30 | class A {\n\u003e 31 |   #x = 'Avalue';\n     |   ^\n  32 |   x() {\n  33 |     return this.#x;\n  34 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/privatefieldget-success-4.js-strict:true": "test/language/statements/class/elements/privatefieldget-success-4.js: SyntaxError: test/language/statements/class/elements/privatefieldget-success-4.js: Unexpected character '#' (31:2)\n  29 | \n  30 | class A {\n\u003e 31 |   #x = 'Avalue';\n     |   ^\n  32 |   x() {\n  33 |     return this.#x;\n  34 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/privatefieldget-success-5.js-strict:true": "test/language/statements/class/elements/privatefieldget-success-5.js: SyntaxError: test/language/statements/class/elements/privatefieldget-success-5.js: Unexpected character '#' (31:2)\n  29 | \n  30 | class C {\n\u003e 31 |   #x = 42;\n     |   ^\n  32 |   f() {\n  33 |     return this.#x;\n  34 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/privatefieldget-typeerror-1.js-strict:true": "test/language/statements/class/elements/privatefieldget-typeerror-1.js: SyntaxError: test/language/statements/class/elements/privatefieldget-typeerror-1.js: Unexpected token (36:4)\n  34 | \n  35 | class C {\n\u003e 36 |   y = this.#x;\n     |     ^\n  37 |   #x;\n  38 | }\n  39 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/privatefieldget-typeerror-2.js-strict:true": "test/language/statements/class/elements/privatefieldget-typeerror-2.js: SyntaxError: test/language/statements/class/elements/privatefieldget-typeerror-2.js: Unexpected character '#' (36:2)\n  34 | \n  35 | class Outer {\n\u003e 36 |   #x = 42;\n     |   ^\n  37 | \n  38 |   innerclass() {\n  39 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/privatefieldget-typeerror-3.js-strict:true": "test/language/statements/class/elements/privatefieldget-typeerror-3.js: SyntaxError: test/language/statements/class/elements/privatefieldget-typeerror-3.js: Unexpected character '#' (37:2)\n  35 | \n  36 | class Outer {\n\u003e 37 |   #x = 42;\n     |   ^\n  38 | \n  39 |   innerclass() {\n  40 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/privatefieldget-typeerror-4.js-strict:true": "test/language/statements/class/elements/privatefieldget-typeerror-4.js: SyntaxError: test/language/statements/class/elements/privatefieldget-typeerror-4.js: Unexpected character '#' (37:4)\n  35 | function classfactory() {\n  36 |   return class {\n\u003e 37 |     #x;\n     |     ^\n  38 |     f() {\n  39 |       this.#x;\n  40 |     } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/privatefieldget-typeerror-5.js-strict:true": "test/language/statements/class/elements/privatefieldget-typeerror-5.js: SyntaxError: test/language/statements/class/elements/privatefieldget-typeerror-5.js: Unexpected character '#' (36:2)\n  34 | \n  35 | class Outer {\n\u003e 36 |   #x = 42;\n     |   ^\n  37 | \n  38 |   innerclass() {\n  39 |     var self = this; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/privatefieldset-typeerror-1.js-strict:true": "test/language/statements/class/elements/privatefieldset-typeerror-1.js: SyntaxError: test/language/statements/class/elements/privatefieldset-typeerror-1.js: Unexpected token (36:4)\n  34 | \n  35 | class C {\n\u003e 36 |   y = this.#x = 1;\n     |     ^\n  37 |   #x;\n  38 | }\n  39 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/privatefieldset-typeerror-2.js-strict:true": "test/language/statements/class/elements/privatefieldset-typeerror-2.js: SyntaxError: test/language/statements/class/elements/privatefieldset-typeerror-2.js: Unexpected character '#' (36:2)\n  34 | \n  35 | class Outer {\n\u003e 36 |   #x = 42;\n     |   ^\n  37 | \n  38 |   innerclass() {\n  39 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/privatefieldset-typeerror-3.js-strict:true": "test/language/statements/class/elements/privatefieldset-typeerror-3.js: SyntaxError: test/language/statements/class/elements/privatefieldset-typeerror-3.js: Unexpected character '#' (37:2)\n  35 | \n  36 | class Outer {\n\u003e 37 |   #x = 42;\n     |   ^\n  38 | \n  39 |   innerclass() {\n  40 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/privatefieldset-typeerror-4.js-strict:true": "test/language/statements/class/elements/privatefieldset-typeerror-4.js: SyntaxError: test/language/statements/class/elements/privatefieldset-typeerror-4.js: Unexpected character '#' (37:4)\n  35 | function classfactory() {\n  36 |   return class {\n\u003e 37 |     #x;\n     |     ^\n  38 |     f() {\n  39 |       this.#x = 1;\n  40 |     } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/privatefieldset-typeerror-5.js-strict:true": "test/language/statements/class/elements/privatefieldset-typeerror-5.js: SyntaxError: test/language/statements/class/elements/privatefieldset-typeerror-5.js: Unexpected character '#' (37:2)\n  35 | \n  36 | class Outer {\n\u003e 37 |   #x = 42;\n     |   ^\n  38 | \n  39 |   innerclass() {\n  40 |     var self = this; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/privategetter-on-proxy.js-strict:true": "test/language/statements/class/elements/privategetter-on-proxy.js: SyntaxError: test/language/statements/class/elements/privategetter-on-proxy.js: Unexpected character '#' (47:6)\n  45 | \n  46 | class Test extends ProxyBase {\n\u003e 47 |   get #f() {\n     |       ^\n  48 |     return 3;\n  49 |   }\n  50 |   method() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/privatemethods-on-proxy.js-strict:true": "test/language/statements/class/elements/privatemethods-on-proxy.js: SyntaxError: test/language/statements/class/elements/privatemethods-on-proxy.js: Unexpected character '#' (43:2)\n  41 | \n  42 | class Test extends ProxyBase {\n\u003e 43 |   #f() {\n     |   ^\n  44 |     return 3;\n  45 |   }\n  46 |   method() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/privatename-not-valid-eval-earlyerr-3.js-strict:true": "test/language/statements/class/elements/privatename-not-valid-eval-earlyerr-3.js: SyntaxError: test/language/statements/class/elements/privatename-not-valid-eval-earlyerr-3.js: Unexpected token (19:4)\n  17 | \n  18 | class C {\n\u003e 19 |   y = eval(\"executed = true; this.#x;\")\n     |     ^\n  20 | }\n  21 | \n  22 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/privatename-not-valid-eval-earlyerr-4.js-strict:true": "test/language/statements/class/elements/privatename-not-valid-eval-earlyerr-4.js: SyntaxError: test/language/statements/class/elements/privatename-not-valid-eval-earlyerr-4.js: Unexpected character '#' (22:6)\n  20 |     eval(\"executed = true; this.#x;\");\n  21 |     class D extends C {\n\u003e 22 |       #x;\n     |       ^\n  23 |     }\n  24 |   }\n  25 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/privatename-not-valid-eval-earlyerr-5.js-strict:true": "test/language/statements/class/elements/privatename-not-valid-eval-earlyerr-5.js: SyntaxError: test/language/statements/class/elements/privatename-not-valid-eval-earlyerr-5.js: Unexpected character '#' (19:2)\n  17 | \n  18 | class C {\n\u003e 19 |   #x;\n     |   ^\n  20 | }\n  21 | \n  22 | assert.throws(SyntaxError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/privatename-valid-no-earlyerr.js-strict:true": "test/language/statements/class/elements/privatename-valid-no-earlyerr.js: SyntaxError: test/language/statements/class/elements/privatename-valid-no-earlyerr.js: Unexpected character '#' (30:2)\n  28 | \n  29 | class outer {\n\u003e 30 |   #x = 42;\n     |   ^\n  31 | \n  32 |   f() {\n  33 |     var self = this; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/prod-private-getter-before-super-return-in-constructor.js-strict:true": "test/language/statements/class/elements/prod-private-getter-before-super-return-in-constructor.js: SyntaxError: test/language/statements/class/elements/prod-private-getter-before-super-return-in-constructor.js: Unexpected character '#' (40:15)\n  38 | \n  39 | class D extends C {\n\u003e 40 |     f() { this.#m; }\n     |                ^\n  41 |     get #m() { return 42; }\n  42 | }\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/prod-private-getter-before-super-return-in-field-initializer.js-strict:true": "test/language/statements/class/elements/prod-private-getter-before-super-return-in-field-initializer.js: SyntaxError: test/language/statements/class/elements/prod-private-getter-before-super-return-in-field-initializer.js: Unexpected token (33:4)\n  31 | \n  32 | class C {\n\u003e 33 |   f = this.g();\n     |     ^\n  34 | \n  35 | }\n  36 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/prod-private-method-before-super-return-in-constructor.js-strict:true": "test/language/statements/class/elements/prod-private-method-before-super-return-in-constructor.js: SyntaxError: test/language/statements/class/elements/prod-private-method-before-super-return-in-constructor.js: Unexpected character '#' (40:15)\n  38 | \n  39 | class D extends C {\n\u003e 40 |     f() { this.#m(); }\n     |                ^\n  41 |     #m() { return 42; }\n  42 | }\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/prod-private-method-before-super-return-in-field-initializer.js-strict:true": "test/language/statements/class/elements/prod-private-method-before-super-return-in-field-initializer.js: SyntaxError: test/language/statements/class/elements/prod-private-method-before-super-return-in-field-initializer.js: Unexpected token (33:4)\n  31 | \n  32 | class C {\n\u003e 33 |   f = this.g();\n     |     ^\n  34 | \n  35 | }\n  36 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/prod-private-setter-before-super-return-in-constructor.js-strict:true": "test/language/statements/class/elements/prod-private-setter-before-super-return-in-constructor.js: SyntaxError: test/language/statements/class/elements/prod-private-setter-before-super-return-in-constructor.js: Unexpected character '#' (40:15)\n  38 | \n  39 | class D extends C {\n\u003e 40 |     f() { this.#m = 42; }\n     |                ^\n  41 |     set #m(val) {}\n  42 | }\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/prod-private-setter-before-super-return-in-field-initializer.js-strict:true": "test/language/statements/class/elements/prod-private-setter-before-super-return-in-field-initializer.js: SyntaxError: test/language/statements/class/elements/prod-private-setter-before-super-return-in-field-initializer.js: Unexpected token (33:4)\n  31 | \n  32 | class C {\n\u003e 33 |   f = this.g();\n     |     ^\n  34 | \n  35 | }\n  36 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/public-class-field-initialization-is-visible-to-proxy.js-strict:true": "test/language/statements/class/elements/public-class-field-initialization-is-visible-to-proxy.js: SyntaxError: test/language/statements/class/elements/public-class-field-initialization-is-visible-to-proxy.js: Unexpected token (29:4)\n  27 | \n  28 | class Base extends ProxyBase {\n\u003e 29 |   f = \"Test262\";\n     |     ^\n  30 | }\n  31 | \n  32 | assert.throws(Test262Error, () =\u003e { new Base(); }); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/public-class-field-initialization-on-super-class-with-setter.js-strict:true": "test/language/statements/class/elements/public-class-field-initialization-on-super-class-with-setter.js: SyntaxError: test/language/statements/class/elements/public-class-field-initialization-on-super-class-with-setter.js: Unexpected token (28:4)\n  26 | \n  27 | class Base extends Super {\n\u003e 28 |   f = \"Test262\";\n     |     ^\n  29 | }\n  30 | \n  31 | let o = new Base(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/redeclaration-symbol.js-strict:true": "test/language/statements/class/elements/redeclaration-symbol.js: SyntaxError: test/language/statements/class/elements/redeclaration-symbol.js: Unexpected token (39:6)\n  37 | \n  38 | class C {\n\u003e 39 |   [y] = (x.push(\"a\"), \"old_value\");\n     |       ^\n  40 |   [y] = (x.push(\"b\"), \"same_value\");\n  41 |   [y] = (x.push(\"c\"), \"same_value\");\n  42 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/redeclaration.js-strict:true": "test/language/statements/class/elements/redeclaration.js: SyntaxError: test/language/statements/class/elements/redeclaration.js: Unexpected token (38:4)\n  36 | \n  37 | class C {\n\u003e 38 |   y = (x.push(\"a\"), \"old_value\");\n     |     ^\n  39 |   [\"y\"] = (x.push(\"b\"), \"another_value\");\n  40 |   \"y\" = (x.push(\"c\"), \"same_value\");\n  41 |   y = (x.push(\"d\"), \"same_value\"); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-computed-names.js-strict:true": "test/language/statements/class/elements/regular-definitions-computed-names.js: SyntaxError: test/language/statements/class/elements/regular-definitions-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | class C {\n\u003e 28 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"]\n     |       ^\n  29 |   \n  30 | }\n  31 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-computed-symbol-names.js-strict:true": "test/language/statements/class/elements/regular-definitions-computed-symbol-names.js: SyntaxError: test/language/statements/class/elements/regular-definitions-computed-symbol-names.js: Unexpected token (29:11)\n  27 | \n  28 | class C {\n\u003e 29 |   [x]; [y] = 42\n     |            ^\n  30 |   \n  31 | }\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/statements/class/elements/regular-definitions-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/statements/class/elements/regular-definitions-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (67:2)\n  65 | \n  66 | class C {\n\u003e 67 |   #\\u{6F};\n     |   ^\n  68 |   #\\u2118;\n  69 |   #ZW_\\u200C_NJ;\n  70 |   #ZW_\\u200D_J; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-literal-names-asi.js-strict:true": "test/language/statements/class/elements/regular-definitions-literal-names-asi.js: SyntaxError: test/language/statements/class/elements/regular-definitions-literal-names-asi.js: Unexpected token (27:4)\n  25 | class C {\n  26 |   a\n\u003e 27 |   b = 42;\n     |     ^\n  28 |   \n  29 | }\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-literal-names.js-strict:true": "test/language/statements/class/elements/regular-definitions-literal-names.js: SyntaxError: test/language/statements/class/elements/regular-definitions-literal-names.js: Unexpected token (28:7)\n  26 | \n  27 | class C {\n\u003e 28 |   a; b = 42;\n     |        ^\n  29 |   c = fn\n  30 |   \n  31 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-private-field-usage.js-strict:true": "test/language/statements/class/elements/regular-definitions-private-field-usage.js: SyntaxError: test/language/statements/class/elements/regular-definitions-private-field-usage.js: Unexpected character '#' (26:2)\n  24 | \n  25 | class C {\n\u003e 26 |   #m = 'test262';\n     |   ^\n  27 |   method() {\n  28 |     return this.#m;\n  29 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-private-method-getter-usage.js-strict:true": "test/language/statements/class/elements/regular-definitions-private-method-getter-usage.js: SyntaxError: test/language/statements/class/elements/regular-definitions-private-method-getter-usage.js: Unexpected character '#' (26:6)\n  24 | \n  25 | class C {\n\u003e 26 |   get #m() { return 'test262'; }\n     |       ^\n  27 |   method() {\n  28 |     return this.#m;\n  29 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-private-method-usage.js-strict:true": "test/language/statements/class/elements/regular-definitions-private-method-usage.js: SyntaxError: test/language/statements/class/elements/regular-definitions-private-method-usage.js: Unexpected character '#' (26:2)\n  24 | \n  25 | class C {\n\u003e 26 |   #m() { return 'test262'; }\n     |   ^\n  27 |   method() {\n  28 |     return this.#m();\n  29 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-private-names.js-strict:true": "test/language/statements/class/elements/regular-definitions-private-names.js: SyntaxError: test/language/statements/class/elements/regular-definitions-private-names.js: Unexpected character '#' (28:2)\n  26 | \n  27 | class C {\n\u003e 28 |   #x; #y\n     |   ^\n  29 |   x() {\n  30 |     this.#x = 42;\n  31 |     return this.#x; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-rs-field-identifier-initializer.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-field-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-field-identifier-initializer.js: Unexpected token (61:4)\n  59 | \n  60 | class C {\n\u003e 61 |   $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1\n     |     ^\n  62 |   \n  63 | }\n  64 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-rs-field-identifier.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-field-identifier.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-field-identifier.js: Missing class properties transform.\n  59 | \n  60 | class C {\n\u003e 61 |   $; _; \\u{6F}; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J\n     |   ^\n  62 |   \n  63 | }\n  64 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-rs-private-getter-alt.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-private-getter-alt.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-private-getter-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   get #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-rs-private-getter.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-private-getter.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-private-getter.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   get #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-rs-private-method-alt.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-private-method-alt.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-private-method-alt.js: Unexpected character '#' (58:2)\n  56 | \n  57 | class C {\n\u003e 58 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  59 |   #$() {\n  60 |     return this.#$_;\n  61 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-rs-private-method.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-private-method.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-private-method.js: Unexpected character '#' (58:2)\n  56 | \n  57 | class C {\n\u003e 58 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  59 |   #$() {\n  60 |     return this.#$_;\n  61 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-rs-private-setter-alt.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-private-setter-alt.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-private-setter-alt.js: Unexpected character '#' (58:2)\n  56 | \n  57 | class C {\n\u003e 58 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  59 |   set #$(value) {\n  60 |     this.#$_ = value;\n  61 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-rs-private-setter.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-private-setter.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-private-setter.js: Unexpected character '#' (58:2)\n  56 | \n  57 | class C {\n\u003e 58 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  59 |   set #$(value) {\n  60 |     this.#$_ = value;\n  61 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-rs-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-privatename-identifier-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n\u003e 59 |   #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J\n     |   ^\n  60 |   $(value) {\n  61 |     this.#$ = value;\n  62 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n\u003e 59 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1\n     |   ^\n  60 |   $() {\n  61 |     return this.#$;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-rs-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-privatename-identifier-initializer.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n\u003e 59 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1\n     |   ^\n  60 |   $() {\n  61 |     return this.#$;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-rs-privatename-identifier.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-privatename-identifier.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n\u003e 59 |   #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J\n     |   ^\n  60 |   $(value) {\n  61 |     this.#$ = value;\n  62 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (63:11)\n  61 | \n  62 | class C {\n\u003e 63 |   static * #$(value) {\n     |            ^\n  64 |     yield * value;\n  65 |   }\n  66 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (63:11)\n  61 | \n  62 | class C {\n\u003e 63 |   static * #$(value) {\n     |            ^\n  64 |     yield * value;\n  65 |   }\n  66 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (60:9)\n  58 | \n  59 | class C {\n\u003e 60 |   static #$(value) {\n     |          ^\n  61 |     return value;\n  62 |   }\n  63 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-rs-static-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-method-privatename-identifier.js: Unexpected character '#' (60:9)\n  58 | \n  59 | class C {\n\u003e 60 |   static #$(value) {\n     |          ^\n  61 |     return value;\n  62 |   }\n  63 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (60:9)\n  58 | \n  59 | class C {\n\u003e 60 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n     |          ^\n  61 |   static $(value) {\n  62 |     C.#$ = value;\n  63 |     return C.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-alt.js: Unexpected character '#' (60:9)\n  58 | \n  59 | class C {\n\u003e 60 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J\n     |          ^\n  61 |   static $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (60:9)\n  58 | \n  59 | class C {\n\u003e 60 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n     |          ^\n  61 |   static $(value) {\n  62 |     C.#$ = value;\n  63 |     return C.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (60:9)\n  58 | \n  59 | class C {\n\u003e 60 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n     |          ^\n  61 |   static $() {\n  62 |     return C.#$;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:9)\n  58 | \n  59 | class C {\n\u003e 60 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1\n     |          ^\n  61 |   static $() {\n  62 |     return this.#$;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (60:9)\n  58 | \n  59 | class C {\n\u003e 60 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1\n     |          ^\n  61 |   static $() {\n  62 |     return this.#$;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-privatename-identifier.js: Unexpected character '#' (60:9)\n  58 | \n  59 | class C {\n\u003e 60 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J\n     |          ^\n  61 |   static $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-static-private-fields.js-strict:true": "test/language/statements/class/elements/regular-definitions-static-private-fields.js: SyntaxError: test/language/statements/class/elements/regular-definitions-static-private-fields.js: Unexpected character '#' (28:9)\n  26 | \n  27 | class C {\n\u003e 28 |   static #x; static #y\n     |          ^\n  29 |   static x() {\n  30 |     this.#x = 42;\n  31 |     return this.#x; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-static-private-methods-with-fields.js-strict:true": "test/language/statements/class/elements/regular-definitions-static-private-methods-with-fields.js: SyntaxError: test/language/statements/class/elements/regular-definitions-static-private-methods-with-fields.js: Unexpected character '#' (28:9)\n  26 | \n  27 | class C {\n\u003e 28 |   static #xVal; static #yVal\n     |          ^\n  29 |   static #x(value) {\n  30 |     this.#xVal = value;\n  31 |     return this.#xVal; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-static-private-methods.js-strict:true": "test/language/statements/class/elements/regular-definitions-static-private-methods.js: SyntaxError: test/language/statements/class/elements/regular-definitions-static-private-methods.js: Unexpected character '#' (29:9)\n  27 | class C {\n  28 |   \n\u003e 29 |   static #x(value) {\n     |          ^\n  30 |     return value / 2;\n  31 |   }\n  32 |   static #y(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/regular-definitions-string-literal-names.js-strict:true": "test/language/statements/class/elements/regular-definitions-string-literal-names.js: SyntaxError: test/language/statements/class/elements/regular-definitions-string-literal-names.js: Unexpected token (26:16)\n  24 | \n  25 | class C {\n\u003e 26 |   'a'; \"b\"; 'c' = 39;\n     |                 ^\n  27 |   \"d\" = 42\n  28 |   \n  29 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-computed-names.js-strict:true": "test/language/statements/class/elements/same-line-method-computed-names.js: SyntaxError: test/language/statements/class/elements/same-line-method-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | class C {\n\u003e 28 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"]; m() { return 42; }\n     |       ^\n  29 |   \n  30 | }\n  31 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-computed-symbol-names.js-strict:true": "test/language/statements/class/elements/same-line-method-computed-symbol-names.js: SyntaxError: test/language/statements/class/elements/same-line-method-computed-symbol-names.js: Unexpected token (29:11)\n  27 | \n  28 | class C {\n\u003e 29 |   [x]; [y] = 42; m() { return 42; }\n     |            ^\n  30 |   \n  31 | }\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/statements/class/elements/same-line-method-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/statements/class/elements/same-line-method-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:2)\n  66 | \n  67 | class C {\n\u003e 68 |   #\\u{6F};\n     |   ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J;; m() { return 42; } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-literal-names-asi.js-strict:true": "test/language/statements/class/elements/same-line-method-literal-names-asi.js: SyntaxError: test/language/statements/class/elements/same-line-method-literal-names-asi.js: Unexpected token (27:4)\n  25 | class C {\n  26 |   a\n\u003e 27 |   b = 42;; m() { return 42; }\n     |     ^\n  28 |   \n  29 | }\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-literal-names.js-strict:true": "test/language/statements/class/elements/same-line-method-literal-names.js: SyntaxError: test/language/statements/class/elements/same-line-method-literal-names.js: Unexpected token (28:7)\n  26 | \n  27 | class C {\n\u003e 28 |   a; b = 42;\n     |        ^\n  29 |   c = fn; m() { return 42; }\n  30 |   \n  31 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-private-field-usage.js-strict:true": "test/language/statements/class/elements/same-line-method-private-field-usage.js: SyntaxError: test/language/statements/class/elements/same-line-method-private-field-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | class C {\n\u003e 27 |   #m = 'test262';; m() { return 42; }\n     |   ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-private-method-getter-usage.js-strict:true": "test/language/statements/class/elements/same-line-method-private-method-getter-usage.js: SyntaxError: test/language/statements/class/elements/same-line-method-private-method-getter-usage.js: Unexpected character '#' (27:6)\n  25 | \n  26 | class C {\n\u003e 27 |   get #m() { return 'test262'; }; m() { return 42; }\n     |       ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-private-method-usage.js-strict:true": "test/language/statements/class/elements/same-line-method-private-method-usage.js: SyntaxError: test/language/statements/class/elements/same-line-method-private-method-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | class C {\n\u003e 27 |   #m() { return 'test262'; }; m() { return 42; }\n     |   ^\n  28 |   method() {\n  29 |     return this.#m();\n  30 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-private-names.js-strict:true": "test/language/statements/class/elements/same-line-method-private-names.js: SyntaxError: test/language/statements/class/elements/same-line-method-private-names.js: Unexpected character '#' (29:2)\n  27 | \n  28 | class C {\n\u003e 29 |   #x; #y; m() { return 42; }\n     |   ^\n  30 |   x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-rs-field-identifier-initializer.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-field-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-field-identifier-initializer.js: Unexpected token (62:4)\n  60 | \n  61 | class C {\n\u003e 62 |   $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1; m() { return 42; }\n     |     ^\n  63 |   \n  64 | }\n  65 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-rs-field-identifier.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-field-identifier.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-field-identifier.js: Missing class properties transform.\n  60 | \n  61 | class C {\n\u003e 62 |   $; _; \\u{6F}; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J; m() { return 42; }\n     |   ^\n  63 |   \n  64 | }\n  65 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-rs-private-getter-alt.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-private-getter-alt.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-private-getter-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n\u003e 60 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-rs-private-getter.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-private-getter.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-private-getter.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n\u003e 60 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-rs-private-method-alt.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-private-method-alt.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-private-method-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-rs-private-method.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-private-method.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-private-method.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-rs-private-setter-alt.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-private-setter-alt.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-private-setter-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-rs-private-setter.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-private-setter.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-private-setter.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n\u003e 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-rs-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-privatename-identifier-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n\u003e 60 |   #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J; m() { return 42; }\n     |   ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n\u003e 60 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1; m() { return 42; }\n     |   ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-rs-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n\u003e 60 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1; m() { return 42; }\n     |   ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-rs-privatename-identifier.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-privatename-identifier.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n\u003e 60 |   #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J; m() { return 42; }\n     |   ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:11)\n  62 | \n  63 | class C {\n\u003e 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:11)\n  62 | \n  63 | class C {\n\u003e 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$(value) {\n     |          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-rs-static-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$(value) {\n     |          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J; m() { return 42; }\n     |          ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J; m() { return 42; }\n     |          ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J; m() { return 42; }\n     |          ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1; m() { return 42; }\n     |          ^\n  62 |   static $() {\n  63 |     return C.#$;\n  64 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1; m() { return 42; }\n     |          ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1; m() { return 42; }\n     |          ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J; m() { return 42; }\n     |          ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-static-private-fields.js-strict:true": "test/language/statements/class/elements/same-line-method-static-private-fields.js: SyntaxError: test/language/statements/class/elements/same-line-method-static-private-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C {\n\u003e 29 |   static #x; static #y; m() { return 42; }\n     |          ^\n  30 |   static x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-static-private-methods-with-fields.js-strict:true": "test/language/statements/class/elements/same-line-method-static-private-methods-with-fields.js: SyntaxError: test/language/statements/class/elements/same-line-method-static-private-methods-with-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C {\n\u003e 29 |   static #xVal; static #yVal; m() { return 42; }\n     |          ^\n  30 |   static #x(value) {\n  31 |     this.#xVal = value;\n  32 |     return this.#xVal; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-static-private-methods.js-strict:true": "test/language/statements/class/elements/same-line-method-static-private-methods.js: SyntaxError: test/language/statements/class/elements/same-line-method-static-private-methods.js: Unexpected character '#' (30:9)\n  28 | class C {\n  29 |   ; m() { return 42; }\n\u003e 30 |   static #x(value) {\n     |          ^\n  31 |     return value / 2;\n  32 |   }\n  33 |   static #y(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/same-line-method-string-literal-names.js-strict:true": "test/language/statements/class/elements/same-line-method-string-literal-names.js: SyntaxError: test/language/statements/class/elements/same-line-method-string-literal-names.js: Unexpected token (26:16)\n  24 | \n  25 | class C {\n\u003e 26 |   'a'; \"b\"; 'c' = 39;\n     |                 ^\n  27 |   \"d\" = 42; m() { return 42; }\n  28 |   \n  29 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/set-access-of-missing-private-setter.js-strict:true": "test/language/statements/class/elements/set-access-of-missing-private-setter.js: SyntaxError: test/language/statements/class/elements/set-access-of-missing-private-setter.js: Unexpected character '#' (29:6)\n  27 | \n  28 | class C {\n\u003e 29 |   get #f() {\n     |       ^\n  30 |     throw new Test262Error();\n  31 |   }\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/set-access-of-missing-shadowed-private-setter.js-strict:true": "test/language/statements/class/elements/set-access-of-missing-shadowed-private-setter.js: SyntaxError: test/language/statements/class/elements/set-access-of-missing-shadowed-private-setter.js: Unexpected character '#' (29:6)\n  27 | \n  28 | class A {\n\u003e 29 |   set #f(v) {\n     |       ^\n  30 |     throw new Test262Error();\n  31 |   }\n  32 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/set-access-of-private-method.js-strict:true": "test/language/statements/class/elements/set-access-of-private-method.js: SyntaxError: test/language/statements/class/elements/set-access-of-private-method.js: Unexpected character '#' (29:2)\n  27 | \n  28 | class C {\n\u003e 29 |   #f() {\n     |   ^\n  30 |     throw new Test262Error();\n  31 |   }\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/set-access-of-shadowed-private-method.js-strict:true": "test/language/statements/class/elements/set-access-of-shadowed-private-method.js: SyntaxError: test/language/statements/class/elements/set-access-of-shadowed-private-method.js: Unexpected character '#' (29:6)\n  27 | \n  28 | class A {\n\u003e 29 |   set #f(v) {\n     |       ^\n  30 |     throw new Test262Error();\n  31 |   }\n  32 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-as-valid-instance-field-assigned.js-strict:true": "test/language/statements/class/elements/static-as-valid-instance-field-assigned.js: SyntaxError: test/language/statements/class/elements/static-as-valid-instance-field-assigned.js: Unexpected token (26:9)\n  24 | \n  25 | class C {\n\u003e 26 |   static = \"foo\";\n     |          ^\n  27 | }\n  28 | \n  29 | let c = new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-as-valid-instance-field.js-strict:true": "test/language/statements/class/elements/static-as-valid-instance-field.js: SyntaxError: test/language/statements/class/elements/static-as-valid-instance-field.js: Missing class properties transform.\n  24 | \n  25 | class C {\n\u003e 26 |   static;\n     |   ^\n  27 | }\n  28 | \n  29 | let c = new C(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-as-valid-static-field-assigned.js-strict:true": "test/language/statements/class/elements/static-as-valid-static-field-assigned.js: SyntaxError: test/language/statements/class/elements/static-as-valid-static-field-assigned.js: Unexpected token (20:16)\n  18 | \n  19 | class C {\n\u003e 20 |   static static = \"test262\";\n     |                 ^\n  21 | }\n  22 | \n  23 | verifyProperty(C, \"static\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-as-valid-static-field.js-strict:true": "test/language/statements/class/elements/static-as-valid-static-field.js: SyntaxError: test/language/statements/class/elements/static-as-valid-static-field.js: Missing class properties transform.\n  18 | \n  19 | class C {\n\u003e 20 |   static static;\n     |   ^\n  21 | }\n  22 | \n  23 | verifyProperty(C, \"static\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-field-anonymous-function-length.js-strict:true": "test/language/statements/class/elements/static-field-anonymous-function-length.js: SyntaxError: test/language/statements/class/elements/static-field-anonymous-function-length.js: Unexpected character '#' (52:9)\n  50 | \n  51 | class C {\n\u003e 52 |   static #field = (a, b) =\u003e undefined;\n     |          ^\n  53 |   static field = function() {};\n  54 | \n  55 |   static accessPrivateField() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-field-anonymous-function-name.js-strict:true": "test/language/statements/class/elements/static-field-anonymous-function-name.js: SyntaxError: test/language/statements/class/elements/static-field-anonymous-function-name.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n\u003e 61 |   static #field = () =\u003e 'Test262';\n     |          ^\n  62 |   static field = function() { return 42; };\n  63 | \n  64 |   static accessPrivateField() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-field-declaration.js-strict:true": "test/language/statements/class/elements/static-field-declaration.js: SyntaxError: test/language/statements/class/elements/static-field-declaration.js: Unexpected token (75:11)\n  73 | \n  74 | class C {\n\u003e 75 |   static f = 'test262';\n     |            ^\n  76 |   static 'g';\n  77 |   static 0 = 'bar';\n  78 |   static [computed]; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-field-init-this-inside-arrow-function.js-strict:true": "test/language/statements/class/elements/static-field-init-this-inside-arrow-function.js: SyntaxError: test/language/statements/class/elements/static-field-init-this-inside-arrow-function.js: Unexpected token (61:11)\n  59 | \n  60 | class C {\n\u003e 61 |   static f = () =\u003e this;\n     |            ^\n  62 | }\n  63 | \n  64 | assert.sameValue(C.f(), C); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-field-init-with-this.js-strict:true": "test/language/statements/class/elements/static-field-init-with-this.js: SyntaxError: test/language/statements/class/elements/static-field-init-with-this.js: Unexpected token (61:11)\n  59 | \n  60 | class C {\n\u003e 61 |   static f = 'test';\n     |            ^\n  62 |   static g = this.f + '262';\n  63 |   static h = eval('this.g') + 'test';\n  64 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-field-initializer-error.js-strict:true": "test/language/statements/class/elements/static-field-initializer-error.js: SyntaxError: test/language/statements/class/elements/static-field-initializer-error.js: Unexpected token (54:13)\n  52 | assert.throws(Test262Error, function() {\n  53 |   class C {\n\u003e 54 |     static f = initThrows();\n     |              ^\n  55 |     static g;\n  56 |   };\n  57 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-field-redeclaration.js-strict:true": "test/language/statements/class/elements/static-field-redeclaration.js: SyntaxError: test/language/statements/class/elements/static-field-redeclaration.js: Unexpected token (61:11)\n  59 | \n  60 | class C {\n\u003e 61 |   static f = 'test';\n     |            ^\n  62 |   static f = this.f + '262';\n  63 |   static g() {\n  64 |     return 45; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-fielddefinition-initializer-abrupt-completion.js-strict:true": "test/language/statements/class/elements/static-fielddefinition-initializer-abrupt-completion.js: SyntaxError: test/language/statements/class/elements/static-fielddefinition-initializer-abrupt-completion.js: Unexpected token (32:13)\n  30 | assert.throws(Test262Error, function() {\n  31 |   class C {\n\u003e 32 |     static x = f();\n     |              ^\n  33 |   }\n  34 | });\n  35 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-private-fields-proxy-default-handler-throws.js-strict:true": "test/language/statements/class/elements/static-private-fields-proxy-default-handler-throws.js: SyntaxError: test/language/statements/class/elements/static-private-fields-proxy-default-handler-throws.js: Unexpected character '#' (18:9)\n  16 | \n  17 | class C {\n\u003e 18 |   static #x = 1;\n     |          ^\n  19 |   static x() {\n  20 |     return this.#x;\n  21 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-private-getter-access-on-inner-arrow-function.js-strict:true": "test/language/statements/class/elements/static-private-getter-access-on-inner-arrow-function.js: SyntaxError: test/language/statements/class/elements/static-private-getter-access-on-inner-arrow-function.js: Unexpected character '#' (29:13)\n  27 | \n  28 | class C {\n\u003e 29 |   static get #f() {\n     |              ^\n  30 |     return 'Test262';\n  31 |   }\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-private-getter-access-on-inner-class.js-strict:true": "test/language/statements/class/elements/static-private-getter-access-on-inner-class.js: SyntaxError: test/language/statements/class/elements/static-private-getter-access-on-inner-class.js: Unexpected character '#' (29:13)\n  27 | \n  28 | class C {\n\u003e 29 |   static get #f() {\n     |              ^\n  30 |     return 'Test262';\n  31 |   }\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-private-getter-access-on-inner-function.js-strict:true": "test/language/statements/class/elements/static-private-getter-access-on-inner-function.js: SyntaxError: test/language/statements/class/elements/static-private-getter-access-on-inner-function.js: Unexpected character '#' (29:13)\n  27 | \n  28 | class C {\n\u003e 29 |   static get #f() {\n     |              ^\n  30 |     return 'Test262';\n  31 |   }\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-private-getter.js-strict:true": "test/language/statements/class/elements/static-private-getter.js: SyntaxError: test/language/statements/class/elements/static-private-getter.js: Unexpected character '#' (44:13)\n  42 | \n  43 | class C {\n\u003e 44 |   static get #f() {\n     |              ^\n  45 |     return 'Test262';\n  46 |   }\n  47 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-private-method-access-on-inner-arrow-function.js-strict:true": "test/language/statements/class/elements/static-private-method-access-on-inner-arrow-function.js: SyntaxError: test/language/statements/class/elements/static-private-method-access-on-inner-arrow-function.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C {\n\u003e 29 |   static #f() { return 42; }\n     |          ^\n  30 |   static g() {\n  31 |     const arrowFunction = () =\u003e {\n  32 |       return this.#f(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-private-method-access-on-inner-function.js-strict:true": "test/language/statements/class/elements/static-private-method-access-on-inner-function.js: SyntaxError: test/language/statements/class/elements/static-private-method-access-on-inner-function.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C {\n\u003e 29 |   static #f() { return 42; }\n     |          ^\n  30 |   static g() {\n  31 |     const self = this;\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-private-method-and-instance-method-brand-check.js-strict:true": "test/language/statements/class/elements/static-private-method-and-instance-method-brand-check.js: SyntaxError: test/language/statements/class/elements/static-private-method-and-instance-method-brand-check.js: Unexpected character '#' (37:9)\n  35 | \n  36 | class C {\n\u003e 37 |   static #f() {\n     |          ^\n  38 |     return 'static';\n  39 |   }\n  40 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-private-method-referenced-from-instance-method.js-strict:true": "test/language/statements/class/elements/static-private-method-referenced-from-instance-method.js: SyntaxError: test/language/statements/class/elements/static-private-method-referenced-from-instance-method.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C {\n\u003e 29 |   static #f() { return 42; }\n     |          ^\n  30 |   g() {\n  31 |     return this.#f();\n  32 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-private-method-subclass-receiver.js-strict:true": "test/language/statements/class/elements/static-private-method-subclass-receiver.js: SyntaxError: test/language/statements/class/elements/static-private-method-subclass-receiver.js: Unexpected character '#' (29:27)\n  27 | \n  28 | class C {\n\u003e 29 |   static f() { return this.#g(); }\n     |                            ^\n  30 |   static #g() { return 42; }\n  31 | \n  32 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-private-setter-access-on-inner-arrow-function.js-strict:true": "test/language/statements/class/elements/static-private-setter-access-on-inner-arrow-function.js: SyntaxError: test/language/statements/class/elements/static-private-setter-access-on-inner-arrow-function.js: Unexpected character '#' (29:13)\n  27 | \n  28 | class C {\n\u003e 29 |   static set #f(v) {\n     |              ^\n  30 |     this._v = v;\n  31 |   }\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-private-setter-access-on-inner-class.js-strict:true": "test/language/statements/class/elements/static-private-setter-access-on-inner-class.js: SyntaxError: test/language/statements/class/elements/static-private-setter-access-on-inner-class.js: Unexpected character '#' (29:13)\n  27 | \n  28 | class C {\n\u003e 29 |   static set #f(v) {\n     |              ^\n  30 |     return this._v = v;\n  31 |   }\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-private-setter-access-on-inner-function.js-strict:true": "test/language/statements/class/elements/static-private-setter-access-on-inner-function.js: SyntaxError: test/language/statements/class/elements/static-private-setter-access-on-inner-function.js: Unexpected character '#' (29:13)\n  27 | \n  28 | class C {\n\u003e 29 |   static set #f(v) {\n     |              ^\n  30 |     this._v = v;\n  31 |   }\n  32 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/static-private-setter.js-strict:true": "test/language/statements/class/elements/static-private-setter.js: SyntaxError: test/language/statements/class/elements/static-private-setter.js: Unexpected character '#' (44:13)\n  42 | \n  43 | class C {\n\u003e 44 |   static set #f(v) {\n     |              ^\n  45 |     this._v = v;\n  46 |   }\n  47 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/super-access-inside-a-private-getter.js-strict:true": "test/language/statements/class/elements/super-access-inside-a-private-getter.js: SyntaxError: test/language/statements/class/elements/super-access-inside-a-private-getter.js: Unexpected character '#' (41:6)\n  39 | \n  40 | class C extends A {\n\u003e 41 |   get #m() {\n     |       ^\n  42 |     return super.method();\n  43 |   }\n  44 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/super-access-inside-a-private-method.js-strict:true": "test/language/statements/class/elements/super-access-inside-a-private-method.js: SyntaxError: test/language/statements/class/elements/super-access-inside-a-private-method.js: Unexpected character '#' (38:2)\n  36 | \n  37 | class C extends A {\n\u003e 38 |   #m() {\n     |   ^\n  39 |     return super.method();\n  40 |   }\n  41 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/super-access-inside-a-private-setter.js-strict:true": "test/language/statements/class/elements/super-access-inside-a-private-setter.js: SyntaxError: test/language/statements/class/elements/super-access-inside-a-private-setter.js: Unexpected character '#' (40:6)\n  38 | \n  39 | class C extends A {\n\u003e 40 |   set #m(v) {\n     |       ^\n  41 |     this._v = super.method(v);\n  42 |   }\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/super-fielddefinition-initializer-abrupt-completion.js-strict:true": "test/language/statements/class/elements/super-fielddefinition-initializer-abrupt-completion.js: SyntaxError: test/language/statements/class/elements/super-fielddefinition-initializer-abrupt-completion.js: Unexpected token (46:4)\n  44 | \n  45 | class A {\n\u003e 46 |   x = f();\n     |     ^\n  47 | }\n  48 | \n  49 | class C extends A { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/syntax/early-errors/grammar-static-get-meth-prototype.js-strict:true": "test/language/statements/class/elements/syntax/early-errors/grammar-static-get-meth-prototype.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/class/elements/syntax/early-errors/grammar-static-set-meth-prototype.js-strict:true": "test/language/statements/class/elements/syntax/early-errors/grammar-static-set-meth-prototype.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/class/elements/syntax/valid/grammar-field-classelementname-initializer-alt.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-field-classelementname-initializer-alt.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-field-classelementname-initializer-alt.js: Unexpected token (65:4)\n  63 | \n  64 | class C {\n\u003e 65 |   $ = 1;\n     |     ^\n  66 |   _ = 2;\n  67 |   \\u{6F} = 3;\n  68 |   ℘ = 4;      // DO NOT CHANGE THE NAME OF THIS FIELD at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/syntax/valid/grammar-field-classelementname-initializer.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-field-classelementname-initializer.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-field-classelementname-initializer.js: Unexpected token (65:4)\n  63 | \n  64 | class C {\n\u003e 65 |   $ = 1;\n     |     ^\n  66 |   _ = 2;\n  67 |   \\u{6F} = 3;\n  68 |   \\u2118 = 4; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/syntax/valid/grammar-field-identifier-alt.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-field-identifier-alt.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-field-identifier-alt.js: Missing class properties transform.\n  63 | \n  64 | class C {\n\u003e 65 |   $;\n     |   ^\n  66 |   _;\n  67 |   \\u{6F};\n  68 |   ℘;      // DO NOT CHANGE THE NAME OF THIS FIELD at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/syntax/valid/grammar-field-identifier.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-field-identifier.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-field-identifier.js: Missing class properties transform.\n  63 | \n  64 | class C {\n\u003e 65 |   $;\n     |   ^\n  66 |   _;\n  67 |   \\u{6F};\n  68 |   \\u2118; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/syntax/valid/grammar-fields-multi-line.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-fields-multi-line.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-fields-multi-line.js: Missing class properties transform.\n  26 | \n  27 | class C {\n\u003e 28 |   x\n     |   ^\n  29 |   y\n  30 | }\n  31 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/syntax/valid/grammar-privatemeth-duplicate-get-set.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-privatemeth-duplicate-get-set.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-privatemeth-duplicate-get-set.js: Unexpected character '#' (20:6)\n  18 | \n  19 | class C {\n\u003e 20 |   get #m() {}\n     |       ^\n  21 |   set #m(_) {}\n  22 | }\n  23 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/syntax/valid/grammar-privatemeth-duplicate-meth-nestedclassmeth.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-privatemeth-duplicate-meth-nestedclassmeth.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-privatemeth-duplicate-meth-nestedclassmeth.js: Unexpected character '#' (22:6)\n  20 |   constructor() {\n  21 |     class B {\n\u003e 22 |       #m() {}\n     |       ^\n  23 |     }\n  24 |   }\n  25 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/syntax/valid/grammar-privatename-classelementname-initializer-alt.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-privatename-classelementname-initializer-alt.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-privatename-classelementname-initializer-alt.js: Unexpected character '#' (62:2)\n  60 | \n  61 | class C {\n\u003e 62 |   #$ = 1;\n     |   ^\n  63 |   #_ = 2;\n  64 |   #\\u{6F} = 3;\n  65 |   #℘ = 4;      // DO NOT CHANGE THE NAME OF THIS FIELD at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/syntax/valid/grammar-privatename-classelementname-initializer.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-privatename-classelementname-initializer.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-privatename-classelementname-initializer.js: Unexpected character '#' (62:2)\n  60 | \n  61 | class C {\n\u003e 62 |   #$ = 1;\n     |   ^\n  63 |   #_ = 2;\n  64 |   #\\u{6F} = 3;\n  65 |   #\\u2118 = 4; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/syntax/valid/grammar-privatename-identifier.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-privatename-identifier.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n\u003e 59 |   #$;\n     |   ^\n  60 |   #_;\n  61 |   #\\u{6F};\n  62 |   #\\u2118; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/syntax/valid/grammar-privatename-no-initializer-with-method.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-privatename-no-initializer-with-method.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-privatename-no-initializer-with-method.js: Unexpected character '#' (31:2)\n  29 | \n  30 | class C {\n\u003e 31 |   #x\n     |   ^\n  32 |   m() {}\n  33 | }\n  34 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/syntax/valid/grammar-privatenames-multi-line.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-privatenames-multi-line.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-privatenames-multi-line.js: Unexpected character '#' (31:2)\n  29 | \n  30 | class C {\n\u003e 31 |   #x\n     |   ^\n  32 |   #y\n  33 | }\n  34 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/syntax/valid/grammar-special-prototype-async-gen-meth-valid.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-special-prototype-async-gen-meth-valid.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-special-prototype-async-gen-meth-valid.js: Unexpected token (40:8)\n  38 | \n  39 | class C {\n\u003e 40 |   async * prototype() {}\n     |         ^\n  41 | }\n  42 | \n  43 | assert(C.hasOwnProperty('prototype')); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/syntax/valid/grammar-special-prototype-async-meth-valid.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-special-prototype-async-meth-valid.js: test/language/statements/class/elements/syntax/valid/grammar-special-prototype-async-meth-valid.js: Line 39:108 Unexpected token function",
  "test/language/statements/class/elements/syntax/valid/grammar-static-ctor-async-gen-meth-valid.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-static-ctor-async-gen-meth-valid.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-static-ctor-async-gen-meth-valid.js: Unexpected token (24:15)\n  22 | \n  23 | class C {\n\u003e 24 |   static async * constructor() {}\n     |                ^\n  25 |   constructor() {} // stacks with a valid constructor\n  26 | }\n  27 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/syntax/valid/grammar-static-ctor-async-meth-valid.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-static-ctor-async-meth-valid.js: test/language/statements/class/elements/syntax/valid/grammar-static-ctor-async-meth-valid.js: Line 23:76 Unexpected token function",
  "test/language/statements/class/elements/syntax/valid/grammar-static-private-async-gen-meth-prototype.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-static-private-async-gen-meth-prototype.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-static-private-async-gen-meth-prototype.js: Unexpected token (20:15)\n  18 | \n  19 | class C {\n\u003e 20 |   static async * #prototype() {}\n     |                ^\n  21 | }\n  22 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/syntax/valid/grammar-static-private-async-meth-prototype.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-static-private-async-meth-prototype.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-static-private-async-meth-prototype.js: Unexpected character '#' (20:15)\n  18 | \n  19 | class C {\n\u003e 20 |   static async #prototype() {}\n     |                ^\n  21 | }\n  22 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/syntax/valid/grammar-static-private-meth-prototype.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-static-private-meth-prototype.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-static-private-meth-prototype.js: Unexpected character '#' (20:9)\n  18 | \n  19 | class C {\n\u003e 20 |   static #prototype() {}\n     |          ^\n  21 | }\n  22 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-computed-names.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-computed-names.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-computed-names.js: Unexpected token (29:12)\n  27 | class C {\n  28 |   ;;;;\n\u003e 29 |   ;;;;;;[x] = 42; [10] = \"meep\"; [\"not initialized\"];;;;;;;\n     |             ^\n  30 |   ;;;;\n  31 |   \n  32 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-computed-symbol-names.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-computed-symbol-names.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-computed-symbol-names.js: Unexpected token (30:17)\n  28 | class C {\n  29 |   ;;;;\n\u003e 30 |   ;;;;;;[x]; [y] = 42;;;;;;;\n     |                  ^\n  31 |   ;;;;\n  32 |   \n  33 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:8)\n  66 | class C {\n  67 |   ;;;;\n\u003e 68 |   ;;;;;;#\\u{6F};\n     |         ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J;;;;;;;; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-literal-names-asi.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-literal-names-asi.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-literal-names-asi.js: Unexpected token (28:4)\n  26 |   ;;;;\n  27 |   ;;;;;;a\n\u003e 28 |   b = 42;;;;;;;;\n     |     ^\n  29 |   ;;;;\n  30 |   \n  31 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-literal-names.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-literal-names.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-literal-names.js: Unexpected token (29:13)\n  27 | class C {\n  28 |   ;;;;\n\u003e 29 |   ;;;;;;a; b = 42;\n     |              ^\n  30 |   c = fn;;;;;;;\n  31 |   ;;;;\n  32 |    at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-private-field-usage.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-private-field-usage.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-private-field-usage.js: Unexpected character '#' (27:8)\n  25 | class C {\n  26 |   ;;;;\n\u003e 27 |   ;;;;;;#m = 'test262';;;;;;;;\n     |         ^\n  28 |   ;;;;\n  29 |   method() {\n  30 |     return this.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-private-method-getter-usage.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-private-method-getter-usage.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-private-method-getter-usage.js: Unexpected character '#' (27:12)\n  25 | class C {\n  26 |   ;;;;\n\u003e 27 |   ;;;;;;get #m() { return 'test262'; };;;;;;;\n     |             ^\n  28 |   ;;;;\n  29 |   method() {\n  30 |     return this.#m; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-private-method-usage.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-private-method-usage.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-private-method-usage.js: Unexpected character '#' (27:8)\n  25 | class C {\n  26 |   ;;;;\n\u003e 27 |   ;;;;;;#m() { return 'test262'; };;;;;;;\n     |         ^\n  28 |   ;;;;\n  29 |   method() {\n  30 |     return this.#m(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-private-names.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-private-names.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-private-names.js: Unexpected character '#' (29:8)\n  27 | class C {\n  28 |   ;;;;\n\u003e 29 |   ;;;;;;#x; #y;;;;;;;\n     |         ^\n  30 |   ;;;;\n  31 |   x() {\n  32 |     this.#x = 42; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-rs-field-identifier-initializer.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-field-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-field-identifier-initializer.js: Unexpected token (62:10)\n  60 | class C {\n  61 |   ;;;;\n\u003e 62 |   ;;;;;;$ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;;;;;;;\n     |           ^\n  63 |   ;;;;\n  64 |   \n  65 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-rs-field-identifier.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-field-identifier.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-field-identifier.js: Missing class properties transform.\n  60 | class C {\n  61 |   ;;;;\n\u003e 62 |   ;;;;;;$; _; \\u{6F}; \\u2118; ZW_\\u200C_NJ; ZW_\\u200D_J;;;;;;;\n     |         ^\n  63 |   ;;;;\n  64 |   \n  65 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-rs-private-getter-alt.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-private-getter-alt.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-private-getter-alt.js: Unexpected character '#' (60:8)\n  58 | class C {\n  59 |   ;;;;\n\u003e 60 |   ;;;;;;#$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |         ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-rs-private-getter.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-private-getter.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-private-getter.js: Unexpected character '#' (60:8)\n  58 | class C {\n  59 |   ;;;;\n\u003e 60 |   ;;;;;;#$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |         ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-rs-private-method-alt.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-private-method-alt.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-private-method-alt.js: Unexpected character '#' (59:8)\n  57 | class C {\n  58 |   ;;;;\n\u003e 59 |   ;;;;;;#$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |         ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-rs-private-method.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-private-method.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-private-method.js: Unexpected character '#' (59:8)\n  57 | class C {\n  58 |   ;;;;\n\u003e 59 |   ;;;;;;#$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |         ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-rs-private-setter-alt.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-private-setter-alt.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-private-setter-alt.js: Unexpected character '#' (59:8)\n  57 | class C {\n  58 |   ;;;;\n\u003e 59 |   ;;;;;;#$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |         ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-rs-private-setter.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-private-setter.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-private-setter.js: Unexpected character '#' (59:8)\n  57 | class C {\n  58 |   ;;;;\n\u003e 59 |   ;;;;;;#$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |         ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-rs-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-privatename-identifier-alt.js: Unexpected character '#' (60:8)\n  58 | class C {\n  59 |   ;;;;\n\u003e 60 |   ;;;;;;#$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J;;;;;;;\n     |         ^\n  61 |   ;;;;\n  62 |   $(value) {\n  63 |     this.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:8)\n  58 | class C {\n  59 |   ;;;;\n\u003e 60 |   ;;;;;;#$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1;;;;;;;\n     |         ^\n  61 |   ;;;;\n  62 |   $() {\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-rs-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:8)\n  58 | class C {\n  59 |   ;;;;\n\u003e 60 |   ;;;;;;#$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1;;;;;;;\n     |         ^\n  61 |   ;;;;\n  62 |   $() {\n  63 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-rs-privatename-identifier.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-privatename-identifier.js: Unexpected character '#' (60:8)\n  58 | class C {\n  59 |   ;;;;\n\u003e 60 |   ;;;;;;#$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J;;;;;;;\n     |         ^\n  61 |   ;;;;\n  62 |   $(value) {\n  63 |     this.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:17)\n  62 | class C {\n  63 |   ;;;;\n\u003e 64 |   ;;;;;;static * #$(value) {\n     |                  ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:17)\n  62 | class C {\n  63 |   ;;;;\n\u003e 64 |   ;;;;;;static * #$(value) {\n     |                  ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:15)\n  59 | class C {\n  60 |   ;;;;\n\u003e 61 |   ;;;;;;static #$(value) {\n     |                ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:15)\n  59 | class C {\n  60 |   ;;;;\n\u003e 61 |   ;;;;;;static #$(value) {\n     |                ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:15)\n  59 | class C {\n  60 |   ;;;;\n\u003e 61 |   ;;;;;;static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $(value) {\n  64 |     C.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:15)\n  59 | class C {\n  60 |   ;;;;\n\u003e 61 |   ;;;;;;static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $(value) {\n  64 |     this.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:15)\n  59 | class C {\n  60 |   ;;;;\n\u003e 61 |   ;;;;;;static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $(value) {\n  64 |     C.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:15)\n  59 | class C {\n  60 |   ;;;;\n\u003e 61 |   ;;;;;;static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $() {\n  64 |     return C.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:15)\n  59 | class C {\n  60 |   ;;;;\n\u003e 61 |   ;;;;;;static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $() {\n  64 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:15)\n  59 | class C {\n  60 |   ;;;;\n\u003e 61 |   ;;;;;;static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $() {\n  64 |     return this.#$; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-privatename-identifier.js: Unexpected character '#' (61:15)\n  59 | class C {\n  60 |   ;;;;\n\u003e 61 |   ;;;;;;static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;;;;;;;\n     |                ^\n  62 |   ;;;;\n  63 |   static $(value) {\n  64 |     this.#$ = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-static-private-fields.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-static-private-fields.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-static-private-fields.js: Unexpected character '#' (29:15)\n  27 | class C {\n  28 |   ;;;;\n\u003e 29 |   ;;;;;;static #x; static #y;;;;;;;\n     |                ^\n  30 |   ;;;;\n  31 |   static x() {\n  32 |     this.#x = 42; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-static-private-methods-with-fields.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-static-private-methods-with-fields.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-static-private-methods-with-fields.js: Unexpected character '#' (29:15)\n  27 | class C {\n  28 |   ;;;;\n\u003e 29 |   ;;;;;;static #xVal; static #yVal;;;;;;;\n     |                ^\n  30 |   ;;;;\n  31 |   static #x(value) {\n  32 |     this.#xVal = value; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-static-private-methods.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-static-private-methods.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-static-private-methods.js: Unexpected character '#' (31:9)\n  29 |   ;;;;;;;;;;;;;\n  30 |   ;;;;\n\u003e 31 |   static #x(value) {\n     |          ^\n  32 |     return value / 2;\n  33 |   }\n  34 |   static #y(value) { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/elements/wrapped-in-sc-string-literal-names.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-string-literal-names.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-string-literal-names.js: Unexpected token (27:22)\n  25 | class C {\n  26 |   ;;;;\n\u003e 27 |   ;;;;;;'a'; \"b\"; 'c' = 39;\n     |                       ^\n  28 |   \"d\" = 42;;;;;;;\n  29 |   ;;;;\n  30 |    at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/method-static/dflt-params-ref-later.js-strict:true": "test/language/statements/class/method-static/dflt-params-ref-later.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/class/method-static/dflt-params-ref-self.js-strict:true": "test/language/statements/class/method-static/dflt-params-ref-self.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/class/method/dflt-params-ref-later.js-strict:true": "test/language/statements/class/method/dflt-params-ref-later.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/class/method/dflt-params-ref-self.js-strict:true": "test/language/statements/class/method/dflt-params-ref-self.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/class/name-binding/const.js-strict:true": "test/language/statements/class/name-binding/const.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/class/name-binding/in-extends-expression-assigned.js-strict:true": "test/language/statements/class/name-binding/in-extends-expression-assigned.js: Test262Error: Expected a ReferenceError but got a TypeError at harness/sta.js:22:9(49)",
  "test/language/statements/class/name-binding/in-extends-expression.js-strict:true": "test/language/statements/class/name-binding/in-extends-expression.js: Test262Error: Expected a ReferenceError but got a TypeError at harness/sta.js:22:9(49)",
  "test/language/statements/class/restricted-properties.js-strict:true": "test/language/statements/class/restricted-properties.js: Test262Error: No \"caller\" own property Expected SameValue(«true», «false») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/scope-meth-paramsbody-var-open.js-strict:true": "test/language/statements/class/scope-meth-paramsbody-var-open.js: Test262Error: Expected SameValue(«inside», «outside») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/scope-name-lex-open-heritage.js-strict:true": "test/language/statements/class/scope-name-lex-open-heritage.js: Test262Error: inner binding is independent Expected SameValue(«null», «function C() {_classCallCheck(this, C);return _possibleConstructorReturn(this, (C.__proto__ || Object.getPrototypeOf(C)).apply(this, arguments));}») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/scope-name-lex-open-no-heritage.js-strict:true": "test/language/statements/class/scope-name-lex-open-no-heritage.js: Test262Error: inner binding rejects modification Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/class/scope-setter-paramsbody-var-open.js-strict:true": "test/language/statements/class/scope-setter-paramsbody-var-open.js: Test262Error: Expected SameValue(«inside», «outside») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/scope-static-meth-paramsbody-var-open.js-strict:true": "test/language/statements/class/scope-static-meth-paramsbody-var-open.js: Test262Error: Expected SameValue(«inside», «outside») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/scope-static-setter-paramsbody-var-open.js-strict:true": "test/language/statements/class/scope-static-setter-paramsbody-var-open.js: Test262Error: Expected SameValue(«inside», «outside») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/static-classelementname-abrupt-completion.js-strict:true": "test/language/statements/class/static-classelementname-abrupt-completion.js: SyntaxError: test/language/statements/class/static-classelementname-abrupt-completion.js: Missing class properties transform.\n  30 | assert.throws(Test262Error, function() {\n  31 |   class C {\n\u003e 32 |     static [f()]\n     |     ^\n  33 |   }\n  34 | });\n  35 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/static-method-non-configurable-err.js-strict:true": "test/language/statements/class/static-method-non-configurable-err.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass-builtins/subclass-AggregateError.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-AggregateError.js: ReferenceError: AggregateError is not defined at test/language/statements/class/subclass-builtins/subclass-AggregateError.js:12:269(20)",
  "test/language/statements/class/subclass-builtins/subclass-Array.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Array.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass-builtins/subclass-ArrayBuffer.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-ArrayBuffer.js: TypeError: Constructor ArrayBuffer requires 'new' at apply (native)",
  "test/language/statements/class/subclass-builtins/subclass-DataView.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-DataView.js: TypeError: Constructor DataView requires 'new' at apply (native)",
  "test/language/statements/class/subclass-builtins/subclass-Error.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Error.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass-builtins/subclass-EvalError.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-EvalError.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass-builtins/subclass-Float32Array.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Float32Array.js: TypeError: Constructor TypedArray requires 'new' at apply (native)",
  "test/language/statements/class/subclass-builtins/subclass-Float64Array.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Float64Array.js: TypeError: Constructor TypedArray requires 'new' at apply (native)",
  "test/language/statements/class/subclass-builtins/subclass-Function.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Function.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass-builtins/subclass-Int16Array.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Int16Array.js: TypeError: Constructor TypedArray requires 'new' at apply (native)",
  "test/language/statements/class/subclass-builtins/subclass-Int32Array.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Int32Array.js: TypeError: Constructor TypedArray requires 'new' at apply (native)",
  "test/language/statements/class/subclass-builtins/subclass-Int8Array.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Int8Array.js: TypeError: Constructor TypedArray requires 'new' at apply (native)",
  "test/language/statements/class/subclass-builtins/subclass-Map.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Map.js: TypeError: Constructor Map requires 'new' at apply (native)",
  "test/language/statements/class/subclass-builtins/subclass-Object.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Object.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass-builtins/subclass-Promise.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Promise.js: ReferenceError: Promise is not defined at test/language/statements/class/subclass-builtins/subclass-Promise.js:12:255(20)",
  "test/language/statements/class/subclass-builtins/subclass-RangeError.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-RangeError.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass-builtins/subclass-ReferenceError.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-ReferenceError.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass-builtins/subclass-RegExp.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-RegExp.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass-builtins/subclass-Set.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Set.js: TypeError: Constructor Set requires 'new' at apply (native)",
  "test/language/statements/class/subclass-builtins/subclass-SyntaxError.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-SyntaxError.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass-builtins/subclass-TypeError.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-TypeError.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass-builtins/subclass-URIError.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-URIError.js: Test262Error: Expected true but got false at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass-builtins/subclass-Uint16Array.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Uint16Array.js: TypeError: Constructor TypedArray requires 'new' at apply (native)",
  "test/language/statements/class/subclass-builtins/subclass-Uint32Array.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Uint32Array.js: TypeError: Constructor TypedArray requires 'new' at apply (native)",
  "test/language/statements/class/subclass-builtins/subclass-Uint8Array.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Uint8Array.js: TypeError: Constructor TypedArray requires 'new' at apply (native)",
  "test/language/statements/class/subclass-builtins/subclass-Uint8ClampedArray.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-Uint8ClampedArray.js: TypeError: Constructor TypedArray requires 'new' at apply (native)",
  "test/language/statements/class/subclass-builtins/subclass-WeakMap.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-WeakMap.js: TypeError: Constructor WeakMap requires 'new' at apply (native)",
  "test/language/statements/class/subclass-builtins/subclass-WeakRef.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-WeakRef.js: ReferenceError: WeakRef is not defined at test/language/statements/class/subclass-builtins/subclass-WeakRef.js:12:255(20)",
  "test/language/statements/class/subclass-builtins/subclass-WeakSet.js-strict:true": "test/language/statements/class/subclass-builtins/subclass-WeakSet.js: TypeError: Constructor WeakSet requires 'new' at apply (native)",
  "test/language/statements/class/subclass/builtin-objects/Array/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Array/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/Array/super-must-be-called.js: missing super() call in constructor\n  18 | \n  19 | class A extends Array {\n\u003e 20 |   constructor() {}\n     |   ^\n  21 | }\n  22 | \n  23 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtin-objects/ArrayBuffer/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/ArrayBuffer/regular-subclassing.js: TypeError: Constructor ArrayBuffer requires 'new' at apply (native)",
  "test/language/statements/class/subclass/builtin-objects/ArrayBuffer/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/ArrayBuffer/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/ArrayBuffer/super-must-be-called.js: missing super() call in constructor\n  19 | \n  20 | class AB1 extends ArrayBuffer {\n\u003e 21 |   constructor() {}\n     |   ^\n  22 | }\n  23 | \n  24 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtin-objects/Boolean/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Boolean/regular-subclassing.js: TypeError: Method Boolean.prototype.valueOf is called on incompatible receiver at valueOf (native)",
  "test/language/statements/class/subclass/builtin-objects/Boolean/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Boolean/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/Boolean/super-must-be-called.js: missing super() call in constructor\n  15 | \n  16 | class Bln extends Boolean {\n\u003e 17 |   constructor() {}\n     |   ^\n  18 | }\n  19 | \n  20 | // Boolean internals are not initialized at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtin-objects/DataView/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/DataView/regular-subclassing.js: TypeError: Constructor DataView requires 'new' at apply (native)",
  "test/language/statements/class/subclass/builtin-objects/DataView/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/DataView/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/DataView/super-must-be-called.js: missing super() call in constructor\n  19 | \n  20 | class DV1 extends DataView {\n\u003e 21 |   constructor() {}\n     |   ^\n  22 | }\n  23 | \n  24 | var buffer = new ArrayBuffer(1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtin-objects/Date/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Date/regular-subclassing.js: TypeError: Method Date.prototype.getFullYear is called on incompatible receiver at getFullYear (native)",
  "test/language/statements/class/subclass/builtin-objects/Date/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Date/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/Date/super-must-be-called.js: missing super() call in constructor\n  21 | \n  22 | class D extends Date {\n\u003e 23 |   constructor() {}\n     |   ^\n  24 | }\n  25 | \n  26 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtin-objects/Error/message-property-assignment.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Error/message-property-assignment.js: Test262Error: Expected SameValue(«», «custom-error») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass/builtin-objects/Error/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Error/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/Error/super-must-be-called.js: missing super() call in constructor\n  17 | \n  18 | class CustomError extends Error {\n\u003e 19 |   constructor() {}\n     |   ^\n  20 | }\n  21 | \n  22 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtin-objects/Function/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Function/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/Function/super-must-be-called.js: missing super() call in constructor\n  20 | \n  21 | class Fn extends Function {\n\u003e 22 |   constructor() {}\n     |   ^\n  23 | }\n  24 | \n  25 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtin-objects/GeneratorFunction/instance-length.js-strict:true": "test/language/statements/class/subclass/builtin-objects/GeneratorFunction/instance-length.js: test/language/statements/class/subclass/builtin-objects/GeneratorFunction/instance-length.js: Line 22:55 Unexpected token * (and 1 more errors)",
  "test/language/statements/class/subclass/builtin-objects/GeneratorFunction/instance-name.js-strict:true": "test/language/statements/class/subclass/builtin-objects/GeneratorFunction/instance-name.js: test/language/statements/class/subclass/builtin-objects/GeneratorFunction/instance-name.js: Line 34:55 Unexpected token * (and 1 more errors)",
  "test/language/statements/class/subclass/builtin-objects/GeneratorFunction/instance-prototype.js-strict:true": "test/language/statements/class/subclass/builtin-objects/GeneratorFunction/instance-prototype.js: test/language/statements/class/subclass/builtin-objects/GeneratorFunction/instance-prototype.js: Line 22:55 Unexpected token * (and 1 more errors)",
  "test/language/statements/class/subclass/builtin-objects/GeneratorFunction/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/GeneratorFunction/regular-subclassing.js: test/language/statements/class/subclass/builtin-objects/GeneratorFunction/regular-subclassing.js: Line 21:55 Unexpected token * (and 1 more errors)",
  "test/language/statements/class/subclass/builtin-objects/GeneratorFunction/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/GeneratorFunction/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/GeneratorFunction/super-must-be-called.js: missing super() call in constructor\n  23 | \n  24 | class GFn1 extends GeneratorFunction {\n\u003e 25 |   constructor() {}\n     |   ^\n  26 | }\n  27 | \n  28 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtin-objects/Map/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Map/regular-subclassing.js: TypeError: Constructor Map requires 'new' at apply (native)",
  "test/language/statements/class/subclass/builtin-objects/Map/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Map/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/Map/super-must-be-called.js: missing super() call in constructor\n  18 | \n  19 | class M1 extends Map {\n\u003e 20 |   constructor() {}\n     |   ^\n  21 | }\n  22 | \n  23 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtin-objects/NativeError/EvalError-message.js-strict:true": "test/language/statements/class/subclass/builtin-objects/NativeError/EvalError-message.js: Test262Error: Expected SameValue(«», «custom-eval-error») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass/builtin-objects/NativeError/EvalError-super.js-strict:true": "test/language/statements/class/subclass/builtin-objects/NativeError/EvalError-super.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/NativeError/EvalError-super.js: missing super() call in constructor\n  17 | \n  18 | class CustomError extends EvalError {\n\u003e 19 |   constructor() {}\n     |   ^\n  20 | }\n  21 | \n  22 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtin-objects/NativeError/RangeError-message.js-strict:true": "test/language/statements/class/subclass/builtin-objects/NativeError/RangeError-message.js: Test262Error: Expected SameValue(«», «custom-range-error») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass/builtin-objects/NativeError/RangeError-super.js-strict:true": "test/language/statements/class/subclass/builtin-objects/NativeError/RangeError-super.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/NativeError/RangeError-super.js: missing super() call in constructor\n  17 | \n  18 | class CustomError extends RangeError {\n\u003e 19 |   constructor() {}\n     |   ^\n  20 | }\n  21 | \n  22 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtin-objects/NativeError/ReferenceError-message.js-strict:true": "test/language/statements/class/subclass/builtin-objects/NativeError/ReferenceError-message.js: Test262Error: Expected SameValue(«», «custom-reference-error») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass/builtin-objects/NativeError/ReferenceError-super.js-strict:true": "test/language/statements/class/subclass/builtin-objects/NativeError/ReferenceError-super.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/NativeError/ReferenceError-super.js: missing super() call in constructor\n  17 | \n  18 | class CustomError extends ReferenceError {\n\u003e 19 |   constructor() {}\n     |   ^\n  20 | }\n  21 | \n  22 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtin-objects/NativeError/SyntaxError-message.js-strict:true": "test/language/statements/class/subclass/builtin-objects/NativeError/SyntaxError-message.js: Test262Error: Expected SameValue(«», «custom-syntax-error») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass/builtin-objects/NativeError/SyntaxError-super.js-strict:true": "test/language/statements/class/subclass/builtin-objects/NativeError/SyntaxError-super.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/NativeError/SyntaxError-super.js: missing super() call in constructor\n  17 | \n  18 | class CustomError extends SyntaxError {\n\u003e 19 |   constructor() {}\n     |   ^\n  20 | }\n  21 | \n  22 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtin-objects/NativeError/TypeError-message.js-strict:true": "test/language/statements/class/subclass/builtin-objects/NativeError/TypeError-message.js: Test262Error: Expected SameValue(«», «custom-type-error») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass/builtin-objects/NativeError/TypeError-super.js-strict:true": "test/language/statements/class/subclass/builtin-objects/NativeError/TypeError-super.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/NativeError/TypeError-super.js: missing super() call in constructor\n  17 | \n  18 | class CustomError extends TypeError {\n\u003e 19 |   constructor() {}\n     |   ^\n  20 | }\n  21 | \n  22 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtin-objects/NativeError/URIError-message.js-strict:true": "test/language/statements/class/subclass/builtin-objects/NativeError/URIError-message.js: Test262Error: Expected SameValue(«», «custom-uri-error») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass/builtin-objects/NativeError/URIError-super.js-strict:true": "test/language/statements/class/subclass/builtin-objects/NativeError/URIError-super.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/NativeError/URIError-super.js: missing super() call in constructor\n  17 | \n  18 | class CustomError extends URIError {\n\u003e 19 |   constructor() {}\n     |   ^\n  20 | }\n  21 | \n  22 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtin-objects/Number/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Number/regular-subclassing.js: TypeError: Value is not a number: %!s(PANIC=String method: TypeError: Value is not a number) at toFixed (native)",
  "test/language/statements/class/subclass/builtin-objects/Number/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Number/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/Number/super-must-be-called.js: missing super() call in constructor\n  18 | \n  19 | class N extends Number {\n\u003e 20 |   constructor() {}\n     |   ^\n  21 | }\n  22 | \n  23 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtin-objects/Object/constructor-return-undefined-throws.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Object/constructor-return-undefined-throws.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/Object/constructor-return-undefined-throws.js: missing super() call in constructor\n  29 | \n  30 | class Obj extends Object {\n\u003e 31 |   constructor() {\n     |   ^\n  32 |     return undefined;\n  33 |   }\n  34 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtin-objects/Object/constructor-returns-non-object.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Object/constructor-returns-non-object.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/Object/constructor-returns-non-object.js: missing super() call in constructor\n  32 | \n  33 | class Obj extends Object {\n\u003e 34 |   constructor() {\n     |   ^\n  35 |     return 42;\n  36 |   }\n  37 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtin-objects/Object/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Object/regular-subclassing.js: Test262Error: returns the class prototype Expected SameValue(«[object Object]», «[object Object]») to be false at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass/builtin-objects/Object/replacing-prototype.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Object/replacing-prototype.js: Test262Error: Replaces prototype Expected SameValue(«[object Object]», «42») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass/builtin-objects/Promise/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Promise/regular-subclassing.js: ReferenceError: Promise is not defined at test/language/statements/class/subclass/builtin-objects/Promise/regular-subclassing.js:20:227(22)",
  "test/language/statements/class/subclass/builtin-objects/Promise/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Promise/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/Promise/super-must-be-called.js: missing super() call in constructor\n  19 | \n  20 | class Prom1 extends Promise {\n\u003e 21 |   constructor() {}\n     |   ^\n  22 | }\n  23 | \n  24 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtin-objects/RegExp/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/RegExp/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/RegExp/super-must-be-called.js: missing super() call in constructor\n  18 | \n  19 | class RE1 extends RegExp {\n\u003e 20 |   constructor() {}\n     |   ^\n  21 | }\n  22 | \n  23 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtin-objects/Set/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Set/regular-subclassing.js: TypeError: Constructor Set requires 'new' at apply (native)",
  "test/language/statements/class/subclass/builtin-objects/Set/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Set/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/Set/super-must-be-called.js: missing super() call in constructor\n  18 | \n  19 | class S1 extends Set {\n\u003e 20 |   constructor() {}\n     |   ^\n  21 | }\n  22 | \n  23 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtin-objects/String/length.js-strict:true": "test/language/statements/class/subclass/builtin-objects/String/length.js: TypeError: Cannot read property 'writable' of undefined at verifyNotWritable (harness/propertyHelper.js:195:13(11))",
  "test/language/statements/class/subclass/builtin-objects/String/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/String/regular-subclassing.js: TypeError: String.prototype.toString is called on incompatible receiver at trim (native)",
  "test/language/statements/class/subclass/builtin-objects/String/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/String/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/String/super-must-be-called.js: missing super() call in constructor\n  17 | \n  18 | class S1 extends String {\n\u003e 19 |   constructor() {}\n     |   ^\n  20 | }\n  21 | \n  22 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtin-objects/Symbol/new-symbol-with-super-throws.js-strict:true": "test/language/statements/class/subclass/builtin-objects/Symbol/new-symbol-with-super-throws.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass/builtin-objects/TypedArray/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/TypedArray/regular-subclassing.js: TypeError: Constructor TypedArray requires 'new' at apply (native)",
  "test/language/statements/class/subclass/builtin-objects/TypedArray/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/TypedArray/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/TypedArray/super-must-be-called.js: missing super() call in constructor\n  30 | ].forEach(function(Constructor) {\n  31 |   class Typed extends Constructor {\n\u003e 32 |     constructor() {}\n     |     ^\n  33 |   }\n  34 | \n  35 |   assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtin-objects/WeakMap/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/WeakMap/regular-subclassing.js: TypeError: Constructor WeakMap requires 'new' at apply (native)",
  "test/language/statements/class/subclass/builtin-objects/WeakMap/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/WeakMap/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/WeakMap/super-must-be-called.js: missing super() call in constructor\n  20 | \n  21 | class M1 extends WeakMap {\n\u003e 22 |   constructor() {}\n     |   ^\n  23 | }\n  24 | \n  25 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtin-objects/WeakSet/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/WeakSet/regular-subclassing.js: TypeError: Constructor WeakSet requires 'new' at apply (native)",
  "test/language/statements/class/subclass/builtin-objects/WeakSet/super-must-be-called.js-strict:true": "test/language/statements/class/subclass/builtin-objects/WeakSet/super-must-be-called.js: SyntaxError: test/language/statements/class/subclass/builtin-objects/WeakSet/super-must-be-called.js: missing super() call in constructor\n  20 | \n  21 | class WS1 extends WeakSet {\n\u003e 22 |   constructor() {}\n     |   ^\n  23 | }\n  24 | \n  25 | assert.throws(ReferenceError, function() { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/builtins.js-strict:true": "test/language/statements/class/subclass/builtins.js: TypeError: Constructor TypedArray requires 'new' at call (native)",
  "test/language/statements/class/subclass/class-definition-null-proto-contains-return-override.js-strict:true": "test/language/statements/class/subclass/class-definition-null-proto-contains-return-override.js: SyntaxError: test/language/statements/class/subclass/class-definition-null-proto-contains-return-override.js: missing super() call in constructor\n  24 | \n  25 | class Foo extends null {\n\u003e 26 |   constructor() {\n     |   ^\n  27 |     return obj = {};\n  28 |   }\n  29 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/class-definition-null-proto-missing-return-override.js-strict:true": "test/language/statements/class/subclass/class-definition-null-proto-missing-return-override.js: SyntaxError: test/language/statements/class/subclass/class-definition-null-proto-missing-return-override.js: missing super() call in constructor\n  32 | \n  33 | class Foo extends null {\n\u003e 34 |   constructor() {\n     |   ^\n  35 |   }\n  36 | }\n  37 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/class-definition-null-proto-super.js-strict:true": "test/language/statements/class/subclass/class-definition-null-proto-super.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass/class-definition-null-proto-this.js-strict:true": "test/language/statements/class/subclass/class-definition-null-proto-this.js: SyntaxError: test/language/statements/class/subclass/class-definition-null-proto-this.js: missing super() call in constructor\n  28 | \n  29 | class C extends null {\n\u003e 30 |   constructor() {\n     |   ^\n  31 |     // Use an arrow function to access the `this` binding of the class constructor.\n  32 |     assert.throws(ReferenceError, () =\u003e {\n  33 |       this; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/subclass/default-constructor-spread-override.js-strict:true": "test/language/statements/class/subclass/default-constructor-spread-override.js: Test262Error: Expected SameValue(«undefined», «spread-value») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass/derived-class-return-override-with-boolean.js-strict:true": "test/language/statements/class/subclass/derived-class-return-override-with-boolean.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass/derived-class-return-override-with-null.js-strict:true": "test/language/statements/class/subclass/derived-class-return-override-with-null.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass/derived-class-return-override-with-number.js-strict:true": "test/language/statements/class/subclass/derived-class-return-override-with-number.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass/derived-class-return-override-with-string.js-strict:true": "test/language/statements/class/subclass/derived-class-return-override-with-string.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass/derived-class-return-override-with-symbol.js-strict:true": "test/language/statements/class/subclass/derived-class-return-override-with-symbol.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass/superclass-arrow-function.js-strict:true": "test/language/statements/class/subclass/superclass-arrow-function.js: Test262Error: Expected a TypeError but got a Test262Error at harness/sta.js:22:9(49)",
  "test/language/statements/class/subclass/superclass-async-function.js-strict:true": "test/language/statements/class/subclass/superclass-async-function.js: test/language/statements/class/subclass/superclass-async-function.js: Line 22:7 Unexpected token function (and 22 more errors)",
  "test/language/statements/class/subclass/superclass-async-generator-function.js-strict:true": "test/language/statements/class/subclass/superclass-async-generator-function.js: SyntaxError: test/language/statements/class/subclass/superclass-async-generator-function.js: Unexpected token (22:14)\n  20 | ---*/\n  21 | \n\u003e 22 | async function* fn() {}\n     |               ^\n  23 | \n  24 | assert.throws(TypeError, function() {\n  25 |   class A extends fn {} at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/super/in-constructor-superproperty-evaluation.js-strict:true": "test/language/statements/class/super/in-constructor-superproperty-evaluation.js: SyntaxError: test/language/statements/class/super/in-constructor-superproperty-evaluation.js: 'super.*' is not allowed before super()\n   9 | class Derived extends Object {\n  10 |   constructor() {\n\u003e 11 |     super[super()];\n     |     ^\n  12 |     throw new Test262Error();\n  13 |   }\n  14 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/class/syntax/class-body-method-definition-super-property.js-strict:true": "test/language/statements/class/syntax/class-body-method-definition-super-property.js: Test262Error: Expected SameValue(«undefined», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/class/syntax/class-declaration-computed-method-generator-definition.js-strict:true": "test/language/statements/class/syntax/class-declaration-computed-method-generator-definition.js: test/language/statements/class/syntax/class-declaration-computed-method-generator-definition.js: Line 27:23 Unexpected token * (and 1 more errors)",
  "test/language/statements/class/syntax/early-errors/class-definition-evaluation-block-duplicate-binding.js-strict:true": "test/language/statements/class/syntax/early-errors/class-definition-evaluation-block-duplicate-binding.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/statements/class/syntax/early-errors/class-definition-evaluation-scriptbody-duplicate-binding.js-strict:true": "test/language/statements/class/syntax/early-errors/class-definition-evaluation-scriptbody-duplicate-binding.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/statements/class/syntax/escaped-static.js-strict:true": "test/language/statements/class/syntax/escaped-static.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/const/block-local-closure-get-before-initialization.js-strict:true": "test/language/statements/const/block-local-closure-get-before-initialization.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/const/block-local-use-before-initialization-in-declaration-statement.js-strict:true": "test/language/statements/const/block-local-use-before-initialization-in-declaration-statement.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/const/block-local-use-before-initialization-in-prior-statement.js-strict:true": "test/language/statements/const/block-local-use-before-initialization-in-prior-statement.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/const/cptn-value.js-strict:true": "test/language/statements/const/cptn-value.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:1 Unexpected reserved word at test/language/statements/const/cptn-value.js:17:7(5)",
  "test/language/statements/const/dstr/ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/statements/const/dstr/ary-init-iter-get-err-array-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/const/dstr/ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/statements/const/dstr/ary-ptrn-elem-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/const/dstr/ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/const/dstr/ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/const/dstr/ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/statements/const/dstr/ary-ptrn-elem-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/const/dstr/ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/statements/const/dstr/ary-ptrn-elem-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/const/dstr/ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/const/dstr/ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/const/dstr/ary-ptrn-rest-ary-elem.js: Unexpected token (54:10)\n  52 | ---*/\n  53 | \n\u003e 54 | const [...[x, y, z]] = [3, 4, 5];\n     |           ^\n  55 | \n  56 | assert.sameValue(x, 3);\n  57 | assert.sameValue(y, 4); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/const/dstr/ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/const/dstr/ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/const/dstr/ary-ptrn-rest-ary-rest.js: Unexpected token (35:10)\n  33 | var values = [1, 2, 3];\n  34 | \n\u003e 35 | const [...[...x]] = values;\n     |           ^\n  36 | \n  37 | assert(Array.isArray(x));\n  38 | assert.sameValue(x.length, 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/const/dstr/ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/const/dstr/ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/const/dstr/ary-ptrn-rest-obj-id.js: Unexpected token (34:10)\n  32 | ---*/\n  33 | \n\u003e 34 | const [...{ length }] = [1, 2, 3];\n     |           ^\n  35 | \n  36 | assert.sameValue(length, 3);\n  37 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/const/dstr/ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/const/dstr/ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/const/dstr/ary-ptrn-rest-obj-prop-id.js: Unexpected token (35:10)\n  33 | let length = \"outer\";\n  34 | \n\u003e 35 | const [...{ 0: v, 1: w, 2: x, 3: y, length: z }] = [7, 8, 9];\n     |           ^\n  36 | \n  37 | assert.sameValue(v, 7);\n  38 | assert.sameValue(w, 8); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/const/dstr/obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/statements/const/dstr/obj-ptrn-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/const/dstr/obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/const/dstr/obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/const/dstr/obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/statements/const/dstr/obj-ptrn-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/const/dstr/obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/statements/const/dstr/obj-ptrn-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/const/dstr/obj-ptrn-rest-getter.js-strict:true": "test/language/statements/const/dstr/obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/const/dstr/obj-ptrn-rest-getter.js: Unexpected token (23:7)\n  21 | var count = 0;\n  22 | \n\u003e 23 | const {...x} = { get v() { count++; return 2; } };\n     |        ^\n  24 | \n  25 | assert.sameValue(count, 1);\n  26 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/const/dstr/obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/const/dstr/obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/const/dstr/obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (24:7)\n  22 | Object.defineProperty(o, \"x\", { value: 4, enumerable: false });\n  23 | \n\u003e 24 | const {...rest} = o;\n     |        ^\n  25 | \n  26 | assert.sameValue(rest.x, undefined);\n  27 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/const/dstr/obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/const/dstr/obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/const/dstr/obj-ptrn-rest-val-obj.js: Unexpected token (22:13)\n  20 | ---*/\n  21 | \n\u003e 22 | const {a, b, ...rest} = {x: 1, y: 2, a: 5, b: 3};\n     |              ^\n  23 | \n  24 | assert.sameValue(rest.a, undefined);\n  25 | assert.sameValue(rest.b, undefined); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/const/function-local-closure-get-before-initialization.js-strict:true": "test/language/statements/const/function-local-closure-get-before-initialization.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/const/function-local-use-before-initialization-in-declaration-statement.js-strict:true": "test/language/statements/const/function-local-use-before-initialization-in-declaration-statement.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/const/function-local-use-before-initialization-in-prior-statement.js-strict:true": "test/language/statements/const/function-local-use-before-initialization-in-prior-statement.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/const/global-closure-get-before-initialization.js-strict:true": "test/language/statements/const/global-closure-get-before-initialization.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/const/global-use-before-initialization-in-declaration-statement.js-strict:true": "test/language/statements/const/global-use-before-initialization-in-declaration-statement.js: Expected error: \u003cnil\u003e",
  "test/language/statements/const/global-use-before-initialization-in-prior-statement.js-strict:true": "test/language/statements/const/global-use-before-initialization-in-prior-statement.js: Expected error: \u003cnil\u003e",
  "test/language/statements/const/redeclaration-error-from-within-strict-mode-function-const.js-strict:false": "test/language/statements/const/redeclaration-error-from-within-strict-mode-function-const.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/const/syntax/const-invalid-assignment-next-expression-for.js-strict:true": "test/language/statements/const/syntax/const-invalid-assignment-next-expression-for.js: SyntaxError: test/language/statements/const/syntax/const-invalid-assignment-next-expression-for.js: \"i\" is read-only\n   9 | \n  10 | assert.throws(TypeError, function() {\n\u003e 11 |   for (const i = 0; i \u003c 1; i++) {}\n     |                            ^\n  12 | });\n  13 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/const/syntax/const-invalid-assignment-statement-body-for-in.js-strict:true": "test/language/statements/const/syntax/const-invalid-assignment-statement-body-for-in.js: SyntaxError: test/language/statements/const/syntax/const-invalid-assignment-statement-body-for-in.js: \"x\" is read-only\n   9 | \n  10 | assert.throws(TypeError, function() {\n\u003e 11 |   for (const x in [1, 2, 3]) { x++ }\n     |                                ^\n  12 | });\n  13 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/const/syntax/const-invalid-assignment-statement-body-for-of.js-strict:true": "test/language/statements/const/syntax/const-invalid-assignment-statement-body-for-of.js: SyntaxError: test/language/statements/const/syntax/const-invalid-assignment-statement-body-for-of.js: \"x\" is read-only\n   9 | \n  10 | assert.throws(TypeError, function() {\n\u003e 11 |   for (const x of [1, 2, 3]) { x++ }\n     |                                ^\n  12 | });\n  13 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/const/syntax/with-initializer-label-statement.js-strict:true": "test/language/statements/const/syntax/with-initializer-label-statement.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/do-while/decl-fun.js-strict:true": "test/language/statements/do-while/decl-fun.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/do-while/labelled-fn-stmt.js-strict:true": "test/language/statements/do-while/labelled-fn-stmt.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/do-while/let-array-with-newline.js-strict:false": "test/language/statements/do-while/let-array-with-newline.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-await-of/let-block-with-newline.js-strict:false": "test/language/statements/for-await-of/let-block-with-newline.js: SyntaxError: test/language/statements/for-await-of/let-block-with-newline.js: Unexpected token (16:14)\n  14 | ---*/\n  15 | \n\u003e 16 | async function* f() {\n     |               ^\n  17 |   for await (var x of []) let // ASI\n  18 |   {}\n  19 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-await-of/let-identifier-with-newline.js-strict:false": "test/language/statements/for-await-of/let-identifier-with-newline.js: SyntaxError: test/language/statements/for-await-of/let-identifier-with-newline.js: Unexpected token (16:14)\n  14 | ---*/\n  15 | \n\u003e 16 | async function* f() {\n     |               ^\n  17 |   for await (var x of []) let // ASI\n  18 |   x = 1;\n  19 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-in/decl-fun.js-strict:true": "test/language/statements/for-in/decl-fun.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-in/dstr/array-rest-before-elision.js-strict:true": "test/language/statements/for-in/dstr/array-rest-before-elision.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-in/dstr/array-rest-elision-invalid.js-strict:true": "test/language/statements/for-in/dstr/array-rest-elision-invalid.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-in/head-const-bound-names-dup.js-strict:true": "test/language/statements/for-in/head-const-bound-names-dup.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/statements/for-in/head-const-bound-names-fordecl-tdz.js-strict:true": "test/language/statements/for-in/head-const-bound-names-fordecl-tdz.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-in/head-const-bound-names-in-stmt.js-strict:true": "test/language/statements/for-in/head-const-bound-names-in-stmt.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-in/head-let-bound-names-dup.js-strict:true": "test/language/statements/for-in/head-let-bound-names-dup.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/statements/for-in/head-let-bound-names-fordecl-tdz.js-strict:true": "test/language/statements/for-in/head-let-bound-names-fordecl-tdz.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-in/head-let-bound-names-in-stmt.js-strict:true": "test/language/statements/for-in/head-let-bound-names-in-stmt.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-in/labelled-fn-stmt-const.js-strict:true": "test/language/statements/for-in/labelled-fn-stmt-const.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-in/labelled-fn-stmt-let.js-strict:true": "test/language/statements/for-in/labelled-fn-stmt-let.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-in/labelled-fn-stmt-lhs.js-strict:true": "test/language/statements/for-in/labelled-fn-stmt-lhs.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-in/labelled-fn-stmt-var.js-strict:true": "test/language/statements/for-in/labelled-fn-stmt-var.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-in/let-array-with-newline.js-strict:false": "test/language/statements/for-in/let-array-with-newline.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-in/scope-body-lex-open.js-strict:true": "test/language/statements/for-in/scope-body-lex-open.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-in/scope-head-lex-close.js-strict:true": "test/language/statements/for-in/scope-head-lex-close.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-in/scope-head-lex-open.js-strict:true": "test/language/statements/for-in/scope-head-lex-open.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-in/scope-head-var-none.js-strict:false": "test/language/statements/for-in/scope-head-var-none.js: ReferenceError: let is not defined at test/language/statements/for-in/scope-head-var-none.js:35:5(24)",
  "test/language/statements/for-of/arguments-mapped-aliasing.js-strict:false": "test/language/statements/for-of/arguments-mapped-aliasing.js: TypeError: object is not iterable at test/language/statements/for-of/arguments-mapped-aliasing.js:18:21(9)",
  "test/language/statements/for-of/arguments-mapped-mutation.js-strict:false": "test/language/statements/for-of/arguments-mapped-mutation.js: TypeError: object is not iterable at test/language/statements/for-of/arguments-mapped-mutation.js:17:21(6)",
  "test/language/statements/for-of/arguments-mapped.js-strict:false": "test/language/statements/for-of/arguments-mapped.js: TypeError: object is not iterable at test/language/statements/for-of/arguments-mapped.js:15:21(6)",
  "test/language/statements/for-of/arguments-unmapped-aliasing.js-strict:false": "test/language/statements/for-of/arguments-unmapped-aliasing.js: TypeError: object is not iterable at test/language/statements/for-of/arguments-unmapped-aliasing.js:19:21(9)",
  "test/language/statements/for-of/arguments-unmapped-mutation.js-strict:false": "test/language/statements/for-of/arguments-unmapped-mutation.js: TypeError: object is not iterable at test/language/statements/for-of/arguments-unmapped-mutation.js:18:21(6)",
  "test/language/statements/for-of/arguments-unmapped.js-strict:false": "test/language/statements/for-of/arguments-unmapped.js: TypeError: object is not iterable at test/language/statements/for-of/arguments-unmapped.js:16:21(6)",
  "test/language/statements/for-of/decl-fun.js-strict:true": "test/language/statements/for-of/decl-fun.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/dstr/array-elem-init-fn-name-arrow.js-strict:true": "test/language/statements/for-of/dstr/array-elem-init-fn-name-arrow.js: Test262Error: obj should have an own property name at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-elem-init-fn-name-class.js-strict:true": "test/language/statements/for-of/dstr/array-elem-init-fn-name-class.js: Test262Error: descriptor value should be cls at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-elem-init-fn-name-cover.js-strict:true": "test/language/statements/for-of/dstr/array-elem-init-fn-name-cover.js: Test262Error: obj should have an own property name at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-elem-init-fn-name-fn.js-strict:true": "test/language/statements/for-of/dstr/array-elem-init-fn-name-fn.js: Test262Error: obj should have an own property name at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-elem-init-let.js-strict:true": "test/language/statements/for-of/dstr/array-elem-init-let.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-elem-init-simple-no-strict.js-strict:false": "test/language/statements/for-of/dstr/array-elem-init-simple-no-strict.js: SyntaxError: test/language/statements/for-of/dstr/array-elem-init-simple-no-strict.js: eval is a reserved word in strict mode (27:14)\n  25 |     [...]\n  26 | ---*/\n\u003e 27 | var argument, eval;\n     |               ^\n  28 | \n  29 | var counter = 0;\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/array-elem-init-yield-ident-valid.js-strict:false": "test/language/statements/for-of/dstr/array-elem-init-yield-ident-valid.js: SyntaxError: test/language/statements/for-of/dstr/array-elem-init-yield-ident-valid.js: Unexpected token (27:4)\n  25 |     [...]\n  26 | ---*/\n\u003e 27 | var yield = 4;\n     |     ^\n  28 | var x;\n  29 | \n  30 | var counter = 0; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/array-elem-iter-nrml-close-null.js-strict:true": "test/language/statements/for-of/dstr/array-elem-iter-nrml-close-null.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-elem-iter-thrw-close-err.js-strict:true": "test/language/statements/for-of/dstr/array-elem-iter-thrw-close-err.js: Test262Error: Expected SameValue(«1», «0») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-elem-iter-thrw-close.js-strict:true": "test/language/statements/for-of/dstr/array-elem-iter-thrw-close.js: Test262Error: Expected SameValue(«1», «0») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-elem-nested-array-yield-ident-valid.js-strict:false": "test/language/statements/for-of/dstr/array-elem-nested-array-yield-ident-valid.js: SyntaxError: test/language/statements/for-of/dstr/array-elem-nested-array-yield-ident-valid.js: Unexpected token (27:4)\n  25 |     [...]\n  26 | ---*/\n\u003e 27 | var yield = 'prop';\n     |     ^\n  28 | var x = {};\n  29 | \n  30 | var counter = 0; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/array-elem-nested-obj-yield-ident-valid.js-strict:false": "test/language/statements/for-of/dstr/array-elem-nested-obj-yield-ident-valid.js: SyntaxError: test/language/statements/for-of/dstr/array-elem-nested-obj-yield-ident-valid.js: Unexpected token (27:4)\n  25 |     [...]\n  26 | ---*/\n\u003e 27 | var yield = 2;\n     |     ^\n  28 | var x;\n  29 | \n  30 | var counter = 0; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/array-elem-put-const.js-strict:true": "test/language/statements/for-of/dstr/array-elem-put-const.js: SyntaxError: test/language/statements/for-of/dstr/array-elem-put-const.js: \"c\" is read-only\n  31 | \n  32 | assert.throws(TypeError, function() {\n\u003e 33 |   for ([ c ] of [[1]]) {\n     |        ^\n  34 |     counter += 1;\n  35 |   }\n  36 |   counter += 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/array-elem-put-let.js-strict:true": "test/language/statements/for-of/dstr/array-elem-put-let.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-elem-put-unresolvable-strict.js-strict:true": "test/language/statements/for-of/dstr/array-elem-put-unresolvable-strict.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-elem-target-simple-no-strict.js-strict:false": "test/language/statements/for-of/dstr/array-elem-target-simple-no-strict.js: SyntaxError: test/language/statements/for-of/dstr/array-elem-target-simple-no-strict.js: eval is a reserved word in strict mode (27:14)\n  25 |     [...]\n  26 | ---*/\n\u003e 27 | var argument, eval;\n     |               ^\n  28 | \n  29 | var counter = 0;\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/array-elem-target-yield-valid.js-strict:false": "test/language/statements/for-of/dstr/array-elem-target-yield-valid.js: SyntaxError: test/language/statements/for-of/dstr/array-elem-target-yield-valid.js: Unexpected token (27:4)\n  25 |     [...]\n  26 | ---*/\n\u003e 27 | var yield = 'prop';\n     |     ^\n  28 | var x = {};\n  29 | \n  30 | var counter = 0; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/array-elem-trlg-iter-elision-iter-nrml-close-null.js-strict:true": "test/language/statements/for-of/dstr/array-elem-trlg-iter-elision-iter-nrml-close-null.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-elem-trlg-iter-list-nrml-close-null.js-strict:true": "test/language/statements/for-of/dstr/array-elem-trlg-iter-list-nrml-close-null.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-elem-trlg-iter-list-thrw-close-err.js-strict:true": "test/language/statements/for-of/dstr/array-elem-trlg-iter-list-thrw-close-err.js: Test262Error: Expected SameValue(«1», «0») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-elem-trlg-iter-list-thrw-close.js-strict:true": "test/language/statements/for-of/dstr/array-elem-trlg-iter-list-thrw-close.js: Test262Error: Expected SameValue(«1», «0») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-elem-trlg-iter-rest-thrw-close-err.js-strict:true": "test/language/statements/for-of/dstr/array-elem-trlg-iter-rest-thrw-close-err.js: Test262Error: Expected SameValue(«11», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-elem-trlg-iter-rest-thrw-close.js-strict:true": "test/language/statements/for-of/dstr/array-elem-trlg-iter-rest-thrw-close.js: Test262Error: Expected SameValue(«11», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-elision-iter-nrml-close-null.js-strict:true": "test/language/statements/for-of/dstr/array-elision-iter-nrml-close-null.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-empty-iter-close-err.js-strict:true": "test/language/statements/for-of/dstr/array-empty-iter-close-err.js: Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-empty-iter-close-null.js-strict:true": "test/language/statements/for-of/dstr/array-empty-iter-close-null.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-empty-iter-close.js-strict:true": "test/language/statements/for-of/dstr/array-empty-iter-close.js: Test262Error: Expected SameValue(«1», «0») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-empty-val-bool.js-strict:true": "test/language/statements/for-of/dstr/array-empty-val-bool.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-empty-val-num.js-strict:true": "test/language/statements/for-of/dstr/array-empty-val-num.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-empty-val-symbol.js-strict:true": "test/language/statements/for-of/dstr/array-empty-val-symbol.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-rest-before-elision.js-strict:true": "test/language/statements/for-of/dstr/array-rest-before-elision.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/dstr/array-rest-elision-invalid.js-strict:true": "test/language/statements/for-of/dstr/array-rest-elision-invalid.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/dstr/array-rest-iter-thrw-close-err.js-strict:true": "test/language/statements/for-of/dstr/array-rest-iter-thrw-close-err.js: Test262Error: Expected SameValue(«11», «0») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-rest-iter-thrw-close.js-strict:true": "test/language/statements/for-of/dstr/array-rest-iter-thrw-close.js: Test262Error: Expected SameValue(«11», «0») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-rest-lref-err.js-strict:true": "test/language/statements/for-of/dstr/array-rest-lref-err.js: Test262Error: Expected SameValue(«1», «0») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-rest-nested-array-yield-ident-valid.js-strict:false": "test/language/statements/for-of/dstr/array-rest-nested-array-yield-ident-valid.js: SyntaxError: test/language/statements/for-of/dstr/array-rest-nested-array-yield-ident-valid.js: Unexpected token (27:4)\n  25 |     [...]\n  26 | ---*/\n\u003e 27 | var yield = 'prop';\n     |     ^\n  28 | var x = {};\n  29 | \n  30 | var counter = 0; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/array-rest-nested-obj-null.js-strict:true": "test/language/statements/for-of/dstr/array-rest-nested-obj-null.js: SyntaxError: test/language/statements/for-of/dstr/array-rest-nested-obj-null.js: Unexpected token (32:9)\n  30 | var counter = 0;\n  31 | \n\u003e 32 | for ([...{ 0: x, length }] of [[null]]) {\n     |          ^\n  33 |   assert.sameValue(x, null);\n  34 |   assert.sameValue(length, 1);\n  35 |   counter += 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/array-rest-nested-obj-undefined-hole.js-strict:true": "test/language/statements/for-of/dstr/array-rest-nested-obj-undefined-hole.js: SyntaxError: test/language/statements/for-of/dstr/array-rest-nested-obj-undefined-hole.js: Unexpected token (35:9)\n  33 | var counter = 0;\n  34 | \n\u003e 35 | for ([...{ 0: x, length }] of [[ , ]]) {\n     |          ^\n  36 |   assert.sameValue(x, undefined);\n  37 |   assert.sameValue(length, 1);\n  38 |   counter += 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/array-rest-nested-obj-undefined-own.js-strict:true": "test/language/statements/for-of/dstr/array-rest-nested-obj-undefined-own.js: SyntaxError: test/language/statements/for-of/dstr/array-rest-nested-obj-undefined-own.js: Unexpected token (35:9)\n  33 | var counter = 0;\n  34 | \n\u003e 35 | for ([...{ 0: x, length }] of [[undefined]]) {\n     |          ^\n  36 |   assert.sameValue(x, undefined);\n  37 |   assert.sameValue(length, 1);\n  38 |   counter += 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/array-rest-nested-obj-undefined.js-strict:true": "test/language/statements/for-of/dstr/array-rest-nested-obj-undefined.js: SyntaxError: test/language/statements/for-of/dstr/array-rest-nested-obj-undefined.js: Unexpected token (35:9)\n  33 | var counter = 0;\n  34 | \n\u003e 35 | for ([...{ 0: x, length }] of [[]]) {\n     |          ^\n  36 |   assert.sameValue(x, undefined);\n  37 |   assert.sameValue(length, 0);\n  38 |   counter += 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/array-rest-nested-obj-yield-ident-valid.js-strict:false": "test/language/statements/for-of/dstr/array-rest-nested-obj-yield-ident-valid.js: SyntaxError: test/language/statements/for-of/dstr/array-rest-nested-obj-yield-ident-valid.js: Unexpected token (27:4)\n  25 |     [...]\n  26 | ---*/\n\u003e 27 | var yield = 2;\n     |     ^\n  28 | var x;\n  29 | \n  30 | var counter = 0; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/array-rest-nested-obj.js-strict:true": "test/language/statements/for-of/dstr/array-rest-nested-obj.js: SyntaxError: test/language/statements/for-of/dstr/array-rest-nested-obj.js: Unexpected token (32:9)\n  30 | var counter = 0;\n  31 | \n\u003e 32 | for ([...{ 1: x }] of [[1, 2, 3]]) {\n     |          ^\n  33 |   assert.sameValue(x, 2);\n  34 |   counter += 1;\n  35 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/array-rest-put-const.js-strict:true": "test/language/statements/for-of/dstr/array-rest-put-const.js: SyntaxError: test/language/statements/for-of/dstr/array-rest-put-const.js: \"c\" is read-only\n  31 | \n  32 | assert.throws(TypeError, function() {\n\u003e 33 |   for ([ ...c ] of [[1]]) {\n     |        ^\n  34 |     counter += 1;\n  35 |   }\n  36 |   counter += 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/array-rest-put-let.js-strict:true": "test/language/statements/for-of/dstr/array-rest-put-let.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-rest-put-unresolvable-strict.js-strict:true": "test/language/statements/for-of/dstr/array-rest-put-unresolvable-strict.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/array-rest-yield-ident-valid.js-strict:false": "test/language/statements/for-of/dstr/array-rest-yield-ident-valid.js: SyntaxError: test/language/statements/for-of/dstr/array-rest-yield-ident-valid.js: Unexpected token (27:4)\n  25 |     [...]\n  26 | ---*/\n\u003e 27 | var yield = 'prop';\n     |     ^\n  28 | var x = {};\n  29 | \n  30 | var counter = 0; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/const-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/statements/for-of/dstr/const-ary-ptrn-elem-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/const-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/for-of/dstr/const-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/const-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/statements/for-of/dstr/const-ary-ptrn-elem-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/const-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/statements/for-of/dstr/const-ary-ptrn-elem-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/const-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/for-of/dstr/const-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/for-of/dstr/const-ary-ptrn-rest-ary-elem.js: Unexpected token (75:15)\n  73 | var iterCount = 0;\n  74 | \n\u003e 75 | for (const [...[x, y, z]] of [[3, 4, 5]]) {\n     |                ^\n  76 |   assert.sameValue(x, 3);\n  77 |   assert.sameValue(y, 4);\n  78 |   assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/const-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/for-of/dstr/const-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/for-of/dstr/const-ary-ptrn-rest-ary-rest.js: Unexpected token (56:15)\n  54 | var iterCount = 0;\n  55 | \n\u003e 56 | for (const [...[...x]] of [values]) {\n     |                ^\n  57 |   assert(Array.isArray(x));\n  58 |   assert.sameValue(x.length, 3);\n  59 |   assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/const-ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/for-of/dstr/const-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/for-of/dstr/const-ary-ptrn-rest-obj-id.js: Unexpected token (55:15)\n  53 | var iterCount = 0;\n  54 | \n\u003e 55 | for (const [...{ length }] of [[1, 2, 3]]) {\n     |                ^\n  56 |   assert.sameValue(length, 3);\n  57 | \n  58 |   iterCount += 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/const-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/for-of/dstr/const-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/for-of/dstr/const-ary-ptrn-rest-obj-prop-id.js: Unexpected token (56:15)\n  54 | var iterCount = 0;\n  55 | \n\u003e 56 | for (const [...{ 0: v, 1: w, 2: x, 3: y, length: z }] of [[7, 8, 9]]) {\n     |                ^\n  57 |   assert.sameValue(v, 7);\n  58 |   assert.sameValue(w, 8);\n  59 |   assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/const-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/statements/for-of/dstr/const-obj-ptrn-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/const-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/for-of/dstr/const-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/const-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/statements/for-of/dstr/const-obj-ptrn-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/const-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/statements/for-of/dstr/const-obj-ptrn-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/const-obj-ptrn-rest-getter.js-strict:true": "test/language/statements/for-of/dstr/const-obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/for-of/dstr/const-obj-ptrn-rest-getter.js: Unexpected token (44:12)\n  42 | var iterCount = 0;\n  43 | \n\u003e 44 | for (const {...x} of [{ get v() { count++; return 2; } }]) {\n     |             ^\n  45 |   assert.sameValue(count, 1);\n  46 | \n  47 |   verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/const-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/for-of/dstr/const-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/for-of/dstr/const-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (45:12)\n  43 | var iterCount = 0;\n  44 | \n\u003e 45 | for (const {...rest} of [o]) {\n     |             ^\n  46 |   assert.sameValue(rest.x, undefined);\n  47 | \n  48 |   verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/const-obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/for-of/dstr/const-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/for-of/dstr/const-obj-ptrn-rest-val-obj.js: Unexpected token (43:18)\n  41 | var iterCount = 0;\n  42 | \n\u003e 43 | for (const {a, b, ...rest} of [{x: 1, y: 2, a: 5, b: 3}]) {\n     |                   ^\n  44 |   assert.sameValue(rest.a, undefined);\n  45 |   assert.sameValue(rest.b, undefined);\n  46 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/let-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/statements/for-of/dstr/let-ary-ptrn-elem-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/let-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/for-of/dstr/let-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/let-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/statements/for-of/dstr/let-ary-ptrn-elem-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/let-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/statements/for-of/dstr/let-ary-ptrn-elem-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/let-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/for-of/dstr/let-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/for-of/dstr/let-ary-ptrn-rest-ary-elem.js: Unexpected token (75:13)\n  73 | var iterCount = 0;\n  74 | \n\u003e 75 | for (let [...[x, y, z]] of [[3, 4, 5]]) {\n     |              ^\n  76 |   assert.sameValue(x, 3);\n  77 |   assert.sameValue(y, 4);\n  78 |   assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/let-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/for-of/dstr/let-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/for-of/dstr/let-ary-ptrn-rest-ary-rest.js: Unexpected token (56:13)\n  54 | var iterCount = 0;\n  55 | \n\u003e 56 | for (let [...[...x]] of [values]) {\n     |              ^\n  57 |   assert(Array.isArray(x));\n  58 |   assert.sameValue(x.length, 3);\n  59 |   assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/let-ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/for-of/dstr/let-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/for-of/dstr/let-ary-ptrn-rest-obj-id.js: Unexpected token (55:13)\n  53 | var iterCount = 0;\n  54 | \n\u003e 55 | for (let [...{ length }] of [[1, 2, 3]]) {\n     |              ^\n  56 |   assert.sameValue(length, 3);\n  57 | \n  58 |   iterCount += 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/let-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/for-of/dstr/let-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/for-of/dstr/let-ary-ptrn-rest-obj-prop-id.js: Unexpected token (56:13)\n  54 | var iterCount = 0;\n  55 | \n\u003e 56 | for (let [...{ 0: v, 1: w, 2: x, 3: y, length: z }] of [[7, 8, 9]]) {\n     |              ^\n  57 |   assert.sameValue(v, 7);\n  58 |   assert.sameValue(w, 8);\n  59 |   assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/let-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/statements/for-of/dstr/let-obj-ptrn-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/let-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/for-of/dstr/let-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/let-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/statements/for-of/dstr/let-obj-ptrn-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/let-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/statements/for-of/dstr/let-obj-ptrn-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/let-obj-ptrn-rest-getter.js-strict:true": "test/language/statements/for-of/dstr/let-obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/for-of/dstr/let-obj-ptrn-rest-getter.js: Unexpected token (44:10)\n  42 | var iterCount = 0;\n  43 | \n\u003e 44 | for (let {...x} of [{ get v() { count++; return 2; } }]) {\n     |           ^\n  45 |   assert.sameValue(count, 1);\n  46 | \n  47 |   verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/let-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/for-of/dstr/let-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/for-of/dstr/let-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (45:10)\n  43 | var iterCount = 0;\n  44 | \n\u003e 45 | for (let {...rest} of [o]) {\n     |           ^\n  46 |   assert.sameValue(rest.x, undefined);\n  47 | \n  48 |   verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/let-obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/for-of/dstr/let-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/for-of/dstr/let-obj-ptrn-rest-val-obj.js: Unexpected token (43:16)\n  41 | var iterCount = 0;\n  42 | \n\u003e 43 | for (let {a, b, ...rest} of [{x: 1, y: 2, a: 5, b: 3}]) {\n     |                 ^\n  44 |   assert.sameValue(rest.a, undefined);\n  45 |   assert.sameValue(rest.b, undefined);\n  46 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-id-identifier-yield-ident-valid.js-strict:false": "test/language/statements/for-of/dstr/obj-id-identifier-yield-ident-valid.js: SyntaxError: test/language/statements/for-of/dstr/obj-id-identifier-yield-ident-valid.js: Unexpected token (27:4)\n  25 |     [...]\n  26 | ---*/\n\u003e 27 | var yield;\n     |     ^\n  28 | \n  29 | var counter = 0;\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-id-init-fn-name-arrow.js-strict:true": "test/language/statements/for-of/dstr/obj-id-init-fn-name-arrow.js: Test262Error: obj should have an own property name at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/obj-id-init-fn-name-class.js-strict:true": "test/language/statements/for-of/dstr/obj-id-init-fn-name-class.js: Test262Error: descriptor value should be cls at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/obj-id-init-fn-name-cover.js-strict:true": "test/language/statements/for-of/dstr/obj-id-init-fn-name-cover.js: Test262Error: obj should have an own property name at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/obj-id-init-fn-name-fn.js-strict:true": "test/language/statements/for-of/dstr/obj-id-init-fn-name-fn.js: Test262Error: obj should have an own property name at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/obj-id-init-let.js-strict:true": "test/language/statements/for-of/dstr/obj-id-init-let.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/obj-id-init-simple-no-strict.js-strict:false": "test/language/statements/for-of/dstr/obj-id-init-simple-no-strict.js: SyntaxError: test/language/statements/for-of/dstr/obj-id-init-simple-no-strict.js: eval is a reserved word in strict mode (27:4)\n  25 |     [...]\n  26 | ---*/\n\u003e 27 | var eval, arguments;\n     |     ^\n  28 | \n  29 | var counter = 0;\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-id-init-yield-ident-valid.js-strict:false": "test/language/statements/for-of/dstr/obj-id-init-yield-ident-valid.js: SyntaxError: test/language/statements/for-of/dstr/obj-id-init-yield-ident-valid.js: Unexpected token (27:4)\n  25 |     [...]\n  26 | ---*/\n\u003e 27 | var yield = 3;\n     |     ^\n  28 | var x;\n  29 | \n  30 | var counter = 0; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-id-put-const.js-strict:true": "test/language/statements/for-of/dstr/obj-id-put-const.js: SyntaxError: test/language/statements/for-of/dstr/obj-id-put-const.js: \"c\" is read-only\n  31 | \n  32 | assert.throws(TypeError, function() {\n\u003e 33 |   for ({ c } of [{ c: 1 }]) {\n     |        ^\n  34 |     counter += 1;\n  35 |   }\n  36 |   counter += 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-id-put-let.js-strict:true": "test/language/statements/for-of/dstr/obj-id-put-let.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/obj-id-put-unresolvable-strict.js-strict:true": "test/language/statements/for-of/dstr/obj-id-put-unresolvable-strict.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/obj-id-simple-no-strict.js-strict:false": "test/language/statements/for-of/dstr/obj-id-simple-no-strict.js: SyntaxError: test/language/statements/for-of/dstr/obj-id-simple-no-strict.js: eval is a reserved word in strict mode (27:4)\n  25 |     [...]\n  26 | ---*/\n\u003e 27 | var eval, arguments;\n     |     ^\n  28 | \n  29 | var counter = 0;\n  30 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-prop-elem-init-fn-name-arrow.js-strict:true": "test/language/statements/for-of/dstr/obj-prop-elem-init-fn-name-arrow.js: Test262Error: obj should have an own property name at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/obj-prop-elem-init-fn-name-class.js-strict:true": "test/language/statements/for-of/dstr/obj-prop-elem-init-fn-name-class.js: Test262Error: descriptor value should be cls at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/obj-prop-elem-init-fn-name-cover.js-strict:true": "test/language/statements/for-of/dstr/obj-prop-elem-init-fn-name-cover.js: Test262Error: obj should have an own property name at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/obj-prop-elem-init-fn-name-fn.js-strict:true": "test/language/statements/for-of/dstr/obj-prop-elem-init-fn-name-fn.js: Test262Error: obj should have an own property name at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/obj-prop-elem-init-let.js-strict:true": "test/language/statements/for-of/dstr/obj-prop-elem-init-let.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/obj-prop-elem-init-yield-ident-valid.js-strict:false": "test/language/statements/for-of/dstr/obj-prop-elem-init-yield-ident-valid.js: SyntaxError: test/language/statements/for-of/dstr/obj-prop-elem-init-yield-ident-valid.js: Unexpected token (27:4)\n  25 |     [...]\n  26 | ---*/\n\u003e 27 | var yield = 4;\n     |     ^\n  28 | var x;\n  29 | \n  30 | var counter = 0; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-prop-elem-target-yield-ident-valid.js-strict:false": "test/language/statements/for-of/dstr/obj-prop-elem-target-yield-ident-valid.js: SyntaxError: test/language/statements/for-of/dstr/obj-prop-elem-target-yield-ident-valid.js: Unexpected token (27:4)\n  25 |     [...]\n  26 | ---*/\n\u003e 27 | var yield = 'prop';\n     |     ^\n  28 | var x = {};\n  29 | \n  30 | var counter = 0; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-prop-nested-array-yield-ident-valid.js-strict:false": "test/language/statements/for-of/dstr/obj-prop-nested-array-yield-ident-valid.js: SyntaxError: test/language/statements/for-of/dstr/obj-prop-nested-array-yield-ident-valid.js: Unexpected token (27:4)\n  25 |     [...]\n  26 | ---*/\n\u003e 27 | var yield = 22;\n     |     ^\n  28 | var x;\n  29 | \n  30 | var counter = 0; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-prop-nested-obj-yield-ident-valid.js-strict:false": "test/language/statements/for-of/dstr/obj-prop-nested-obj-yield-ident-valid.js: SyntaxError: test/language/statements/for-of/dstr/obj-prop-nested-obj-yield-ident-valid.js: Unexpected token (27:4)\n  25 |     [...]\n  26 | ---*/\n\u003e 27 | var yield = 2;\n     |     ^\n  28 | var result, x;\n  29 | \n  30 | var counter = 0; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-prop-put-const.js-strict:true": "test/language/statements/for-of/dstr/obj-prop-put-const.js: SyntaxError: test/language/statements/for-of/dstr/obj-prop-put-const.js: \"c\" is read-only\n  31 | \n  32 | assert.throws(TypeError, function() {\n\u003e 33 |   for ({ a: c } of [{ a: 2 }]) {\n     |        ^\n  34 |     counter += 1;\n  35 |   }\n  36 |   counter += 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-prop-put-let.js-strict:true": "test/language/statements/for-of/dstr/obj-prop-put-let.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/obj-prop-put-unresolvable-strict.js-strict:true": "test/language/statements/for-of/dstr/obj-prop-put-unresolvable-strict.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/obj-rest-computed-property-no-strict.js-strict:false": "test/language/statements/for-of/dstr/obj-rest-computed-property-no-strict.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-computed-property-no-strict.js: Unexpected token (32:13)\n  30 | var counter = 0;\n  31 | \n\u003e 32 | for ({[a]:b, ...rest} of [{ foo: 1, bar: 2, baz: 3 }]) {\n     |              ^\n  33 |   assert.sameValue(b, 1);\n  34 |   assert.sameValue(rest.bar, 2);\n  35 |   assert.sameValue(rest.baz, 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-rest-computed-property.js-strict:true": "test/language/statements/for-of/dstr/obj-rest-computed-property.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-computed-property.js: Unexpected token (34:13)\n  32 | var counter = 0;\n  33 | \n\u003e 34 | for ({[a]:b, ...rest} of [{ foo: 1, bar: 2, baz: 3 }]) {\n     |              ^\n  35 |   assert.sameValue(b, 1);\n  36 |   assert.sameValue(rest.bar, 2);\n  37 |   assert.sameValue(rest.baz, 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-rest-descriptors.js-strict:true": "test/language/statements/for-of/dstr/obj-rest-descriptors.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-descriptors.js: Unexpected token (36:6)\n  34 | var counter = 0;\n  35 | \n\u003e 36 | for ({...rest} of [obj]) {\n     |       ^\n  37 |   verifyProperty(rest, \"a\", {\n  38 |     enumerable: true,\n  39 |     writable: true, at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-rest-empty-obj.js-strict:true": "test/language/statements/for-of/dstr/obj-rest-empty-obj.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-empty-obj.js: Unexpected token (33:6)\n  31 | var counter = 0;\n  32 | \n\u003e 33 | for ({...rest} of [{}]) {\n     |       ^\n  34 |   assert.notSameValue(rest, undefined);\n  35 |   assert.notSameValue(rest, null);\n  36 |   assert.sameValue(typeof rest, \"object\"); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-rest-getter-abrupt-get-error.js-strict:true": "test/language/statements/for-of/dstr/obj-rest-getter-abrupt-get-error.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-getter-abrupt-get-error.js: Unexpected token (34:8)\n  32 | \n  33 | assert.throws(Test262Error, function() {\n\u003e 34 |   for ({...x} of [{ get v() { count++; throw new Test262Error(); } }]) {\n     |         ^\n  35 |     counter += 1;\n  36 |   }\n  37 |   counter += 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-rest-getter.js-strict:true": "test/language/statements/for-of/dstr/obj-rest-getter.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-getter.js: Unexpected token (34:6)\n  32 | var counter = 0;\n  33 | \n\u003e 34 | for ({...x} of [{ get v() { count++; return 2; } }]) {\n     |       ^\n  35 |   assert.sameValue(count, 1);\n  36 | \n  37 |   verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-rest-non-string-computed-property-1.js-strict:true": "test/language/statements/for-of/dstr/obj-rest-non-string-computed-property-1.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-non-string-computed-property-1.js: Unexpected token (34:13)\n  32 | var counter = 0;\n  33 | \n\u003e 34 | for ({[a]:b, ...rest} of [{[a]: 1, bar: 2 }]) {\n     |              ^\n  35 |   assert.sameValue(b, 1);\n  36 | \n  37 |   assert.sameValue(Object.getOwnPropertyDescriptor(rest, \"1\"), undefined); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-rest-non-string-computed-property-1dot.js-strict:true": "test/language/statements/for-of/dstr/obj-rest-non-string-computed-property-1dot.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-non-string-computed-property-1dot.js: Unexpected token (34:13)\n  32 | var counter = 0;\n  33 | \n\u003e 34 | for ({[a]:b, ...rest} of [{[a]: [1], bar: 2 }]) {\n     |              ^\n  35 |   assert.compareArray(b, [1]);\n  36 | \n  37 |   assert.sameValue(Object.getOwnPropertyDescriptor(rest, \"1\"), undefined); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-rest-non-string-computed-property-1dot0.js-strict:true": "test/language/statements/for-of/dstr/obj-rest-non-string-computed-property-1dot0.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-non-string-computed-property-1dot0.js: Unexpected token (34:13)\n  32 | var counter = 0;\n  33 | \n\u003e 34 | for ({[a]:b, ...rest} of [{[a]: 1.0, bar: 2 }]) {\n     |              ^\n  35 |   assert.sameValue(b, 1);\n  36 | \n  37 |   assert.sameValue(Object.getOwnPropertyDescriptor(rest, \"1\"), undefined); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-rest-non-string-computed-property-1e0.js-strict:true": "test/language/statements/for-of/dstr/obj-rest-non-string-computed-property-1e0.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-non-string-computed-property-1e0.js: Unexpected token (34:13)\n  32 | var counter = 0;\n  33 | \n\u003e 34 | for ({[a]:b, ...rest} of [{[a]: 1e0, bar: 2 }]) {\n     |              ^\n  35 |   assert.sameValue(b, 1);\n  36 | \n  37 |   assert.sameValue(Object.getOwnPropertyDescriptor(rest, \"1\"), undefined); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-rest-non-string-computed-property-array-1.js-strict:true": "test/language/statements/for-of/dstr/obj-rest-non-string-computed-property-array-1.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-non-string-computed-property-array-1.js: Unexpected token (34:13)\n  32 | var counter = 0;\n  33 | \n\u003e 34 | for ({[a]:b, ...rest} of [{[a]: [1], bar: 2 }]) {\n     |              ^\n  35 |   assert.compareArray(b, [1]);\n  36 | \n  37 |   assert.sameValue(Object.getOwnPropertyDescriptor(rest, \"1\"), undefined); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-rest-non-string-computed-property-array-1e0.js-strict:true": "test/language/statements/for-of/dstr/obj-rest-non-string-computed-property-array-1e0.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-non-string-computed-property-array-1e0.js: Unexpected token (34:13)\n  32 | var counter = 0;\n  33 | \n\u003e 34 | for ({[a]:b, ...rest} of [{[a]: [1e0], bar: 2 }]) {\n     |              ^\n  35 |   assert.compareArray(b, [1]);\n  36 | \n  37 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-rest-non-string-computed-property-string-1.js-strict:true": "test/language/statements/for-of/dstr/obj-rest-non-string-computed-property-string-1.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-non-string-computed-property-string-1.js: Unexpected token (34:13)\n  32 | var counter = 0;\n  33 | \n\u003e 34 | for ({[a]:b, ...rest} of [{[a]: \"1\", bar: 2 }]) {\n     |              ^\n  35 |   assert.sameValue(b, \"1\");\n  36 | \n  37 |   assert.sameValue(Object.getOwnPropertyDescriptor(rest, \"1\"), undefined); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-rest-number.js-strict:true": "test/language/statements/for-of/dstr/obj-rest-number.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-number.js: Unexpected token (33:6)\n  31 | var counter = 0;\n  32 | \n\u003e 33 | for ({...rest} of [51]) {\n     |       ^\n  34 |   assert.notSameValue(rest, undefined);\n  35 |   assert.notSameValue(rest, null);\n  36 |   assert(rest instanceof Object); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-rest-order.js-strict:true": "test/language/statements/for-of/dstr/obj-rest-order.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-order.js: Unexpected token (37:6)\n  35 | var counter = 0;\n  36 | \n\u003e 37 | for ({...rest} of [o]) {\n     |       ^\n  38 |   assert(compareArray(calls, [1, 'z', 'a', \"Symbol(foo)\"]));\n  39 |   assert.sameValue(Object.keys(rest).length, 3);\n  40 |   counter += 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-rest-put-const.js-strict:true": "test/language/statements/for-of/dstr/obj-rest-put-const.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-put-const.js: Unexpected token (33:8)\n  31 | \n  32 | assert.throws(TypeError, function() {\n\u003e 33 |   for ({...rest} of [{}\n     |         ^\n  34 | ]) {\n  35 |     counter += 1;\n  36 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-rest-same-name.js-strict:true": "test/language/statements/for-of/dstr/obj-rest-same-name.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-same-name.js: Unexpected token (38:10)\n  36 | var counter = 0;\n  37 | \n\u003e 38 | for ({ x, ...z } of [o]) {\n     |           ^\n  39 |   assert.sameValue(x, 42);\n  40 |   assert.sameValue(y, undefined);\n  41 |   assert.sameValue(z.y, 39); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-rest-skip-non-enumerable.js-strict:true": "test/language/statements/for-of/dstr/obj-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-skip-non-enumerable.js: Unexpected token (35:6)\n  33 | var counter = 0;\n  34 | \n\u003e 35 | for ({...rest} of [obj]) {\n     |       ^\n  36 |   assert.sameValue(Object.getOwnPropertyDescriptor(rest, \"x\"), undefined);\n  37 | \n  38 |   verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-rest-str-val.js-strict:true": "test/language/statements/for-of/dstr/obj-rest-str-val.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-str-val.js: Unexpected token (33:6)\n  31 | var counter = 0;\n  32 | \n\u003e 33 | for ({...rest} of [\"foo\"]) {\n     |       ^\n  34 |   assert.sameValue(rest[\"0\"], \"f\");\n  35 |   assert.sameValue(rest[\"1\"], \"o\");\n  36 |   assert.sameValue(rest[\"2\"], \"o\"); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-rest-symbol-val.js-strict:true": "test/language/statements/for-of/dstr/obj-rest-symbol-val.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-symbol-val.js: Unexpected token (33:6)\n  31 | var counter = 0;\n  32 | \n\u003e 33 | for ({...rest} of [Symbol(\"foo\")]) {\n     |       ^\n  34 |   assert.notSameValue(rest, undefined);\n  35 |   assert.notSameValue(rest, null);\n  36 |   assert(rest instanceof Object); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-rest-to-property-with-setter.js-strict:true": "test/language/statements/for-of/dstr/obj-rest-to-property-with-setter.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-to-property-with-setter.js: Unexpected token (40:6)\n  38 | var counter = 0;\n  39 | \n\u003e 40 | for ({...src.y} of [{ x: 1, y: 2}]) {\n     |       ^\n  41 |   assert.sameValue(settedValue.x, 1);\n  42 |   assert.sameValue(settedValue.y, 2);\n  43 |   assert(!executedGetter, \"The property should not be accessed\"); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-rest-to-property.js-strict:true": "test/language/statements/for-of/dstr/obj-rest-to-property.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-to-property.js: Unexpected token (33:6)\n  31 | var counter = 0;\n  32 | \n\u003e 33 | for ({...src.y} of [{ x: 1, y: 2}]) {\n     |       ^\n  34 |   assert.sameValue(src.y.x, 1);\n  35 |   assert.sameValue(src.y.y, 2);\n  36 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-rest-val-null.js-strict:true": "test/language/statements/for-of/dstr/obj-rest-val-null.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-val-null.js: Unexpected token (33:8)\n  31 | \n  32 | assert.throws(TypeError, function() {\n\u003e 33 |   for ({...rest} of [null\n     |         ^\n  34 | ]) {\n  35 |     counter += 1;\n  36 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-rest-val-undefined.js-strict:true": "test/language/statements/for-of/dstr/obj-rest-val-undefined.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-val-undefined.js: Unexpected token (33:8)\n  31 | \n  32 | assert.throws(TypeError, function() {\n\u003e 33 |   for ({...rest} of [undefined\n     |         ^\n  34 | ]) {\n  35 |     counter += 1;\n  36 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/obj-rest-valid-object.js-strict:true": "test/language/statements/for-of/dstr/obj-rest-valid-object.js: SyntaxError: test/language/statements/for-of/dstr/obj-rest-valid-object.js: Unexpected token (34:12)\n  32 | var counter = 0;\n  33 | \n\u003e 34 | for ({a, b, ...rest} of [{x: 1, y: 2, a: 5, b: 3}]) {\n     |             ^\n  35 |   assert.sameValue(rest.a, undefined);\n  36 |   assert.sameValue(rest.b, undefined);\n  37 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/var-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/statements/for-of/dstr/var-ary-ptrn-elem-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/var-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/for-of/dstr/var-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/var-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/statements/for-of/dstr/var-ary-ptrn-elem-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/var-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/statements/for-of/dstr/var-ary-ptrn-elem-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/var-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/for-of/dstr/var-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/for-of/dstr/var-ary-ptrn-rest-ary-elem.js: Unexpected token (72:13)\n  70 | var iterCount = 0;\n  71 | \n\u003e 72 | for (var [...[x, y, z]] of [[3, 4, 5]]) {\n     |              ^\n  73 |   assert.sameValue(x, 3);\n  74 |   assert.sameValue(y, 4);\n  75 |   assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/var-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/for-of/dstr/var-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/for-of/dstr/var-ary-ptrn-rest-ary-rest.js: Unexpected token (53:13)\n  51 | var iterCount = 0;\n  52 | \n\u003e 53 | for (var [...[...x]] of [values]) {\n     |              ^\n  54 |   assert(Array.isArray(x));\n  55 |   assert.sameValue(x.length, 3);\n  56 |   assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/var-ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/for-of/dstr/var-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/for-of/dstr/var-ary-ptrn-rest-obj-id.js: Unexpected token (52:13)\n  50 | var iterCount = 0;\n  51 | \n\u003e 52 | for (var [...{ length }] of [[1, 2, 3]]) {\n     |              ^\n  53 |   assert.sameValue(length, 3);\n  54 | \n  55 |   iterCount += 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/var-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/for-of/dstr/var-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/for-of/dstr/var-ary-ptrn-rest-obj-prop-id.js: Unexpected token (53:13)\n  51 | var iterCount = 0;\n  52 | \n\u003e 53 | for (var [...{ 0: v, 1: w, 2: x, 3: y, length: z }] of [[7, 8, 9]]) {\n     |              ^\n  54 |   assert.sameValue(v, 7);\n  55 |   assert.sameValue(w, 8);\n  56 |   assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/var-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/statements/for-of/dstr/var-obj-ptrn-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/var-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/for-of/dstr/var-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/var-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/statements/for-of/dstr/var-obj-ptrn-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/var-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/statements/for-of/dstr/var-obj-ptrn-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/dstr/var-obj-ptrn-rest-getter.js-strict:true": "test/language/statements/for-of/dstr/var-obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/for-of/dstr/var-obj-ptrn-rest-getter.js: Unexpected token (41:10)\n  39 | var iterCount = 0;\n  40 | \n\u003e 41 | for (var {...x} of [{ get v() { count++; return 2; } }]) {\n     |           ^\n  42 |   assert.sameValue(count, 1);\n  43 | \n  44 |   verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/var-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/for-of/dstr/var-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/for-of/dstr/var-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (42:10)\n  40 | var iterCount = 0;\n  41 | \n\u003e 42 | for (var {...rest} of [o]) {\n     |           ^\n  43 |   assert.sameValue(rest.x, undefined);\n  44 | \n  45 |   verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/dstr/var-obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/for-of/dstr/var-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/for-of/dstr/var-obj-ptrn-rest-val-obj.js: Unexpected token (40:16)\n  38 | var iterCount = 0;\n  39 | \n\u003e 40 | for (var {a, b, ...rest} of [{x: 1, y: 2, a: 5, b: 3}]) {\n     |                 ^\n  41 |   assert.sameValue(rest.a, undefined);\n  42 |   assert.sameValue(rest.b, undefined);\n  43 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for-of/escaped-of.js-strict:true": "test/language/statements/for-of/escaped-of.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/head-const-bound-names-dup.js-strict:true": "test/language/statements/for-of/head-const-bound-names-dup.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/statements/for-of/head-const-bound-names-fordecl-tdz.js-strict:true": "test/language/statements/for-of/head-const-bound-names-fordecl-tdz.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/head-const-bound-names-in-stmt.js-strict:true": "test/language/statements/for-of/head-const-bound-names-in-stmt.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/head-decl-no-expr.js-strict:true": "test/language/statements/for-of/head-decl-no-expr.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/head-expr-no-expr.js-strict:true": "test/language/statements/for-of/head-expr-no-expr.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/head-let-bound-names-dup.js-strict:true": "test/language/statements/for-of/head-let-bound-names-dup.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/statements/for-of/head-let-bound-names-fordecl-tdz.js-strict:true": "test/language/statements/for-of/head-let-bound-names-fordecl-tdz.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/head-let-bound-names-in-stmt.js-strict:true": "test/language/statements/for-of/head-let-bound-names-in-stmt.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/head-var-init.js-strict:true": "test/language/statements/for-of/head-var-init.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/head-var-no-expr.js-strict:true": "test/language/statements/for-of/head-var-no-expr.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/iterator-close-non-object.js-strict:true": "test/language/statements/for-of/iterator-close-non-object.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/iterator-close-non-throw-get-method-abrupt.js-strict:true": "test/language/statements/for-of/iterator-close-non-throw-get-method-abrupt.js: Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/iterator-close-non-throw-get-method-is-null.js-strict:true": "test/language/statements/for-of/iterator-close-non-throw-get-method-is-null.js: Test262Error: Expected SameValue(«0», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/iterator-close-non-throw-get-method-non-callable.js-strict:true": "test/language/statements/for-of/iterator-close-non-throw-get-method-non-callable.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/iterator-close-throw-get-method-abrupt.js-strict:true": "panic while running test/language/statements/for-of/iterator-close-throw-get-method-abrupt.js: [object Object]",
  "test/language/statements/for-of/iterator-close-throw-get-method-non-callable.js-strict:true": "panic while running test/language/statements/for-of/iterator-close-throw-get-method-non-callable.js: str is not a method",
  "test/language/statements/for-of/iterator-close-via-break.js-strict:true": "test/language/statements/for-of/iterator-close-via-break.js: Test262Error: Iterator is closed after `break` statement Expected SameValue(«0», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/iterator-close-via-continue.js-strict:true": "test/language/statements/for-of/iterator-close-via-continue.js: Test262Error: Iterator is closed after `continue` statement Expected SameValue(«0», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/iterator-close-via-return.js-strict:true": "test/language/statements/for-of/iterator-close-via-return.js: Test262Error: Iterator is closed after `return` statement Expected SameValue(«0», «1») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/iterator-next-error.js-strict:true": "test/language/statements/for-of/iterator-next-error.js: Test262Error: Iterator is not closed. Expected SameValue(«1», «0») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/iterator-next-reference.js-strict:true": "test/language/statements/for-of/iterator-next-reference.js: Test262Error: Should not access the `next` method after the iteration prologue. at get (test/language/statements/for-of/iterator-next-reference.js:35:13(4))",
  "test/language/statements/for-of/iterator-next-result-value-attr-error.js-strict:true": "test/language/statements/for-of/iterator-next-result-value-attr-error.js: Test262Error: Iterator is not closed. Expected SameValue(«1», «0») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/labelled-fn-stmt-const.js-strict:true": "test/language/statements/for-of/labelled-fn-stmt-const.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/labelled-fn-stmt-let.js-strict:true": "test/language/statements/for-of/labelled-fn-stmt-let.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/labelled-fn-stmt-lhs.js-strict:true": "test/language/statements/for-of/labelled-fn-stmt-lhs.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/labelled-fn-stmt-var.js-strict:true": "test/language/statements/for-of/labelled-fn-stmt-var.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/let-array-with-newline.js-strict:false": "test/language/statements/for-of/let-array-with-newline.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/scope-body-lex-open.js-strict:true": "test/language/statements/for-of/scope-body-lex-open.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/scope-head-lex-close.js-strict:true": "test/language/statements/for-of/scope-head-lex-close.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/scope-head-lex-open.js-strict:true": "test/language/statements/for-of/scope-head-lex-open.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for-of/scope-head-var-none.js-strict:false": "test/language/statements/for-of/scope-head-var-none.js: ReferenceError: let is not defined at test/language/statements/for-of/scope-head-var-none.js:35:5(23)",
  "test/language/statements/for/decl-fun.js-strict:true": "test/language/statements/for/decl-fun.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for/dstr/const-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/statements/for/dstr/const-ary-init-iter-get-err-array-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for/dstr/const-ary-ptrn-elem-ary-elem-init.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-elem-ary-elem-init.js: ReferenceError: x is not defined at test/language/statements/for/dstr/const-ary-ptrn-elem-ary-elem-init.js:55:21(23)",
  "test/language/statements/for/dstr/const-ary-ptrn-elem-ary-elem-iter.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-elem-ary-elem-iter.js: ReferenceError: x is not defined at test/language/statements/for/dstr/const-ary-ptrn-elem-ary-elem-iter.js:56:21(23)",
  "test/language/statements/for/dstr/const-ary-ptrn-elem-ary-rest-init.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-elem-ary-rest-init.js: ReferenceError: x is not defined at test/language/statements/for/dstr/const-ary-ptrn-elem-ary-rest-init.js:56:25(30)",
  "test/language/statements/for/dstr/const-ary-ptrn-elem-ary-rest-iter.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-elem-ary-rest-iter.js: ReferenceError: x is not defined at test/language/statements/for/dstr/const-ary-ptrn-elem-ary-rest-iter.js:58:25(35)",
  "test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-exhausted.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-exhausted.js: ReferenceError: x is not defined at test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-exhausted.js:56:21(16)",
  "test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-fn-name-arrow.js: ReferenceError: arrow is not defined at test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-fn-name-arrow.js:57:21(16)",
  "test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-fn-name-class.js: ReferenceError: cls is not defined at test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-fn-name-class.js:57:21(28)",
  "test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-fn-name-cover.js: ReferenceError: cover is not defined at test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-fn-name-cover.js:57:21(16)",
  "test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-fn-name-fn.js: ReferenceError: fn is not defined at test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-fn-name-fn.js:57:21(16)",
  "test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-hole.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-hole.js: ReferenceError: x is not defined at test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-hole.js:51:21(16)",
  "test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-skipped.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-skipped.js: ReferenceError: w is not defined at test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-skipped.js:57:20(26)",
  "test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-undef.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-undef.js: ReferenceError: x is not defined at test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-undef.js:55:21(16)",
  "test/language/statements/for/dstr/const-ary-ptrn-elem-id-iter-complete.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-elem-id-iter-complete.js: ReferenceError: x is not defined at test/language/statements/for/dstr/const-ary-ptrn-elem-id-iter-complete.js:59:21(16)",
  "test/language/statements/for/dstr/const-ary-ptrn-elem-id-iter-done.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-elem-id-iter-done.js: ReferenceError: x is not defined at test/language/statements/for/dstr/const-ary-ptrn-elem-id-iter-done.js:54:21(16)",
  "test/language/statements/for/dstr/const-ary-ptrn-elem-obj-id-init.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-elem-obj-id-init.js: ReferenceError: x is not defined at test/language/statements/for/dstr/const-ary-ptrn-elem-obj-id-init.js:55:21(16)",
  "test/language/statements/for/dstr/const-ary-ptrn-elem-obj-id.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-elem-obj-id.js: ReferenceError: x is not defined at test/language/statements/for/dstr/const-ary-ptrn-elem-obj-id.js:55:21(16)",
  "test/language/statements/for/dstr/const-ary-ptrn-elem-obj-prop-id-init.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-elem-obj-prop-id-init.js: ReferenceError: v is not defined at test/language/statements/for/dstr/const-ary-ptrn-elem-obj-prop-id-init.js:55:20(16)",
  "test/language/statements/for/dstr/const-ary-ptrn-elem-obj-prop-id.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-elem-obj-prop-id.js: ReferenceError: v is not defined at test/language/statements/for/dstr/const-ary-ptrn-elem-obj-prop-id.js:55:20(16)",
  "test/language/statements/for/dstr/const-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/for/dstr/const-ary-ptrn-rest-ary-elem.js: Unexpected token (75:15)\n  73 | var iterCount = 0;\n  74 | \n\u003e 75 | for (const [...[x, y, z]] = [3, 4, 5]; iterCount \u003c 1; ) {\n     |                ^\n  76 |   assert.sameValue(x, 3);\n  77 |   assert.sameValue(y, 4);\n  78 |   assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/const-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/for/dstr/const-ary-ptrn-rest-ary-rest.js: Unexpected token (56:15)\n  54 | var iterCount = 0;\n  55 | \n\u003e 56 | for (const [...[...x]] = values; iterCount \u003c 1; ) {\n     |                ^\n  57 |   assert(Array.isArray(x));\n  58 |   assert.sameValue(x.length, 3);\n  59 |   assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/const-ary-ptrn-rest-id-exhausted.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-rest-id-exhausted.js: ReferenceError: x is not defined at test/language/statements/for/dstr/const-ary-ptrn-rest-id-exhausted.js:54:25(17)",
  "test/language/statements/for/dstr/const-ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/for/dstr/const-ary-ptrn-rest-obj-id.js: Unexpected token (55:15)\n  53 | var iterCount = 0;\n  54 | \n\u003e 55 | for (const [...{ length }] = [1, 2, 3]; iterCount \u003c 1; ) {\n     |                ^\n  56 |   assert.sameValue(length, 3);\n  57 | \n  58 |   iterCount += 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/const-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/for/dstr/const-ary-ptrn-rest-obj-prop-id.js: Unexpected token (56:15)\n  54 | var iterCount = 0;\n  55 | \n\u003e 56 | for (const [...{ 0: v, 1: w, 2: x, 3: y, length: z }] = [7, 8, 9]; iterCount \u003c 1; ) {\n     |                ^\n  57 |   assert.sameValue(v, 7);\n  58 |   assert.sameValue(w, 8);\n  59 |   assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/const-obj-init-undefined.js-strict:true": "test/language/statements/for/dstr/const-obj-init-undefined.js: TypeError: test/language/statements/for/dstr/const-obj-init-undefined.js: Property init of ForStatement expected node to be of a type [\"VariableDeclaration\",\"Expression\"] but instead got \"ExpressionStatement\" at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/const-obj-ptrn-empty.js-strict:true": "test/language/statements/for/dstr/const-obj-ptrn-empty.js: TypeError: test/language/statements/for/dstr/const-obj-ptrn-empty.js: Property init of ForStatement expected node to be of a type [\"VariableDeclaration\",\"Expression\"] but instead got \"ExpressionStatement\" at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/const-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/statements/for/dstr/const-obj-ptrn-id-init-fn-name-arrow.js: ReferenceError: arrow is not defined at test/language/statements/for/dstr/const-obj-ptrn-id-init-fn-name-arrow.js:56:21(16)",
  "test/language/statements/for/dstr/const-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/for/dstr/const-obj-ptrn-id-init-fn-name-class.js: ReferenceError: cls is not defined at test/language/statements/for/dstr/const-obj-ptrn-id-init-fn-name-class.js:56:21(28)",
  "test/language/statements/for/dstr/const-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/statements/for/dstr/const-obj-ptrn-id-init-fn-name-cover.js: ReferenceError: cover is not defined at test/language/statements/for/dstr/const-obj-ptrn-id-init-fn-name-cover.js:56:21(16)",
  "test/language/statements/for/dstr/const-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/statements/for/dstr/const-obj-ptrn-id-init-fn-name-fn.js: ReferenceError: fn is not defined at test/language/statements/for/dstr/const-obj-ptrn-id-init-fn-name-fn.js:56:21(16)",
  "test/language/statements/for/dstr/const-obj-ptrn-id-init-skipped.js-strict:true": "test/language/statements/for/dstr/const-obj-ptrn-id-init-skipped.js: ReferenceError: w is not defined at test/language/statements/for/dstr/const-obj-ptrn-id-init-skipped.js:56:20(26)",
  "test/language/statements/for/dstr/const-obj-ptrn-id-trailing-comma.js-strict:true": "test/language/statements/for/dstr/const-obj-ptrn-id-trailing-comma.js: ReferenceError: x is not defined at test/language/statements/for/dstr/const-obj-ptrn-id-trailing-comma.js:50:22(16)",
  "test/language/statements/for/dstr/const-obj-ptrn-prop-ary-init.js-strict:true": "test/language/statements/for/dstr/const-obj-ptrn-prop-ary-init.js: ReferenceError: x is not defined at test/language/statements/for/dstr/const-obj-ptrn-prop-ary-init.js:53:21(23)",
  "test/language/statements/for/dstr/const-obj-ptrn-prop-ary-trailing-comma.js-strict:true": "test/language/statements/for/dstr/const-obj-ptrn-prop-ary-trailing-comma.js: ReferenceError: y is not defined at test/language/statements/for/dstr/const-obj-ptrn-prop-ary-trailing-comma.js:50:22(23)",
  "test/language/statements/for/dstr/const-obj-ptrn-prop-ary.js-strict:true": "test/language/statements/for/dstr/const-obj-ptrn-prop-ary.js: ReferenceError: x is not defined at test/language/statements/for/dstr/const-obj-ptrn-prop-ary.js:51:21(23)",
  "test/language/statements/for/dstr/const-obj-ptrn-prop-id-init-skipped.js-strict:true": "test/language/statements/for/dstr/const-obj-ptrn-prop-id-init-skipped.js: ReferenceError: t is not defined at test/language/statements/for/dstr/const-obj-ptrn-prop-id-init-skipped.js:55:20(26)",
  "test/language/statements/for/dstr/const-obj-ptrn-prop-id-init.js-strict:true": "test/language/statements/for/dstr/const-obj-ptrn-prop-id-init.js: ReferenceError: y is not defined at test/language/statements/for/dstr/const-obj-ptrn-prop-id-init.js:50:20(16)",
  "test/language/statements/for/dstr/const-obj-ptrn-prop-id-trailing-comma.js-strict:true": "test/language/statements/for/dstr/const-obj-ptrn-prop-id-trailing-comma.js: ReferenceError: y is not defined at test/language/statements/for/dstr/const-obj-ptrn-prop-id-trailing-comma.js:50:22(16)",
  "test/language/statements/for/dstr/const-obj-ptrn-prop-id.js-strict:true": "test/language/statements/for/dstr/const-obj-ptrn-prop-id.js: ReferenceError: y is not defined at test/language/statements/for/dstr/const-obj-ptrn-prop-id.js:50:20(16)",
  "test/language/statements/for/dstr/const-obj-ptrn-prop-obj-init.js-strict:true": "test/language/statements/for/dstr/const-obj-ptrn-prop-obj-init.js: ReferenceError: x is not defined at test/language/statements/for/dstr/const-obj-ptrn-prop-obj-init.js:53:21(16)",
  "test/language/statements/for/dstr/const-obj-ptrn-prop-obj.js-strict:true": "test/language/statements/for/dstr/const-obj-ptrn-prop-obj.js: ReferenceError: x is not defined at test/language/statements/for/dstr/const-obj-ptrn-prop-obj.js:51:21(16)",
  "test/language/statements/for/dstr/const-obj-ptrn-rest-getter.js-strict:true": "test/language/statements/for/dstr/const-obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/for/dstr/const-obj-ptrn-rest-getter.js: Unexpected token (44:12)\n  42 | var iterCount = 0;\n  43 | \n\u003e 44 | for (const {...x} = { get v() { count++; return 2; } }; iterCount \u003c 1; ) {\n     |             ^\n  45 |   assert.sameValue(count, 1);\n  46 | \n  47 |   verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/const-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/for/dstr/const-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/for/dstr/const-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (45:12)\n  43 | var iterCount = 0;\n  44 | \n\u003e 45 | for (const {...rest} = o; iterCount \u003c 1; ) {\n     |             ^\n  46 |   assert.sameValue(rest.x, undefined);\n  47 | \n  48 |   verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/const-obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/for/dstr/const-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/for/dstr/const-obj-ptrn-rest-val-obj.js: Unexpected token (43:18)\n  41 | var iterCount = 0;\n  42 | \n\u003e 43 | for (const {a, b, ...rest} = {x: 1, y: 2, a: 5, b: 3}; iterCount \u003c 1; ) {\n     |                   ^\n  44 |   assert.sameValue(rest.a, undefined);\n  45 |   assert.sameValue(rest.b, undefined);\n  46 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/let-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/statements/for/dstr/let-ary-init-iter-get-err-array-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/for/dstr/let-ary-ptrn-elem-ary-elem-init.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-elem-ary-elem-init.js: ReferenceError: x is not defined at test/language/statements/for/dstr/let-ary-ptrn-elem-ary-elem-init.js:55:21(23)",
  "test/language/statements/for/dstr/let-ary-ptrn-elem-ary-elem-iter.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-elem-ary-elem-iter.js: ReferenceError: x is not defined at test/language/statements/for/dstr/let-ary-ptrn-elem-ary-elem-iter.js:56:21(23)",
  "test/language/statements/for/dstr/let-ary-ptrn-elem-ary-rest-init.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-elem-ary-rest-init.js: ReferenceError: x is not defined at test/language/statements/for/dstr/let-ary-ptrn-elem-ary-rest-init.js:56:25(30)",
  "test/language/statements/for/dstr/let-ary-ptrn-elem-ary-rest-iter.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-elem-ary-rest-iter.js: ReferenceError: x is not defined at test/language/statements/for/dstr/let-ary-ptrn-elem-ary-rest-iter.js:58:25(35)",
  "test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-exhausted.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-exhausted.js: ReferenceError: x is not defined at test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-exhausted.js:56:21(16)",
  "test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-fn-name-arrow.js: ReferenceError: arrow is not defined at test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-fn-name-arrow.js:57:21(16)",
  "test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-fn-name-class.js: ReferenceError: cls is not defined at test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-fn-name-class.js:57:21(28)",
  "test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-fn-name-cover.js: ReferenceError: cover is not defined at test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-fn-name-cover.js:57:21(16)",
  "test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-fn-name-fn.js: ReferenceError: fn is not defined at test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-fn-name-fn.js:57:21(16)",
  "test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-hole.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-hole.js: ReferenceError: x is not defined at test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-hole.js:51:21(16)",
  "test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-skipped.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-skipped.js: ReferenceError: w is not defined at test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-skipped.js:57:20(26)",
  "test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-undef.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-undef.js: ReferenceError: x is not defined at test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-undef.js:55:21(16)",
  "test/language/statements/for/dstr/let-ary-ptrn-elem-id-iter-complete.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-elem-id-iter-complete.js: ReferenceError: x is not defined at test/language/statements/for/dstr/let-ary-ptrn-elem-id-iter-complete.js:59:21(16)",
  "test/language/statements/for/dstr/let-ary-ptrn-elem-id-iter-done.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-elem-id-iter-done.js: ReferenceError: x is not defined at test/language/statements/for/dstr/let-ary-ptrn-elem-id-iter-done.js:54:21(16)",
  "test/language/statements/for/dstr/let-ary-ptrn-elem-obj-id-init.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-elem-obj-id-init.js: ReferenceError: x is not defined at test/language/statements/for/dstr/let-ary-ptrn-elem-obj-id-init.js:55:21(16)",
  "test/language/statements/for/dstr/let-ary-ptrn-elem-obj-id.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-elem-obj-id.js: ReferenceError: x is not defined at test/language/statements/for/dstr/let-ary-ptrn-elem-obj-id.js:55:21(16)",
  "test/language/statements/for/dstr/let-ary-ptrn-elem-obj-prop-id-init.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-elem-obj-prop-id-init.js: ReferenceError: v is not defined at test/language/statements/for/dstr/let-ary-ptrn-elem-obj-prop-id-init.js:55:20(16)",
  "test/language/statements/for/dstr/let-ary-ptrn-elem-obj-prop-id.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-elem-obj-prop-id.js: ReferenceError: v is not defined at test/language/statements/for/dstr/let-ary-ptrn-elem-obj-prop-id.js:55:20(16)",
  "test/language/statements/for/dstr/let-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/for/dstr/let-ary-ptrn-rest-ary-elem.js: Unexpected token (75:13)\n  73 | var iterCount = 0;\n  74 | \n\u003e 75 | for (let [...[x, y, z]] = [3, 4, 5]; iterCount \u003c 1; ) {\n     |              ^\n  76 |   assert.sameValue(x, 3);\n  77 |   assert.sameValue(y, 4);\n  78 |   assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/let-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/for/dstr/let-ary-ptrn-rest-ary-rest.js: Unexpected token (56:13)\n  54 | var iterCount = 0;\n  55 | \n\u003e 56 | for (let [...[...x]] = values; iterCount \u003c 1; ) {\n     |              ^\n  57 |   assert(Array.isArray(x));\n  58 |   assert.sameValue(x.length, 3);\n  59 |   assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/let-ary-ptrn-rest-id-exhausted.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-rest-id-exhausted.js: ReferenceError: x is not defined at test/language/statements/for/dstr/let-ary-ptrn-rest-id-exhausted.js:54:25(17)",
  "test/language/statements/for/dstr/let-ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/for/dstr/let-ary-ptrn-rest-obj-id.js: Unexpected token (55:13)\n  53 | var iterCount = 0;\n  54 | \n\u003e 55 | for (let [...{ length }] = [1, 2, 3]; iterCount \u003c 1; ) {\n     |              ^\n  56 |   assert.sameValue(length, 3);\n  57 | \n  58 |   iterCount += 1; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/let-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/for/dstr/let-ary-ptrn-rest-obj-prop-id.js: Unexpected token (56:13)\n  54 | var iterCount = 0;\n  55 | \n\u003e 56 | for (let [...{ 0: v, 1: w, 2: x, 3: y, length: z }] = [7, 8, 9]; iterCount \u003c 1; ) {\n     |              ^\n  57 |   assert.sameValue(v, 7);\n  58 |   assert.sameValue(w, 8);\n  59 |   assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/let-obj-init-undefined.js-strict:true": "test/language/statements/for/dstr/let-obj-init-undefined.js: TypeError: test/language/statements/for/dstr/let-obj-init-undefined.js: Property init of ForStatement expected node to be of a type [\"VariableDeclaration\",\"Expression\"] but instead got \"ExpressionStatement\" at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/let-obj-ptrn-empty.js-strict:true": "test/language/statements/for/dstr/let-obj-ptrn-empty.js: TypeError: test/language/statements/for/dstr/let-obj-ptrn-empty.js: Property init of ForStatement expected node to be of a type [\"VariableDeclaration\",\"Expression\"] but instead got \"ExpressionStatement\" at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/let-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/statements/for/dstr/let-obj-ptrn-id-init-fn-name-arrow.js: ReferenceError: arrow is not defined at test/language/statements/for/dstr/let-obj-ptrn-id-init-fn-name-arrow.js:56:21(16)",
  "test/language/statements/for/dstr/let-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/for/dstr/let-obj-ptrn-id-init-fn-name-class.js: ReferenceError: cls is not defined at test/language/statements/for/dstr/let-obj-ptrn-id-init-fn-name-class.js:56:21(28)",
  "test/language/statements/for/dstr/let-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/statements/for/dstr/let-obj-ptrn-id-init-fn-name-cover.js: ReferenceError: cover is not defined at test/language/statements/for/dstr/let-obj-ptrn-id-init-fn-name-cover.js:56:21(16)",
  "test/language/statements/for/dstr/let-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/statements/for/dstr/let-obj-ptrn-id-init-fn-name-fn.js: ReferenceError: fn is not defined at test/language/statements/for/dstr/let-obj-ptrn-id-init-fn-name-fn.js:56:21(16)",
  "test/language/statements/for/dstr/let-obj-ptrn-id-init-skipped.js-strict:true": "test/language/statements/for/dstr/let-obj-ptrn-id-init-skipped.js: ReferenceError: w is not defined at test/language/statements/for/dstr/let-obj-ptrn-id-init-skipped.js:56:20(26)",
  "test/language/statements/for/dstr/let-obj-ptrn-id-trailing-comma.js-strict:true": "test/language/statements/for/dstr/let-obj-ptrn-id-trailing-comma.js: ReferenceError: x is not defined at test/language/statements/for/dstr/let-obj-ptrn-id-trailing-comma.js:50:22(16)",
  "test/language/statements/for/dstr/let-obj-ptrn-prop-ary-init.js-strict:true": "test/language/statements/for/dstr/let-obj-ptrn-prop-ary-init.js: ReferenceError: x is not defined at test/language/statements/for/dstr/let-obj-ptrn-prop-ary-init.js:53:21(23)",
  "test/language/statements/for/dstr/let-obj-ptrn-prop-ary-trailing-comma.js-strict:true": "test/language/statements/for/dstr/let-obj-ptrn-prop-ary-trailing-comma.js: ReferenceError: y is not defined at test/language/statements/for/dstr/let-obj-ptrn-prop-ary-trailing-comma.js:50:22(23)",
  "test/language/statements/for/dstr/let-obj-ptrn-prop-ary.js-strict:true": "test/language/statements/for/dstr/let-obj-ptrn-prop-ary.js: ReferenceError: x is not defined at test/language/statements/for/dstr/let-obj-ptrn-prop-ary.js:51:21(23)",
  "test/language/statements/for/dstr/let-obj-ptrn-prop-id-init-skipped.js-strict:true": "test/language/statements/for/dstr/let-obj-ptrn-prop-id-init-skipped.js: ReferenceError: t is not defined at test/language/statements/for/dstr/let-obj-ptrn-prop-id-init-skipped.js:55:20(26)",
  "test/language/statements/for/dstr/let-obj-ptrn-prop-id-init.js-strict:true": "test/language/statements/for/dstr/let-obj-ptrn-prop-id-init.js: ReferenceError: y is not defined at test/language/statements/for/dstr/let-obj-ptrn-prop-id-init.js:50:20(16)",
  "test/language/statements/for/dstr/let-obj-ptrn-prop-id-trailing-comma.js-strict:true": "test/language/statements/for/dstr/let-obj-ptrn-prop-id-trailing-comma.js: ReferenceError: y is not defined at test/language/statements/for/dstr/let-obj-ptrn-prop-id-trailing-comma.js:50:22(16)",
  "test/language/statements/for/dstr/let-obj-ptrn-prop-id.js-strict:true": "test/language/statements/for/dstr/let-obj-ptrn-prop-id.js: ReferenceError: y is not defined at test/language/statements/for/dstr/let-obj-ptrn-prop-id.js:50:20(16)",
  "test/language/statements/for/dstr/let-obj-ptrn-prop-obj-init.js-strict:true": "test/language/statements/for/dstr/let-obj-ptrn-prop-obj-init.js: ReferenceError: x is not defined at test/language/statements/for/dstr/let-obj-ptrn-prop-obj-init.js:53:21(16)",
  "test/language/statements/for/dstr/let-obj-ptrn-prop-obj.js-strict:true": "test/language/statements/for/dstr/let-obj-ptrn-prop-obj.js: ReferenceError: x is not defined at test/language/statements/for/dstr/let-obj-ptrn-prop-obj.js:51:21(16)",
  "test/language/statements/for/dstr/let-obj-ptrn-rest-getter.js-strict:true": "test/language/statements/for/dstr/let-obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/for/dstr/let-obj-ptrn-rest-getter.js: Unexpected token (44:10)\n  42 | var iterCount = 0;\n  43 | \n\u003e 44 | for (let {...x} = { get v() { count++; return 2; } }; iterCount \u003c 1; ) {\n     |           ^\n  45 |   assert.sameValue(count, 1);\n  46 | \n  47 |   verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/let-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/for/dstr/let-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/for/dstr/let-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (45:10)\n  43 | var iterCount = 0;\n  44 | \n\u003e 45 | for (let {...rest} = o; iterCount \u003c 1; ) {\n     |           ^\n  46 |   assert.sameValue(rest.x, undefined);\n  47 | \n  48 |   verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/let-obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/for/dstr/let-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/for/dstr/let-obj-ptrn-rest-val-obj.js: Unexpected token (43:16)\n  41 | var iterCount = 0;\n  42 | \n\u003e 43 | for (let {a, b, ...rest} = {x: 1, y: 2, a: 5, b: 3}; iterCount \u003c 1; ) {\n     |                 ^\n  44 |   assert.sameValue(rest.a, undefined);\n  45 |   assert.sameValue(rest.b, undefined);\n  46 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/var-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/statements/for/dstr/var-ary-init-iter-get-err-array-prototype.js: Test262Error: Expected a TypeError but got a ReferenceError at harness/sta.js:22:9(49)",
  "test/language/statements/for/dstr/var-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/statements/for/dstr/var-ary-ptrn-elem-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for/dstr/var-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/for/dstr/var-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for/dstr/var-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/statements/for/dstr/var-ary-ptrn-elem-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for/dstr/var-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/statements/for/dstr/var-ary-ptrn-elem-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for/dstr/var-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/for/dstr/var-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/for/dstr/var-ary-ptrn-rest-ary-elem.js: Unexpected token (69:13)\n  67 | var iterCount = 0;\n  68 | \n\u003e 69 | for (var [...[x, y, z]] = [3, 4, 5]; iterCount \u003c 1; ) {\n     |              ^\n  70 |   assert.sameValue(x, 3);\n  71 |   assert.sameValue(y, 4);\n  72 |   assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/var-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/for/dstr/var-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/for/dstr/var-ary-ptrn-rest-ary-rest.js: Unexpected token (50:13)\n  48 | var iterCount = 0;\n  49 | \n\u003e 50 | for (var [...[...x]] = values; iterCount \u003c 1; ) {\n     |              ^\n  51 |   assert(Array.isArray(x));\n  52 |   assert.sameValue(x.length, 3);\n  53 |   assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/var-ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/for/dstr/var-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/for/dstr/var-ary-ptrn-rest-obj-id.js: Unexpected token (49:13)\n  47 | var iterCount = 0;\n  48 | \n\u003e 49 | for (var [...{ length }] = [1, 2, 3]; iterCount \u003c 1; ) {\n     |              ^\n  50 |   assert.sameValue(length, 3);\n  51 |   iterCount += 1;\n  52 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/var-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/for/dstr/var-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/for/dstr/var-ary-ptrn-rest-obj-prop-id.js: Unexpected token (50:13)\n  48 | var iterCount = 0;\n  49 | \n\u003e 50 | for (var [...{ 0: v, 1: w, 2: x, 3: y, length: z }] = [7, 8, 9]; iterCount \u003c 1; ) {\n     |              ^\n  51 |   assert.sameValue(v, 7);\n  52 |   assert.sameValue(w, 8);\n  53 |   assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/var-obj-init-undefined.js-strict:true": "test/language/statements/for/dstr/var-obj-init-undefined.js: TypeError: test/language/statements/for/dstr/var-obj-init-undefined.js: Property init of ForStatement expected node to be of a type [\"VariableDeclaration\",\"Expression\"] but instead got \"ExpressionStatement\" at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/var-obj-ptrn-empty.js-strict:true": "test/language/statements/for/dstr/var-obj-ptrn-empty.js: TypeError: test/language/statements/for/dstr/var-obj-ptrn-empty.js: Property init of ForStatement expected node to be of a type [\"VariableDeclaration\",\"Expression\"] but instead got \"ExpressionStatement\" at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/var-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/statements/for/dstr/var-obj-ptrn-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for/dstr/var-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/for/dstr/var-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for/dstr/var-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/statements/for/dstr/var-obj-ptrn-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for/dstr/var-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/statements/for/dstr/var-obj-ptrn-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/for/dstr/var-obj-ptrn-rest-getter.js-strict:true": "test/language/statements/for/dstr/var-obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/for/dstr/var-obj-ptrn-rest-getter.js: Unexpected token (38:10)\n  36 | var iterCount = 0;\n  37 | \n\u003e 38 | for (var {...x} = { get v() { count++; return 2; } }; iterCount \u003c 1; ) {\n     |           ^\n  39 |   assert.sameValue(count, 1);\n  40 | \n  41 |   verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/var-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/for/dstr/var-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/for/dstr/var-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (39:10)\n  37 | var iterCount = 0;\n  38 | \n\u003e 39 | for (var {...rest} = o; iterCount \u003c 1; ) {\n     |           ^\n  40 |   assert.sameValue(rest.x, undefined);\n  41 | \n  42 |   verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/dstr/var-obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/for/dstr/var-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/for/dstr/var-obj-ptrn-rest-val-obj.js: Unexpected token (37:16)\n  35 | var iterCount = 0;\n  36 | \n\u003e 37 | for (var {a, b, ...rest} = {x: 1, y: 2, a: 5, b: 3}; iterCount \u003c 1; ) {\n     |                 ^\n  38 |   assert.sameValue(rest.a, undefined);\n  39 |   assert.sameValue(rest.b, undefined);\n  40 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/for/head-let-bound-names-in-stmt.js-strict:true": "test/language/statements/for/head-let-bound-names-in-stmt.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for/labelled-fn-stmt-expr.js-strict:true": "test/language/statements/for/labelled-fn-stmt-expr.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for/labelled-fn-stmt-let.js-strict:true": "test/language/statements/for/labelled-fn-stmt-let.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for/labelled-fn-stmt-var.js-strict:true": "test/language/statements/for/labelled-fn-stmt-var.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for/let-array-with-newline.js-strict:false": "test/language/statements/for/let-array-with-newline.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for/scope-body-lex-open.js-strict:true": "test/language/statements/for/scope-body-lex-open.js: Test262Error: Expected SameValue(«inside», «outside») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/function/arguments-with-arguments-fn.js-strict:false": "test/language/statements/function/arguments-with-arguments-fn.js: SyntaxError: test/language/statements/function/arguments-with-arguments-fn.js: arguments is a reserved word in strict mode (24:11)\n  22 | \n  23 | function f(x = args = arguments) {\n\u003e 24 |   function arguments() {}\n     |            ^\n  25 | }\n  26 | \n  27 | f(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/function/arguments-with-arguments-lex.js-strict:false": "test/language/statements/function/arguments-with-arguments-lex.js: SyntaxError: test/language/statements/function/arguments-with-arguments-lex.js: arguments is a reserved word in strict mode (24:6)\n  22 | \n  23 | function f(x = args = arguments) {\n\u003e 24 |   let arguments;\n     |       ^\n  25 | }\n  26 | \n  27 | f(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/function/dflt-params-ref-later.js-strict:true": "test/language/statements/function/dflt-params-ref-later.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/function/dflt-params-ref-self.js-strict:true": "test/language/statements/function/dflt-params-ref-self.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/function/dstr/ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/statements/function/dstr/ary-init-iter-get-err-array-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/function/dstr/ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/statements/function/dstr/ary-ptrn-elem-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/function/dstr/ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/function/dstr/ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/function/dstr/ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/statements/function/dstr/ary-ptrn-elem-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/function/dstr/ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/statements/function/dstr/ary-ptrn-elem-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/function/dstr/ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/function/dstr/ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/function/dstr/ary-ptrn-rest-ary-elem.js: Unexpected token (77:15)\n  75 | \n  76 | var callCount = 0;\n\u003e 77 | function f([...[x, y, z]]) {\n     |                ^\n  78 |   assert.sameValue(x, 3);\n  79 |   assert.sameValue(y, 4);\n  80 |   assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/function/dstr/ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/function/dstr/ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/function/dstr/ary-ptrn-rest-ary-rest.js: Unexpected token (58:15)\n  56 | \n  57 | var callCount = 0;\n\u003e 58 | function f([...[...x]]) {\n     |                ^\n  59 |   assert(Array.isArray(x));\n  60 |   assert.sameValue(x.length, 3);\n  61 |   assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/function/dstr/ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/function/dstr/ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/function/dstr/ary-ptrn-rest-obj-id.js: Unexpected token (57:15)\n  55 | \n  56 | var callCount = 0;\n\u003e 57 | function f([...{ length }]) {\n     |                ^\n  58 |   assert.sameValue(length, 3);\n  59 |   callCount = callCount + 1;\n  60 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/function/dstr/ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/function/dstr/ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/function/dstr/ary-ptrn-rest-obj-prop-id.js: Unexpected token (58:15)\n  56 | \n  57 | var callCount = 0;\n\u003e 58 | function f([...{ 0: v, 1: w, 2: x, 3: y, length: z }]) {\n     |                ^\n  59 |   assert.sameValue(v, 7);\n  60 |   assert.sameValue(w, 8);\n  61 |   assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/function/dstr/dflt-ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/statements/function/dstr/dflt-ary-init-iter-get-err-array-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/statements/function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/statements/function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/statements/function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/function/dstr/dflt-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/function/dstr/dflt-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/function/dstr/dflt-ary-ptrn-rest-ary-elem.js: Unexpected token (77:15)\n  75 | \n  76 | var callCount = 0;\n\u003e 77 | function f([...[x, y, z]] = [3, 4, 5]) {\n     |                ^\n  78 |   assert.sameValue(x, 3);\n  79 |   assert.sameValue(y, 4);\n  80 |   assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/function/dstr/dflt-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/function/dstr/dflt-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/function/dstr/dflt-ary-ptrn-rest-ary-rest.js: Unexpected token (58:15)\n  56 | \n  57 | var callCount = 0;\n\u003e 58 | function f([...[...x]] = values) {\n     |                ^\n  59 |   assert(Array.isArray(x));\n  60 |   assert.sameValue(x.length, 3);\n  61 |   assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/function/dstr/dflt-ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/function/dstr/dflt-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/function/dstr/dflt-ary-ptrn-rest-obj-id.js: Unexpected token (57:15)\n  55 | \n  56 | var callCount = 0;\n\u003e 57 | function f([...{ length }] = [1, 2, 3]) {\n     |                ^\n  58 |   assert.sameValue(length, 3);\n  59 |   callCount = callCount + 1;\n  60 | }; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/function/dstr/dflt-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/function/dstr/dflt-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/function/dstr/dflt-ary-ptrn-rest-obj-prop-id.js: Unexpected token (58:15)\n  56 | \n  57 | var callCount = 0;\n\u003e 58 | function f([...{ 0: v, 1: w, 2: x, 3: y, length: z }] = [7, 8, 9]) {\n     |                ^\n  59 |   assert.sameValue(v, 7);\n  60 |   assert.sameValue(w, 8);\n  61 |   assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/function/dstr/dflt-obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/statements/function/dstr/dflt-obj-ptrn-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/function/dstr/dflt-obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/function/dstr/dflt-obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/function/dstr/dflt-obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/statements/function/dstr/dflt-obj-ptrn-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/function/dstr/dflt-obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/statements/function/dstr/dflt-obj-ptrn-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/function/dstr/dflt-obj-ptrn-rest-getter.js-strict:true": "test/language/statements/function/dstr/dflt-obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/function/dstr/dflt-obj-ptrn-rest-getter.js: Unexpected token (46:12)\n  44 | \n  45 | var callCount = 0;\n\u003e 46 | function f({...x} = { get v() { count++; return 2; } }) {\n     |             ^\n  47 |   assert.sameValue(count, 1);\n  48 | \n  49 |   verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/function/dstr/dflt-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/function/dstr/dflt-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/function/dstr/dflt-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (47:12)\n  45 | \n  46 | var callCount = 0;\n\u003e 47 | function f({...rest} = o) {\n     |             ^\n  48 |   assert.sameValue(rest.x, undefined);\n  49 | \n  50 |   verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/function/dstr/dflt-obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/function/dstr/dflt-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/function/dstr/dflt-obj-ptrn-rest-val-obj.js: Unexpected token (45:18)\n  43 | \n  44 | var callCount = 0;\n\u003e 45 | function f({a, b, ...rest} = {x: 1, y: 2, a: 5, b: 3}) {\n     |                   ^\n  46 |   assert.sameValue(rest.a, undefined);\n  47 |   assert.sameValue(rest.b, undefined);\n  48 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/function/dstr/obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/statements/function/dstr/obj-ptrn-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/function/dstr/obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/function/dstr/obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/function/dstr/obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/statements/function/dstr/obj-ptrn-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/function/dstr/obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/statements/function/dstr/obj-ptrn-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/function/dstr/obj-ptrn-rest-getter.js-strict:true": "test/language/statements/function/dstr/obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/function/dstr/obj-ptrn-rest-getter.js: Unexpected token (46:12)\n  44 | \n  45 | var callCount = 0;\n\u003e 46 | function f({...x}) {\n     |             ^\n  47 |   assert.sameValue(count, 1);\n  48 | \n  49 |   verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/function/dstr/obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/function/dstr/obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/function/dstr/obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (47:12)\n  45 | \n  46 | var callCount = 0;\n\u003e 47 | function f({...rest}) {\n     |             ^\n  48 |   assert.sameValue(rest.x, undefined);\n  49 | \n  50 |   verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/function/dstr/obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/function/dstr/obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/function/dstr/obj-ptrn-rest-val-obj.js: Unexpected token (45:18)\n  43 | \n  44 | var callCount = 0;\n\u003e 45 | function f({a, b, ...rest}) {\n     |                   ^\n  46 |   assert.sameValue(rest.a, undefined);\n  47 |   assert.sameValue(rest.b, undefined);\n  48 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/function/eval-var-scope-syntax-err.js-strict:false": "test/language/statements/function/eval-var-scope-syntax-err.js: Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/function/param-eval-non-strict-is-correct-value.js-strict:false": "test/language/statements/function/param-eval-non-strict-is-correct-value.js: SyntaxError: test/language/statements/function/param-eval-non-strict-is-correct-value.js: eval is a reserved word in strict mode (14:13)\n  12 | let evalValue = {};\n  13 | \n\u003e 14 | function foo(eval) {\n     |              ^\n  15 |   assert.sameValue(eval, evalValue);\n  16 |   exprCallCount += 1;\n  17 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/function/scope-body-lex-distinct.js-strict:false": "test/language/statements/function/scope-body-lex-distinct.js: Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/function/scope-param-elem-var-close.js-strict:false": "test/language/statements/function/scope-param-elem-var-close.js: Test262Error: Expected SameValue(«outside», «inside») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/function/scope-param-elem-var-open.js-strict:false": "test/language/statements/function/scope-param-elem-var-open.js: Test262Error: Expected SameValue(«outside», «inside») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/function/scope-param-rest-elem-var-close.js-strict:false": "test/language/statements/function/scope-param-rest-elem-var-close.js: SyntaxError: test/language/statements/function/scope-param-rest-elem-var-close.js: Unexpected token (22:7)\n  20 | \n  21 | function f(\n\u003e 22 |     ...[_ = (eval('var x = \"inside\";'), probeParam = function() { return x; })]\n     |        ^\n  23 |   ) {\n  24 |     probeBody = function() { return x; }\n  25 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/function/scope-param-rest-elem-var-open.js-strict:false": "test/language/statements/function/scope-param-rest-elem-var-open.js: SyntaxError: test/language/statements/function/scope-param-rest-elem-var-open.js: Unexpected token (23:7)\n  21 | function f(\n  22 |     _ = probe1 = function() { return x; },\n\u003e 23 |     ...[__ = (eval('var x = \"inside\";'), probe2 = function() { return x; })]\n     |        ^\n  24 |   ) {\n  25 | }\n  26 | f(); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/function/scope-paramsbody-var-open.js-strict:true": "test/language/statements/function/scope-paramsbody-var-open.js: Test262Error: Expected SameValue(«inside», «outside») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/function/unscopables-with-in-nested-fn.js-strict:false": "test/language/statements/function/unscopables-with-in-nested-fn.js: SyntaxError: test/language/statements/function/unscopables-with-in-nested-fn.js: 'with' in strict mode (75:4)\n  73 |   (function() {\n  74 |     count++;\n\u003e 75 |     with (globalThis) {\n     |     ^\n  76 |       count++;\n  77 |       assert.sameValue(v, 1, 'The value of `v` is 1');\n  78 |     } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/function/unscopables-with.js-strict:false": "test/language/statements/function/unscopables-with.js: SyntaxError: test/language/statements/function/unscopables-with.js: 'with' in strict mode (74:2)\n  72 | function ref(x) {\n  73 |   count++;\n\u003e 74 |   with (globalThis) {\n     |   ^\n  75 |     count++;\n  76 |     assert.sameValue(v, undefined, 'The value of `v` is expected to equal `undefined`');\n  77 |   } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/if/if-decl-else-decl-strict.js-strict:true": "test/language/statements/if/if-decl-else-decl-strict.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/if/if-decl-else-stmt-strict.js-strict:true": "test/language/statements/if/if-decl-else-stmt-strict.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/if/if-decl-no-else-strict.js-strict:true": "test/language/statements/if/if-decl-no-else-strict.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/if/if-fun-else-fun-strict.js-strict:true": "test/language/statements/if/if-fun-else-fun-strict.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/if/if-fun-else-stmt-strict.js-strict:true": "test/language/statements/if/if-fun-else-stmt-strict.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/if/if-fun-no-else-strict.js-strict:true": "test/language/statements/if/if-fun-no-else-strict.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/if/if-stmt-else-decl-strict.js-strict:true": "test/language/statements/if/if-stmt-else-decl-strict.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/if/if-stmt-else-fun-strict.js-strict:true": "test/language/statements/if/if-stmt-else-fun-strict.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/if/labelled-fn-stmt-first.js-strict:true": "test/language/statements/if/labelled-fn-stmt-first.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/if/labelled-fn-stmt-lone.js-strict:true": "test/language/statements/if/labelled-fn-stmt-lone.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/if/labelled-fn-stmt-second.js-strict:true": "test/language/statements/if/labelled-fn-stmt-second.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/if/let-array-with-newline.js-strict:false": "test/language/statements/if/let-array-with-newline.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/labeled/decl-cls.js-strict:true": "test/language/statements/labeled/decl-cls.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/labeled/decl-const.js-strict:true": "test/language/statements/labeled/decl-const.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/labeled/decl-fun-strict.js-strict:true": "test/language/statements/labeled/decl-fun-strict.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/labeled/decl-let.js-strict:true": "test/language/statements/labeled/decl-let.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/labeled/let-array-with-newline.js-strict:false": "test/language/statements/labeled/let-array-with-newline.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/labeled/value-await-module-escaped.js-strict:true": "test/language/statements/labeled/value-await-module-escaped.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/labeled/value-await-module.js-strict:true": "test/language/statements/labeled/value-await-module.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/labeled/value-yield-strict-escaped.js-strict:true": "test/language/statements/labeled/value-yield-strict-escaped.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/labeled/value-yield-strict.js-strict:true": "test/language/statements/labeled/value-yield-strict.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/let/block-local-closure-get-before-initialization.js-strict:true": "test/language/statements/let/block-local-closure-get-before-initialization.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/let/block-local-closure-set-before-initialization.js-strict:true": "test/language/statements/let/block-local-closure-set-before-initialization.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/let/block-local-use-before-initialization-in-declaration-statement.js-strict:true": "test/language/statements/let/block-local-use-before-initialization-in-declaration-statement.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/let/block-local-use-before-initialization-in-prior-statement.js-strict:true": "test/language/statements/let/block-local-use-before-initialization-in-prior-statement.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/let/cptn-value.js-strict:true": "test/language/statements/let/cptn-value.js: SyntaxError: SyntaxError: \u003ceval\u003e: Line 1:5 Unexpected identifier at test/language/statements/let/cptn-value.js:17:7(5)",
  "test/language/statements/let/dstr/ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/statements/let/dstr/ary-init-iter-get-err-array-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/let/dstr/ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/statements/let/dstr/ary-ptrn-elem-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/let/dstr/ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/let/dstr/ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/let/dstr/ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/statements/let/dstr/ary-ptrn-elem-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/let/dstr/ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/statements/let/dstr/ary-ptrn-elem-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/let/dstr/ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/let/dstr/ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/let/dstr/ary-ptrn-rest-ary-elem.js: Unexpected token (54:8)\n  52 | ---*/\n  53 | \n\u003e 54 | let [...[x, y, z]] = [3, 4, 5];\n     |         ^\n  55 | \n  56 | assert.sameValue(x, 3);\n  57 | assert.sameValue(y, 4); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/let/dstr/ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/let/dstr/ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/let/dstr/ary-ptrn-rest-ary-rest.js: Unexpected token (35:8)\n  33 | var values = [1, 2, 3];\n  34 | \n\u003e 35 | let [...[...x]] = values;\n     |         ^\n  36 | \n  37 | assert(Array.isArray(x));\n  38 | assert.sameValue(x.length, 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/let/dstr/ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/let/dstr/ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/let/dstr/ary-ptrn-rest-obj-id.js: Unexpected token (34:8)\n  32 | ---*/\n  33 | \n\u003e 34 | let [...{ length }] = [1, 2, 3];\n     |         ^\n  35 | \n  36 | assert.sameValue(length, 3);\n  37 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/let/dstr/ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/let/dstr/ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/let/dstr/ary-ptrn-rest-obj-prop-id.js: Unexpected token (35:8)\n  33 | let length = \"outer\";\n  34 | \n\u003e 35 | let [...{ 0: v, 1: w, 2: x, 3: y, length: z }] = [7, 8, 9];\n     |         ^\n  36 | \n  37 | assert.sameValue(v, 7);\n  38 | assert.sameValue(w, 8); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/let/dstr/obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/statements/let/dstr/obj-ptrn-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/let/dstr/obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/let/dstr/obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/let/dstr/obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/statements/let/dstr/obj-ptrn-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/let/dstr/obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/statements/let/dstr/obj-ptrn-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/let/dstr/obj-ptrn-rest-getter.js-strict:true": "test/language/statements/let/dstr/obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/let/dstr/obj-ptrn-rest-getter.js: Unexpected token (23:5)\n  21 | var count = 0;\n  22 | \n\u003e 23 | let {...x} = { get v() { count++; return 2; } };\n     |      ^\n  24 | \n  25 | assert.sameValue(count, 1);\n  26 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/let/dstr/obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/let/dstr/obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/let/dstr/obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (24:5)\n  22 | Object.defineProperty(o, \"x\", { value: 4, enumerable: false });\n  23 | \n\u003e 24 | let {...rest} = o;\n     |      ^\n  25 | \n  26 | assert.sameValue(rest.x, undefined);\n  27 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/let/dstr/obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/let/dstr/obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/let/dstr/obj-ptrn-rest-val-obj.js: Unexpected token (22:11)\n  20 | ---*/\n  21 | \n\u003e 22 | let {a, b, ...rest} = {x: 1, y: 2, a: 5, b: 3};\n     |            ^\n  23 | \n  24 | assert.sameValue(rest.a, undefined);\n  25 | assert.sameValue(rest.b, undefined); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/let/function-local-closure-get-before-initialization.js-strict:true": "test/language/statements/let/function-local-closure-get-before-initialization.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/let/function-local-closure-set-before-initialization.js-strict:true": "test/language/statements/let/function-local-closure-set-before-initialization.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/let/function-local-use-before-initialization-in-declaration-statement.js-strict:true": "test/language/statements/let/function-local-use-before-initialization-in-declaration-statement.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/let/function-local-use-before-initialization-in-prior-statement.js-strict:true": "test/language/statements/let/function-local-use-before-initialization-in-prior-statement.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/let/global-closure-get-before-initialization.js-strict:true": "test/language/statements/let/global-closure-get-before-initialization.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/let/global-closure-set-before-initialization.js-strict:true": "test/language/statements/let/global-closure-set-before-initialization.js: Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/let/global-use-before-initialization-in-declaration-statement.js-strict:true": "test/language/statements/let/global-use-before-initialization-in-declaration-statement.js: Expected error: \u003cnil\u003e",
  "test/language/statements/let/global-use-before-initialization-in-prior-statement.js-strict:true": "test/language/statements/let/global-use-before-initialization-in-prior-statement.js: Expected error: \u003cnil\u003e",
  "test/language/statements/let/redeclaration-error-from-within-strict-mode-function.js-strict:false": "test/language/statements/let/redeclaration-error-from-within-strict-mode-function.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/let/syntax/escaped-let.js-strict:false": "test/language/statements/let/syntax/escaped-let.js: SyntaxError: test/language/statements/let/syntax/escaped-let.js: let is a reserved word in strict mode (22:0)\n  20 | this.let = 0;\n  21 | \n\u003e 22 | l\\u0065t // ASI\n     | ^\n  23 | a;\n  24 | \n  25 | // If the parser treated the previous escaped \"let\" as a lexical declaration, at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/let/syntax/let-closure-inside-condition.js-strict:true": "test/language/statements/let/syntax/let-closure-inside-condition.js: Test262Error: Expected SameValue(«0», «5») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/let/syntax/let-closure-inside-initialization.js-strict:true": "test/language/statements/let/syntax/let-closure-inside-initialization.js: Test262Error: Expected SameValue(«0», «5») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/let/syntax/let-closure-inside-next-expression.js-strict:true": "test/language/statements/let/syntax/let-closure-inside-next-expression.js: Test262Error: Expected SameValue(«1», «5») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/let/syntax/with-initialisers-in-statement-positions-label-statement.js-strict:true": "test/language/statements/let/syntax/with-initialisers-in-statement-positions-label-statement.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/let/syntax/without-initialisers-in-statement-positions-label-statement.js-strict:true": "test/language/statements/let/syntax/without-initialisers-in-statement-positions-label-statement.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/switch/cptn-a-fall-thru-abrupt-empty.js-strict:true": "test/language/statements/switch/cptn-a-fall-thru-abrupt-empty.js: Test262Error: Empty value does not replace previous non-empty value Expected SameValue(«undefined», «14») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/switch/cptn-a-fall-thru-nrml.js-strict:true": "test/language/statements/switch/cptn-a-fall-thru-nrml.js: Test262Error: Empty value does not replace previous non-empty value Expected SameValue(«undefined», «7») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/switch/cptn-b-fall-thru-abrupt-empty.js-strict:true": "test/language/statements/switch/cptn-b-fall-thru-abrupt-empty.js: Test262Error: Empty value does not replace previous non-empty value Expected SameValue(«undefined», «14») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/switch/cptn-b-fall-thru-nrml.js-strict:true": "test/language/statements/switch/cptn-b-fall-thru-nrml.js: Test262Error: Empty value does not replace previous non-empty value Expected SameValue(«undefined», «7») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/switch/cptn-dflt-b-fall-thru-abrupt-empty.js-strict:true": "test/language/statements/switch/cptn-dflt-b-fall-thru-abrupt-empty.js: Test262Error: Empty value does not replace previous non-empty value Expected SameValue(«undefined», «14») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/switch/cptn-dflt-b-fall-thru-nrml.js-strict:true": "test/language/statements/switch/cptn-dflt-b-fall-thru-nrml.js: Test262Error: Empty value does not replace previous non-empty value Expected SameValue(«undefined», «7») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/switch/cptn-dflt-b-final.js-strict:true": "test/language/statements/switch/cptn-dflt-b-final.js: Test262Error: empty StatementList (following a non-empty case) Expected SameValue(«undefined», «8») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/switch/cptn-dflt-fall-thru-abrupt-empty.js-strict:true": "test/language/statements/switch/cptn-dflt-fall-thru-abrupt-empty.js: Test262Error: Empty value does not replace previous non-empty value Expected SameValue(«undefined», «14») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/switch/cptn-dflt-fall-thru-nrml.js-strict:true": "test/language/statements/switch/cptn-dflt-fall-thru-nrml.js: Test262Error: Empty value does not replace previous non-empty value Expected SameValue(«undefined», «7») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/switch/cptn-no-dflt-match-fall-thru-abrupt-empty.js-strict:true": "test/language/statements/switch/cptn-no-dflt-match-fall-thru-abrupt-empty.js: Test262Error: Empty value does not replace previous non-empty value Expected SameValue(«undefined», «14») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/switch/cptn-no-dflt-match-fall-thru-nrml.js-strict:true": "test/language/statements/switch/cptn-no-dflt-match-fall-thru-nrml.js: Test262Error: Empty value does not replace previous non-empty value Expected SameValue(«undefined», «7») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/switch/scope-lex-async-function.js-strict:true": "test/language/statements/switch/scope-lex-async-function.js: error test/language/statements/switch/scope-lex-async-function.js: Line 22:36 Unexpected token function (and 2 more errors) happened at the wrong phase (expected runtime)",
  "test/language/statements/switch/scope-lex-async-generator.js-strict:true": "test/language/statements/switch/scope-lex-async-generator.js: error SyntaxError: test/language/statements/switch/scope-lex-async-generator.js: Unexpected token (22:37)\n  20 | ---*/\n  21 | \n\u003e 22 | switch (0) { default: async function * x() {} }\n     |                                      ^\n  23 | x;\n  24 |  at \u003ceval\u003e:2:28542(114) happened at the wrong phase (expected runtime)",
  "test/language/statements/switch/scope-lex-generator.js-strict:true": "test/language/statements/switch/scope-lex-generator.js: error test/language/statements/switch/scope-lex-generator.js: Line 22:38 Unexpected token * (and 1 more errors) happened at the wrong phase (expected runtime)",
  "test/language/statements/switch/scope-lex-open-case.js-strict:true": "test/language/statements/switch/scope-lex-open-case.js: Test262Error: Expected SameValue(«inside», «outside») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/switch/scope-lex-open-dflt.js-strict:true": "test/language/statements/switch/scope-lex-open-dflt.js: Test262Error: Expected SameValue(«inside», «outside») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/switch/syntax/redeclaration/async-function-name-redeclaration-attempt-with-class.js-strict:true": "test/language/statements/switch/syntax/redeclaration/async-function-name-redeclaration-attempt-with-class.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/statements/switch/syntax/redeclaration/async-function-name-redeclaration-attempt-with-let.js-strict:true": "test/language/statements/switch/syntax/redeclaration/async-function-name-redeclaration-attempt-with-let.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/statements/switch/syntax/redeclaration/class-name-redeclaration-attempt-with-class.js-strict:true": "test/language/statements/switch/syntax/redeclaration/class-name-redeclaration-attempt-with-class.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/statements/switch/syntax/redeclaration/class-name-redeclaration-attempt-with-const.js-strict:true": "test/language/statements/switch/syntax/redeclaration/class-name-redeclaration-attempt-with-const.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/statements/switch/syntax/redeclaration/class-name-redeclaration-attempt-with-function.js-strict:true": "test/language/statements/switch/syntax/redeclaration/class-name-redeclaration-attempt-with-function.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/switch/syntax/redeclaration/class-name-redeclaration-attempt-with-let.js-strict:true": "test/language/statements/switch/syntax/redeclaration/class-name-redeclaration-attempt-with-let.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/statements/switch/syntax/redeclaration/class-name-redeclaration-attempt-with-var.js-strict:true": "test/language/statements/switch/syntax/redeclaration/class-name-redeclaration-attempt-with-var.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/switch/syntax/redeclaration/const-name-redeclaration-attempt-with-async-function.js-strict:true": "test/language/statements/switch/syntax/redeclaration/const-name-redeclaration-attempt-with-async-function.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/statements/switch/syntax/redeclaration/const-name-redeclaration-attempt-with-class.js-strict:true": "test/language/statements/switch/syntax/redeclaration/const-name-redeclaration-attempt-with-class.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/statements/switch/syntax/redeclaration/const-name-redeclaration-attempt-with-const.js-strict:true": "test/language/statements/switch/syntax/redeclaration/const-name-redeclaration-attempt-with-const.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/statements/switch/syntax/redeclaration/const-name-redeclaration-attempt-with-function.js-strict:true": "test/language/statements/switch/syntax/redeclaration/const-name-redeclaration-attempt-with-function.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/statements/switch/syntax/redeclaration/const-name-redeclaration-attempt-with-let.js-strict:true": "test/language/statements/switch/syntax/redeclaration/const-name-redeclaration-attempt-with-let.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/statements/switch/syntax/redeclaration/const-name-redeclaration-attempt-with-var.js-strict:true": "test/language/statements/switch/syntax/redeclaration/const-name-redeclaration-attempt-with-var.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/switch/syntax/redeclaration/function-name-redeclaration-attempt-with-class.js-strict:true": "test/language/statements/switch/syntax/redeclaration/function-name-redeclaration-attempt-with-class.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/statements/switch/syntax/redeclaration/function-name-redeclaration-attempt-with-function.js-strict:true": "test/language/statements/switch/syntax/redeclaration/function-name-redeclaration-attempt-with-function.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/switch/syntax/redeclaration/function-name-redeclaration-attempt-with-let.js-strict:true": "test/language/statements/switch/syntax/redeclaration/function-name-redeclaration-attempt-with-let.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/statements/switch/syntax/redeclaration/function-name-redeclaration-attempt-with-var.js-strict:true": "test/language/statements/switch/syntax/redeclaration/function-name-redeclaration-attempt-with-var.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/switch/syntax/redeclaration/let-name-redeclaration-attempt-with-class.js-strict:true": "test/language/statements/switch/syntax/redeclaration/let-name-redeclaration-attempt-with-class.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/statements/switch/syntax/redeclaration/let-name-redeclaration-attempt-with-const.js-strict:true": "test/language/statements/switch/syntax/redeclaration/let-name-redeclaration-attempt-with-const.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/statements/switch/syntax/redeclaration/let-name-redeclaration-attempt-with-function.js-strict:true": "test/language/statements/switch/syntax/redeclaration/let-name-redeclaration-attempt-with-function.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/switch/syntax/redeclaration/let-name-redeclaration-attempt-with-let.js-strict:true": "test/language/statements/switch/syntax/redeclaration/let-name-redeclaration-attempt-with-let.js: unexpected error type (TypeError), expected (SyntaxError)",
  "test/language/statements/switch/syntax/redeclaration/let-name-redeclaration-attempt-with-var.js-strict:true": "test/language/statements/switch/syntax/redeclaration/let-name-redeclaration-attempt-with-var.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/switch/syntax/redeclaration/var-name-redeclaration-attempt-with-class.js-strict:true": "test/language/statements/switch/syntax/redeclaration/var-name-redeclaration-attempt-with-class.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/switch/syntax/redeclaration/var-name-redeclaration-attempt-with-const.js-strict:true": "test/language/statements/switch/syntax/redeclaration/var-name-redeclaration-attempt-with-const.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/switch/syntax/redeclaration/var-name-redeclaration-attempt-with-function.js-strict:true": "test/language/statements/switch/syntax/redeclaration/var-name-redeclaration-attempt-with-function.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/switch/syntax/redeclaration/var-name-redeclaration-attempt-with-let.js-strict:true": "test/language/statements/switch/syntax/redeclaration/var-name-redeclaration-attempt-with-let.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/try/completion-values.js-strict:true": "panic while running test/language/statements/try/completion-values.js: runtime error: index out of range [-1]",
  "test/language/statements/try/cptn-catch-empty-break.js-strict:true": "panic while running test/language/statements/try/cptn-catch-empty-break.js: runtime error: index out of range [-1]",
  "test/language/statements/try/cptn-catch-empty-continue.js-strict:true": "panic while running test/language/statements/try/cptn-catch-empty-continue.js: runtime error: index out of range [-1]",
  "test/language/statements/try/cptn-catch-finally-empty-break.js-strict:true": "panic while running test/language/statements/try/cptn-catch-finally-empty-break.js: runtime error: index out of range [-1]",
  "test/language/statements/try/cptn-catch-finally-empty-continue.js-strict:true": "panic while running test/language/statements/try/cptn-catch-finally-empty-continue.js: runtime error: index out of range [-1]",
  "test/language/statements/try/cptn-catch.js-strict:true": "test/language/statements/try/cptn-catch.js: Test262Error: Expected SameValue(«undefined», «3») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/try/cptn-finally-empty-break.js-strict:true": "panic while running test/language/statements/try/cptn-finally-empty-break.js: runtime error: index out of range [-1]",
  "test/language/statements/try/cptn-finally-empty-continue.js-strict:true": "panic while running test/language/statements/try/cptn-finally-empty-continue.js: runtime error: index out of range [-1]",
  "test/language/statements/try/cptn-finally-from-catch.js-strict:true": "test/language/statements/try/cptn-finally-from-catch.js: Test262Error: Expected SameValue(«undefined», «3») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/try/cptn-finally-skip-catch.js-strict:true": "test/language/statements/try/cptn-finally-skip-catch.js: Test262Error: Expected SameValue(«undefined», «10») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/try/cptn-finally-wo-catch.js-strict:true": "test/language/statements/try/cptn-finally-wo-catch.js: Test262Error: Expected SameValue(«undefined», «3») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/try/cptn-try.js-strict:true": "test/language/statements/try/cptn-try.js: Test262Error: Expected SameValue(«undefined», «3») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/try/dstr/ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/statements/try/dstr/ary-init-iter-get-err-array-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/try/dstr/ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/statements/try/dstr/ary-ptrn-elem-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/try/dstr/ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/try/dstr/ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/try/dstr/ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/statements/try/dstr/ary-ptrn-elem-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/try/dstr/ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/statements/try/dstr/ary-ptrn-elem-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/try/dstr/ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/try/dstr/ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/try/dstr/ary-ptrn-rest-ary-elem.js: Unexpected token (56:13)\n  54 | try {\n  55 |   throw [3, 4, 5];\n\u003e 56 | } catch ([...[x, y, z]]) {\n     |              ^\n  57 |   assert.sameValue(x, 3);\n  58 |   assert.sameValue(y, 4);\n  59 |   assert.sameValue(z, 5); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/try/dstr/ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/try/dstr/ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/try/dstr/ary-ptrn-rest-ary-rest.js: Unexpected token (37:13)\n  35 | try {\n  36 |   throw values;\n\u003e 37 | } catch ([...[...x]]) {\n     |              ^\n  38 |   assert(Array.isArray(x));\n  39 |   assert.sameValue(x.length, 3);\n  40 |   assert.sameValue(x[0], 1); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/try/dstr/ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/try/dstr/ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/try/dstr/ary-ptrn-rest-obj-id.js: Unexpected token (36:13)\n  34 | try {\n  35 |   throw [1, 2, 3];\n\u003e 36 | } catch ([...{ length }]) {\n     |              ^\n  37 |   assert.sameValue(length, 3);\n  38 |   ranCatch = true;\n  39 | } at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/try/dstr/ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/try/dstr/ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/try/dstr/ary-ptrn-rest-obj-prop-id.js: Unexpected token (37:13)\n  35 | try {\n  36 |   throw [7, 8, 9];\n\u003e 37 | } catch ([...{ 0: v, 1: w, 2: x, 3: y, length: z }]) {\n     |              ^\n  38 |   assert.sameValue(v, 7);\n  39 |   assert.sameValue(w, 8);\n  40 |   assert.sameValue(x, 9); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/try/dstr/obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/statements/try/dstr/obj-ptrn-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/try/dstr/obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/try/dstr/obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/try/dstr/obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/statements/try/dstr/obj-ptrn-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/try/dstr/obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/statements/try/dstr/obj-ptrn-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/try/dstr/obj-ptrn-rest-getter.js-strict:true": "test/language/statements/try/dstr/obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/try/dstr/obj-ptrn-rest-getter.js: Unexpected token (25:10)\n  23 | try {\n  24 |   throw { get v() { count++; return 2; } };\n\u003e 25 | } catch ({...x}) {\n     |           ^\n  26 |   assert.sameValue(count, 1);\n  27 | \n  28 |   verifyProperty(x, \"v\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/try/dstr/obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/try/dstr/obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/try/dstr/obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (26:10)\n  24 | try {\n  25 |   throw o;\n\u003e 26 | } catch ({...rest}) {\n     |           ^\n  27 |   assert.sameValue(rest.x, undefined);\n  28 | \n  29 |   verifyProperty(rest, \"a\", { at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/try/dstr/obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/try/dstr/obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/try/dstr/obj-ptrn-rest-val-obj.js: Unexpected token (24:16)\n  22 | try {\n  23 |   throw {x: 1, y: 2, a: 5, b: 3};\n\u003e 24 | } catch ({a, b, ...rest}) {\n     |                 ^\n  25 |   assert.sameValue(rest.a, undefined);\n  26 |   assert.sameValue(rest.b, undefined);\n  27 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/try/early-catch-function.js-strict:true": "test/language/statements/try/early-catch-function.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/try/early-catch-lex.js-strict:true": "test/language/statements/try/early-catch-lex.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/try/optional-catch-binding-finally.js-strict:true": "test/language/statements/try/optional-catch-binding-finally.js: SyntaxError: test/language/statements/try/optional-catch-binding-finally.js: Unexpected token, expected ( (18:13)\n  16 | ---*/\n  17 | \n\u003e 18 | try {} catch {} finally {}\n     |              ^\n  19 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/try/optional-catch-binding-lexical.js-strict:true": "test/language/statements/try/optional-catch-binding-lexical.js: SyntaxError: test/language/statements/try/optional-catch-binding-lexical.js: Unexpected token, expected ( (28:8)\n  26 |     x = 2;\n  27 |     throw new Error();\n\u003e 28 | } catch {\n     |         ^\n  29 |     let x = 3;\n  30 |     let y = true;\n  31 |     ranCatch = true; at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/try/optional-catch-binding-throws.js-strict:true": "test/language/statements/try/optional-catch-binding-throws.js: SyntaxError: test/language/statements/try/optional-catch-binding-throws.js: Unexpected token, expected ( (23:12)\n  21 |     try {\n  22 |         throw new Error();\n\u003e 23 |     } catch {\n     |             ^\n  24 |         throw new Test262Error();\n  25 |     }\n  26 | }); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/try/optional-catch-binding.js-strict:true": "test/language/statements/try/optional-catch-binding.js: SyntaxError: test/language/statements/try/optional-catch-binding.js: Unexpected token, expected ( (18:13)\n  16 | ---*/\n  17 | \n\u003e 18 | try {} catch {}\n     |              ^\n  19 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/try/scope-catch-block-lex-open.js-strict:true": "test/language/statements/try/scope-catch-block-lex-open.js: Test262Error: Expected SameValue(«inside», «outside») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/variable/cptn-value.js-strict:true": "test/language/statements/variable/cptn-value.js: Test262Error: Expected SameValue(«undefined», «7») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/variable/dstr/ary-init-iter-get-err-array-prototype.js-strict:true": "test/language/statements/variable/dstr/ary-init-iter-get-err-array-prototype.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all at harness/sta.js:22:9(49)",
  "test/language/statements/variable/dstr/ary-ptrn-elem-id-init-fn-name-arrow.js-strict:true": "test/language/statements/variable/dstr/ary-ptrn-elem-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/variable/dstr/ary-ptrn-elem-id-init-fn-name-class.js-strict:true": "test/language/statements/variable/dstr/ary-ptrn-elem-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/variable/dstr/ary-ptrn-elem-id-init-fn-name-cover.js-strict:true": "test/language/statements/variable/dstr/ary-ptrn-elem-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/variable/dstr/ary-ptrn-elem-id-init-fn-name-fn.js-strict:true": "test/language/statements/variable/dstr/ary-ptrn-elem-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/variable/dstr/ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/variable/dstr/ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/variable/dstr/ary-ptrn-rest-ary-elem.js: Unexpected token (53:8)\n  51 | ---*/\n  52 | \n\u003e 53 | var [...[x, y, z]] = [3, 4, 5];\n     |         ^\n  54 | \n  55 | assert.sameValue(x, 3);\n  56 | assert.sameValue(y, 4); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/variable/dstr/ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/variable/dstr/ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/variable/dstr/ary-ptrn-rest-ary-rest.js: Unexpected token (34:8)\n  32 | var values = [1, 2, 3];\n  33 | \n\u003e 34 | var [...[...x]] = values;\n     |         ^\n  35 | \n  36 | assert(Array.isArray(x));\n  37 | assert.sameValue(x.length, 3); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/variable/dstr/ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/variable/dstr/ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/variable/dstr/ary-ptrn-rest-obj-id.js: Unexpected token (33:8)\n  31 | ---*/\n  32 | \n\u003e 33 | var [...{ length }] = [1, 2, 3];\n     |         ^\n  34 | \n  35 | assert.sameValue(length, 3);\n  36 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/variable/dstr/ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/variable/dstr/ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/variable/dstr/ary-ptrn-rest-obj-prop-id.js: Unexpected token (34:8)\n  32 | let length = \"outer\";\n  33 | \n\u003e 34 | var [...{ 0: v, 1: w, 2: x, 3: y, length: z }] = [7, 8, 9];\n     |         ^\n  35 | \n  36 | assert.sameValue(v, 7);\n  37 | assert.sameValue(w, 8); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/variable/dstr/obj-ptrn-id-init-fn-name-arrow.js-strict:true": "test/language/statements/variable/dstr/obj-ptrn-id-init-fn-name-arrow.js: Test262Error: Expected SameValue(«», «arrow») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/variable/dstr/obj-ptrn-id-init-fn-name-class.js-strict:true": "test/language/statements/variable/dstr/obj-ptrn-id-init-fn-name-class.js: Test262Error: Expected SameValue(«_class», «cls») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/variable/dstr/obj-ptrn-id-init-fn-name-cover.js-strict:true": "test/language/statements/variable/dstr/obj-ptrn-id-init-fn-name-cover.js: Test262Error: Expected SameValue(«», «cover») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/variable/dstr/obj-ptrn-id-init-fn-name-fn.js-strict:true": "test/language/statements/variable/dstr/obj-ptrn-id-init-fn-name-fn.js: Test262Error: Expected SameValue(«», «fn») to be true at harness/sta.js:22:9(49)",
  "test/language/statements/variable/dstr/obj-ptrn-rest-getter.js-strict:true": "test/language/statements/variable/dstr/obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/variable/dstr/obj-ptrn-rest-getter.js: Unexpected token (22:5)\n  20 | var count = 0;\n  21 | \n\u003e 22 | var {...x} = { get v() { count++; return 2; } };\n     |      ^\n  23 | \n  24 | assert.sameValue(count, 1);\n  25 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/variable/dstr/obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/variable/dstr/obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/variable/dstr/obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (23:5)\n  21 | Object.defineProperty(o, \"x\", { value: 4, enumerable: false });\n  22 | \n\u003e 23 | var {...rest} = o;\n     |      ^\n  24 | \n  25 | assert.sameValue(rest.x, undefined);\n  26 |  at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/variable/dstr/obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/variable/dstr/obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/variable/dstr/obj-ptrn-rest-val-obj.js: Unexpected token (21:11)\n  19 | ---*/\n  20 | \n\u003e 21 | var {a, b, ...rest} = {x: 1, y: 2, a: 5, b: 3};\n     |            ^\n  22 | \n  23 | assert.sameValue(rest.a, undefined);\n  24 | assert.sameValue(rest.b, undefined); at \u003ceval\u003e:2:28542(114)",
  "test/language/statements/while/decl-fun.js-strict:true": "test/language/statements/while/decl-fun.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/while/labelled-fn-stmt.js-strict:true": "test/language/statements/while/labelled-fn-stmt.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/while/let-array-with-newline.js-strict:false": "test/language/statements/while/let-array-with-newline.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/with/cptn-abrupt-empty.js-strict:false": "panic while running test/language/statements/with/cptn-abrupt-empty.js: runtime error: index out of range [-1]",
  "test/language/statements/with/decl-fun.js-strict:false": "test/language/statements/with/decl-fun.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/with/let-array-with-newline.js-strict:false": "test/language/statements/with/let-array-with-newline.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/with/unscopables-inc-dec.js-strict:false": "test/language/statements/with/unscopables-inc-dec.js: SyntaxError: test/language/statements/with/unscopables-inc-dec.js: 'with' in strict mode (25:0)\n  23 | var unscopablesGetterCalled = 0;\n  24 | var a, b, flag = true;\n\u003e 25 | with (a = { x: 7 }) {\n     | ^\n  26 |   with (b = { x: 4, get [Symbol.unscopables]() {\n  27 |                       unscopablesGetterCalled++;\n  28 |                       return { x: flag=!flag }; at \u003ceval\u003e:2:28542(114)",
  "test/language/types/reference/put-value-prop-base-primitive.js-strict:true": "test/language/types/reference/put-value-prop-base-primitive.js: TypeError: Value is not an object: 0 at test/language/types/reference/put-value-prop-base-primitive.js:32:14(40)",
  "test/language/white-space/mongolian-vowel-separator.js-strict:true": "test/language/white-space/mongolian-vowel-separator.js: error is not an object (Test262: This statement should not be evaluated.)"
}
