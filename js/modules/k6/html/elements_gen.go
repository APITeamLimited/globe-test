// generated by js/modules/k6/html/gen/gen_elements.go directed by js/modules/k6/html/elements.go;  DO NOT EDIT
// nolint: goconst
package html

import "github.com/dop251/goja"

func selToElement(sel Selection) goja.Value ***REMOVED***
	if sel.sel.Length() == 0 ***REMOVED***
		return goja.Undefined()
	***REMOVED***

	elem := Element***REMOVED***sel.sel.Nodes[0], &sel***REMOVED***

	switch elem.node.Data ***REMOVED***
	case AnchorTagName:
		return sel.rt.ToValue(AnchorElement***REMOVED***HrefElement***REMOVED***elem***REMOVED******REMOVED***)
	case AreaTagName:
		return sel.rt.ToValue(AreaElement***REMOVED***HrefElement***REMOVED***elem***REMOVED******REMOVED***)
	case AudioTagName:
		return sel.rt.ToValue(AudioElement***REMOVED***MediaElement***REMOVED***elem***REMOVED******REMOVED***)
	case BaseTagName:
		return sel.rt.ToValue(BaseElement***REMOVED***elem***REMOVED***)
	case ButtonTagName:
		return sel.rt.ToValue(ButtonElement***REMOVED***FormFieldElement***REMOVED***elem***REMOVED******REMOVED***)
	case CanvasTagName:
		return sel.rt.ToValue(CanvasElement***REMOVED***elem***REMOVED***)
	case DataTagName:
		return sel.rt.ToValue(DataElement***REMOVED***elem***REMOVED***)
	case DataListTagName:
		return sel.rt.ToValue(DataListElement***REMOVED***elem***REMOVED***)
	case DelTagName:
		return sel.rt.ToValue(DelElement***REMOVED***ModElement***REMOVED***elem***REMOVED******REMOVED***)
	case EmbedTagName:
		return sel.rt.ToValue(EmbedElement***REMOVED***elem***REMOVED***)
	case FieldSetTagName:
		return sel.rt.ToValue(FieldSetElement***REMOVED***elem***REMOVED***)
	case FormTagName:
		return sel.rt.ToValue(FormElement***REMOVED***elem***REMOVED***)
	case IFrameTagName:
		return sel.rt.ToValue(IFrameElement***REMOVED***elem***REMOVED***)
	case ImageTagName:
		return sel.rt.ToValue(ImageElement***REMOVED***elem***REMOVED***)
	case InputTagName:
		return sel.rt.ToValue(InputElement***REMOVED***FormFieldElement***REMOVED***elem***REMOVED******REMOVED***)
	case InsTagName:
		return sel.rt.ToValue(InsElement***REMOVED***ModElement***REMOVED***elem***REMOVED******REMOVED***)
	case KeygenTagName:
		return sel.rt.ToValue(KeygenElement***REMOVED***elem***REMOVED***)
	case LabelTagName:
		return sel.rt.ToValue(LabelElement***REMOVED***elem***REMOVED***)
	case LegendTagName:
		return sel.rt.ToValue(LegendElement***REMOVED***elem***REMOVED***)
	case LiTagName:
		return sel.rt.ToValue(LiElement***REMOVED***elem***REMOVED***)
	case LinkTagName:
		return sel.rt.ToValue(LinkElement***REMOVED***elem***REMOVED***)
	case MapTagName:
		return sel.rt.ToValue(MapElement***REMOVED***elem***REMOVED***)
	case MetaTagName:
		return sel.rt.ToValue(MetaElement***REMOVED***elem***REMOVED***)
	case MeterTagName:
		return sel.rt.ToValue(MeterElement***REMOVED***elem***REMOVED***)
	case OListTagName:
		return sel.rt.ToValue(OListElement***REMOVED***elem***REMOVED***)
	case ObjectTagName:
		return sel.rt.ToValue(ObjectElement***REMOVED***elem***REMOVED***)
	case OptGroupTagName:
		return sel.rt.ToValue(OptGroupElement***REMOVED***elem***REMOVED***)
	case OptionTagName:
		return sel.rt.ToValue(OptionElement***REMOVED***elem***REMOVED***)
	case OutputTagName:
		return sel.rt.ToValue(OutputElement***REMOVED***elem***REMOVED***)
	case ParamTagName:
		return sel.rt.ToValue(ParamElement***REMOVED***elem***REMOVED***)
	case PreTagName:
		return sel.rt.ToValue(PreElement***REMOVED***elem***REMOVED***)
	case ProgressTagName:
		return sel.rt.ToValue(ProgressElement***REMOVED***elem***REMOVED***)
	case QuoteTagName:
		return sel.rt.ToValue(QuoteElement***REMOVED***elem***REMOVED***)
	case ScriptTagName:
		return sel.rt.ToValue(ScriptElement***REMOVED***elem***REMOVED***)
	case SelectTagName:
		return sel.rt.ToValue(SelectElement***REMOVED***elem***REMOVED***)
	case SourceTagName:
		return sel.rt.ToValue(SourceElement***REMOVED***elem***REMOVED***)
	case StyleTagName:
		return sel.rt.ToValue(StyleElement***REMOVED***elem***REMOVED***)
	case TableTagName:
		return sel.rt.ToValue(TableElement***REMOVED***elem***REMOVED***)
	case TableBodyTagName:
		return sel.rt.ToValue(TableBodyElement***REMOVED***TableSectionElement***REMOVED***elem***REMOVED******REMOVED***)
	case TableColTagName:
		return sel.rt.ToValue(TableColElement***REMOVED***elem***REMOVED***)
	case TableDataCellTagName:
		return sel.rt.ToValue(TableDataCellElement***REMOVED***TableCellElement***REMOVED***elem***REMOVED******REMOVED***)
	case TableFootTagName:
		return sel.rt.ToValue(TableFootElement***REMOVED***TableSectionElement***REMOVED***elem***REMOVED******REMOVED***)
	case TableHeadTagName:
		return sel.rt.ToValue(TableHeadElement***REMOVED***TableSectionElement***REMOVED***elem***REMOVED******REMOVED***)
	case TableHeaderCellTagName:
		return sel.rt.ToValue(TableHeaderCellElement***REMOVED***TableCellElement***REMOVED***elem***REMOVED******REMOVED***)
	case TableRowTagName:
		return sel.rt.ToValue(TableRowElement***REMOVED***elem***REMOVED***)
	case TextAreaTagName:
		return sel.rt.ToValue(TextAreaElement***REMOVED***elem***REMOVED***)
	case TimeTagName:
		return sel.rt.ToValue(TimeElement***REMOVED***elem***REMOVED***)
	case TitleTagName:
		return sel.rt.ToValue(TitleElement***REMOVED***elem***REMOVED***)
	case TrackTagName:
		return sel.rt.ToValue(TrackElement***REMOVED***elem***REMOVED***)
	case UListTagName:
		return sel.rt.ToValue(UListElement***REMOVED***elem***REMOVED***)
	case VideoTagName:
		return sel.rt.ToValue(VideoElement***REMOVED***MediaElement***REMOVED***elem***REMOVED******REMOVED***)
	default:
		return sel.rt.ToValue(elem)
	***REMOVED***
***REMOVED***

func (e HrefElement) Download() string ***REMOVED***
	return e.attrAsString("download")
***REMOVED***

func (e HrefElement) ReferrerPolicy() string ***REMOVED***
	attrVal := e.attrAsString("referrerpolicy")
	switch attrVal ***REMOVED***
	case "no-referrer":
		return attrVal
	case "no-referrer-when-downgrade":
		return attrVal
	case "origin":
		return attrVal
	case "origin-when-cross-origin":
		return attrVal
	case "unsafe-url":
		return attrVal
	default:
		return ""
	***REMOVED***
***REMOVED***

func (e HrefElement) Rel() string ***REMOVED***
	return e.attrAsString("rel")
***REMOVED***

func (e HrefElement) Href() string ***REMOVED***
	return e.attrAsURLString("href", "")
***REMOVED***

func (e HrefElement) Target() string ***REMOVED***
	return e.attrAsString("target")
***REMOVED***

func (e HrefElement) Type() string ***REMOVED***
	return e.attrAsString("type")
***REMOVED***

func (e HrefElement) AccessKey() string ***REMOVED***
	return e.attrAsString("accesskey")
***REMOVED***

func (e HrefElement) HrefLang() string ***REMOVED***
	return e.attrAsString("hreflang")
***REMOVED***

func (e HrefElement) ToString() string ***REMOVED***
	return e.attrAsURLString("href", "")
***REMOVED***

func (e MediaElement) Autoplay() bool ***REMOVED***
	return e.attrIsPresent("autoplay")
***REMOVED***

func (e MediaElement) Controls() bool ***REMOVED***
	return e.attrIsPresent("controls")
***REMOVED***

func (e MediaElement) Loop() bool ***REMOVED***
	return e.attrIsPresent("loop")
***REMOVED***

func (e MediaElement) Muted() bool ***REMOVED***
	return e.attrIsPresent("muted")
***REMOVED***

func (e MediaElement) Preload() string ***REMOVED***
	attrVal := e.attrAsString("preload")
	switch attrVal ***REMOVED***
	case "metadata":
		return attrVal
	case "none":
		return attrVal
	default:
		return "auto"
	***REMOVED***
***REMOVED***

func (e MediaElement) Src() string ***REMOVED***
	return e.attrAsURLString("src", "")
***REMOVED***

func (e MediaElement) CrossOrigin() goja.Value ***REMOVED***
	attrVal, exists := e.sel.sel.Attr("crossorigin")
	if !exists ***REMOVED***
		return goja.Undefined()
	***REMOVED***
	switch attrVal ***REMOVED***
	case "anonymous":
		return e.sel.rt.ToValue(attrVal)
	case "use-credentials":
		return e.sel.rt.ToValue(attrVal)
	default:
		return goja.Undefined()
	***REMOVED***
***REMOVED***

func (e MediaElement) CurrentSrc() string ***REMOVED***
	return e.attrAsString("src")
***REMOVED***

func (e MediaElement) DefaultMuted() bool ***REMOVED***
	return e.attrIsPresent("muted")
***REMOVED***

func (e MediaElement) MediaGroup() string ***REMOVED***
	return e.attrAsString("mediagroup")
***REMOVED***

func (e BaseElement) Href() string ***REMOVED***
	return e.attrAsURLString("href", e.sel.URL)
***REMOVED***

func (e BaseElement) Target() string ***REMOVED***
	return e.attrAsString("target")
***REMOVED***

func (e ButtonElement) AccessKey() string ***REMOVED***
	return e.attrAsString("accesskey")
***REMOVED***

func (e ButtonElement) Autofocus() bool ***REMOVED***
	return e.attrIsPresent("autofocus")
***REMOVED***

func (e ButtonElement) Disabled() bool ***REMOVED***
	return e.attrIsPresent("disabled")
***REMOVED***

func (e ButtonElement) TabIndex() int ***REMOVED***
	return e.attrAsInt("tabindex", 0)
***REMOVED***

func (e ButtonElement) Type() string ***REMOVED***
	attrVal := e.attrAsString("type")
	switch attrVal ***REMOVED***
	case "button":
		return attrVal
	case "menu":
		return attrVal
	case "reset":
		return attrVal
	default:
		return "submit"
	***REMOVED***
***REMOVED***

func (e DataElement) Value() string ***REMOVED***
	return e.attrAsString("value")
***REMOVED***

func (e EmbedElement) Height() string ***REMOVED***
	return e.attrAsString("height")
***REMOVED***

func (e EmbedElement) Width() string ***REMOVED***
	return e.attrAsString("width")
***REMOVED***

func (e EmbedElement) Src() string ***REMOVED***
	return e.attrAsString("src")
***REMOVED***

func (e EmbedElement) Type() string ***REMOVED***
	return e.attrAsString("type")
***REMOVED***

func (e FieldSetElement) Disabled() bool ***REMOVED***
	return e.attrIsPresent("disabled")
***REMOVED***

func (e FieldSetElement) Name() string ***REMOVED***
	return e.attrAsString("name")
***REMOVED***

func (e FormElement) Action() string ***REMOVED***
	return e.attrAsURLString("action", "")
***REMOVED***

func (e FormElement) Name() string ***REMOVED***
	return e.attrAsString("name")
***REMOVED***

func (e FormElement) Target() string ***REMOVED***
	return e.attrAsString("target")
***REMOVED***

func (e FormElement) Enctype() string ***REMOVED***
	attrVal := e.attrAsString("enctype")
	switch attrVal ***REMOVED***
	case "multipart/form-data":
		return attrVal
	case "text/plain":
		return attrVal
	default:
		return "application/x-www-form-urlencoded"
	***REMOVED***
***REMOVED***

func (e FormElement) Encoding() string ***REMOVED***
	attrVal := e.attrAsString("enctype")
	switch attrVal ***REMOVED***
	case "multipart/form-data":
		return attrVal
	case "text/plain":
		return attrVal
	default:
		return "application/x-www-form-urlencoded"
	***REMOVED***
***REMOVED***

func (e FormElement) AcceptCharset() string ***REMOVED***
	return e.attrAsString("accept-charset")
***REMOVED***

func (e FormElement) Autocomplete() string ***REMOVED***
	attrVal := e.attrAsString("autocomplete")
	switch attrVal ***REMOVED***
	case "off":
		return attrVal
	default:
		return "on"
	***REMOVED***
***REMOVED***

func (e FormElement) NoValidate() bool ***REMOVED***
	return e.attrIsPresent("novalidate")
***REMOVED***

func (e IFrameElement) Allowfullscreen() bool ***REMOVED***
	return e.attrIsPresent("allowfullscreen")
***REMOVED***

func (e IFrameElement) ReferrerPolicy() string ***REMOVED***
	attrVal := e.attrAsString("referrerpolicy")
	switch attrVal ***REMOVED***
	case "no-referrer":
		return attrVal
	case "no-referrer-when-downgrade":
		return attrVal
	case "origin":
		return attrVal
	case "origin-when-cross-origin":
		return attrVal
	case "unsafe-url":
		return attrVal
	default:
		return ""
	***REMOVED***
***REMOVED***

func (e IFrameElement) Height() string ***REMOVED***
	return e.attrAsString("height")
***REMOVED***

func (e IFrameElement) Width() string ***REMOVED***
	return e.attrAsString("width")
***REMOVED***

func (e IFrameElement) Name() string ***REMOVED***
	return e.attrAsString("name")
***REMOVED***

func (e IFrameElement) Src() string ***REMOVED***
	return e.attrAsURLString("src", "")
***REMOVED***

func (e ImageElement) CurrentSrc() string ***REMOVED***
	return e.attrAsURLString("src", "")
***REMOVED***

func (e ImageElement) Sizes() string ***REMOVED***
	return e.attrAsString("sizes")
***REMOVED***

func (e ImageElement) Srcset() string ***REMOVED***
	return e.attrAsString("srcset")
***REMOVED***

func (e ImageElement) Alt() string ***REMOVED***
	return e.attrAsString("alt")
***REMOVED***

func (e ImageElement) CrossOrigin() goja.Value ***REMOVED***
	attrVal, exists := e.sel.sel.Attr("crossorigin")
	if !exists ***REMOVED***
		return goja.Undefined()
	***REMOVED***
	switch attrVal ***REMOVED***
	case "anonymous":
		return e.sel.rt.ToValue(attrVal)
	case "use-credentials":
		return e.sel.rt.ToValue(attrVal)
	default:
		return goja.Undefined()
	***REMOVED***
***REMOVED***

func (e ImageElement) Height() int ***REMOVED***
	return e.attrAsInt("height", 0)
***REMOVED***

func (e ImageElement) Width() int ***REMOVED***
	return e.attrAsInt("width", 0)
***REMOVED***

func (e ImageElement) IsMap() bool ***REMOVED***
	return e.attrIsPresent("ismap")
***REMOVED***

func (e ImageElement) Name() string ***REMOVED***
	return e.attrAsString("name")
***REMOVED***

func (e ImageElement) Src() string ***REMOVED***
	return e.attrAsURLString("src", "")
***REMOVED***

func (e ImageElement) UseMap() string ***REMOVED***
	return e.attrAsString("usemap")
***REMOVED***

func (e ImageElement) ReferrerPolicy() string ***REMOVED***
	attrVal := e.attrAsString("referrerpolicy")
	switch attrVal ***REMOVED***
	case "no-referrer":
		return attrVal
	case "no-referrer-when-downgrade":
		return attrVal
	case "origin":
		return attrVal
	case "origin-when-cross-origin":
		return attrVal
	case "unsafe-url":
		return attrVal
	default:
		return ""
	***REMOVED***
***REMOVED***

func (e InputElement) Name() string ***REMOVED***
	return e.attrAsString("name")
***REMOVED***

func (e InputElement) TabIndex() int ***REMOVED***
	return e.attrAsInt("tabindex", 0)
***REMOVED***

func (e InputElement) Type() string ***REMOVED***
	attrVal := e.attrAsString("type")
	switch attrVal ***REMOVED***
	case "button":
		return attrVal
	case "checkbox":
		return attrVal
	case "color":
		return attrVal
	case "date":
		return attrVal
	case "datetime-local":
		return attrVal
	case "email":
		return attrVal
	case "file":
		return attrVal
	case "hidden":
		return attrVal
	case "image":
		return attrVal
	case "month":
		return attrVal
	case "number":
		return attrVal
	case "password":
		return attrVal
	case "radio":
		return attrVal
	case "range":
		return attrVal
	case "reset":
		return attrVal
	case "search":
		return attrVal
	case "submit":
		return attrVal
	case "tel":
		return attrVal
	case "time":
		return attrVal
	case "url":
		return attrVal
	case "week":
		return attrVal
	default:
		return "text"
	***REMOVED***
***REMOVED***

func (e InputElement) Disabled() bool ***REMOVED***
	return e.attrIsPresent("disabled")
***REMOVED***

func (e InputElement) Autofocus() bool ***REMOVED***
	return e.attrIsPresent("autofocus")
***REMOVED***

func (e InputElement) Required() bool ***REMOVED***
	return e.attrIsPresent("required")
***REMOVED***

func (e InputElement) Value() string ***REMOVED***
	return e.attrAsString("value")
***REMOVED***

func (e InputElement) Checked() bool ***REMOVED***
	return e.attrIsPresent("checked")
***REMOVED***

func (e InputElement) DefaultChecked() bool ***REMOVED***
	return e.attrIsPresent("checked")
***REMOVED***

func (e InputElement) Alt() string ***REMOVED***
	return e.attrAsString("alt")
***REMOVED***

func (e InputElement) Src() string ***REMOVED***
	return e.attrAsURLString("src", "")
***REMOVED***

func (e InputElement) Height() string ***REMOVED***
	return e.attrAsString("height")
***REMOVED***

func (e InputElement) Width() string ***REMOVED***
	return e.attrAsString("width")
***REMOVED***

func (e InputElement) Accept() string ***REMOVED***
	return e.attrAsString("accept")
***REMOVED***

func (e InputElement) Autocomplete() string ***REMOVED***
	attrVal := e.attrAsString("autocomplete")
	switch attrVal ***REMOVED***
	case "off":
		return attrVal
	default:
		return "on"
	***REMOVED***
***REMOVED***

func (e InputElement) MaxLength() int ***REMOVED***
	return e.attrAsInt("maxlength", -1)
***REMOVED***

func (e InputElement) Size() int ***REMOVED***
	return e.attrAsInt("size", 0)
***REMOVED***

func (e InputElement) Pattern() string ***REMOVED***
	return e.attrAsString("pattern")
***REMOVED***

func (e InputElement) Placeholder() string ***REMOVED***
	return e.attrAsString("placeholder")
***REMOVED***

func (e InputElement) Readonly() bool ***REMOVED***
	return e.attrIsPresent("readonly")
***REMOVED***

func (e InputElement) Min() string ***REMOVED***
	return e.attrAsString("min")
***REMOVED***

func (e InputElement) Max() string ***REMOVED***
	return e.attrAsString("max")
***REMOVED***

func (e InputElement) DefaultValue() string ***REMOVED***
	return e.attrAsString("value")
***REMOVED***

func (e InputElement) DirName() string ***REMOVED***
	return e.attrAsString("dirname")
***REMOVED***

func (e InputElement) AccessKey() string ***REMOVED***
	return e.attrAsString("accesskey")
***REMOVED***

func (e InputElement) Multiple() bool ***REMOVED***
	return e.attrIsPresent("multiple")
***REMOVED***

func (e InputElement) Step() string ***REMOVED***
	return e.attrAsString("step")
***REMOVED***

func (e KeygenElement) Autofocus() bool ***REMOVED***
	return e.attrIsPresent("autofocus")
***REMOVED***

func (e KeygenElement) Challenge() string ***REMOVED***
	return e.attrAsString("challenge")
***REMOVED***

func (e KeygenElement) Disabled() bool ***REMOVED***
	return e.attrIsPresent("disabled")
***REMOVED***

func (e KeygenElement) Keytype() string ***REMOVED***
	attrVal := e.attrAsString("keytype")
	switch attrVal ***REMOVED***
	case "DSA":
		return attrVal
	case "EC":
		return attrVal
	default:
		return "RSA"
	***REMOVED***
***REMOVED***

func (e KeygenElement) Name() string ***REMOVED***
	return e.attrAsString("name")
***REMOVED***

func (e KeygenElement) Type() string ***REMOVED***
	return "keygen"
***REMOVED***

func (e LabelElement) HtmlFor() string ***REMOVED***
	return e.attrAsString("for")
***REMOVED***

func (e LegendElement) AccessKey() string ***REMOVED***
	return e.attrAsString("accesskey")
***REMOVED***

func (e LiElement) Value() int ***REMOVED***
	return e.attrAsInt("value", 0)
***REMOVED***

func (e LiElement) Type() string ***REMOVED***
	attrVal := e.attrAsString("type")
	switch attrVal ***REMOVED***
	case "1":
		return attrVal
	case "a":
		return attrVal
	case "A":
		return attrVal
	case "i":
		return attrVal
	case "I":
		return attrVal
	case "disc":
		return attrVal
	case "square":
		return attrVal
	case "circle":
		return attrVal
	default:
		return ""
	***REMOVED***
***REMOVED***

func (e LinkElement) CrossOrigin() goja.Value ***REMOVED***
	attrVal, exists := e.sel.sel.Attr("crossorigin")
	if !exists ***REMOVED***
		return goja.Undefined()
	***REMOVED***
	switch attrVal ***REMOVED***
	case "anonymous":
		return e.sel.rt.ToValue(attrVal)
	case "use-credentials":
		return e.sel.rt.ToValue(attrVal)
	default:
		return goja.Undefined()
	***REMOVED***
***REMOVED***

func (e LinkElement) ReferrerPolicy() string ***REMOVED***
	attrVal := e.attrAsString("referrerpolicy")
	switch attrVal ***REMOVED***
	case "no-referrer":
		return attrVal
	case "no-referrer-when-downgrade":
		return attrVal
	case "origin":
		return attrVal
	case "origin-when-cross-origin":
		return attrVal
	case "unsafe-url":
		return attrVal
	default:
		return ""
	***REMOVED***
***REMOVED***

func (e LinkElement) Href() string ***REMOVED***
	return e.attrAsURLString("href", "")
***REMOVED***

func (e LinkElement) Hreflang() string ***REMOVED***
	return e.attrAsString("hreflang")
***REMOVED***

func (e LinkElement) Media() string ***REMOVED***
	return e.attrAsString("media")
***REMOVED***

func (e LinkElement) Rel() string ***REMOVED***
	return e.attrAsString("rel")
***REMOVED***

func (e LinkElement) Target() string ***REMOVED***
	return e.attrAsString("target")
***REMOVED***

func (e LinkElement) Type() string ***REMOVED***
	return e.attrAsString("type")
***REMOVED***

func (e MapElement) Name() string ***REMOVED***
	return e.attrAsString("name")
***REMOVED***

func (e MetaElement) Content() string ***REMOVED***
	return e.attrAsString("content")
***REMOVED***

func (e MetaElement) Name() string ***REMOVED***
	return e.attrAsString("name")
***REMOVED***

func (e MetaElement) HttpEquiv() string ***REMOVED***
	attrVal := e.attrAsString("http-equiv")
	switch attrVal ***REMOVED***
	case "default-style":
		return attrVal
	case "refresh":
		return attrVal
	default:
		return "content-type"
	***REMOVED***
***REMOVED***

func (e MeterElement) Min() int ***REMOVED***
	return e.attrAsInt("min", 0)
***REMOVED***

func (e MeterElement) Max() int ***REMOVED***
	return e.attrAsInt("max", 0)
***REMOVED***

func (e MeterElement) High() int ***REMOVED***
	return e.attrAsInt("high", 0)
***REMOVED***

func (e MeterElement) Low() int ***REMOVED***
	return e.attrAsInt("low", 0)
***REMOVED***

func (e MeterElement) Optimum() int ***REMOVED***
	return e.attrAsInt("optimum", 0)
***REMOVED***

func (e ModElement) Cite() string ***REMOVED***
	return e.attrAsString("cite")
***REMOVED***

func (e ModElement) Datetime() string ***REMOVED***
	return e.attrAsString("datetime")
***REMOVED***

func (e ObjectElement) Data() string ***REMOVED***
	return e.attrAsURLString("data", "")
***REMOVED***

func (e ObjectElement) Height() string ***REMOVED***
	return e.attrAsString("height")
***REMOVED***

func (e ObjectElement) Name() string ***REMOVED***
	return e.attrAsString("name")
***REMOVED***

func (e ObjectElement) Type() string ***REMOVED***
	return e.attrAsString("type")
***REMOVED***

func (e ObjectElement) TabIndex() int ***REMOVED***
	return e.attrAsInt("tabindex", 0)
***REMOVED***

func (e ObjectElement) TypeMustMatch() bool ***REMOVED***
	return e.attrIsPresent("typemustmatch")
***REMOVED***

func (e ObjectElement) UseMap() string ***REMOVED***
	return e.attrAsString("usemap")
***REMOVED***

func (e ObjectElement) Width() string ***REMOVED***
	return e.attrAsString("width")
***REMOVED***

func (e OListElement) Reversed() bool ***REMOVED***
	return e.attrIsPresent("reversed")
***REMOVED***

func (e OListElement) Start() int ***REMOVED***
	return e.attrAsInt("start", 0)
***REMOVED***

func (e OListElement) Type() string ***REMOVED***
	attrVal := e.attrAsString("type")
	switch attrVal ***REMOVED***
	case "a":
		return attrVal
	case "A":
		return attrVal
	case "i":
		return attrVal
	case "I":
		return attrVal
	default:
		return "1"
	***REMOVED***
***REMOVED***

func (e OptGroupElement) Disabled() bool ***REMOVED***
	return e.attrIsPresent("disabled")
***REMOVED***

func (e OptGroupElement) Label() string ***REMOVED***
	return e.attrAsString("label")
***REMOVED***

func (e OptionElement) DefaultSelected() bool ***REMOVED***
	return e.attrIsPresent("selected")
***REMOVED***

func (e OptionElement) Selected() bool ***REMOVED***
	return e.attrIsPresent("selected")
***REMOVED***

func (e OutputElement) HtmlFor() string ***REMOVED***
	return e.attrAsString("for")
***REMOVED***

func (e OutputElement) Name() string ***REMOVED***
	return e.attrAsString("name")
***REMOVED***

func (e OutputElement) Type() string ***REMOVED***
	return "output"
***REMOVED***

func (e ParamElement) Name() string ***REMOVED***
	return e.attrAsString("name")
***REMOVED***

func (e ParamElement) Value() string ***REMOVED***
	return e.attrAsString("value")
***REMOVED***

func (e PreElement) Name() string ***REMOVED***
	return e.attrAsString("name")
***REMOVED***

func (e PreElement) Value() string ***REMOVED***
	return e.attrAsString("value")
***REMOVED***

func (e QuoteElement) Cite() string ***REMOVED***
	return e.attrAsString("cite")
***REMOVED***

func (e ScriptElement) CrossOrigin() string ***REMOVED***
	return e.attrAsString("crossorigin")
***REMOVED***

func (e ScriptElement) Type() string ***REMOVED***
	return e.attrAsString("type")
***REMOVED***

func (e ScriptElement) Src() string ***REMOVED***
	return e.attrAsURLString("src", "")
***REMOVED***

func (e ScriptElement) Charset() string ***REMOVED***
	return e.attrAsString("charset")
***REMOVED***

func (e ScriptElement) Async() bool ***REMOVED***
	return e.attrIsPresent("async")
***REMOVED***

func (e ScriptElement) Defer() bool ***REMOVED***
	return e.attrIsPresent("defer")
***REMOVED***

func (e ScriptElement) NoModule() bool ***REMOVED***
	return e.attrIsPresent("nomodule")
***REMOVED***

func (e SelectElement) Autofocus() bool ***REMOVED***
	return e.attrIsPresent("autofocus")
***REMOVED***

func (e SelectElement) Disabled() bool ***REMOVED***
	return e.attrIsPresent("disabled")
***REMOVED***

func (e SelectElement) Multiple() bool ***REMOVED***
	return e.attrIsPresent("multiple")
***REMOVED***

func (e SelectElement) Name() string ***REMOVED***
	return e.attrAsString("name")
***REMOVED***

func (e SelectElement) Required() bool ***REMOVED***
	return e.attrIsPresent("required")
***REMOVED***

func (e SelectElement) TabIndex() int ***REMOVED***
	return e.attrAsInt("tabindex", 0)
***REMOVED***

func (e SourceElement) KeySystem() string ***REMOVED***
	return e.attrAsString("keysystem")
***REMOVED***

func (e SourceElement) Media() string ***REMOVED***
	return e.attrAsString("media")
***REMOVED***

func (e SourceElement) Sizes() string ***REMOVED***
	return e.attrAsString("sizes")
***REMOVED***

func (e SourceElement) Src() string ***REMOVED***
	return e.attrAsURLString("src", "")
***REMOVED***

func (e SourceElement) Srcset() string ***REMOVED***
	return e.attrAsString("srcset")
***REMOVED***

func (e SourceElement) Type() string ***REMOVED***
	return e.attrAsString("type")
***REMOVED***

func (e StyleElement) Media() string ***REMOVED***
	return e.attrAsString("media")
***REMOVED***

func (e TableElement) Sortable() bool ***REMOVED***
	return e.attrIsPresent("sortable")
***REMOVED***

func (e TableCellElement) ColSpan() int ***REMOVED***
	return e.attrAsInt("colspan", 1)
***REMOVED***

func (e TableCellElement) RowSpan() int ***REMOVED***
	return e.attrAsInt("rowspan", 1)
***REMOVED***

func (e TableCellElement) Headers() string ***REMOVED***
	return e.attrAsString("headers")
***REMOVED***

func (e TableHeaderCellElement) Abbr() string ***REMOVED***
	return e.attrAsString("abbr")
***REMOVED***

func (e TableHeaderCellElement) Scope() string ***REMOVED***
	attrVal := e.attrAsString("scope")
	switch attrVal ***REMOVED***
	case "row":
		return attrVal
	case "col":
		return attrVal
	case "colgroup":
		return attrVal
	case "rowgroup":
		return attrVal
	default:
		return ""
	***REMOVED***
***REMOVED***

func (e TableHeaderCellElement) Sorted() bool ***REMOVED***
	return e.attrIsPresent("sorted")
***REMOVED***

func (e TextAreaElement) Type() string ***REMOVED***
	return "textarea"
***REMOVED***

func (e TextAreaElement) Value() string ***REMOVED***
	return e.attrAsString("value")
***REMOVED***

func (e TextAreaElement) DefaultValue() string ***REMOVED***
	return e.attrAsString("value")
***REMOVED***

func (e TextAreaElement) Placeholder() string ***REMOVED***
	return e.attrAsString("placeholder")
***REMOVED***

func (e TextAreaElement) Rows() int ***REMOVED***
	return e.attrAsInt("rows", 0)
***REMOVED***

func (e TextAreaElement) Cols() int ***REMOVED***
	return e.attrAsInt("cols", 0)
***REMOVED***

func (e TextAreaElement) MaxLength() int ***REMOVED***
	return e.attrAsInt("maxlength", 0)
***REMOVED***

func (e TextAreaElement) TabIndex() int ***REMOVED***
	return e.attrAsInt("tabindex", 0)
***REMOVED***

func (e TextAreaElement) AccessKey() string ***REMOVED***
	return e.attrAsString("accesskey")
***REMOVED***

func (e TextAreaElement) ReadOnly() bool ***REMOVED***
	return e.attrIsPresent("readonly")
***REMOVED***

func (e TextAreaElement) Required() bool ***REMOVED***
	return e.attrIsPresent("required")
***REMOVED***

func (e TextAreaElement) Autocomplete() string ***REMOVED***
	attrVal := e.attrAsString("autocomplete")
	switch attrVal ***REMOVED***
	case "off":
		return attrVal
	default:
		return "on"
	***REMOVED***
***REMOVED***

func (e TextAreaElement) Autocapitalize() string ***REMOVED***
	attrVal := e.attrAsString("autocapitalize")
	switch attrVal ***REMOVED***
	case "none":
		return attrVal
	case "off":
		return attrVal
	case "characters":
		return attrVal
	case "words":
		return attrVal
	default:
		return "sentences"
	***REMOVED***
***REMOVED***

func (e TextAreaElement) Wrap() string ***REMOVED***
	attrVal := e.attrAsString("wrap")
	switch attrVal ***REMOVED***
	case "hard":
		return attrVal
	case "off":
		return attrVal
	default:
		return "soft"
	***REMOVED***
***REMOVED***

func (e TimeElement) Datetime() string ***REMOVED***
	return e.attrAsString("datetime")
***REMOVED***

func (e TrackElement) Kind() string ***REMOVED***
	attrVal := e.attrAsString("kind")
	switch attrVal ***REMOVED***
	case "captions":
		return attrVal
	case "descriptions":
		return attrVal
	case "chapters":
		return attrVal
	case "metadata":
		return attrVal
	default:
		return "subtitle"
	***REMOVED***
***REMOVED***

func (e TrackElement) Src() string ***REMOVED***
	return e.attrAsURLString("src", "")
***REMOVED***

func (e TrackElement) Srclang() string ***REMOVED***
	return e.attrAsString("srclang")
***REMOVED***

func (e TrackElement) Label() string ***REMOVED***
	return e.attrAsString("label")
***REMOVED***

func (e TrackElement) Default() bool ***REMOVED***
	return e.attrIsPresent("default")
***REMOVED***

func (e UListElement) Type() string ***REMOVED***
	return e.attrAsString("type")
***REMOVED***
