// go generate
// generated by js/modules/k6/html/gen/main.go directed by js/modules/k6/html/elements.go;  DO NOT EDIT
package html

func selToElement(sel Selection) goja.Value ***REMOVED***
	if sel.sel.Length() == 0 ***REMOVED***
		return goja.Undefined()
	***REMOVED***

	elem := Element***REMOVED***sel.sel.Nodes[0], &sel***REMOVED***
	switch elem.node.Data ***REMOVED***    
	case Anchor:
		return sel.rt.ToValue(AnchorElement***REMOVED*** HrefElement***REMOVED***elem***REMOVED*** ***REMOVED***)
	  
	case Area:
		return sel.rt.ToValue(AreaElement***REMOVED*** HrefElement***REMOVED***elem***REMOVED*** ***REMOVED***)
	  
	case Base:
		return sel.rt.ToValue(BaseElement***REMOVED*** Element***REMOVED***elem***REMOVED*** ***REMOVED***)
	  
	case Button:
		return sel.rt.ToValue(ButtonElement***REMOVED*** Element***REMOVED***elem***REMOVED*** ***REMOVED***)
	 
	default:
		return sel.rt.ToValue(elem)
	***REMOVED***
***REMOVED***


type HrefElement struct***REMOVED*** Element ***REMOVED***

type AnchorElement struct***REMOVED*** HrefElement ***REMOVED***

type AreaElement struct***REMOVED*** HrefElement ***REMOVED***

type BaseElement struct***REMOVED*** Element ***REMOVED***

type ButtonElement struct***REMOVED*** Element ***REMOVED***


 
	 
	
func (e HrefElement) Rel() string ***REMOVED***
	return e.attrAsString("rel");
***REMOVED***
	
 
	 
	
 
	 
	
func (e AreaElement) Href() string ***REMOVED***
	return e.attrAsString("href");
***REMOVED***
	
func (e AreaElement) Target() string ***REMOVED***
	return e.attrAsString("target");
***REMOVED***
	
 
	 
	
func (e BaseElement) Target() string ***REMOVED***
	return e.attrAsString("target");
***REMOVED***
	
 
	 
	
func (e ButtonElement) AccessKey() string ***REMOVED***
	return e.attrAsString("accesskey");
***REMOVED***
	
func (e ButtonElement) Autofocus() bool ***REMOVED***
	return e.attrIsPresent("autofocus");
***REMOVED***
	
func (e ButtonElement) Disabled() bool ***REMOVED***
	return e.attrIsPresent("disabled");
***REMOVED***
	

